# compiler: R8
# compiler_version: 1.6.67
# min_api: 21
# pg_map_id: 26b6e90
# common_typos_disable
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:22:void <init>() -> <init>
    40:40:android.os.IBinder asBinder() -> asBinder
    29:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    44:69:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$a:
    android.os.IBinder mRemote -> a
    101:103:void <init>(android.os.IBinder) -> <init>
    106:106:android.os.IBinder asBinder() -> asBinder
    141:150:void cancel(java.lang.String,int,java.lang.String) -> cancel
    158:165:void cancelAll(java.lang.String) -> cancelAll
    117:133:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    boolean DEBUG -> b
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl mImpl -> a
    109:109:void <clinit>() -> <clinit>
    187:199:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    209:210:void connect() -> connect
    217:218:void disconnect() -> disconnect
    255:255:android.os.Bundle getExtras() -> getExtras
    388:389:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> getItem
    443:443:android.os.Bundle getNotifyChildrenChangedOptions() -> getNotifyChildrenChangedOptions
    245:245:java.lang.String getRoot() -> getRoot
    232:232:android.content.ComponentName getServiceComponent() -> getServiceComponent
    270:270:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    224:224:boolean isConnected() -> isConnected
    404:405:void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> search
    426:427:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> sendCustomAction
    293:294:void subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    327:328:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> subscribe
    351:352:void unsubscribe(java.lang.String) -> unsubscribe
    370:371:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> unsubscribe
android.support.v4.media.MediaBrowserCompat$CallbackHandler -> android.support.v4.media.MediaBrowserCompat$a:
    java.lang.ref.WeakReference mCallbacksMessengerRef -> b
    java.lang.ref.WeakReference mCallbackImplRef -> a
    2080:2082:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl) -> <init>
    2141:2142:void setCallbacksMessenger(android.os.Messenger) -> a
    2086:2088:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.MediaBrowserCompat$ConnectionCallback -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback:
    java.lang.Object mConnectionCallbackObj -> a
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal mConnectionCallbackInternal -> b
    622:629:void <init>() -> <init>
    651:652:void setInternalConnectionCallback(android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal) -> a
    636:636:void onConnected() -> onConnected
    648:648:void onConnectionFailed() -> onConnectionFailed
    642:642:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$a:
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$ConnectionCallback$b:
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback this$0 -> a
    661:662:void <init>(android.support.v4.media.MediaBrowserCompat$ConnectionCallback) -> <init>
    666:670:void onConnected() -> a
    682:686:void onConnectionFailed() -> b
    674:678:void onConnectionSuspended() -> c
android.support.v4.media.MediaBrowserCompat$CustomActionCallback -> android.support.v4.media.MediaBrowserCompat$CustomActionCallback:
    921:921:void <init>() -> <init>
    952:952:void onError(java.lang.String,android.os.Bundle,android.os.Bundle) -> onError
    931:931:void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle) -> onProgressUpdate
    941:941:void onResult(java.lang.String,android.os.Bundle,android.os.Bundle) -> onResult
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    android.os.Bundle mExtras -> e
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback -> f
    java.lang.String mAction -> d
    2302:2306:void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,android.os.Handler) -> <init>
    2310:2329:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ItemCallback -> android.support.v4.media.MediaBrowserCompat$ItemCallback:
    java.lang.Object mItemCallbackObj -> a
    844:850:void <init>() -> <init>
    866:866:void onError(java.lang.String) -> onError
    858:858:void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onItemLoaded
android.support.v4.media.MediaBrowserCompat$ItemCallback$StubApi23 -> android.support.v4.media.MediaBrowserCompat$ItemCallback$a:
    android.support.v4.media.MediaBrowserCompat$ItemCallback this$0 -> a
    869:870:void <init>(android.support.v4.media.MediaBrowserCompat$ItemCallback) -> <init>
    874:883:void onItemLoaded(android.os.Parcel) -> a
    887:888:void onError(java.lang.String) -> a
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback -> e
    java.lang.String mMediaId -> d
    2239:2242:void <init>(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback,android.os.Handler) -> <init>
    2246:2250:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl -> android.support.v4.media.MediaBrowserCompat$b:
    void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> a
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> a
    void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> a
    void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> a
    void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    java.lang.String getRoot() -> b
    boolean isConnected() -> c
    void disconnect() -> d
    void connect() -> e
    android.os.Bundle getNotifyChildrenChangedOptions() -> f
    android.content.ComponentName getServiceComponent() -> g
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 -> android.support.v4.media.MediaBrowserCompat$c:
    android.content.Context mContext -> a
    android.support.v4.media.MediaBrowserCompat$CallbackHandler mHandler -> d
    android.os.Messenger mCallbacksMessenger -> h
    android.os.Bundle mRootHints -> c
    android.support.v4.media.session.MediaSessionCompat$Token mMediaSessionToken -> i
    java.lang.Object mBrowserObj -> b
    androidx.collection.ArrayMap mSubscriptions -> e
    int mServiceVersion -> f
    android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper mServiceBinderWrapper -> g
    android.os.Bundle mNotifyChildrenChangedOptions -> j
    1623:1630:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1674:1678:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> a
    1685:1709:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    1713:1763:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    1767:1768:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> a
    1810:1811:void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback) -> a
    1842:1843:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback) -> a
    1921:1921:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> a
    1926:1926:void onConnectionFailed(android.os.Messenger) -> a
    1932:1966:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> a
    1662:1662:java.lang.String getRoot() -> b
    1651:1651:boolean isConnected() -> c
    1639:1647:void disconnect() -> d
    1634:1635:void connect() -> e
    1970:1970:android.os.Bundle getNotifyChildrenChangedOptions() -> f
    1656:1656:android.content.ComponentName getServiceComponent() -> g
    1668:1668:android.os.Bundle getExtras() -> getExtras
    1880:1902:void onConnected() -> h
    1915:1915:void onConnectionFailed() -> i
    1906:1910:void onConnectionSuspended() -> j
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$1 -> android.support.v4.media.MediaBrowserCompat$c$a:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> a
    java.lang.String val$mediaId -> b
    1775:1775:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1778:1779:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$2 -> android.support.v4.media.MediaBrowserCompat$c$b:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> a
    java.lang.String val$mediaId -> b
    1784:1784:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1788:1789:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$3 -> android.support.v4.media.MediaBrowserCompat$c$c:
    android.support.v4.media.MediaBrowserCompat$ItemCallback val$cb -> a
    java.lang.String val$mediaId -> b
    1798:1798:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$ItemCallback,java.lang.String) -> <init>
    1801:1802:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$4 -> android.support.v4.media.MediaBrowserCompat$c$d:
    android.os.Bundle val$extras -> c
    android.support.v4.media.MediaBrowserCompat$SearchCallback val$callback -> a
    java.lang.String val$query -> b
    1815:1815:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    1819:1820:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$5 -> android.support.v4.media.MediaBrowserCompat$c$e:
    android.os.Bundle val$extras -> c
    android.support.v4.media.MediaBrowserCompat$SearchCallback val$callback -> a
    java.lang.String val$query -> b
    1830:1830:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$SearchCallback,java.lang.String,android.os.Bundle) -> <init>
    1833:1834:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$6 -> android.support.v4.media.MediaBrowserCompat$c$f:
    android.os.Bundle val$extras -> c
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback val$callback -> a
    java.lang.String val$action -> b
    1850:1850:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    1853:1854:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21$7 -> android.support.v4.media.MediaBrowserCompat$c$g:
    android.os.Bundle val$extras -> c
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback val$callback -> a
    java.lang.String val$action -> b
    1868:1868:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21,android.support.v4.media.MediaBrowserCompat$CustomActionCallback,java.lang.String,android.os.Bundle) -> <init>
    1871:1872:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23 -> android.support.v4.media.MediaBrowserCompat$d:
    1978:1979:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1983:1988:void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback) -> a
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26 -> android.support.v4.media.MediaBrowserCompat$e:
    1995:1996:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    2003:2014:void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    2020:2030:void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl -> android.support.v4.media.MediaBrowserCompat$f:
    void onConnectionFailed(android.os.Messenger) -> a
    void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> a
    void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> b
    int mFlags -> a
    563:563:void <clinit>() -> <clinit>
    524:526:void <init>(android.support.v4.media.MediaDescriptionCompat,int) -> <init>
    538:541:void <init>(android.os.Parcel) -> <init>
    545:545:int describeContents() -> describeContents
    487:488:android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object) -> fromMediaItem
    508:509:java.util.List fromMediaItemList(java.util.List) -> fromMediaItemList
    603:603:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    580:580:int getFlags() -> getFlags
    611:611:java.lang.String getMediaId() -> getMediaId
    588:588:boolean isBrowsable() -> isBrowsable
    596:596:boolean isPlayable() -> isPlayable
    556:560:java.lang.String toString() -> toString
    550:552:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$a:
    564:564:void <init>() -> <init>
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchCallback -> android.support.v4.media.MediaBrowserCompat$SearchCallback:
    895:895:void <init>() -> <init>
    915:915:void onError(java.lang.String,android.os.Bundle) -> onError
    905:905:void onSearchResult(java.lang.String,android.os.Bundle,java.util.List) -> onSearchResult
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    android.os.Bundle mExtras -> e
    android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback -> f
    java.lang.String mQuery -> d
    2268:2272:void <init>(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback,android.os.Handler) -> <init>
    2276:2280:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper -> android.support.v4.media.MediaBrowserCompat$g:
    android.os.Messenger mMessenger -> a
    android.os.Bundle mRootHints -> b
    2149:2152:void <init>(android.os.IBinder,android.os.Bundle) -> <init>
    2169:2174:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.os.Messenger) -> a
    2179:2183:void removeSubscription(java.lang.String,android.os.IBinder,android.os.Messenger) -> a
    2187:2191:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,android.os.Messenger) -> a
    2195:2199:void registerCallbackMessenger(android.content.Context,android.os.Messenger) -> a
    2202:2203:void unregisterCallbackMessenger(android.os.Messenger) -> a
    2207:2212:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> a
    2225:2231:void sendRequest(int,android.os.Bundle,android.os.Messenger) -> a
    2216:2221:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,android.os.Messenger) -> b
android.support.v4.media.MediaBrowserCompat$Subscription -> android.support.v4.media.MediaBrowserCompat$h:
    java.util.List mOptionsList -> b
    java.util.List mCallbacks -> a
    2037:2040:void <init>() -> <init>
    2051:2051:java.util.List getCallbacks() -> a
    2055:2060:android.support.v4.media.MediaBrowserCompat$SubscriptionCallback getCallback(android.os.Bundle) -> a
    2064:2072:void putCallback(android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> a
    2047:2047:java.util.List getOptionsList() -> b
    2043:2043:boolean isEmpty() -> c
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback:
    android.os.IBinder mToken -> b
    java.lang.ref.WeakReference mSubscriptionRef -> c
    java.lang.Object mSubscriptionCallbackObj -> a
    698:709:void <init>() -> <init>
    761:762:void setSubscription(android.support.v4.media.MediaBrowserCompat$Subscription) -> a
    718:718:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    731:731:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    743:743:void onError(java.lang.String) -> onError
    758:758:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$a:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> a
    765:766:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    770:789:void onChildrenLoaded(java.lang.String,java.util.List) -> a
    793:794:void onError(java.lang.String) -> a
    798:809:java.util.List applyOptions(java.util.List,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26 -> android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$b:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> b
    821:822:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    827:829:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> a
    833:834:void onError(java.lang.String,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompatApi21 -> a:
    35:35:java.lang.Object createConnectionCallback(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> a
    40:40:java.lang.Object createBrowser(android.content.Context,android.content.ComponentName,java.lang.Object,android.os.Bundle) -> a
    45:46:void connect(java.lang.Object) -> a
    74:74:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> a
    79:81:void subscribe(java.lang.Object,java.lang.String,java.lang.Object) -> a
    84:85:void unsubscribe(java.lang.Object,java.lang.String) -> a
    49:51:void disconnect(java.lang.Object) -> b
    66:66:android.os.Bundle getExtras(java.lang.Object) -> c
    62:62:java.lang.String getRoot(java.lang.Object) -> d
    58:58:android.content.ComponentName getServiceComponent(java.lang.Object) -> e
    70:70:java.lang.Object getSessionToken(java.lang.Object) -> f
    54:54:boolean isConnected(java.lang.Object) -> g
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback -> a$a:
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy -> a$b:
    android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback mConnectionCallback -> a
    97:99:void <init>(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> <init>
    103:104:void onConnected() -> onConnected
    113:114:void onConnectionFailed() -> onConnectionFailed
    108:109:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompatApi21$MediaItem -> a$c:
    149:149:java.lang.Object getDescription(java.lang.Object) -> a
    145:145:int getFlags(java.lang.Object) -> b
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback -> a$d:
    void onChildrenLoaded(java.lang.String,java.util.List) -> a
    void onError(java.lang.String) -> a
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy -> a$e:
    android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback mSubscriptionCallback -> a
    126:128:void <init>(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> <init>
    133:134:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    138:139:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi23 -> b:
    29:29:java.lang.Object createItemCallback(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> a
    33:34:void getItem(java.lang.Object,java.lang.String,java.lang.Object) -> a
android.support.v4.media.MediaBrowserCompatApi23$ItemCallback -> b$a:
android.support.v4.media.MediaBrowserCompatApi23$ItemCallbackProxy -> b$b:
    android.support.v4.media.MediaBrowserCompatApi23$ItemCallback mItemCallback -> a
    44:46:void <init>(android.support.v4.media.MediaBrowserCompatApi23$ItemCallback) -> <init>
    61:62:void onError(java.lang.String) -> onError
    50:57:void onItemLoaded(android.media.browse.MediaBrowser$MediaItem) -> onItemLoaded
android.support.v4.media.MediaBrowserCompatApi26 -> c:
    31:31:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> a
    36:38:void subscribe(java.lang.Object,java.lang.String,android.os.Bundle,java.lang.Object) -> a
    42:44:void unsubscribe(java.lang.Object,java.lang.String,java.lang.Object) -> a
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback -> c$a:
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> a
    void onError(java.lang.String,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy -> c$b:
    54:55:void <init>(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> <init>
    60:62:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    66:68:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    android.net.Uri mMediaUri -> h
    android.net.Uri mIconUri -> f
    java.lang.Object mDescriptionObj -> i
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.os.Bundle mExtras -> g
    java.lang.String mMediaId -> a
    android.graphics.Bitmap mIcon -> e
    418:418:void <clinit>() -> <clinit>
    190:199:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    295:295:int describeContents() -> describeContents
    375:414:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
    250:250:java.lang.CharSequence getDescription() -> getDescription
    280:280:android.os.Bundle getExtras() -> getExtras
    260:260:android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    270:270:android.net.Uri getIconUri() -> getIconUri
    331:332:java.lang.Object getMediaDescription() -> getMediaDescription
    220:220:java.lang.String getMediaId() -> getMediaId
    290:290:android.net.Uri getMediaUri() -> getMediaUri
    240:240:java.lang.CharSequence getSubtitle() -> getSubtitle
    230:230:java.lang.CharSequence getTitle() -> getTitle
    316:316:java.lang.String toString() -> toString
    300:312:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$a:
    419:419:void <init>() -> <init>
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    422:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    android.net.Uri mMediaUri -> h
    android.net.Uri mIconUri -> f
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.os.Bundle mExtras -> g
    java.lang.String mMediaId -> a
    android.graphics.Bitmap mIcon -> e
    451:452:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> build
    495:496:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    530:531:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    507:508:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    519:520:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    461:462:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    541:542:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    483:484:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    472:473:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
android.support.v4.media.MediaDescriptionCompatApi21 -> d:
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> a
    58:59:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> a
    54:54:android.os.Bundle getExtras(java.lang.Object) -> b
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> c
    50:50:android.net.Uri getIconUri(java.lang.Object) -> d
    30:30:java.lang.String getMediaId(java.lang.Object) -> e
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> f
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> g
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> d$a:
    67:67:java.lang.Object newInstance() -> a
    72:73:void setMediaId(java.lang.Object,java.lang.String) -> a
    84:85:void setDescription(java.lang.Object,java.lang.CharSequence) -> a
    88:89:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> a
    92:93:void setIconUri(java.lang.Object,android.net.Uri) -> a
    96:97:void setExtras(java.lang.Object,android.os.Bundle) -> a
    100:100:java.lang.Object build(java.lang.Object) -> a
    80:81:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> b
    76:77:void setTitle(java.lang.Object,java.lang.CharSequence) -> c
android.support.v4.media.MediaDescriptionCompatApi23 -> e:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> e$a:
    31:32:void setMediaUri(java.lang.Object,android.net.Uri) -> a
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.os.Bundle mBundle -> a
    android.support.v4.media.MediaDescriptionCompat mDescription -> c
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> e
    java.lang.Object mMetadataObj -> b
    java.lang.String[] PREFERRED_URI_ORDER -> g
    androidx.collection.ArrayMap METADATA_KEYS_TYPE -> d
    java.lang.String[] PREFERRED_BITMAP_ORDER -> f
    308:641:void <clinit>() -> <clinit>
    368:371:void <init>(android.os.Bundle) -> <init>
    373:375:void <init>(android.os.Parcel) -> <init>
    384:384:boolean containsKey(java.lang.String) -> containsKey
    557:557:int describeContents() -> describeContents
    607:616:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    458:465:android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    590:590:android.os.Bundle getBundle() -> getBundle
    474:552:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    423:423:long getLong(java.lang.String) -> getLong
    631:638:java.lang.Object getMediaMetadata() -> getMediaMetadata
    434:447:android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    408:412:java.lang.String getString(java.lang.String) -> getString
    396:396:java.lang.CharSequence getText(java.lang.String) -> getText
    580:580:java.util.Set keySet() -> keySet
    571:571:int size() -> size
    562:563:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$a:
    642:642:void <init>() -> <init>
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> a
    665:667:void <init>() -> <init>
    676:679:void <init>(android.support.v4.media.MediaMetadataCompat) -> <init>
    693:703:void <init>(android.support.v4.media.MediaMetadataCompat,int) -> <init>
    878:884:android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int) -> a
    874:874:android.support.v4.media.MediaMetadataCompat build() -> build
    858:865:android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    799:806:android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    823:836:android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    769:776:android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    732:739:android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    51:52:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
    55:55:java.lang.Object createFromParcel(android.os.Parcel) -> a
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    87:88:void <init>() -> <init>
    84:84:java.lang.Object build(java.lang.Object) -> build
    60:60:java.lang.Object newInstance() -> newInstance
    64:65:void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    68:69:void putLong(java.lang.Object,java.lang.String,long) -> putLong
    72:73:void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    80:81:void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    76:77:void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.Object mRatingObj -> c
    float mRatingValue -> b
    int mRatingStyle -> a
    128:128:void <clinit>() -> <clinit>
    106:109:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    330:360:android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    313:314:float getPercentRating() -> getPercentRating
    373:398:java.lang.Object getRating() -> getRating
    259:259:int getRatingStyle() -> getRatingStyle
    294:303:float getStarRating() -> getStarRating
    268:271:boolean hasHeart() -> hasHeart
    248:248:boolean isRated() -> isRated
    281:284:boolean isThumbUp() -> isThumbUp
    177:177:android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    235:237:android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    205:222:android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    188:188:android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    156:163:android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    113:114:java.lang.String toString() -> toString
    124:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$a:
    129:129:void <init>() -> <init>
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:21:void <init>() -> <init>
    39:39:android.os.IBinder asBinder() -> asBinder
    28:35:android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    43:48:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$a:
    android.os.IBinder mRemote -> a
    189:191:void <init>(android.os.IBinder) -> <init>
    194:194:android.os.IBinder asBinder() -> asBinder
    360:367:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    202:216:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    300:313:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    252:265:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    234:247:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    270:277:void onQueueChanged(java.util.List) -> onQueueChanged
    282:295:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    336:343:void onRepeatModeChanged(int) -> onRepeatModeChanged
    221:227:void onSessionDestroyed() -> onSessionDestroyed
    384:390:void onSessionReady() -> onSessionReady
    372:379:void onShuffleModeChanged(int) -> onShuffleModeChanged
    348:355:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    318:331:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    18:20:void <init>() -> <init>
    38:38:android.os.IBinder asBinder() -> asBinder
    27:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    42:561:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$a:
    android.os.IBinder mRemote -> a
    622:624:void <init>(android.os.IBinder) -> <init>
    1056:1072:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    1077:1094:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    832:844:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    627:627:android.os.IBinder asBinder() -> asBinder
    1380:1389:void fastForward() -> fastForward
    949:965:android.os.Bundle getExtras() -> getExtras
    793:804:long getFlags() -> getFlags
    771:787:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    866:882:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    737:748:java.lang.String getPackageName() -> getPackageName
    888:904:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    910:921:java.util.List getQueue() -> getQueue
    927:943:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    971:982:int getRatingType() -> getRatingType
    1005:1016:int getRepeatMode() -> getRepeatMode
    1039:1050:int getShuffleMode() -> getShuffleMode
    754:765:java.lang.String getTag() -> getTag
    810:826:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    988:999:boolean isCaptioningEnabled() -> isCaptioningEnabled
    1022:1033:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    720:731:boolean isTransportControlEnabled() -> isTransportControlEnabled
    1352:1361:void next() -> next
    1324:1333:void pause() -> pause
    1223:1232:void play() -> play
    1237:1254:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    1259:1276:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    1281:1304:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    1137:1146:void prepare() -> prepare
    1151:1168:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    1173:1190:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    1195:1218:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    1366:1375:void previous() -> previous
    1423:1439:void rate(android.support.v4.media.RatingCompat) -> rate
    1444:1467:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    690:700:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    1099:1115:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    1120:1130:void removeQueueItemAt(int) -> removeQueueItemAt
    1394:1403:void rewind() -> rewind
    1408:1418:void seekTo(long) -> seekTo
    637:661:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    1532:1549:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    666:684:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    1472:1482:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    1487:1497:void setRepeatMode(int) -> setRepeatMode
    1517:1527:void setShuffleMode(int) -> setShuffleMode
    1502:1512:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    849:861:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    1309:1319:void skipToQueueItem(long) -> skipToQueueItem
    1338:1347:void stop() -> stop
    705:715:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.util.HashSet mRegisteredCallbacks -> c
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> a
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> b
    242:244:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat) -> <init>
    273:275:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    215:223:void validateCustomAction(java.lang.String,android.os.Bundle) -> a
    359:360:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    379:380:void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItem
    575:576:void adjustVolume(int,int) -> adjustVolume
    307:308:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    433:433:android.os.Bundle getExtras() -> getExtras
    504:504:long getFlags() -> getFlags
    193:210:android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity) -> getMediaController
    681:681:java.lang.Object getMediaController() -> getMediaController
    333:333:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    667:667:java.lang.String getPackageName() -> getPackageName
    513:513:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    324:324:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    343:343:java.util.List getQueue() -> getQueue
    426:426:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    455:455:int getRatingType() -> getRatingType
    481:481:int getRepeatMode() -> getRepeatMode
    523:523:android.app.PendingIntent getSessionActivity() -> getSessionActivity
    532:532:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    543:543:android.os.Bundle getSessionToken2Bundle() -> getSessionToken2Bundle
    494:494:int getShuffleMode() -> getShuffleMode
    296:296:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    468:468:boolean isCaptioningEnabled() -> isCaptioningEnabled
    658:658:boolean isSessionReady() -> isSessionReady
    585:586:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    597:598:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    396:397:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    413:420:void removeQueueItemAt(int) -> removeQueueItemAt
    636:637:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    167:179:void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat) -> setMediaController
    558:559:void setVolumeTo(int,int) -> setVolumeTo
    615:616:void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> b
    android.support.v4.media.session.IMediaControllerCallback mIControllerCallback -> c
    java.lang.Object mCallbackObj -> a
    693:699:void <init>() -> <init>
    830:840:void setHandler(android.os.Handler) -> a
    843:848:void postToHandler(int,java.lang.Object,android.os.Bundle) -> a
    823:824:void binderDied() -> binderDied
    818:818:android.support.v4.media.session.IMediaControllerCallback getIControllerCallback() -> getIControllerCallback
    780:780:void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    788:788:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    772:772:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    742:742:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    733:733:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    753:753:void onQueueChanged(java.util.List) -> onQueueChanged
    763:763:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    800:800:void onRepeatModeChanged(int) -> onRepeatModeChanged
    714:714:void onSessionDestroyed() -> onSessionDestroyed
    725:725:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    707:707:void onSessionReady() -> onSessionReady
    811:811:void onShuffleModeChanged(int) -> onShuffleModeChanged
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$a:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> b
    boolean mRegistered -> a
    1067:1069:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Looper) -> <init>
    1073:1120:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$b:
    java.lang.ref.WeakReference mCallback -> a
    854:856:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    927:932:void onAudioInfoChanged(int,int,int,int,int) -> onAudioInfoChanged
    918:922:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    894:898:void onMetadataChanged(java.lang.Object) -> onMetadataChanged
    881:890:void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    902:906:void onQueueChanged(java.util.List) -> onQueueChanged
    910:914:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:864:void onSessionDestroyed() -> onSessionDestroyed
    868:877:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$c:
    java.lang.ref.WeakReference mCallback -> a
    938:940:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:997:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:948:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    960:964:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    1001:1005:void onRepeatModeChanged(int) -> onRepeatModeChanged
    1044:1048:void onSessionReady() -> onSessionReady
    1014:1019:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1010:1010:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData -> android.support.v4.media.session.MediaControllerCompat$a:
    android.support.v4.media.session.MediaControllerCompat mMediaController -> a
    140:142:void <init>(android.support.v4.media.session.MediaControllerCompat) -> <init>
    145:145:android.support.v4.media.session.MediaControllerCompat getMediaController() -> a
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$b:
    void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> a
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> a
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> a
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> a
    void setVolumeTo(int,int) -> a
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> a
    void adjustVolume(int,int) -> b
    android.app.PendingIntent getSessionActivity() -> b
    java.lang.Object getMediaController() -> c
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> d
    boolean isSessionReady() -> e
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.util.List mPendingCallbacks -> c
    java.lang.Object mLock -> b
    android.support.v4.media.session.MediaSessionCompat$Token mSessionToken -> e
    java.lang.Object mControllerObj -> a
    java.util.HashMap mCallbackMap -> d
    1961:1965:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    1973:1991:void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> a
    1996:2012:void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> a
    2017:2017:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
    2022:2023:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> a
    2065:2067:void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> a
    2169:2170:void setVolumeTo(int,int) -> a
    2179:2180:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> a
    2053:2055:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    2164:2164:android.app.PendingIntent getSessionActivity() -> b
    2174:2175:void adjustVolume(int,int) -> b
    2194:2194:java.lang.Object getMediaController() -> c
    2153:2159:android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> d
    2184:2184:boolean isSessionReady() -> e
    2203:2219:void processPendingCallbacksLocked() -> f
    2198:2199:void requestExtraBinder() -> g
    2095:2095:android.os.Bundle getExtras() -> getExtras
    2148:2148:long getFlags() -> getFlags
    2041:2042:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    2189:2189:java.lang.String getPackageName() -> getPackageName
    2028:2036:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    2047:2048:java.util.List getQueue() -> getQueue
    2090:2090:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    2100:2107:int getRatingType() -> getRatingType
    2124:2131:int getRepeatMode() -> getRepeatMode
    2136:2143:int getShuffleMode() -> getShuffleMode
    2112:2119:boolean isCaptioningEnabled() -> isCaptioningEnabled
    2078:2080:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    java.lang.ref.WeakReference mMediaControllerImpl -> a
    2225:2227:void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> <init>
    2231:2233:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$a:
    2249:2250:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$c:
    2450:2451:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2455:2456:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> a
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 -> android.support.v4.media.session.MediaControllerCompat$d:
    2479:2480:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2484:2485:android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> a
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int mMaxVolume -> d
    int mCurrentVolume -> e
    int mAudioStream -> b
    int mVolumeControl -> c
    int mPlaybackType -> a
    1363:1369:void <init>(int,int,int,int,int) -> <init>
    1393:1393:int getAudioStream() -> getAudioStream
    1426:1426:int getCurrentVolume() -> getCurrentVolume
    1417:1417:int getMaxVolume() -> getMaxVolume
    1381:1381:int getPlaybackType() -> getPlaybackType
    1408:1408:int getVolumeControl() -> getVolumeControl
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    1138:1139:void <init>() -> <init>
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$e:
    java.lang.Object mControlsObj -> a
    2293:2295:void <init>(java.lang.Object) -> <init>
    2348:2349:void fastForward() -> fastForward
    2333:2334:void pause() -> pause
    2328:2329:void play() -> play
    2403:2405:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    2409:2411:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    2415:2416:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    2299:2300:void prepare() -> prepare
    2304:2308:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    2312:2316:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    2320:2324:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    2353:2354:void rewind() -> rewind
    2343:2344:void seekTo(long) -> seekTo
    2432:2435:void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    2439:2442:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    2382:2385:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    2368:2370:void setRating(android.support.v4.media.RatingCompat) -> setRating
    2374:2378:void setRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> setRating
    2389:2392:void setRepeatMode(int) -> setRepeatMode
    2396:2399:void setShuffleMode(int) -> setShuffleMode
    2358:2359:void skipToNext() -> skipToNext
    2363:2364:void skipToPrevious() -> skipToPrevious
    2427:2428:void skipToQueueItem(long) -> skipToQueueItem
    2338:2339:void stop() -> stop
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$f:
    2464:2465:void <init>(java.lang.Object) -> <init>
    2469:2471:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi24 -> android.support.v4.media.session.MediaControllerCompat$g:
    2493:2494:void <init>(java.lang.Object) -> <init>
    2498:2499:void prepare() -> prepare
    2503:2505:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    2509:2511:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    2515:2516:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    42:42:java.lang.Object fromToken(android.content.Context,java.lang.Object) -> a
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> a
    50:52:void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> a
    55:57:void unregisterCallback(java.lang.Object,java.lang.Object) -> a
    60:61:void setMediaController(android.app.Activity,java.lang.Object) -> a
    64:64:java.lang.Object getMediaController(android.app.Activity) -> a
    97:97:android.os.Bundle getExtras(java.lang.Object) -> a
    117:117:boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> a
    125:126:void adjustVolume(java.lang.Object,int,int) -> a
    130:131:void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> a
    105:105:long getFlags(java.lang.Object) -> b
    121:122:void setVolumeTo(java.lang.Object,int,int) -> b
    80:80:java.lang.Object getMetadata(java.lang.Object) -> c
    134:134:java.lang.String getPackageName(java.lang.Object) -> d
    109:109:java.lang.Object getPlaybackInfo(java.lang.Object) -> e
    76:76:java.lang.Object getPlaybackState(java.lang.Object) -> f
    84:89:java.util.List getQueue(java.lang.Object) -> g
    93:93:java.lang.CharSequence getQueueTitle(java.lang.Object) -> h
    101:101:int getRatingType(java.lang.Object) -> i
    113:113:android.app.PendingIntent getSessionActivity(java.lang.Object) -> j
    68:68:java.lang.Object getSessionToken(java.lang.Object) -> k
    72:72:java.lang.Object getTransportControls(java.lang.Object) -> l
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$a:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> a
    283:285:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:329:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:322:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:306:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:301:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:311:void onQueueChanged(java.util.List) -> onQueueChanged
    315:316:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:290:void onSessionDestroyed() -> onSessionDestroyed
    294:296:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    265:266:void <init>() -> <init>
    228:244:int toLegacyStreamType(android.media.AudioAttributes) -> a
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    217:217:int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    204:205:int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    213:213:int getMaxVolume(java.lang.Object) -> getMaxVolume
    196:196:int getPlaybackType(java.lang.Object) -> getPlaybackType
    209:209:int getVolumeControl(java.lang.Object) -> getVolumeControl
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    190:191:void <init>() -> <init>
    155:156:void fastForward(java.lang.Object) -> fastForward
    143:144:void pause(java.lang.Object) -> pause
    139:140:void play(java.lang.Object) -> play
    175:176:void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    179:180:void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    159:160:void rewind(java.lang.Object) -> rewind
    151:152:void seekTo(java.lang.Object,long) -> seekTo
    187:188:void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
    171:172:void setRating(java.lang.Object,java.lang.Object) -> setRating
    163:164:void skipToNext(java.lang.Object) -> skipToNext
    167:168:void skipToPrevious(java.lang.Object) -> skipToPrevious
    183:184:void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    147:148:void stop(java.lang.Object) -> stop
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi23$TransportControls:
    33:34:void <init>() -> <init>
    30:31:void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi24$TransportControls:
    45:46:void <init>() -> <init>
    30:31:void prepare(java.lang.Object) -> prepare
    34:35:void prepareFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> prepareFromMediaId
    38:39:void prepareFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> prepareFromSearch
    42:43:void prepareFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> prepareFromUri
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> a
    int sMaxBitmapSize -> d
    java.util.ArrayList mActiveListeners -> c
    android.support.v4.media.session.MediaControllerCompat mController -> b
    430:431:void <init>(android.content.Context,java.lang.String) -> <init>
    456:457:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent) -> <init>
    465:466:void <init>(android.content.Context,java.lang.String,android.os.Bundle) -> <init>
    469:471:void <init>(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent,android.os.Bundle) -> <init>
    517:525:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl) -> <init>
    936:937:android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat) -> a
    885:886:void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    928:931:void ensureClassLoader(android.os.Bundle) -> ensureClassLoader
    915:918:android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object) -> fromMediaSession
    874:874:java.lang.String getCallingPackage() -> getCallingPackage
    706:706:android.support.v4.media.session.MediaControllerCompat getController() -> getController
    862:862:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> getCurrentControllerInfo
    836:836:java.lang.Object getMediaSession() -> getMediaSession
    850:850:java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    696:696:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    654:654:boolean isActive() -> isActive
    678:679:void release() -> release
    898:899:void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    666:667:void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    642:646:void setActive(boolean) -> setActive
    535:536:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    547:552:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    779:780:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    822:823:void setExtras(android.os.Bundle) -> setExtras
    589:590:void setFlags(int) -> setFlags
    580:581:void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    727:728:void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    715:716:void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    603:604:void setPlaybackToLocal(int) -> setPlaybackToLocal
    622:623:void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> setPlaybackToRemote
    742:743:void setQueue(java.util.List) -> setQueue
    753:754:void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    770:771:void setRatingType(int) -> setRatingType
    795:796:void setRepeatMode(int) -> setRepeatMode
    563:564:void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    810:811:void setShuffleMode(int) -> setShuffleMode
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$a:
    495:495:void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$2 -> android.support.v4.media.session.MediaSessionCompat$b:
    500:500:void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$3 -> android.support.v4.media.session.MediaSessionCompat$c:
    522:522:void <init>(android.support.v4.media.session.MediaSessionCompat) -> <init>
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler mCallbackHandler -> c
    java.lang.ref.WeakReference mSessionImpl -> b
    java.lang.Object mCallbackObj -> a
    boolean mMediaPlayPauseKeyPending -> d
    977:987:void <init>() -> <init>
    990:995:void setSessionImpl(android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl,android.os.Handler) -> a
    1072:1097:void handleMediaPlayPauseKeySingleTapIfPending(androidx.media.MediaSessionManager$RemoteUserInfo) -> a
    1291:1291:void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onAddQueueItem
    1303:1303:void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int) -> onAddQueueItem
    1007:1007:void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    1281:1281:void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    1189:1189:void onFastForward() -> onFastForward
    1021:1030:boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    1171:1171:void onPause() -> onPause
    1136:1136:void onPlay() -> onPlay
    1143:1143:void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    1152:1152:void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    1158:1158:void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    1104:1104:void onPrepare() -> onPrepare
    1112:1112:void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    1122:1122:void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    1130:1130:void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
    1314:1314:void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat) -> onRemoveQueueItem
    1325:1325:void onRemoveQueueItemAt(int) -> onRemoveQueueItemAt
    1195:1195:void onRewind() -> onRewind
    1209:1209:void onSeekTo(long) -> onSeekTo
    1234:1234:void onSetCaptioningEnabled(boolean) -> onSetCaptioningEnabled
    1217:1217:void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    1226:1226:void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle) -> onSetRating
    1250:1250:void onSetRepeatMode(int) -> onSetRepeatMode
    1265:1265:void onSetShuffleMode(int) -> onSetShuffleMode
    1177:1177:void onSkipToNext() -> onSkipToNext
    1183:1183:void onSkipToPrevious() -> onSkipToPrevious
    1165:1165:void onSkipToQueueItem(long) -> onSkipToQueueItem
    1201:1201:void onStop() -> onStop
android.support.v4.media.session.MediaSessionCompat$Callback$CallbackHandler -> android.support.v4.media.session.MediaSessionCompat$Callback$a:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> a
    1330:1332:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Looper) -> <init>
    1336:1339:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$b:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> a
    1345:1346:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    1351:1396:void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> a
    1400:1400:boolean onMediaButtonEvent(android.content.Intent) -> a
    1405:1406:void onPlay() -> a
    1415:1416:void onPlayFromSearch(java.lang.String,android.os.Bundle) -> a
    1455:1456:void onSeekTo(long) -> a
    1460:1461:void onSetRating(java.lang.Object) -> a
    1410:1411:void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> b
    1420:1421:void onSkipToQueueItem(long) -> b
    1445:1446:void onRewind() -> b
    1450:1451:void onStop() -> c
    1470:1502:void onCustomAction(java.lang.String,android.os.Bundle) -> c
    1435:1436:void onSkipToPrevious() -> d
    1440:1441:void onFastForward() -> e
    1430:1431:void onSkipToNext() -> f
    1425:1426:void onPause() -> onPause
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23 -> android.support.v4.media.session.MediaSessionCompat$Callback$c:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> b
    1508:1509:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    1513:1514:void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi24 -> android.support.v4.media.session.MediaSessionCompat$Callback$d:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> c
    1520:1521:void <init>(android.support.v4.media.session.MediaSessionCompat$Callback) -> <init>
    1525:1526:void onPrepare() -> onPrepare
    1530:1531:void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    1535:1536:void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    1540:1541:void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$d:
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> a
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> a
    void setActive(boolean) -> a
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> a
    void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> a
    void setExtras(android.os.Bundle) -> a
    void setMediaButtonReceiver(android.app.PendingIntent) -> a
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> a
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> a
    void setPlaybackToLocal(int) -> a
    void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> a
    void setQueue(java.util.List) -> a
    void setQueueTitle(java.lang.CharSequence) -> a
    java.lang.Object getRemoteControlClient() -> b
    void setRatingType(int) -> b
    void setSessionActivity(android.app.PendingIntent) -> b
    androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> c
    void setFlags(int) -> c
    boolean isActive() -> d
    java.lang.String getCallingPackage() -> e
    java.lang.Object getMediaSession() -> f
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$e:
    java.util.List mQueue -> f
    boolean mCaptioningEnabled -> i
    int mRepeatMode -> j
    android.support.v4.media.session.PlaybackStateCompat mPlaybackState -> e
    int mShuffleMode -> k
    int mRatingType -> h
    android.support.v4.media.MediaMetadataCompat mMetadata -> g
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> b
    java.lang.Object mSessionObj -> a
    boolean mDestroyed -> c
    android.os.RemoteCallbackList mExtraControllerCallbacks -> d
    3379:3383:void <init>(android.content.Context,java.lang.String,android.os.Bundle) -> <init>
    3385:3389:void <init>(java.lang.Object) -> <init>
    3393:3398:void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> a
    3407:3408:void setPlaybackToLocal(int) -> a
    3412:3414:void setPlaybackToRemote(androidx.media.VolumeProviderCompat) -> a
    3418:3419:void setActive(boolean) -> a
    3428:3440:void sendSessionEvent(java.lang.String,android.os.Bundle) -> a
    3450:3450:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> a
    3455:3467:void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> a
    3476:3479:void setMetadata(android.support.v4.media.MediaMetadataCompat) -> a
    3488:3489:void setMediaButtonReceiver(android.app.PendingIntent) -> a
    3493:3502:void setQueue(java.util.List) -> a
    3506:3507:void setQueueTitle(java.lang.CharSequence) -> a
    3568:3569:void setExtras(android.os.Bundle) -> a
    3586:3586:void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> a
    3483:3484:void setSessionActivity(android.app.PendingIntent) -> b
    3511:3516:void setRatingType(int) -> b
    3580:3580:java.lang.Object getRemoteControlClient() -> b
    3402:3403:void setFlags(int) -> c
    3600:3600:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> c
    3423:3423:boolean isActive() -> d
    3590:3593:java.lang.String getCallingPackage() -> e
    3573:3573:java.lang.Object getMediaSession() -> f
    3471:3471:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    3444:3446:void release() -> release
    3520:3532:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    3536:3548:void setRepeatMode(int) -> setRepeatMode
    3552:3564:void setShuffleMode(int) -> setShuffleMode
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession -> android.support.v4.media.session.MediaSessionCompat$e$a:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 this$0 -> a
    3603:3603:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> <init>
    3834:3834:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    3840:3840:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    3668:3668:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    3758:3758:void fastForward() -> fastForward
    3864:3864:android.os.Bundle getExtras() -> getExtras
    3656:3656:long getFlags() -> getFlags
    3649:3649:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    3817:3817:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    3637:3637:java.lang.String getPackageName() -> getPackageName
    3822:3822:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    3828:3828:java.util.List getQueue() -> getQueue
    3858:3858:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    3870:3870:int getRatingType() -> getRatingType
    3881:3881:int getRepeatMode() -> getRepeatMode
    3892:3892:int getShuffleMode() -> getShuffleMode
    3643:3643:java.lang.String getTag() -> getTag
    3662:3662:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    3875:3875:boolean isCaptioningEnabled() -> isCaptioningEnabled
    3886:3886:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    3898:3898:boolean isTransportControlEnabled() -> isTransportControlEnabled
    3746:3746:void next() -> next
    3734:3734:void pause() -> pause
    3704:3704:void play() -> play
    3710:3710:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    3716:3716:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    3722:3722:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    3680:3680:void prepare() -> prepare
    3686:3686:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    3692:3692:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    3698:3698:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    3752:3752:void previous() -> previous
    3776:3776:void rate(android.support.v4.media.RatingCompat) -> rate
    3782:3782:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    3618:3627:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    3846:3846:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    3852:3852:void removeQueueItemAt(int) -> removeQueueItemAt
    3764:3764:void rewind() -> rewind
    3770:3770:void seekTo(long) -> seekTo
    3607:3607:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    3811:3811:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    3613:3613:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    3788:3788:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    3794:3794:void setRepeatMode(int) -> setRepeatMode
    3805:3805:void setShuffleMode(int) -> setShuffleMode
    3800:3800:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    3674:3674:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    3728:3728:void skipToQueueItem(long) -> skipToQueueItem
    3740:3740:void stop() -> stop
    3631:3632:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi28 -> android.support.v4.media.session.MediaSessionCompat$f:
    3906:3907:void <init>(android.content.Context,java.lang.String,android.os.Bundle) -> <init>
    3916:3916:void setCurrentControllerInfo(androidx.media.MediaSessionManager$RemoteUserInfo) -> a
    3920:3922:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo() -> c
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    java.lang.Object mItem -> c
    1875:1875:void <clinit>() -> <clinit>
    1769:1770:void <init>(android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1772:1774:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1787:void <init>(android.os.Parcel) -> <init>
    1811:1811:int describeContents() -> describeContents
    1844:1845:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> fromQueueItem
    1865:1866:java.util.List fromQueueItemList(java.util.List) -> fromQueueItemList
    1793:1793:android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    1800:1800:long getQueueId() -> getQueueId
    1825:1826:java.lang.Object getQueueItem() -> getQueueItem
    1891:1891:java.lang.String toString() -> toString
    1805:1807:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$a:
    1876:1876:void <init>() -> <init>
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    1917:1917:void <clinit>() -> <clinit>
    1908:1910:void <init>(android.os.ResultReceiver) -> <init>
    1912:1914:void <init>(android.os.Parcel) -> <init>
    1931:1931:int describeContents() -> describeContents
    1936:1937:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$a:
    1917:1917:void <init>() -> <init>
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.os.Bundle mSessionToken2Bundle -> c
    android.support.v4.media.session.IMediaSession mExtraBinder -> b
    java.lang.Object mInner -> a
    1726:1726:void <clinit>() -> <clinit>
    1556:1557:void <init>(java.lang.Object) -> <init>
    1560:1561:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    1563:1567:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1607:1607:int describeContents() -> describeContents
    1629:1643:boolean equals(java.lang.Object) -> equals
    1716:1723:android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle) -> fromBundle
    1581:1581:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    1599:1602:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession) -> fromToken
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> getExtraBinder
    1680:1680:android.os.Bundle getSessionToken2Bundle() -> getSessionToken2Bundle
    1656:1656:java.lang.Object getToken() -> getToken
    1621:1624:int hashCode() -> hashCode
    1672:1673:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> setExtraBinder
    1688:1689:void setSessionToken2Bundle(android.os.Bundle) -> setSessionToken2Bundle
    1696:1704:android.os.Bundle toBundle() -> toBundle
    1612:1617:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$a:
    1727:1727:void <init>() -> <init>
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1731:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21 -> f:
    46:46:java.lang.Object createSession(android.content.Context,java.lang.String) -> a
    64:64:java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> a
    68:69:void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> a
    72:73:void setFlags(java.lang.Object,int) -> a
    87:88:void setActive(java.lang.Object,boolean) -> a
    95:96:void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> a
    103:103:android.os.Parcelable getSessionToken(java.lang.Object) -> a
    111:112:void setMetadata(java.lang.Object,java.lang.Object) -> a
    119:120:void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> a
    123:132:void setQueue(java.lang.Object,java.util.List) -> a
    135:136:void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> a
    139:140:void setExtras(java.lang.Object,android.os.Bundle) -> a
    77:80:void setPlaybackToLocal(java.lang.Object,int) -> b
    107:108:void setPlaybackState(java.lang.Object,java.lang.Object) -> b
    115:116:void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> b
    143:153:boolean hasCallback(java.lang.Object) -> b
    83:84:void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> c
    91:91:boolean isActive(java.lang.Object) -> c
    99:100:void release(java.lang.Object) -> d
    50:53:java.lang.Object verifySession(java.lang.Object) -> e
    57:60:java.lang.Object verifyToken(java.lang.Object) -> f
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> f$a:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> a
    boolean onMediaButtonEvent(android.content.Intent) -> a
    void onPlay() -> a
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> a
    void onSeekTo(long) -> a
    void onSetRating(java.lang.Object) -> a
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> b
    void onRewind() -> b
    void onSkipToQueueItem(long) -> b
    void onCustomAction(java.lang.String,android.os.Bundle) -> c
    void onStop() -> c
    void onSkipToPrevious() -> d
    void onFastForward() -> e
    void onSkipToNext() -> f
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> f$b:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> a
    178:180:void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> <init>
    184:186:void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    258:260:void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
    233:234:void onFastForward() -> onFastForward
    190:191:boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    218:219:void onPause() -> onPause
    196:197:void onPlay() -> onPlay
    201:203:void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    207:209:void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    238:239:void onRewind() -> onRewind
    248:249:void onSeekTo(long) -> onSeekTo
    253:254:void onSetRating(android.media.Rating) -> onSetRating
    223:224:void onSkipToNext() -> onSkipToNext
    228:229:void onSkipToPrevious() -> onSkipToPrevious
    213:214:void onSkipToQueueItem(long) -> onSkipToQueueItem
    243:244:void onStop() -> onStop
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> f$c:
    266:266:java.lang.Object createItem(java.lang.Object,long) -> a
    270:270:java.lang.Object getDescription(java.lang.Object) -> a
    274:274:long getQueueId(java.lang.Object) -> b
android.support.v4.media.session.MediaSessionCompatApi22 -> g:
    26:27:void setRatingType(java.lang.Object,int) -> a
android.support.v4.media.session.MediaSessionCompatApi23 -> android.support.v4.media.session.MediaSessionCompatApi23:
    28:28:java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> a
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi23$a:
    38:39:void <init>(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> <init>
    43:45:void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompatApi24 -> android.support.v4.media.session.MediaSessionCompatApi24:
    34:34:java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi24$Callback) -> a
    38:45:java.lang.String getCallingPackage(java.lang.Object) -> a
android.support.v4.media.session.MediaSessionCompatApi24$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi24$a:
    58:59:void <init>(android.support.v4.media.session.MediaSessionCompatApi24$Callback) -> <init>
    63:64:void onPrepare() -> onPrepare
    68:70:void onPrepareFromMediaId(java.lang.String,android.os.Bundle) -> onPrepareFromMediaId
    74:76:void onPrepareFromSearch(java.lang.String,android.os.Bundle) -> onPrepareFromSearch
    80:82:void onPrepareFromUri(android.net.Uri,android.os.Bundle) -> onPrepareFromUri
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    65:65:void <clinit>() -> <clinit>
    34:40:void <init>(int,int,int,int,int) -> <init>
    42:48:void <init>(android.os.Parcel) -> <init>
    52:52:int describeContents() -> describeContents
    57:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$a:
    66:66:void <init>() -> <init>
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long mActiveItemId -> j
    long mActions -> e
    long mUpdateTime -> h
    long mPosition -> b
    float mSpeed -> d
    int mErrorCode -> f
    java.util.List mCustomActions -> i
    long mBufferedPosition -> c
    java.lang.CharSequence mErrorMessage -> g
    android.os.Bundle mExtras -> k
    java.lang.Object mStateObj -> l
    int mState -> a
    864:864:void <clinit>() -> <clinit>
    556:568:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:583:void <init>(android.os.Parcel) -> <init>
    604:604:int describeContents() -> describeContents
    798:828:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    724:724:long getActions() -> getActions
    776:776:long getActiveQueueItemId() -> getActiveQueueItemId
    681:681:long getBufferedPosition() -> getBufferedPosition
    670:672:long getCurrentPosition(java.lang.Long) -> getCurrentPosition
    731:731:java.util.List getCustomActions() -> getCustomActions
    754:754:int getErrorCode() -> getErrorCode
    764:764:java.lang.CharSequence getErrorMessage() -> getErrorMessage
    785:785:android.os.Bundle getExtras() -> getExtras
    658:658:long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    692:692:float getPlaybackSpeed() -> getPlaybackSpeed
    841:861:java.lang.Object getPlaybackState() -> getPlaybackState
    648:648:long getPosition() -> getPosition
    641:641:int getState() -> getState
    519:536:int toKeyCode(long) -> toKeyCode
    587:599:java.lang.String toString() -> toString
    609:621:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$a:
    865:865:void <init>() -> <init>
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    long mActiveItemId -> j
    java.util.List mCustomActions -> a
    long mUpdateTime -> i
    long mActions -> f
    float mRate -> e
    int mErrorCode -> g
    long mBufferedPosition -> d
    long mPosition -> c
    int mState -> b
    java.lang.CharSequence mErrorMessage -> h
    android.os.Bundle mExtras -> k
    1114:1115:void <init>() -> <init>
    1123:1137:void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    1284:1284:android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    1299:1300:android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    1360:1360:android.support.v4.media.session.PlaybackStateCompat build() -> build
    1259:1260:android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    1315:1316:android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    1225:1226:android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    1327:1328:android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    1340:1342:android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence) -> setErrorMessage
    1352:1353:android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1171:1171:android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    1210:1214:android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.CharSequence mName -> b
    android.os.Bundle mExtras -> d
    java.lang.Object mCustomActionObj -> e
    java.lang.String mAction -> a
    int mIcon -> c
    965:965:void <clinit>() -> <clinit>
    893:898:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:905:void <init>(android.os.Parcel) -> <init>
    917:917:int describeContents() -> describeContents
    932:933:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    985:985:java.lang.String getAction() -> getAction
    956:957:java.lang.Object getCustomAction() -> getCustomAction
    1017:1017:android.os.Bundle getExtras() -> getExtras
    1005:1005:int getIcon() -> getIcon
    994:994:java.lang.CharSequence getName() -> getName
    1022:1022:java.lang.String toString() -> toString
    909:913:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$a:
    966:966:void <init>() -> <init>
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.CharSequence mName -> b
    android.os.Bundle mExtras -> d
    java.lang.String mAction -> a
    int mIcon -> c
    1050:1052:void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    1089:1089:android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
    1078:1079:android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
android.support.v4.media.session.PlaybackStateCompatApi21 -> h:
    45:45:long getActions(java.lang.Object) -> a
    68:77:java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> a
    61:61:long getActiveQueueItemId(java.lang.Object) -> b
    37:37:long getBufferedPosition(java.lang.Object) -> c
    57:57:java.util.List getCustomActions(java.lang.Object) -> d
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> e
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> f
    41:41:float getPlaybackSpeed(java.lang.Object) -> g
    33:33:long getPosition(java.lang.Object) -> h
    29:29:int getState(java.lang.Object) -> i
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> h$a:
    82:82:java.lang.String getAction(java.lang.Object) -> a
    98:101:java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> a
    93:93:android.os.Bundle getExtras(java.lang.Object) -> b
    90:90:int getIcon(java.lang.Object) -> c
    86:86:java.lang.CharSequence getName(java.lang.Object) -> d
android.support.v4.media.session.PlaybackStateCompatApi22 -> i:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> a
    36:46:java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> a
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:17:void <init>() -> <init>
    35:35:android.os.IBinder asBinder() -> asBinder
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    39:60:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$a:
    android.os.IBinder mRemote -> a
    72:74:void <init>(android.os.IBinder) -> <init>
    77:77:android.os.IBinder asBinder() -> asBinder
    85:99:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    android.os.Handler mHandler -> b
    android.support.v4.os.IResultReceiver mReceiver -> c
    boolean mLocal -> a
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$a:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$b:
    android.support.v4.os.ResultReceiver this$0 -> a
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$c:
    android.os.Bundle mResultData -> b
    android.support.v4.os.ResultReceiver this$0 -> c
    int mResultCode -> a
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidx.activity.Cancellable -> j:
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> f
    androidx.lifecycle.ViewModelStore mViewModelStore -> e
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> c
    int mContentLayoutId -> g
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> d
    84:88:void <init>() -> <init>
    137:139:void <init>(int) -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> a
    220:222:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    257:258:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    286:287:void onBackPressed() -> onBackPressed
    149:155:void onCreate(android.os.Bundle) -> onCreate
    208:208:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    176:196:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:166:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> a
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:73:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    androidx.activity.ComponentActivity this$0 -> a
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$b:
    androidx.lifecycle.ViewModelStore viewModelStore -> b
    java.lang.Object custom -> a
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    int sReflectedFieldsInitialized -> b
    android.app.Activity mActivity -> a
    38:38:void <clinit>() -> <clinit>
    45:47:void <init>(android.app.Activity) -> <init>
    101:112:void initializeReflectiveFields() -> a
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    54:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> a
    107:108:void removeCancellable(androidx.activity.Cancellable) -> b
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    65:66:void <init>() -> <init>
    75:77:void <init>(java.lang.Runnable) -> <init>
    112:115:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> a
    95:96:void addCallback(androidx.activity.OnBackPressedCallback) -> addCallback
    145:152:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    162:169:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    184:196:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    220:224:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    243:249:void cancel() -> cancel
    229:239:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    200:202:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:208:void cancel() -> cancel
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
    androidx.annotation.InspectableProperty$ValueType[] $VALUES -> a
    152:148:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    androidx.annotation.RestrictTo$Scope[] $VALUES -> a
    63:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1121:1121:void onDestroy() -> a
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1098:1098:boolean collapseActionView() -> collapseActionView
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    1036:1036:float getElevation() -> getElevation
    993:993:int getHideOffset() -> getHideOffset
    859:859:android.content.Context getThemedContext() -> getThemedContext
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    980:980:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    870:870:boolean isTitleTruncated() -> isTitleTruncated
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    1021:1022:void setElevation(float) -> setElevation
    1006:1007:void setHideOffset(int) -> setHideOffset
    966:967:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    950:950:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    911:911:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    847:847:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1047:1047:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1377:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1387:void <init>(int,int) -> <init>
    1390:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1399:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    androidx.drawerlayout.widget.DrawerLayout mDrawerLayout -> b
    android.view.View$OnClickListener mToolbarNavigationClickListener -> j
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> e
    androidx.appcompat.app.ActionBarDrawerToggle$Delegate mActivityImpl -> a
    int mOpenDrawerContentDescRes -> h
    boolean mWarnedForDisplayHomeAsUp -> k
    int mCloseDrawerContentDescRes -> i
    boolean mDrawerIndicatorEnabled -> f
    boolean mHasCustomUpIndicator -> g
    androidx.appcompat.graphics.drawable.DrawerArrowDrawable mSlider -> c
    boolean mDrawerSlideAnimationEnabled -> d
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    195:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    499:500:void setActionBarDescription(int) -> a
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    507:513:void setPosition(float) -> a
    282:289:void toggle() -> b
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    400:400:boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    354:364:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    328:333:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$a:
    androidx.appcompat.app.ActionBarDrawerToggle this$0 -> a
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$b:
    android.app.Activity mActivity -> a
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:531:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:548:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$c:
    java.lang.CharSequence mDefaultContentDescription -> c
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.graphics.drawable.Drawable mDefaultUpIndicator -> b
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    android.content.Context mContext -> a
    int mListItemLayout -> O
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    boolean mShowTitle -> P
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    android.os.Handler mHandler -> R
    int mCheckedItem -> I
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.view.View$OnClickListener mButtonHandler -> S
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mSingleChoiceItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    androidx.appcompat.app.AppCompatDialog mDialog -> b
    android.widget.TextView mMessageView -> F
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    int mButtonPanelLayoutHint -> Q
    182:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> a
    257:258:void setCustomTitle(android.view.View) -> a
    261:265:void setMessage(java.lang.CharSequence) -> a
    290:297:void setView(android.view.View,int,int,int,int) -> a
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> a
    378:389:void setIcon(android.graphics.drawable.Drawable) -> a
    404:404:android.widget.ListView getListView() -> a
    408:414:android.widget.Button getButton(int) -> a
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> a
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> a
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> a
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> a
    759:826:void setupButtons(android.view.ViewGroup) -> a
    829:833:void centerButton(android.widget.Button) -> a
    231:234:void installContent() -> b
    247:251:void setTitle(java.lang.CharSequence) -> b
    280:283:void setView(android.view.View) -> b
    398:400:int getIconAttributeResId(int) -> b
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> b
    719:745:void setupContent(android.view.ViewGroup) -> b
    209:227:boolean canTextInput(android.view.View) -> c
    237:243:int selectContentView() -> c
    359:370:void setIcon(int) -> c
    640:670:void setupCustomContent(android.view.ViewGroup) -> c
    271:274:void setView(int) -> d
    467:555:void setupView() -> d
    673:716:void setupTitle(android.view.ViewGroup) -> d
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
    androidx.appcompat.app.AlertController this$0 -> a
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$b:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$c:
    androidx.appcompat.app.AlertController this$0 -> c
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$d:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$e:
    androidx.appcompat.app.AlertController this$0 -> c
    android.view.View val$top -> a
    android.view.View val$bottom -> b
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    924:928:void <init>(android.content.Context) -> <init>
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> a
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$a:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> b
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> a
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$b:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> e
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> c
    int mIsCheckedIndex -> b
    int mLabelIndex -> a
    androidx.appcompat.app.AlertController val$dialog -> d
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$c:
    androidx.appcompat.app.AlertController val$dialog -> a
    androidx.appcompat.app.AlertController$AlertParams this$0 -> b
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$d:
    androidx.appcompat.app.AlertController val$dialog -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> a
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$f:
    java.lang.ref.WeakReference mDialog -> a
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$g:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    int mPaddingBottomNoButtons -> b
    int mPaddingTopNoTitle -> a
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    androidx.appcompat.app.AlertController mAlert -> c
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    111:116:int resolveDialogTheme(android.content.Context,int) -> b
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> setButton
    155:156:void setCustomTitle(android.view.View) -> setCustomTitle
    253:254:void setIcon(int) -> setIcon
    262:263:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    271:274:void setIconAttribute(int) -> setIconAttribute
    164:165:void setMessage(java.lang.CharSequence) -> setMessage
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
    172:173:void setView(android.view.View) -> setView
    187:188:void setView(android.view.View,int,int,int,int) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    androidx.appcompat.app.AlertController$AlertParams P -> a
    int mTheme -> b
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    957:958:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    966:967:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    935:942:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1008:1010:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> r
    android.content.res.Resources mResources -> s
    77:78:void <init>() -> <init>
    92:93:void <init>(int) -> <init>
    575:587:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> a
    176:177:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:99:void attachBaseContext(android.content.Context) -> attachBaseContext
    609:614:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    214:214:android.view.View findViewById(int) -> findViewById
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    506:506:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    454:454:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    268:269:void invalidateOptionsMenu() -> invalidateOptionsMenu
    181:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:494:void onContentChanged() -> onContentChanged
    103:107:void onCreate(android.os.Bundle) -> onCreate
    371:372:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    233:235:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:228:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    623:623:void onNightModeChanged(int) -> onNightModeChanged
    528:529:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:119:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:197:void onPostResume() -> onPostResume
    390:390:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    533:535:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:203:void onStart() -> onStart
    207:209:void onStop() -> onStop
    291:291:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    280:280:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    501:501:void onSupportContentChanged() -> onSupportContentChanged
    416:439:boolean onSupportNavigateUp() -> onSupportNavigateUp
    239:241:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    305:305:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    600:605:void openOptionsMenu() -> openOptionsMenu
    161:162:void setContentView(int) -> setContentView
    166:167:void setContentView(android.view.View) -> setContentView
    171:172:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    150:151:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    345:345:void setSupportProgress(int) -> setSupportProgress
    338:338:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    331:331:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    324:324:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    111:113:void setTheme(int) -> setTheme
    316:316:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    263:264:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    487:488:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    258:258:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    androidx.collection.ArraySet sActiveDelegates -> b
    java.lang.Object sActiveDelegatesLock -> c
    int sDefaultNightMode -> a
    163:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> a
    653:660:void applyDayNightToActiveDelegates() -> a
    377:377:void attachBaseContext(android.content.Context) -> attachBaseContext
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> b
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> c
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    244:244:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> create
    256:256:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    571:571:int getDefaultNightMode() -> getDefaultNightMode
    526:526:int getLocalNightMode() -> getLocalNightMode
    618:618:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    608:609:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    547:562:void setDefaultNightMode(int) -> setDefaultNightMode
    339:339:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    java.util.Map sLocalNightModes -> a0
    boolean sInstalledExceptionHandler -> d0
    android.view.View mStatusGuard -> x
    int mThemeResId -> O
    boolean mActivityHandlesUiMode -> P
    boolean IS_PRE_LOLLIPOP -> b0
    boolean mStarted -> L
    boolean mSubDecorInstalled -> u
    android.content.Context mContext -> e
    boolean mInvalidatePanelMenuPosted -> T
    android.view.Window mWindow -> f
    boolean mFeatureProgress -> y
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> n
    boolean mOverlayActionMode -> C
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> Z
    boolean mIsDestroyed -> M
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> G
    boolean mLongPressBackDown -> I
    androidx.appcompat.app.ActionBar mActionBar -> i
    java.lang.Runnable mInvalidatePanelMenuRunnable -> V
    android.view.MenuInflater mMenuInflater -> j
    android.widget.TextView mTitleView -> w
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> h
    boolean mActivityHandlesUiModeChecked -> Q
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> m
    java.lang.CharSequence mTitle -> k
    boolean mFeatureIndeterminateProgress -> z
    android.widget.PopupWindow mActionModePopup -> q
    android.graphics.Rect mTempRect1 -> X
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> l
    int mInvalidatePanelMenuFeatures -> U
    boolean mIsFloating -> D
    boolean sAlwaysOverrideConfiguration -> e0
    java.lang.Runnable mShowActionModePopup -> r
    boolean mBaseContextAttached -> J
    java.lang.Object mHost -> d
    android.graphics.Rect mTempRect2 -> Y
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> S
    boolean mWindowNoTitle -> E
    boolean mHasActionBar -> A
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> p
    int mLocalNightMode -> N
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> R
    android.view.ViewGroup mSubDecor -> v
    boolean mCreated -> K
    boolean mEnableDefaultActionBarUp -> W
    boolean mHandleNativeActionModes -> t
    int[] sWindowBackgroundStyleable -> c0
    boolean mClosingActionMenu -> F
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> H
    boolean mOverlayActionBar -> B
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> g
    androidx.appcompat.view.ActionMode mActionMode -> o
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> s
    130:185:void <clinit>() -> <clinit>
    278:279:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:283:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    286:287:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:291:void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    294:329:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    631:632:void attachToWindow(android.view.Window) -> a
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> a
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> a
    1356:1369:boolean onKeyDown(int,android.view.KeyEvent) -> a
    1415:1433:boolean shouldInheritContext(android.view.ViewParent) -> a
    1486:1487:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> a
    1675:1692:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> a
    1800:1811:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    1814:1815:void closePanel(int) -> a
    1818:1847:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> a
    1915:1939:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> a
    1942:1950:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    1972:1992:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    2163:2185:boolean applyDayNight(boolean) -> a
    2245:2334:boolean updateForNightMode(int,boolean) -> a
    570:574:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2159:2159:boolean applyDayNight() -> applyDayNight
    334:336:void attachBaseContext(android.content.Context) -> attachBaseContext
    873:907:void applyFixedSizeWindow() -> b
    1581:1584:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> b
    1588:1629:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> b
    1696:1796:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> b
    1850:1857:boolean onKeyDownPanel(int,android.view.KeyEvent) -> b
    2005:2029:void doInvalidatePanelMenu(int) -> b
    2341:2382:void updateResourcesConfigurationForNightMode(int,boolean) -> b
    1270:1301:boolean onKeyShortcut(int,android.view.KeyEvent) -> c
    1632:1671:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> c
    1955:1967:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> c
    2232:2232:int calculateNightMode() -> c
    1375:1407:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    606:612:void cleanupAutoManagers() -> d
    1329:1352:boolean onKeyUp(int,android.view.KeyEvent) -> d
    1996:2002:void invalidatePanelMenu(int) -> d
    692:696:android.view.ViewGroup createSubDecor() -> e
    1861:1910:boolean onKeyUpPanel(int,android.view.KeyEvent) -> e
    2203:2223:int mapNightMode(int) -> e
    1016:1022:void onMenuOpened(int) -> f
    2133:2155:void dismissPopups() -> f
    479:480:android.view.View findViewById(int) -> findViewById
    1000:1013:void onPanelClosed(int) -> g
    1246:1249:void endOnGoingFadeAnimation() -> g
    3061:3061:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2198:2198:int getLocalNightMode() -> getLocalNightMode
    467:472:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    658:689:void ensureSubDecor() -> h
    2115:2125:int sanitizeWindowFeatureId(int) -> h
    953:974:boolean hasWindowFeature(int) -> hasWindowFeature
    622:626:void ensureWindow() -> i
    2038:2104:int updateStatusGuard(int) -> i
    1441:1450:void installViewFactory() -> installViewFactory
    1071:1075:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1242:1242:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    450:461:android.content.Context getActionBarThemedContext() -> j
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> k
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> l
    992:996:java.lang.CharSequence getTitle() -> m
    392:392:android.view.Window$Callback getWindowCallback() -> n
    396:399:void initWindowDecorActionBar() -> o
    487:502:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:371:void onCreate(android.os.Bundle) -> onCreate
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    587:602:void onDestroy() -> onDestroy
    1026:1033:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1039:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    376:377:void onPostCreate(android.os.Bundle) -> onPostCreate
    535:539:void onPostResume() -> onPostResume
    578:582:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    506:513:void onStart() -> onStart
    517:531:void onStop() -> onStop
    2405:2427:boolean isActivityManifestHandlingUiMode() -> p
    1253:1265:boolean onBackPressed() -> q
    870:870:void onSubDecorInstalled(android.view.ViewGroup) -> r
    911:945:boolean requestWindowFeature(int) -> requestWindowFeature
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> s
    543:548:void setContentView(android.view.View) -> setContentView
    552:557:void setContentView(int) -> setContentView
    561:566:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    1237:1238:void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    2190:2194:void setLocalNightMode(int) -> setLocalNightMode
    414:421:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    616:617:void setTheme(int) -> setTheme
    979:988:void setTitle(java.lang.CharSequence) -> setTitle
    1043:1044:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1232:1232:boolean shouldAnimateActionModeView() -> t
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> u
    1470:1481:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> v
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$a:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    158:158:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    174:179:boolean shouldWrapException(java.lang.Throwable) -> a
    161:171:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$b:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:267:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$c:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$d:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    859:859:void onAttachedFromWindow() -> onAttachedFromWindow
    863:864:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$e:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1161:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$e$a:
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1155:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1147:1148:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$f:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1203:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1190:1196:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$g:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    3065:3066:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3079:3079:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3070:3074:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3084:3085:boolean isNavigationVisible() -> isNavigationVisible
    3099:3103:void setActionBarDescription(int) -> setActionBarDescription
    3090:3095:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$h:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    2521:2522:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2535:2536:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2526:2530:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$i:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
    2436:2438:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2457:2484:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$i$a:
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2477:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$j:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    2807:2809:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2901:2912:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
    2813:2813:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2819:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2837:2837:void onContentChanged() -> onContentChanged
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2870:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2877:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2863:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2943:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2882:2891:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$k:
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    3030:3032:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3050:3053:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    3037:3038:int getApplyableNightMode() -> c
    3045:3046:void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$l:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.content.BroadcastReceiver mReceiver -> a
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2992:void cleanup() -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
    2960:2965:void setup() -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$l$a:
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2973:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$m:
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    3002:3004:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3023:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    3009:3009:int getApplyableNightMode() -> c
    3014:3015:void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$n:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> i
    2771:2773:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2801:2801:boolean isOutOfBounds(int,int) -> a
    2777:2777:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2798:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    boolean isPrepared -> m
    boolean isHandled -> n
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> k
    boolean isOpen -> o
    boolean refreshDecorView -> p
    int windowAnimations -> f
    int x -> d
    int y -> e
    int background -> b
    boolean refreshMenuContent -> q
    int gravity -> c
    int featureId -> a
    android.view.View createdPanelView -> i
    android.view.View shownPanelView -> h
    android.content.Context listPresenterContext -> l
    android.os.Bundle frozenActionViewState -> r
    android.view.ViewGroup decorView -> g
    androidx.appcompat.view.menu.MenuBuilder menu -> j
    2604:2608:void <init>(int) -> <init>
    2628:2657:void setStyle(android.content.Context) -> a
    2660:2669:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    2672:2683:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    2621:2625:void clearMenuPresenters() -> clearMenuPresenters
    2611:2614:boolean hasPanelItems() -> hasPanelItems
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$o:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    2488:2489:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2493:2506:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2510:2516:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher -> b
    androidx.appcompat.app.AppCompatDelegate mDelegate -> a
    53:54:void <init>(android.content.Context) -> <init>
    57:68:void <init>(android.content.Context,int) -> <init>
    72:73:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    176:182:int getThemeResId(android.content.Context,int) -> a
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    90:90:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    162:163:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    191:191:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    187:187:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    196:196:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$a:
    androidx.appcompat.app.AppCompatDialog this$0 -> a
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:67:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    int[] sOnClickAttrs -> c
    java.lang.Object[] mConstructorArgs -> a
    java.lang.Class[] sConstructorSignature -> b
    java.lang.String[] sClassPrefixList -> d
    java.util.Map sConstructorMap -> e
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    83:177:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> a
    253:254:void verifyNotNull(android.view.View,java.lang.String) -> a
    265:287:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> a
    301:308:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> a
    321:339:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> a
    348:371:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> a
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    261:261:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$a:
    android.view.View mHostView -> a
    java.lang.reflect.Method mResolvedMethod -> c
    java.lang.String mMethodName -> b
    android.content.Context mResolvedContext -> d
    385:388:void <init>(android.view.View,java.lang.String) -> <init>
    409:436:void resolveMethod(android.content.Context,java.lang.String) -> a
    392:399:void onClick(android.view.View) -> onClick
androidx.appcompat.app.NavItemSelectedListener -> k:
    androidx.appcompat.app.ActionBar$OnNavigationListener mListener -> a
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> l:
    java.lang.reflect.Field sResourcesImplField -> g
    java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField -> e
    boolean sThemedResourceCache_mUnthemedEntriesFieldFetched -> f
    boolean sResourcesImplFieldFetched -> h
    java.lang.reflect.Field sDrawableCacheField -> a
    boolean sDrawableCacheFieldFetched -> b
    java.lang.Class sThemedResourceCacheClazz -> c
    boolean sThemedResourceCacheClazzFetched -> d
    46:56:void flush(android.content.res.Resources) -> a
    166:207:void flushThemedResourcesCache(java.lang.Object) -> a
    60:80:void flushLollipops(android.content.res.Resources) -> b
    84:109:void flushMarshmallows(android.content.res.Resources) -> c
    113:162:void flushNougats(android.content.res.Resources) -> d
androidx.appcompat.app.ToolbarActionBar -> m:
    java.lang.Runnable mMenuInvalidator -> g
    boolean mLastMenuVisibility -> e
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker -> h
    java.util.ArrayList mMenuVisibilityListeners -> f
    android.view.Window$Callback mWindowCallback -> c
    boolean mToolbarMenuPrepared -> b
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> a
    boolean mMenuCallbackSet -> d
    68:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    489:490:void onDestroy() -> a
    494:495:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    334:334:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    340:340:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    346:346:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    352:352:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    543:548:android.view.Menu getMenu() -> b
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> c
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:444:boolean collapseActionView() -> collapseActionView
    448:463:void populateOptionsMenu() -> d
    504:513:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    295:295:android.view.View getCustomView() -> getCustomView
    323:323:int getDisplayOptions() -> getDisplayOptions
    141:141:float getElevation() -> getElevation
    399:399:int getHeight() -> getHeight
    213:213:int getNavigationItemCount() -> getNavigationItemCount
    310:310:int getNavigationMode() -> getNavigationMode
    208:208:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    382:382:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    305:305:java.lang.CharSequence getSubtitle() -> getSubtitle
    388:388:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    394:394:int getTabCount() -> getTabCount
    146:146:android.content.Context getThemedContext() -> getThemedContext
    300:300:java.lang.CharSequence getTitle() -> getTitle
    413:414:void hide() -> hide
    433:435:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    418:418:boolean isShowing() -> isShowing
    151:151:boolean isTitleTruncated() -> isTitleTruncated
    328:328:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    370:370:void removeAllTabs() -> removeAllTabs
    499:500:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    358:358:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    364:364:void removeTabAt(int) -> removeTabAt
    376:376:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    290:291:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    82:83:void setCustomView(android.view.View) -> setCustomView
    87:91:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    95:97:void setCustomView(int) -> setCustomView
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    254:255:void setDisplayOptions(int) -> setDisplayOptions
    259:261:void setDisplayOptions(int,int) -> setDisplayOptions
    285:286:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    270:271:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    280:281:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    265:266:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    136:137:void setElevation(float) -> setElevation
    166:167:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    176:177:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    156:157:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    161:162:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    132:132:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    101:102:void setIcon(int) -> setIcon
    106:107:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    191:192:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    111:112:void setLogo(int) -> setLogo
    116:117:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    315:316:void setNavigationMode(int) -> setNavigationMode
    196:201:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    182:182:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    127:127:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    122:122:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    243:244:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    248:249:void setSubtitle(int) -> setSubtitle
    218:219:void setTitle(java.lang.CharSequence) -> setTitle
    223:224:void setTitle(int) -> setTitle
    228:229:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    406:407:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> m$a:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> m$b:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> m$c:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    boolean mClosingActionMenu -> a
    554:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:563:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> m$d:
    androidx.appcompat.app.ToolbarActionBar this$0 -> a
    583:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    593:601:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> m$e:
    androidx.appcompat.app.ToolbarActionBar this$0 -> b
    516:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> n:
    long sunrise -> b
    long sunset -> a
    androidx.appcompat.app.TwilightCalculator sInstance -> d
    int state -> c
    26:26:void <init>() -> <init>
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> a
    89:138:void calculateTwilight(long,double,double) -> a
androidx.appcompat.app.TwilightManager -> o:
    android.content.Context mContext -> a
    androidx.appcompat.app.TwilightManager sInstance -> d
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
    android.location.LocationManager mLocationManager -> b
    69:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> a
    107:127:android.location.Location getLastKnownLocation() -> a
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
    148:192:void updateState(android.location.Location) -> a
    80:102:boolean isNight() -> b
    144:144:boolean isStateValid() -> c
androidx.appcompat.app.TwilightManager$TwilightState -> o$a:
    long nextUpdate -> b
    boolean isNight -> a
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    android.content.Context mContext -> a
    boolean mDisplayHomeAsUpSet -> m
    int mSavedTabPosition -> l
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> d
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> D
    boolean mContentAnimations -> u
    android.view.animation.Interpolator sShowInterpolator -> G
    boolean mHiddenBySystem -> w
    boolean mLastMenuVisibility -> q
    boolean mHasEmbeddedTabs -> s
    androidx.appcompat.app.WindowDecorActionBar$TabImpl mSelectedTab -> k
    boolean mNowShowing -> y
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> z
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> E
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
    boolean mShowHideAnimationEnabled -> A
    androidx.appcompat.widget.ActionBarContainer mContainerView -> e
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> n
    android.content.Context mThemedContext -> b
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView -> i
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> C
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> p
    boolean mHiddenByApp -> v
    android.view.animation.Interpolator sHideInterpolator -> F
    boolean mShowingForMode -> x
    android.view.View mContentView -> h
    androidx.appcompat.widget.ActionBarContextView mContextView -> g
    java.util.ArrayList mTabs -> j
    int mCurWindowVisibility -> t
    java.util.ArrayList mMenuVisibilityListeners -> r
    boolean mHideOnContentScroll -> B
    android.app.Activity mActivity -> c
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> o
    79:85:void <clinit>() -> <clinit>
    169:177:void <init>(android.app.Activity,boolean) -> <init>
    179:182:void <init>(android.app.Dialog) -> <init>
    189:192:void <init>(android.view.View) -> <init>
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    263:285:void setHasEmbeddedTabs(boolean) -> a
    544:548:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> a
    760:763:boolean checkShowingFlags(boolean,boolean,boolean) -> a
    341:342:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    562:563:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    567:568:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    572:578:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    582:588:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    875:911:void animateToMode(boolean) -> animateToMode
    195:206:void init(android.view.View) -> b
    429:437:void cleanupTabs() -> b
    771:785:void updateVisibility(boolean) -> b
    312:317:void completeDeferredDestroyActionMode() -> c
    975:979:boolean collapseActionView() -> collapseActionView
    288:309:void ensureTabsExist() -> d
    351:360:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:865:void doHide(boolean) -> doHide
    788:834:void doShow(boolean) -> doShow
    712:719:void hideForActionMode() -> e
    674:675:void enableContentAnimations(boolean) -> enableContentAnimations
    916:916:boolean shouldAnimateContextView() -> f
    686:693:void showForActionMode() -> g
    498:498:android.view.View getCustomView() -> getCustomView
    518:518:int getDisplayOptions() -> getDisplayOptions
    254:254:float getElevation() -> getElevation
    669:669:int getHeight() -> getHeight
    746:746:int getHideOffset() -> getHideOffset
    1314:1318:int getNavigationItemCount() -> getNavigationItemCount
    513:513:int getNavigationMode() -> getNavigationMode
    1302:1306:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    664:664:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    508:508:java.lang.CharSequence getSubtitle() -> getSubtitle
    1361:1361:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    1326:1326:int getTabCount() -> getTabCount
    921:933:android.content.Context getThemedContext() -> getThemedContext
    503:503:java.lang.CharSequence getTitle() -> getTitle
    1376:1376:boolean hasIcon() -> hasIcon
    1390:1390:boolean hasLogo() -> hasLogo
    705:709:void hide() -> hide
    723:727:void hideForSystem() -> hideForSystem
    741:741:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    869:871:boolean isShowing() -> isShowing
    938:938:boolean isTitleTruncated() -> isTitleTruncated
    592:592:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:967:void onContentScrollStarted() -> onContentScrollStarted
    971:971:void onContentScrollStopped() -> onContentScrollStopped
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:322:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    425:426:void removeAllTabs() -> removeAllTabs
    346:347:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    597:598:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    602:623:void removeTabAt(int) -> removeTabAt
    451:456:boolean requestFocus() -> requestFocus
    627:660:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    483:484:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    364:366:void setCustomView(int) -> setCustomView
    1286:1287:void setCustomView(android.view.View) -> setCustomView
    1291:1293:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    466:470:void setDisplayOptions(int) -> setDisplayOptions
    474:479:void setDisplayOptions(int,int) -> setDisplayOptions
    390:391:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    375:376:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    385:386:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    370:371:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    249:250:void setElevation(float) -> setElevation
    751:756:void setHideOffset(int) -> setHideOffset
    731:737:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    953:954:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    958:959:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    943:944:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    948:949:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    395:396:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1367:1368:void setIcon(int) -> setIcon
    1372:1373:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1297:1298:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    1381:1382:void setLogo(int) -> setLogo
    1386:1387:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    1331:1357:void setNavigationMode(int) -> setNavigationMode
    410:421:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    333:337:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    494:494:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    488:489:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    405:406:void setSubtitle(int) -> setSubtitle
    461:462:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    400:401:void setTitle(int) -> setTitle
    441:442:void setTitle(java.lang.CharSequence) -> setTitle
    446:447:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    679:683:void show() -> show
    697:701:void showForSystem() -> showForSystem
    523:540:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$a:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$b:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$c:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    android.content.Context mActionModeContext -> c
    androidx.appcompat.view.ActionMode$Callback mCallback -> e
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    java.lang.ref.WeakReference mCustomView -> f
    androidx.appcompat.app.WindowDecorActionBar this$0 -> g
    993:999:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1065:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1040:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1056:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1130:1130:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    1146:1146:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    1122:1125:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1155:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1133:1142:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    1070:1072:void setCustomView(android.view.View) -> setCustomView
    1076:1077:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1092:void setSubtitle(int) -> setSubtitle
    1081:1082:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1087:void setTitle(int) -> setTitle
    1106:1108:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    android.graphics.drawable.Drawable mIcon -> c
    java.lang.Object mTag -> b
    java.lang.CharSequence mText -> d
    int mPosition -> f
    java.lang.CharSequence mContentDesc -> e
    androidx.appcompat.app.ActionBar$TabListener mCallback -> a
    androidx.appcompat.app.WindowDecorActionBar this$0 -> h
    android.view.View mCustomView -> g
    1162:1168:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1280:1280:java.lang.CharSequence getContentDescription() -> getContentDescription
    1194:1194:android.view.View getCustomView() -> getCustomView
    1214:1214:android.graphics.drawable.Drawable getIcon() -> getIcon
    1219:1219:int getPosition() -> getPosition
    1173:1173:java.lang.Object getTag() -> getTag
    1228:1228:java.lang.CharSequence getText() -> getText
    1261:1262:void select() -> select
    1266:1266:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    1271:1275:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1199:1203:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    1208:1208:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> setCustomView
    1233:1237:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1242:1242:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> setIcon
    1223:1224:void setPosition(int) -> setPosition
    1188:1189:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> setTabListener
    1178:1179:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    1247:1251:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    1256:1256:androidx.appcompat.app.ActionBar$Tab setText(int) -> setText
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.lang.Object sColorStateCacheLock -> c
    java.util.WeakHashMap sColorStateCaches -> b
    50:55:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> a
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    173:178:android.util.TypedValue getTypedValue() -> a
    112:124:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> b
    162:167:boolean isColorInt(android.content.Context,int) -> c
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$a:
    android.content.res.Configuration configuration -> b
    android.content.res.ColorStateList value -> a
    186:189:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState -> o
    int mTransitionFromIndex -> r
    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition -> p
    boolean mMutated -> s
    java.lang.String LOGTAG -> t
    int mTransitionToIndex -> q
    92:92:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    116:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> a
    449:469:void updateStateFromTypedArray(android.content.res.TypedArray) -> a
    483:500:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> a
    718:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    89:89:void addState(int[],android.graphics.drawable.Drawable) -> addState
    234:235:void addState(int[],android.graphics.drawable.Drawable,int) -> addState
    251:252:void addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    293:321:boolean selectTransition(int) -> b
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> c
    89:89:boolean canApplyTheme() -> canApplyTheme
    138:156:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme) -> create
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    472:473:void init() -> d
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:210:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    259:259:boolean isStateful() -> isStateful
    264:272:void jumpToCurrentState() -> jumpToCurrentState
    605:609:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:288:boolean onStateChange(int[]) -> onStateChange
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    89:89:void setDither(boolean) -> setDither
    89:89:void setEnterFadeDuration(int) -> setEnterFadeDuration
    89:89:void setExitFadeDuration(int) -> setExitFadeDuration
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:223:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1 -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$a:
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$b:
    android.graphics.drawable.Animatable mA -> a
    370:372:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:377:void start() -> c
    381:382:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$c:
    androidx.collection.LongSparseArray mTransitions -> K
    androidx.collection.SparseArrayCompat mStateIds -> L
    634:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    652:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> a
    667:669:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> a
    673:677:int indexOfKeyframe(int[]) -> b
    685:686:int indexOfTransition(int,int) -> c
    681:681:int getKeyframeIdAt(int) -> d
    690:691:boolean isTransitionReversed(int,int) -> d
    695:696:boolean transitionHasReversibleFlag(int,int) -> e
    712:712:long generateTransitionKey(int,int) -> f
    647:649:void mutate() -> n
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$d:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd -> a
    433:435:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:440:void start() -> c
    444:445:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$e:
    android.animation.ObjectAnimator mAnim -> a
    boolean mHasReversibleFlag -> b
    392:407:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> a
    421:422:void reverse() -> b
    416:417:void start() -> c
    426:427:void stop() -> d
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$f:
    int[] mFrameTimes -> a
    int mFrames -> b
    int mTotalDuration -> c
    732:734:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    737:750:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> a
    754:754:int getTotalDuration() -> a
    759:776:float getInterpolation(float) -> getInterpolation
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$g:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    363:363:boolean canReverse() -> a
    360:360:void reverse() -> b
    void start() -> c
    void stop() -> d
androidx.appcompat.graphics.drawable.DrawableContainer -> p:
    android.graphics.drawable.Drawable mCurrDrawable -> c
    long mEnterAnimationEnd -> j
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState -> a
    android.graphics.drawable.Drawable mLastDrawable -> d
    long mExitAnimationEnd -> k
    java.lang.Runnable mAnimationRunnable -> i
    boolean mHasAlpha -> f
    int mCurIndex -> g
    int mAlpha -> e
    boolean mMutated -> h
    android.graphics.Rect mHotspotBounds -> b
    androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback -> l
    53:75:void <init>() -> <init>
    androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    427:482:boolean selectDrawable(int) -> a
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> a
    535:573:void animate(boolean) -> a
    589:590:void updateDensity(android.content.res.Resources) -> a
    1152:1164:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    1204:1205:int resolveDensity(android.content.res.Resources,int) -> a
    595:596:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    414:414:int getCurrentIndex() -> b
    102:102:boolean needsMirroring() -> c
    601:601:boolean canApplyTheme() -> canApplyTheme
    87:93:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:97:int getChangingConfigurations() -> getChangingConfigurations
    606:610:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    296:301:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:405:int getOpacity() -> getOpacity
    132:135:void getOutline(android.graphics.Outline) -> getOutline
    108:126:boolean getPadding(android.graphics.Rect) -> getPadding
    369:375:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    249:273:void jumpToCurrentState() -> jumpToCurrentState
    616:622:android.graphics.drawable.Drawable mutate() -> mutate
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:322:boolean onLevelChange(int) -> onLevelChange
    305:311:boolean onStateChange(int[]) -> onStateChange
    379:382:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    139:150:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    159:165:void setDither(boolean) -> setDither
    203:204:void setEnterFadeDuration(int) -> setEnterFadeDuration
    213:214:void setExitFadeDuration(int) -> setExitFadeDuration
    277:280:void setHotspot(float,float) -> setHotspot
    284:292:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:400:boolean setVisible(boolean,boolean) -> setVisible
    386:389:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> p$a:
    androidx.appcompat.graphics.drawable.DrawableContainer this$0 -> a
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:473:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> p$b:
    android.graphics.drawable.Drawable$Callback mCallback -> a
    1169:1169:void <init>() -> <init>
    1173:1174:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> a
    1178:1180:android.graphics.drawable.Drawable$Callback unwrap() -> a
    1186:1186:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1190:1193:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1200:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> p$c:
    boolean mCheckedConstantSize -> m
    int mConstantWidth -> n
    boolean mVariablePadding -> i
    int mNumChildren -> h
    boolean mStateful -> u
    int mChangingConfigurations -> d
    boolean mCanConstantState -> w
    int mEnterFadeDuration -> A
    androidx.appcompat.graphics.drawable.DrawableContainer mOwner -> a
    boolean mMutated -> y
    android.content.res.ColorStateList mTintList -> F
    boolean mHasColorFilter -> E
    android.util.SparseArray mDrawableFutures -> f
    android.content.res.Resources mSourceRes -> b
    int mOpacity -> s
    boolean mAutoMirrored -> C
    int mConstantMinimumHeight -> q
    int mConstantHeight -> o
    android.graphics.ColorFilter mColorFilter -> D
    boolean mHasTintMode -> I
    boolean mCheckedPadding -> j
    boolean mConstantSize -> l
    boolean mCheckedConstantState -> v
    int mChildrenChangingConfigurations -> e
    android.graphics.drawable.Drawable[] mDrawables -> g
    boolean mDither -> x
    int mExitFadeDuration -> B
    int mDensity -> c
    boolean mCheckedOpacity -> r
    boolean mCheckedStateful -> t
    android.graphics.Rect mConstantPadding -> k
    int mLayoutDirection -> z
    android.graphics.PorterDuff$Mode mTintMode -> G
    boolean mHasTintList -> H
    int mConstantMinimumWidth -> p
    684:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> a
    830:848:android.graphics.drawable.Drawable getChild(int) -> a
    879:891:void updateDensity(android.content.res.Resources) -> a
    895:908:void applyTheme(android.content.res.Resources$Theme) -> a
    993:994:void setConstantSize(boolean) -> a
    1124:1127:void growArray(int,int) -> a
    1133:1132:boolean canConstantState() -> a
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> b
    852:869:boolean setLayoutDirection(int,int) -> b
    961:962:void setVariablePadding(boolean) -> b
    1044:1061:void computeConstantSize() -> b
    1064:1065:void setEnterFadeDuration(int) -> b
    802:811:void createAllFutures() -> c
    1072:1073:void setExitFadeDuration(int) -> c
    913:928:boolean canApplyTheme() -> canApplyTheme
    798:798:int getCapacity() -> d
    823:823:int getChildCount() -> e
    1017:1020:int getConstantHeight() -> f
    1037:1040:int getConstantMinimumHeight() -> g
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    1027:1030:int getConstantMinimumWidth() -> h
    968:972:android.graphics.Rect getConstantPadding() -> i
    1007:1010:int getConstantWidth() -> j
    1083:1095:int getOpacity() -> k
    793:795:void invalidateCache() -> l
    1000:1000:boolean isConstantSize() -> m
    void mutate() -> n
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    android.graphics.drawable.Drawable mDrawable -> a
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    float mMaxCutForBarSize -> k
    float mProgress -> j
    int mDirection -> l
    boolean mVerticalMirror -> i
    int mSize -> h
    float mBarGap -> e
    float mArrowShaftLength -> d
    float mBarLength -> c
    float mArrowHeadLength -> b
    android.graphics.Path mPath -> g
    android.graphics.Paint mPaint -> a
    boolean mSpin -> f
    float ARROW_HEAD_ANGLE -> m
    100:100:void <clinit>() -> <clinit>
    128:152:void <init>(android.content.Context) -> <init>
    465:465:float lerp(float,float,float) -> a
    326:401:void draw(android.graphics.Canvas) -> draw
    171:171:float getArrowHeadLength() -> getArrowHeadLength
    190:190:float getArrowShaftLength() -> getArrowShaftLength
    197:197:float getBarLength() -> getBarLength
    247:247:float getBarThickness() -> getBarThickness
    227:227:int getColor() -> getColor
    311:311:int getDirection() -> getDirection
    256:256:float getGapSize() -> getGapSize
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> getPaint
    437:437:float getProgress() -> getProgress
    289:289:boolean isSpinEnabled() -> isSpinEnabled
    405:409:void setAlpha(int) -> setAlpha
    160:164:void setArrowHeadLength(float) -> setArrowHeadLength
    180:184:void setArrowShaftLength(float) -> setArrowShaftLength
    206:210:void setBarLength(float) -> setBarLength
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:281:void setDirection(int) -> setDirection
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> q:
    boolean mMutated -> n
    androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState -> m
    403:408:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:418:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> a
    156:171:void updateStateFromTypedArray(android.content.res.TypedArray) -> a
    179:225:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    234:253:int[] extractStateSet(android.util.AttributeSet) -> a
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> a
    397:401:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> a
    99:104:void addState(int[],android.graphics.drawable.Drawable) -> addState
    391:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    143:150:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    108:108:boolean isStateful() -> isStateful
    310:314:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> q$a:
    int[][] mStateSets -> J
    332:339:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> a
    357:364:int indexOfStateSet(int[]) -> a
    381:385:void growArray(int,int) -> a
    343:348:void mutate() -> n
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    java.util.Locale mLocale -> a
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    android.content.Context mContext -> a
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:64:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    java.lang.Object mTag -> a
    boolean mTitleOptionalHint -> b
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    153:153:boolean isTitleOptional() -> isTitleOptional
    225:225:boolean isUiFocusable() -> isUiFocusable
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    android.content.res.Resources$Theme mTheme -> b
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    113:121:android.content.res.Resources getResourcesInternal() -> a
    97:98:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    181:190:void initializeTheme() -> b
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:130:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    android.content.Context mContext -> c
    androidx.appcompat.widget.ActionBarContextView mContextView -> d
    androidx.appcompat.view.ActionMode$Callback mCallback -> e
    java.lang.ref.WeakReference mCustomView -> f
    boolean mFinished -> g
    boolean mFocusable -> h
    androidx.appcompat.view.menu.MenuBuilder mMenu -> i
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:112:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    167:167:boolean isUiFocusable() -> isUiFocusable
    145:145:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    157:157:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    148:153:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    android.content.Context mContext -> b
    androidx.collection.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> a
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> a
    224:227:java.lang.Object getRealOwner() -> a
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> a
    119:136:void inflate(int,android.view.Menu) -> inflate
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$a:
    java.lang.Class[] PARAM_TYPES -> c
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$b:
    int itemCategoryOrder -> j
    char itemAlphabeticShortcut -> n
    java.lang.CharSequence itemTooltipText -> C
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.content.res.ColorStateList itemIconTintList -> D
    java.lang.String itemListenerMethodName -> z
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
    boolean itemAdded -> h
    androidx.core.view.ActionProvider itemActionProvider -> A
    int itemNumericModifiers -> q
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    java.lang.CharSequence itemContentDescription -> B
    int itemId -> i
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemActionProviderClassName -> y
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    349:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    368:380:void readGroup(android.util.AttributeSet) -> a
    459:462:char getShortcut(java.lang.String) -> a
    467:528:void setItem(android.view.MenuItem) -> a
    531:533:void addItem() -> a
    550:557:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    386:456:void readItem(android.util.AttributeSet) -> b
    536:539:android.view.SubMenu addSubMenuItem() -> b
    543:543:boolean hasAddedItem() -> c
    356:362:void resetGroup() -> d
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
    long mDuration -> b
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    java.util.ArrayList mAnimators -> a
    48:50:void <init>() -> <init>
    86:87:void onAnimationsEnded() -> a
    90:97:void cancel() -> cancel
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$a:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    137:140:void onEnd() -> a
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    android.view.Window$Callback mWrapped -> a
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    android.content.res.ColorStateList mIconTintList -> p
    char mShortcutNumericChar -> g
    char mShortcutAlphabeticChar -> i
    int mShortcutAlphabeticModifiers -> j
    int mShortcutNumericModifiers -> h
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    int mGroup -> b
    int mOrdering -> c
    boolean mHasIconTint -> r
    boolean mHasIconTintMode -> s
    int mId -> a
    android.content.Intent mIntent -> f
    java.lang.CharSequence mContentDescription -> n
    java.lang.CharSequence mTooltipText -> o
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> m
    android.content.Context mContext -> l
    android.graphics.drawable.Drawable mIconDrawable -> k
    android.graphics.PorterDuff$Mode mIconTintMode -> q
    int mFlags -> t
    83:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    444:456:void applyIconTint() -> a
    378:378:boolean collapseActionView() -> collapseActionView
    373:373:boolean expandActionView() -> expandActionView
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    337:337:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    357:357:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    303:312:boolean invoke() -> invoke
    383:383:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    322:322:boolean requiresActionButton() -> requiresActionButton
    327:327:boolean requiresOverflow() -> requiresOverflow
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:394:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    202:203:androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    415:420:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:435:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:405:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> i
    int mSavedPaddingLeft -> n
    int mMaxIconSize -> o
    int mMinWidth -> m
    android.graphics.drawable.Drawable mIcon -> g
    boolean mAllowTextWithIcon -> k
    boolean mExpandedFormat -> l
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> e
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> j
    java.lang.CharSequence mTitle -> f
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> h
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    103:107:boolean shouldAllowTextWithIcon() -> b
    188:211:void updateTextButtonVisibility() -> c
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    254:254:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> j
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> a
    int mId -> d
    int mMenuLayoutRes -> b
    int mItemLayoutRes -> c
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    238:238:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    233:233:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    228:228:boolean flagActionItems() -> flagActionItems
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    243:243:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:248:void setId(int) -> setId
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> r:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> b
    java.util.Map mSubMenus -> c
    37:39:void <init>(android.content.Context) -> <init>
    42:61:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    65:81:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
    86:92:void internalClear() -> a
    95:108:void internalRemoveGroup(int) -> a
    111:125:void internalRemoveItem(int) -> b
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    int mDropDownGravity -> n
    android.view.View mShownAnchorView -> p
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> z
    int mPopupStyleAttr -> d
    boolean mShowTitle -> w
    boolean mHasYOffset -> s
    android.os.Handler mSubMenuHoverHandler -> g
    android.view.ViewTreeObserver mTreeObserver -> y
    android.view.View mAnchorView -> o
    boolean mOverflowOnly -> f
    java.util.List mPendingMenus -> h
    int mYOffset -> u
    boolean mShouldCloseImmediately -> A
    int mLastPosition -> q
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> l
    android.content.Context mContext -> b
    int mRawDropDownGravity -> m
    boolean mForceShowIcon -> v
    int mPopupStyleRes -> e
    int ITEM_LAYOUT -> B
    int mMenuMaxWidth -> c
    boolean mHasXOffset -> r
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> k
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> x
    java.util.List mShowingMenus -> i
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> j
    int mXOffset -> t
    66:66:void <clinit>() -> <clinit>
    222:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    241:242:void setForceShowIcon(boolean) -> a
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> a
    537:577:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> a
    740:745:void setGravity(int) -> a
    749:756:void setAnchorView(android.view.View) -> a
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    791:791:boolean closeMenuOnSubMenuOpened() -> a
    772:774:void setHorizontalOffset(int) -> b
    784:785:void setShowTitle(boolean) -> b
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> c
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> c
    778:780:void setVerticalOffset(int) -> c
    315:316:int getInitialMenuPosition() -> d
    329:348:int getNextMenuPosition(int) -> d
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> d
    287:298:void dismiss() -> dismiss
    726:726:boolean flagActionItems() -> flagActionItems
    765:765:android.widget.ListView getListView() -> getListView
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    736:736:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    731:731:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    259:279:void show() -> show
    616:619:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$a:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$b:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$c:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> a
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$c$a:
    androidx.appcompat.view.menu.MenuBuilder val$menu -> c
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> d
    android.view.MenuItem val$item -> b
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> a
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$d:
    androidx.appcompat.view.menu.MenuBuilder menu -> b
    int position -> c
    androidx.appcompat.widget.MenuPopupWindow window -> a
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> a
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    int[] TINT_ATTRS -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    boolean mPreserveIconSpacing -> m
    boolean mHasListDivider -> o
    int mTextAppearance -> k
    android.graphics.drawable.Drawable mBackground -> j
    android.widget.LinearLayout mContent -> i
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> a
    boolean mForceShowIcon -> q
    android.widget.ImageView mIconView -> b
    android.widget.ImageView mGroupDivider -> h
    android.widget.CheckBox mCheckBox -> e
    android.widget.ImageView mSubMenuArrowView -> g
    android.widget.RadioButton mRadioButton -> c
    android.content.Context mTextAppearanceContext -> l
    android.view.LayoutInflater mInflater -> p
    android.widget.TextView mTitleView -> d
    android.widget.TextView mShortcutView -> f
    android.graphics.drawable.Drawable mSubMenuArrow -> n
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> a
    145:150:void addContentView(android.view.View,int) -> a
    312:317:void insertCheckBox() -> a
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    297:301:void insertIconView() -> b
    304:309:void insertRadioButton() -> c
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
    326:326:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> c
    android.view.LayoutInflater mInflater -> b
    int mId -> j
    int mThemeRes -> f
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> h
    int mItemLayoutRes -> g
    int mItemIndexOffset -> e
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> d
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> i
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:204:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:197:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    207:208:void setId(int) -> setId
    165:169:void setItemIndexOffset(int) -> setItemIndexOffset
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$a:
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> b
    int mExpandedIndex -> a
    234:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> a
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    android.view.LayoutInflater mInflater -> e
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> a
    int mItemLayoutRes -> f
    int mExpandedIndex -> b
    boolean mForceShowIcon -> c
    boolean mOverflowOnly -> d
    44:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> a
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    53:53:boolean getForceShowIcon() -> getForceShowIcon
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    android.content.Context mContext -> a
    int mDefaultShowAsAction -> l
    boolean mIsActionItemsStale -> k
    java.util.ArrayList mVisibleItems -> g
    boolean mIsClosing -> u
    android.view.View mHeaderView -> p
    int[] sCategoryToOrder -> A
    boolean mPreventDispatchingItemsChanged -> q
    boolean mStructureChangedWhileDispatchPrevented -> s
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    boolean mGroupDividerEnabled -> y
    java.util.ArrayList mActionItems -> i
    boolean mIsVisibleItemsStale -> h
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> x
    android.content.res.Resources mResources -> b
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
    java.util.ArrayList mItems -> f
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> m
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> t
    java.lang.CharSequence mHeaderTitle -> n
    java.util.ArrayList mNonActionItems -> j
    boolean mOverrideVisibleItems -> z
    java.util.ArrayList mTempShortcutItemList -> v
    android.graphics.drawable.Drawable mHeaderIcon -> o
    boolean mQwertyMode -> c
    68:68:void <clinit>() -> <clinit>
    229:242:void <init>(android.content.Context) -> <init>
    290:302:void dispatchPresenterUpdate(boolean) -> a
    306:323:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> a
    350:352:void dispatchRestoreInstanceState(android.os.Bundle) -> a
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> a
    586:586:void removeItemAtInt(int,boolean) -> a
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> a
    785:788:int getOrdering(int) -> a
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    853:860:int findInsertIndex(java.util.ArrayList,int) -> a
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> a
    936:971:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> a
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> a
    1353:1353:boolean getOptionalIconsVisible() -> a
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:257:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:272:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    327:347:void dispatchSaveInstanceState(android.os.Bundle) -> b
    818:822:void setShortcutsVisibleInner(boolean) -> b
    832:832:android.content.res.Resources getResources() -> b
    1118:1120:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> c
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    598:606:void clearAll() -> clearAll
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1379:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    1107:1109:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> d
    1357:1375:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    436:436:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1334:1334:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:988:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    594:595:void removeItemAt(int) -> removeItemAt
    281:287:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:433:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:376:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    379:403:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:372:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:441:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1345:1346:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    245:246:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1265:1266:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1349:1350:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1410:1411:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    809:815:void setShortcutsVisible(boolean) -> setShortcutsVisible
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> s:
    androidx.appcompat.app.AlertDialog mDialog -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> c
    42:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    53:90:void show(android.os.IBinder) -> a
    139:142:void dismiss() -> a
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    151:157:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:164:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> j
    android.content.res.ColorStateList mIconTintList -> t
    android.graphics.PorterDuff$Mode mIconTintMode -> u
    int mOrdering -> d
    java.lang.CharSequence mTitleCondensed -> f
    boolean mHasIconTintMode -> w
    int mGroup -> b
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> q
    android.content.Intent mIntent -> g
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> E
    java.lang.CharSequence mTooltipText -> s
    int mFlags -> y
    android.graphics.drawable.Drawable mIconDrawable -> l
    int mIconResId -> m
    int mShortcutAlphabeticModifiers -> k
    int mShortcutNumericModifiers -> i
    java.lang.CharSequence mTitle -> e
    boolean mHasIconTint -> v
    boolean mNeedToApplyIconTint -> x
    int mCategoryOrder -> c
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> C
    int mId -> a
    int mShowAsAction -> z
    java.lang.CharSequence mContentDescription -> r
    android.view.View mActionView -> A
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
    androidx.core.view.ActionProvider mActionProvider -> B
    java.lang.Runnable mItemCallback -> p
    boolean mIsActionViewExpanded -> D
    137:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    342:342:char getShortcut() -> a
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> a
    446:446:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> a
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> a
    631:636:void setCheckedInt(boolean) -> a
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> a
    691:692:void actionFormatChanged() -> actionFormatChanged
    352:398:java.lang.String getShortcutLabel() -> b
    655:657:boolean setVisibleInt(boolean) -> b
    414:414:boolean shouldShowShortcut() -> c
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:861:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:867:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    720:725:void setIsActionButton(boolean) -> setIsActionButton
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$a:
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> e
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> d
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$a:
    android.view.ActionProvider mInner -> d
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> e
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$b:
    androidx.core.view.ActionProvider$VisibilityListener mListener -> f
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    484:485:void refreshVisibility() -> refreshVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$c:
    android.view.CollapsibleActionView mWrappedView -> a
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> a
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$d:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.MenuItem$OnActionExpandListener mObject -> a
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$e:
    android.view.MenuItem$OnMenuItemClickListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> t:
    android.graphics.Rect mEpicenterBounds -> a
    39:39:void <init>() -> <init>
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    void setAnchorView(android.view.View) -> a
    void setForceShowIcon(boolean) -> a
    void setGravity(int) -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    71:72:void setEpicenterBounds(android.graphics.Rect) -> a
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> a
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> a
    217:217:boolean closeMenuOnSubMenuOpened() -> a
    void setHorizontalOffset(int) -> b
    void setShowTitle(boolean) -> b
    78:78:android.graphics.Rect getEpicenterBounds() -> b
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> b
    void setVerticalOffset(int) -> c
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    int mPopupStyleRes -> e
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
    68:69:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    73:74:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View) -> <init>
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:91:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> a
    263:291:void showPopup(int,int,boolean,boolean) -> a
    298:301:void dismiss() -> dismiss
    139:139:int getGravity() -> getGravity
    345:345:android.widget.ListView getListView() -> getListView
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    149:150:void show(int,int) -> show
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$a:
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> a
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    androidx.core.internal.view.SupportMenu mWrappedObject -> d
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> u:
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> o
    androidx.appcompat.view.menu.MenuBuilder mMenu -> c
    android.content.Context mContext -> b
    int mPopupStyleRes -> h
    int mPopupMaxWidth -> f
    boolean mShowTitle -> u
    int mPopupStyleAttr -> g
    android.view.ViewTreeObserver mTreeObserver -> p
    boolean mWasDismissed -> q
    boolean mHasContentWidth -> r
    android.view.View mAnchorView -> m
    androidx.appcompat.widget.MenuPopupWindow mPopup -> i
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> k
    android.view.View mShownAnchorView -> n
    int ITEM_LAYOUT -> v
    boolean mOverflowOnly -> e
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> j
    int mDropDownGravity -> t
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> l
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> d
    int mContentWidth -> s
    46:46:void <clinit>() -> <clinit>
    117:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    140:141:void setForceShowIcon(boolean) -> a
    145:146:void setGravity(int) -> a
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    325:326:void setAnchorView(android.view.View) -> a
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    350:351:void setHorizontalOffset(int) -> b
    360:361:void setShowTitle(boolean) -> b
    149:154:boolean tryShow() -> c
    355:356:void setVerticalOffset(int) -> c
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    208:209:void show() -> show
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> u$a:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> a
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> u$b:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> a
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> B
    androidx.appcompat.view.menu.MenuItemImpl mItem -> C
    42:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    89:89:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
    60:61:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.view.menu.SubMenuWrapperICS -> v:
    androidx.core.internal.view.SupportSubMenu mSubMenu -> e
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    boolean mEatingTouch -> a
    boolean mEatingHover -> b
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> a
    179:181:void animateToVisibility(int) -> animateToVisibility
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> b
    235:235:boolean canShowOverflowMenu() -> canShowOverflowMenu
    239:242:void dismissPopupMenus() -> dismissPopupMenus
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    224:227:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    231:231:boolean isOverflowReserved() -> isOverflowReserved
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    256:256:int next(int,int,boolean) -> next
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    201:207:void postShowOverflowMenu() -> postShowOverflowMenu
    185:191:void setVisibility(int) -> setVisibility
    158:174:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$1 -> androidx.appcompat.widget.AbsActionBarView$a:
    androidx.appcompat.widget.AbsActionBarView this$0 -> a
    201:201:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    204:205:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:301:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:296:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:288:void onAnimationStart(android.view.View) -> onAnimationStart
    279:281:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> w:
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    android.graphics.drawable.Drawable mBackground -> e
    android.graphics.drawable.Drawable mStackedBackground -> f
    android.graphics.drawable.Drawable mSplitBackground -> g
    boolean mIsStacked -> i
    int mHeight -> j
    android.view.View mActionBarView -> c
    android.view.View mTabContainer -> b
    boolean mIsSplit -> h
    boolean mIsTransitioning -> a
    android.view.View mContextView -> d
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> a
    263:263:boolean isCollapsed(android.view.View) -> b
    168:178:void drawableStateChanged() -> drawableStateChanged
    243:243:android.view.View getTabContainer() -> getTabContainer
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:162:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    int mCloseItemLayout -> m
    int mTitleStyleRes -> j
    int mSubtitleStyleRes -> k
    java.lang.CharSequence mTitle -> c
    boolean mTitleOptional -> l
    java.lang.CharSequence mSubtitle -> d
    android.widget.TextView mSubtitleView -> i
    android.widget.LinearLayout mTitleLayout -> g
    android.widget.TextView mTitleView -> h
    android.view.View mClose -> e
    android.view.View mCustomView -> f
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    134:158:void initTitle() -> a
    40:40:void animateToVisibility(int) -> animateToVisibility
    40:40:boolean canShowOverflowMenu() -> canShowOverflowMenu
    193:197:void closeMode() -> closeMode
    40:40:void dismissPopupMenus() -> dismissPopupMenus
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    215:218:boolean hideOverflowMenu() -> hideOverflowMenu
    161:190:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    40:40:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    223:226:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    40:40:boolean isOverflowReserved() -> isOverflowReserved
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:203:void killMode() -> killMode
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    40:40:void postShowOverflowMenu() -> postShowOverflowMenu
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    207:210:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
    androidx.appcompat.view.ActionMode val$mode -> a
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    int mHideOnContentScrollReference -> l
    boolean mHasNonEmbeddedTabs -> i
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> w
    boolean mAnimatingForFling -> k
    java.lang.Runnable mAddActionBarHideOffset -> z
    int mWindowVisibility -> b
    android.graphics.Rect mContentInsets -> p
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> u
    android.graphics.Rect mBaseContentInsets -> n
    android.widget.OverScroller mFlingEstimator -> v
    boolean mOverlayMode -> h
    android.graphics.Rect mLastInnerInsets -> t
    android.graphics.Rect mLastBaseInnerInsets -> r
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> A
    android.graphics.drawable.Drawable mWindowContentOverlay -> f
    int mLastSystemUiVisibility -> m
    java.lang.Runnable mRemoveActionBarHideOffset -> y
    boolean mHideOnContentScroll -> j
    androidx.appcompat.widget.ContentFrameLayout mContent -> c
    int mActionBarHeight -> a
    android.graphics.Rect mLastBaseContentInsets -> o
    int[] ATTRS -> B
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> x
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> e
    boolean mIgnoreWindowContentOverlay -> g
    android.graphics.Rect mInnerInsets -> s
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> d
    android.graphics.Rect mBaseInnerInsets -> q
    131:131:void <clinit>() -> <clinit>
    139:140:void <init>(android.content.Context) -> <init>
    143:147:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:160:void init(android.content.Context) -> a
    266:284:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> a
    651:653:void addActionBarHideOffset() -> a
    656:658:boolean shouldHideActionBarOnFling(float,float) -> a
    628:633:void haltActionBarHideOffsetAnimations() -> b
    641:643:void postAddActionBarHideOffset() -> c
    732:733:boolean canShowOverflowMenu() -> canShowOverflowMenu
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    636:638:void postRemoveActionBarHideOffset() -> d
    786:788:void dismissPopups() -> dismissPopups
    453:462:void draw(android.graphics.Canvas) -> draw
    584:589:void pullChildren() -> e
    646:648:void removeActionBarHideOffset() -> f
    289:317:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    702:703:boolean hasIcon() -> hasIcon
    708:709:boolean hasLogo() -> hasLogo
    756:757:boolean hideOverflowMenu() -> hideOverflowMenu
    681:693:void initFeature(int) -> initFeature
    613:613:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    195:195:boolean isInOverlayMode() -> isInOverlayMode
    744:745:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    738:739:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    225:228:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:166:void onDetachedFromWindow() -> onDetachedFromWindow
    427:449:void onLayout(boolean,int,int,int,int) -> onLayout
    342:423:void onMeasure(int,int) -> onMeasure
    556:557:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    575:575:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    508:511:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    571:571:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    474:475:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    501:504:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:538:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    486:489:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:531:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:518:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    493:496:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:552:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:253:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:262:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    780:782:void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    774:776:void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    621:625:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:180:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:200:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:610:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:716:void setIcon(int) -> setIcon
    720:722:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:728:void setLogo(int) -> setLogo
    768:770:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    762:764:void setMenuPrepared() -> setMenuPrepared
    183:192:void setOverlayMode(boolean) -> setOverlayMode
    221:221:void setShowingForActionMode(boolean) -> setShowingForActionMode
    698:698:void setUiOptions(int) -> setUiOptions
    663:665:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:671:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    466:466:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    750:751:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:109:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:103:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:118:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:128:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    792:793:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:797:void <init>(int,int) -> <init>
    800:801:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    804:805:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> x:
    boolean mExpandedActionViewsExclusive -> m
    int mMinCellSize -> n
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> q
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> e
    int mMaxItems -> l
    android.util.SparseBooleanArray mActionButtonGroups -> o
    android.graphics.drawable.Drawable mPendingOverflowIcon -> f
    boolean mReserveOverflowSet -> i
    int mWidthLimit -> j
    int mActionItemWidthLimit -> k
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> p
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> r
    boolean mPendingOverflowIconSet -> g
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> t
    boolean mReserveOverflow -> h
    int mOpenSubMenuId -> u
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> s
    87:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> a
    158:159:void setExpandedActionViewsExclusive(boolean) -> a
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> a
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> a
    377:379:boolean dismissPopupMenus() -> a
    590:592:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> a
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> b
    148:150:void setReserveOverflow(boolean) -> b
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> b
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> c
    358:369:boolean hideOverflowMenu() -> c
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> d
    388:392:boolean hideSubMenus() -> d
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> e
    403:403:boolean isOverflowMenuShowPending() -> e
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> f
    399:399:boolean isOverflowMenuShowing() -> f
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    417:547:boolean flagActionItems() -> flagActionItems
    410:410:boolean isOverflowReserved() -> g
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> h
    336:349:boolean showOverflowMenu() -> i
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    552:554:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    565:577:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    558:560:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    581:587:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> x$a:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    738:748:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:756:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> x$b:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
    805:806:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> x$c:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> a
    787:789:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:801:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> x$d:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> c
    633:672:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    692:692:boolean needsDividerAfter() -> needsDividerAfter
    687:687:boolean needsDividerBefore() -> needsDividerBefore
    676:682:boolean performClick() -> performClick
    697:714:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> x$d$a:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> j
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    655:656:boolean onForwardingStarted() -> onForwardingStarted
    664:669:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> x$e:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    720:724:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:734:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> x$f:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
    760:761:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    774:781:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    765:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> x$g:
    int openSubMenuId -> a
    615:615:void <clinit>() -> <clinit>
    598:599:void <init>() -> <init>
    601:603:void <init>(android.os.Parcel) -> <init>
    607:607:int describeContents() -> describeContents
    612:613:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> x$g$a:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    android.content.Context mPopupContext -> q
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> v
    int mGeneratedItemPadding -> z
    int mFormatItemsWidth -> x
    androidx.appcompat.view.menu.MenuBuilder mMenu -> p
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> t
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> u
    int mMinCellSize -> y
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> A
    boolean mFormatItems -> w
    int mPopupTheme -> r
    boolean mReserveOverflow -> s
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> c
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    178:387:void onMeasureExactFormat(int,int) -> e
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:142:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$a:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    boolean expanded -> a
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$b:
    androidx.appcompat.widget.ActionMenuView this$0 -> a
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    boolean mCanReadHistoricalData -> i
    androidx.appcompat.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> g
    boolean mReadShareHistoryCalled -> j
    int mHistoryMaxSize -> h
    boolean mHistoricalRecordsChanged -> k
    java.util.Map sDataModelRegistry -> p
    boolean mReloadActivities -> l
    java.lang.String LOG_TAG -> n
    java.lang.Object sRegistryLock -> o
    android.content.Context mContext -> d
    java.util.List mActivities -> b
    android.content.Intent mIntent -> f
    java.util.List mHistoricalRecords -> c
    java.lang.Object mInstanceLock -> a
    androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> m
    java.lang.String mHistoryFileName -> e
    157:223:void <clinit>() -> <clinit>
    346:354:void <init>(android.content.Context,java.lang.String) -> <init>
    330:337:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> a
    366:373:void setIntent(android.content.Intent) -> a
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> a
    457:488:android.content.Intent chooseActivity(int) -> a
    497:499:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> a
    654:661:void ensureConsistentState() -> a
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> a
    395:398:int getActivityCount() -> b
    410:413:android.content.pm.ResolveInfo getActivity(int) -> b
    512:517:android.content.pm.ResolveInfo getDefaultActivity() -> c
    532:553:void setDefaultActivity(int) -> c
    641:644:int getHistorySize() -> d
    687:699:boolean loadActivitiesIfNeeded() -> e
    566:567:void persistHistoricalDataIfNeeded() -> f
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> g
    710:717:boolean readHistoricalDataIfNeeded() -> h
    964:971:void readHistoricalDataImpl() -> i
    671:677:boolean sortActivitiesIfNeeded() -> j
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo:
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    852:852:int compareTo(java.lang.Object) -> compareTo
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> androidx.appcompat.widget.ActivityChooserModel$a:
    java.util.Map mPackageNameToActivityMap -> a
    921:922:void <init>() -> <init>
    927:960:void sort(android.content.Intent,java.util.List,java.util.List) -> sort
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord:
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.ActivityChooserModel$b:
    androidx.appcompat.widget.ActivityChooserModel this$0 -> a
    1039:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1054:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> d
    android.widget.FrameLayout mDefaultActivityButton -> g
    androidx.core.view.ActionProvider mProvider -> j
    boolean mIsSelectingDefaultActivity -> o
    android.widget.FrameLayout mExpandActivityOverflowButton -> e
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> n
    int mListPopupMaxWidth -> i
    android.database.DataSetObserver mModelDataSetObserver -> k
    boolean mIsAttachedToWindow -> q
    androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> a
    android.widget.ImageView mDefaultActivityButtonImage -> h
    androidx.appcompat.widget.ListPopupWindow mListPopupWindow -> m
    android.widget.ImageView mExpandActivityOverflowButtonImage -> f
    androidx.appcompat.widget.ActivityChooserView$Callbacks mCallbacks -> b
    android.view.View mActivityChooserContent -> c
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> l
    int mDefaultActionButtonContentDescription -> r
    int mInitialActivityCount -> p
    201:202:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    222:297:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    370:371:void showPopupUnchecked(int) -> a
    544:572:void updateAppearance() -> a
    415:422:boolean dismissPopup() -> dismissPopup
    484:484:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    528:536:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    431:431:boolean isShowingPopup() -> isShowingPopup
    436:442:void onAttachedToWindow() -> onAttachedToWindow
    446:459:void onDetachedFromWindow() -> onDetachedFromWindow
    477:481:void onLayout(boolean,int,int,int,int) -> onLayout
    463:473:void onMeasure(int,int) -> onMeasure
    304:309:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    519:520:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    337:339:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    323:324:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    505:506:void setInitialActivityCount(int) -> setInitialActivityCount
    493:494:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    347:348:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    356:357:boolean showPopup() -> showPopup
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$a:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:141:void onChanged() -> onChanged
    144:146:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$b:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:162:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$c:
    255:255:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    258:260:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$d:
    androidx.appcompat.widget.ActivityChooserView this$0 -> j
    262:262:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    265:265:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    270:271:boolean onForwardingStarted() -> onForwardingStarted
    276:277:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$e:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    286:286:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    289:291:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$f:
    androidx.appcompat.widget.ActivityChooserView this$0 -> f
    boolean mShowFooterView -> e
    androidx.appcompat.widget.ActivityChooserModel mDataModel -> a
    int mMaxActivityCount -> b
    boolean mShowDefaultActivity -> c
    boolean mHighlightDefaultActivity -> d
    690:691:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    694:703:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> a
    818:822:void setMaxActivityCount(int) -> a
    829:833:void setShowFooterView(boolean) -> a
    836:836:int getActivityCount() -> a
    849:855:void setShowDefaultActivity(boolean,boolean) -> a
    844:844:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> b
    825:825:android.content.pm.ResolveInfo getDefaultActivity() -> c
    840:840:int getHistorySize() -> d
    858:858:boolean getShowDefaultActivity() -> e
    796:814:int measureContentWidth() -> f
    721:730:int getCount() -> getCount
    735:743:java.lang.Object getItem(int) -> getItem
    751:751:long getItemId(int) -> getItemId
    707:710:int getItemViewType(int) -> getItemViewType
    756:787:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    716:716:int getViewTypeCount() -> getViewTypeCount
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$g:
    androidx.appcompat.widget.ActivityChooserView this$0 -> a
    580:581:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    659:662:void notifyOnDismissListener() -> a
    618:631:void onClick(android.view.View) -> onClick
    652:656:void onDismiss() -> onDismiss
    586:613:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    638:644:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> a
    869:869:void <clinit>() -> <clinit>
    874:878:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    248:260:int resolveMinimumHeight(android.view.View) -> a
    217:236:void forceUniformWidth(int,int) -> b
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> b
    71:206:boolean tryOnMeasure(int,int) -> e
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> y:
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    41:44:void <init>(android.view.View) -> <init>
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> a
    75:81:void onSetBackgroundResource(int) -> a
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    118:135:void applySupportBackgroundTint() -> a
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> a
    173:192:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> a
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> b
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> d
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> e
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:163:void drawableStateChanged() -> drawableStateChanged
    324:331:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:315:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:299:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:347:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:283:int getAutoSizeTextType() -> getAutoSizeTextType
    122:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:177:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:183:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:191:void onLayout(boolean,int,int,int,int) -> onLayout
    206:210:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:247:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:263:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:226:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:96:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:88:void setBackgroundResource(int) -> setBackgroundResource
    371:373:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:363:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:110:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:138:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:171:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:202:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:231:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:174:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:202:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:212:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:220:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    159:162:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:190:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    int[] TINT_ATTRS -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> a
    40:40:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> z:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    52:54:void <init>(android.widget.CompoundButton) -> <init>
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> a
    98:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> a
    109:113:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> a
    130:148:void applyButtonTint() -> a
    151:159:int getCompoundPaddingLeft(int) -> a
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> b
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> c
    120:127:void onSetButtonDrawable() -> d
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> a
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> a
    433:434:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    397:396:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    415:414:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    54:53:void preload() -> preload
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$a:
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    57:126:void <init>() -> <init>
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> a
    152:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> a
    232:240:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    244:249:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> a
    254:285:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    291:296:boolean arrayContains(int[],int) -> a
    381:387:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> b
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> b
    333:376:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> b
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> c
    183:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> d
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:180:void drawableStateChanged() -> drawableStateChanged
    139:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:113:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:105:void setBackgroundResource(int) -> setBackgroundResource
    202:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:127:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:155:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:188:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:214:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> a0:
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> b
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:207:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:235:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mImageTint -> b
    androidx.appcompat.widget.TintInfo mTmpInfo -> c
    45:47:void <init>(android.widget.ImageView) -> <init>
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> a
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> a
    137:158:void applySupportImageTint() -> a
    196:215:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> a
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> b
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> c
    99:106:boolean hasOverlappingRendering() -> d
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> e
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    85:96:void setImageResource(int) -> setImageResource
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> b
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:162:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:190:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:218:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:246:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    55:55:void <clinit>() -> <clinit>
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:133:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:161:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    boolean mOverlapAnchor -> a
    boolean COMPAT_OVERLAP_ANCHOR -> b
    34:34:void <clinit>() -> <clinit>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> a
    90:95:void setSupportOverlapAnchor(boolean) -> a
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> b0:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> a
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> a
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> a
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> a
    145:145:android.graphics.Bitmap getSampleTile() -> b
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> a
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:232:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:213:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:221:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    160:163:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:191:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> a
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:55:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> a
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:54:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> c0:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    42:44:void <init>(android.widget.SeekBar) -> <init>
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> a
    162:182:void drawTickMarks(android.graphics.Canvas) -> a
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> b
    125:142:void applyTickMarkTint() -> c
    151:156:void drawableStateChanged() -> d
    145:148:void jumpDrawablesToCurrentState() -> e
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    int[] ATTRS_ANDROID_SPINNERMODE -> i
    android.content.Context mPopupContext -> b
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> f
    boolean mPopupSet -> e
    int mDropDownWidth -> g
    android.graphics.Rect mTempRect -> h
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> c
    android.widget.SpinnerAdapter mTempAdapter -> d
    78:78:void <clinit>() -> <clinit>
    114:115:void <init>(android.content.Context) -> <init>
    129:130:void <init>(android.content.Context,int) -> <init>
    140:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:175:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:294:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    550:590:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    599:604:void showPopup() -> a
    543:547:void drawableStateChanged() -> drawableStateChanged
    365:368:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:342:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:387:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:323:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:508:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:537:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:416:void onDetachedFromWindow() -> onDetachedFromWindow
    428:437:void onMeasure(int,int) -> onMeasure
    617:643:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:612:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:407:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:481:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:473:void setBackgroundResource(int) -> setBackgroundResource
    349:355:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:335:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:380:void setDropDownWidth(int) -> setDropDownWidth
    306:311:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:316:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:460:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:496:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:525:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$a:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> k
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> j
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:268:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$b:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> a
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:638:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$c:
    androidx.appcompat.app.AlertDialog mPopup -> a
    android.widget.ListAdapter mListAdapter -> b
    java.lang.CharSequence mPrompt -> c
    androidx.appcompat.widget.AppCompatSpinner this$0 -> d
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    874:875:void setPromptText(java.lang.CharSequence) -> a
    879:879:java.lang.CharSequence getHintText() -> a
    884:899:void show(int,int) -> a
    942:943:void setHorizontalOriginalOffset(int) -> a
    856:860:void dismiss() -> dismiss
    927:927:android.graphics.drawable.Drawable getBackground() -> getBackground
    937:937:int getHorizontalOffset() -> getHorizontalOffset
    932:932:int getVerticalOffset() -> getVerticalOffset
    864:864:boolean isShowing() -> isShowing
    903:908:void onClick(android.content.DialogInterface,int) -> onClick
    869:870:void setAdapter(android.widget.ListAdapter) -> setAdapter
    912:913:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    922:923:void setHorizontalOffset(int) -> setHorizontalOffset
    917:918:void setVerticalOffset(int) -> setVerticalOffset
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$d:
    android.widget.SpinnerAdapter mAdapter -> a
    android.widget.ListAdapter mListAdapter -> b
    693:715:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:772:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:739:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    792:792:int getItemViewType(int) -> getItemViewType
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    797:797:int getViewTypeCount() -> getViewTypeCount
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:786:boolean isEnabled(int) -> isEnabled
    750:753:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:760:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$e:
    int mOriginalHorizontalOffset -> M
    androidx.appcompat.widget.AppCompatSpinner this$0 -> N
    android.graphics.Rect mVisibleRect -> L
    android.widget.ListAdapter mAdapter -> K
    java.lang.CharSequence mHintText -> J
    958:976:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> a
    986:986:java.lang.CharSequence getHintText() -> a
    992:993:void setPromptText(java.lang.CharSequence) -> a
    1035:1086:void show(int,int) -> a
    1092:1092:boolean isVisibleToUser(android.view.View) -> a
    1097:1098:void setHorizontalOriginalOffset(int) -> a
    996:1031:void computeContentWidth() -> d
    1102:1102:int getHorizontalOriginalOffset() -> e
    980:982:void setAdapter(android.widget.ListAdapter) -> setAdapter
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$e$a:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> a
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:974:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$e$b:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> a
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1073:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$e$c:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> a
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1083:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$f:
    boolean mShowDropdown -> a
    663:663:void <clinit>() -> <clinit>
    649:650:void <init>(android.os.Parcelable) -> <init>
    653:655:void <init>(android.os.Parcel) -> <init>
    659:661:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$f$a:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> androidx.appcompat.widget.AppCompatSpinner$g:
    java.lang.CharSequence getHintText() -> a
    void setHorizontalOriginalOffset(int) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show(int,int) -> a
androidx.appcompat.widget.AppCompatTextClassifierHelper -> d0:
    android.widget.TextView mTextView -> a
    android.view.textclassifier.TextClassifier mTextClassifier -> b
    42:44:void <init>(android.widget.TextView) -> <init>
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> a
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> a
androidx.appcompat.widget.AppCompatTextHelper -> e0:
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
    boolean mAsyncFontPending -> m
    int mStyle -> j
    int mFontWeight -> k
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
    android.graphics.Typeface mFontTypeface -> l
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
    74:77:void <init>(android.widget.TextView) -> <init>
    81:331:void loadFromAttributes(android.util.AttributeSet,int) -> a
    337:341:void setTypefaceByCallback(android.graphics.Typeface) -> a
    347:348:void runOnUiThread(java.lang.Runnable) -> a
    407:461:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> a
    485:525:void onSetTextAppearance(android.content.Context,int) -> a
    528:529:void setAllCaps(boolean) -> a
    536:551:void applyCompoundDrawablesTints() -> a
    554:557:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> a
    561:568:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> a
    582:587:void setTextSize(int,float) -> a
    606:607:void setAutoSizeTextTypeWithDefaults(int) -> a
    614:616:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    620:621:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    650:656:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> a
    664:670:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> a
    685:717:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    592:593:void autoSizeText() -> b
    602:603:void setTextSizeInternal(int,float) -> b
    637:637:int getAutoSizeMaxTextSize() -> c
    633:633:int getAutoSizeMinTextSize() -> d
    629:629:int getAutoSizeStepGranularity() -> e
    641:641:int[] getAutoSizeTextAvailableSizes() -> f
    625:625:int getAutoSizeTextType() -> g
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> h
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> i
    598:598:boolean isAutoSizeEnabled() -> j
    574:577:void onLayout(boolean,int,int,int,int) -> k
    532:533:void onSetCompoundDrawables() -> l
    673:679:void setCompoundTints() -> m
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> e0$a:
    java.lang.ref.WeakReference mParent -> a
    int mFontWeight -> b
    int mStyle -> c
    379:383:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    403:403:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    387:398:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> e0$a$a:
    android.graphics.Typeface mTypeface -> b
    java.lang.ref.WeakReference mParent -> a
    359:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:371:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> a
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    java.util.concurrent.Future mPrecomputedTextFuture -> d
    91:92:void <init>(android.content.Context) -> <init>
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:491:void consumeTextFutureAndSetBlocking() -> a
    193:200:void drawableStateChanged() -> drawableStateChanged
    365:372:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:353:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:334:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:391:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:315:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:151:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:179:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:524:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:208:void onLayout(boolean,int,int,int,int) -> onLayout
    550:552:void onMeasure(int,int) -> onMeasure
    223:227:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:272:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:292:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:247:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:125:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:117:void setBackgroundResource(int) -> setBackgroundResource
    557:561:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:571:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:603:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:618:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:580:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:593:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    441:443:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:407:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:418:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:433:void setLineHeight(int) -> setLineHeight
    478:479:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:139:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:167:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:659:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:699:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:189:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:507:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:546:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:466:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:219:void setTextSize(int,float) -> setTextSize
    703:709:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> f0:
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeStepGranularityInPx -> c
    android.content.Context mContext -> j
    android.graphics.RectF TEMP_RECTF -> k
    int mAutoSizeTextType -> a
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    android.widget.TextView mTextView -> i
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> m
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    boolean mNeedsAutoSizeText -> b
    android.text.TextPaint mTempTextPaint -> h
    63:76:void <clinit>() -> <clinit>
    105:108:void <init>(android.widget.TextView) -> <init>
    111:186:void loadFromAttributes(android.util.AttributeSet,int) -> a
    271:287:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> a
    314:344:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> a
    427:437:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> a
    453:477:int[] cleanupAutoSizePresetSizes(int[]) -> a
    491:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> a
    546:582:void autoSizeText() -> a
    596:601:void setTextSizeInternal(int,float) -> a
    604:635:void setRawTextSize(float) -> a
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> a
    667:674:void initTempTextPaint(int) -> a
    679:682:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> a
    689:717:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> a
    754:760:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> a
    788:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> a
    826:839:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> a
    204:234:void setAutoSizeTextTypeWithDefaults(int) -> b
    585:591:void clearAutoSizeConfiguration() -> b
    724:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> b
    410:410:int getAutoSizeMaxTextSize() -> c
    394:394:int getAutoSizeMinTextSize() -> d
    378:378:int getAutoSizeStepGranularity() -> e
    423:423:int[] getAutoSizeTextAvailableSizes() -> f
    364:364:int getAutoSizeTextType() -> g
    870:870:boolean isAutoSizeEnabled() -> h
    516:536:boolean setupAutoSizeText() -> i
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> j
    879:879:boolean supportsAutoSizeText() -> k
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> a
    38:39:void <init>(android.content.Context) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    boolean mAllowStacking -> a
    int mLastWidthSize -> b
    int mMinimumHeight -> c
    51:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    144:149:int getNextVisibleChildIndex(int) -> a
    175:175:boolean isStacked() -> a
    154:154:int getMinimumHeight() -> getMinimumHeight
    72:141:void onMeasure(int,int) -> onMeasure
    61:68:void setAllowStacking(boolean) -> setAllowStacking
    158:172:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMinor -> d
    android.util.TypedValue mFixedWidthMajor -> c
    android.util.TypedValue mMinWidthMinor -> b
    android.util.TypedValue mMinWidthMajor -> a
    android.graphics.Rect mDecorPadding -> g
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> h
    android.util.TypedValue mFixedHeightMinor -> f
    android.util.TypedValue mFixedHeightMajor -> e
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:49:void <init>(android.content.Context) -> <init>
    53:80:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    int[] EMPTY_STATE_SET -> b
    int[] CHECKED_STATE_SET -> a
    java.lang.Class sInsetsClazz -> c
    45:64:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    131:135:void fixDrawable(android.graphics.drawable.Drawable) -> a
    184:194:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> b
    142:176:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    200:201:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> g0:
    boolean mListSelectionHidden -> i
    boolean mHijackFocus -> j
    boolean mDrawsInPressedState -> k
    androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation -> l
    int mMotionPosition -> f
    int mSelectionRightPadding -> d
    int mSelectionBottomPadding -> e
    int mSelectionLeftPadding -> b
    int mSelectionTopPadding -> c
    android.graphics.Rect mSelectorRect -> a
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> n
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> m
    java.lang.reflect.Field mIsChildViewEnabled -> g
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> h
    118:128:void <init>(android.content.Context,boolean) -> <init>
    542:544:void clickPressedItem(android.view.View,int) -> a
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> a
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> a
    604:626:void positionSelectorCompat(int,android.view.View) -> a
    629:643:void clearPressedItem() -> a
    646:690:void setPressedItem(android.view.View,int,float,float) -> a
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> b
    693:693:boolean touchModeDrawsInPressedStateCompat() -> b
    558:562:void updateSelectorStateCompat() -> c
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    229:231:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> g0$a:
    boolean mEnabled -> b
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    387:388:void setEnabled(boolean) -> a
    400:403:void draw(android.graphics.Canvas) -> draw
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> g0$b:
    androidx.appcompat.widget.DropDownListView this$0 -> a
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> a
    716:717:void post() -> b
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> a
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    java.lang.Runnable mDisallowIntercept -> e
    int[] mTmpLocation -> i
    int mActivePointerId -> h
    java.lang.Runnable mTriggerLongPress -> f
    boolean mForwarding -> g
    float mScaledTouchSlop -> a
    int mTapTimeout -> b
    int mLongPressTimeout -> c
    android.view.View mSrc -> d
    68:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> a
    259:262:boolean onTouchForwarded(android.view.MotionEvent) -> a
    288:288:boolean pointInView(android.view.View,float,float,float) -> a
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> a
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> b
    226:232:void onLongPress() -> b
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> b
    139:143:boolean onForwardingStarted() -> onForwardingStarted
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$a:
    androidx.appcompat.widget.ForwardingListener this$0 -> a
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$b:
    androidx.appcompat.widget.ForwardingListener this$0 -> a
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    int mShowDividers -> n
    int mDividerPadding -> o
    int mDividerWidth -> l
    int mDividerHeight -> m
    float mWeightSum -> g
    int mTotalLength -> f
    int mOrientation -> d
    int mGravity -> e
    int mBaselineAlignedChildIndex -> b
    int mBaselineChildTop -> c
    int[] mMaxAscent -> i
    android.graphics.drawable.Drawable mDivider -> k
    boolean mUseLargestChild -> h
    boolean mBaselineAligned -> a
    int[] mMaxDescent -> j
    149:150:void <init>(android.content.Context) -> <init>
    153:154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:189:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    326:364:void drawDividersHorizontal(android.graphics.Canvas) -> a
    367:370:void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    509:509:android.view.View getVirtualChildAt(int) -> a
    1321:1340:void forceUniformHeight(int,int) -> a
    1351:1351:int getChildrenSkipCount(android.view.View,int) -> a
    1381:1383:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    1525:1646:void layoutHorizontal(int,int,int,int) -> a
    299:323:void drawDividersVertical(android.graphics.Canvas) -> b
    373:376:void drawVerticalDivider(android.graphics.Canvas,int) -> b
    899:918:void forceUniformWidth(int,int) -> b
    1393:1393:int getLocationOffset(android.view.View) -> b
    1430:1510:void layoutVertical(int,int,int,int) -> b
    1649:1650:void setChildFrame(android.view.View,int,int,int,int) -> b
    932:1315:void measureHorizontal(int,int) -> c
    1405:1405:int getNextLocationOffset(android.view.View) -> c
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    599:895:void measureVertical(int,int) -> d
    1362:1362:int measureNullChild(int) -> d
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1743:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    570:584:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    385:385:boolean isBaselineAligned() -> isBaselineAligned
    408:408:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    287:296:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1762:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1768:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1415:void onLayout(boolean,int,int,int,int) -> onLayout
    554:559:void onMeasure(int,int) -> onMeasure
    396:397:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    236:249:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:262:void setDividerPadding(int) -> setDividerPadding
    1683:1695:void setGravity(int) -> setGravity
    1708:1713:void setHorizontalGravity(int) -> setHorizontalGravity
    422:423:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1662:void setOrientation(int) -> setOrientation
    199:203:void setShowDividers(int) -> setShowDividers
    1716:1721:void setVerticalGravity(int) -> setVerticalGravity
    549:550:void setWeightSum(float) -> setWeightSum
    207:207:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1793:1801:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1809:void <init>(int,int) -> <init>
    1822:1824:void <init>(int,int,float) -> <init>
    1830:1831:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1837:1838:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1847:1851:void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    android.content.Context mContext -> a
    boolean mDropDownAlwaysVisible -> m
    int mDropDownGravity -> l
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> y
    java.lang.reflect.Method sSetClipToWindowEnabledMethod -> G
    boolean mDropDownVerticalOffsetSet -> i
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> v
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> w
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> I
    int mDropDownWindowLayoutType -> h
    boolean mOverlapAnchorSet -> k
    int mDropDownHorizontalOffset -> f
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> z
    android.view.View mPromptView -> p
    int mDropDownHeight -> d
    android.graphics.Rect mEpicenterBounds -> D
    android.graphics.drawable.Drawable mDropDownListHighlight -> t
    android.os.Handler mHandler -> B
    android.widget.ListAdapter mAdapter -> b
    boolean mModal -> E
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> x
    int mPromptPosition -> q
    boolean mForceIgnoreOutsideTouch -> n
    int mListItemExpandMaximum -> o
    androidx.appcompat.widget.DropDownListView mDropDownList -> c
    java.lang.reflect.Method sGetMaxAvailableHeightMethod -> H
    boolean mOverlapAnchor -> j
    int mDropDownVerticalOffset -> g
    android.view.View mDropDownAnchorView -> s
    int mDropDownWidth -> e
    java.lang.Runnable mShowDropDownRunnable -> A
    android.graphics.Rect mTempRect -> C
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> u
    android.database.DataSetObserver mObserver -> r
    android.widget.PopupWindow mPopup -> F
    84:109:void <clinit>() -> <clinit>
    225:226:void <init>(android.content.Context) -> <init>
    236:237:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:250:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    1432:1443:void setPopupClipToScreenEnabled(boolean) -> a
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> a
    1157:1298:int buildDropDown() -> b
    1428:1428:boolean isConfirmKey(int) -> b
    790:797:void removePromptView() -> c
    847:854:void clearListSelection() -> clearListSelection
    1141:1141:android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    773:778:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    452:452:int getAnimationStyle() -> getAnimationStyle
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    529:529:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    579:579:int getHeight() -> getHeight
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    821:821:int getInputMethodMode() -> getInputMethodMode
    947:947:android.widget.ListView getListView() -> getListView
    323:323:int getPromptPosition() -> getPromptPosition
    896:899:java.lang.Object getSelectedItem() -> getSelectedItem
    922:925:long getSelectedItemId() -> getSelectedItemId
    909:912:int getSelectedItemPosition() -> getSelectedItemPosition
    935:938:android.view.View getSelectedView() -> getSelectedView
    408:408:int getSoftInputMode() -> getSoftInputMode
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    384:384:boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    977:1057:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1096:1117:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1072:1081:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    880:889:boolean performItemClick(int) -> performItemClick
    655:656:void postShow() -> postShow
    288:301:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:472:void setAnchorView(android.view.View) -> setAnchorView
    442:443:void setAnimationStyle(int) -> setAnimationStyle
    433:434:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:573:void setContentWidth(int) -> setContentWidth
    374:375:void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    539:540:void setDropDownGravity(int) -> setDropDownGravity
    518:519:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    358:359:void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    591:597:void setHeight(int) -> setHeight
    487:488:void setHorizontalOffset(int) -> setHorizontalOffset
    812:813:void setInputMethodMode(int) -> setInputMethodMode
    417:418:void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    336:338:void setModal(boolean) -> setModal
    786:787:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:621:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    631:632:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1339:1341:void setOverlapAnchor(boolean) -> setOverlapAnchor
    313:314:void setPromptPosition(int) -> setPromptPosition
    641:649:void setPromptView(android.view.View) -> setPromptView
    831:840:void setSelection(int) -> setSelection
    398:399:void setSoftInputMode(int) -> setSoftInputMode
    506:508:void setVerticalOffset(int) -> setVerticalOffset
    556:557:void setWidth(int) -> setWidth
    609:610:void setWindowLayoutType(int) -> setWindowLayoutType
    664:766:void show() -> show
androidx.appcompat.widget.ListPopupWindow$1 -> androidx.appcompat.widget.ListPopupWindow$a:
    androidx.appcompat.widget.ListPopupWindow this$0 -> j
    1141:1141:void <init>(androidx.appcompat.widget.ListPopupWindow,android.view.View) -> <init>
    1141:1141:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    1144:1144:androidx.appcompat.widget.ListPopupWindow getPopup() -> getPopup
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$b:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$c:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1199:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1203:1203:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$d:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1362:1363:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1368:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$e:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1344:1345:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1353:void onChanged() -> onChanged
    1357:1358:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$f:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1408:1409:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1415:1415:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1419:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$g:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1387:1388:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$h:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1372:1373:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1383:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    java.lang.reflect.Method sSetTouchModalMethod -> K
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> J
    60:67:void <clinit>() -> <clinit>
    72:73:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:79:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    119:122:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    127:130:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    83:86:void setEnterTransition(java.lang.Object) -> setEnterTransition
    89:92:void setExitTransition(java.lang.Object) -> setExitTransition
    95:96:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    103:114:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    int mAdvanceKey -> o
    android.view.MenuItem mHoveredMenuItem -> r
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> q
    int mRetreatKey -> p
    144:156:void <init>(android.content.Context,boolean) -> <init>
    163:164:void clearSelection() -> clearSelection
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    135:135:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:160:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> androidx.appcompat.widget.PopupMenu:
    android.content.Context mContext -> a
    androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener mMenuItemClickListener -> e
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.view.menu.MenuPopupHelper mPopup -> d
    android.view.View mAnchor -> c
    android.view.View$OnTouchListener mDragListener -> g
    androidx.appcompat.widget.PopupMenu$OnDismissListener mOnDismissListener -> f
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    247:248:void dismiss() -> dismiss
    174:196:android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    153:153:int getGravity() -> getGravity
    209:209:android.view.Menu getMenu() -> getMenu
    219:219:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    229:230:void inflate(int) -> inflate
    145:146:void setGravity(int) -> setGravity
    266:267:void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
    257:258:void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    238:239:void show() -> show
androidx.appcompat.widget.PopupMenu$1 -> androidx.appcompat.widget.PopupMenu$a:
    androidx.appcompat.widget.PopupMenu this$0 -> a
    109:109:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.PopupMenu$2 -> androidx.appcompat.widget.PopupMenu$b:
    androidx.appcompat.widget.PopupMenu this$0 -> a
    125:125:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> androidx.appcompat.widget.PopupMenu$c:
    androidx.appcompat.widget.PopupMenu this$0 -> j
    175:175:void <init>(androidx.appcompat.widget.PopupMenu,android.view.View) -> <init>
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    178:179:boolean onForwardingStarted() -> onForwardingStarted
    184:185:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
    boolean mHasCheckedVectorDrawableSetup -> f
    java.util.WeakHashMap mDrawableCaches -> d
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.ArrayMap mDelegates -> b
    android.util.TypedValue mTypedValue -> e
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    105:110:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> a
    137:136:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    167:167:long createCacheKey(android.util.TypedValue) -> a
    172:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> a
    200:225:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> a
    315:314:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> a
    336:335:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> a
    351:350:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> a
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> a
    367:371:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> a
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> a
    417:426:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> a
    451:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    475:476:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> a
    497:507:void checkVectorDrawableSetup(android.content.Context) -> a
    513:513:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> a
    394:393:android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    408:412:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> c
    229:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> d
    94:93:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    485:484:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    159:158:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    128:127:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$a:
    552:552:void <init>() -> <init>
    557:561:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$b:
    535:536:void <init>() -> <init>
    542:546:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$c:
    431:432:void <init>(int) -> <init>
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> a
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> a
    443:446:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> b
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$d:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> androidx.appcompat.widget.ResourceManagerInternal$e:
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$f:
    518:519:void <init>() -> <init>
    525:529:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourcesWrapper -> h0:
    android.content.res.Resources mResources -> a
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> i0:
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> a
    68:71:void setAbsolute(int,int) -> a
    74:90:void setDirection(boolean) -> a
    39:39:int getLeft() -> b
    55:65:void setRelative(int,int) -> b
    43:43:int getRight() -> c
    47:47:int getStart() -> d
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    int mContentHeight -> h
    int mSelectedTabIndex -> i
    boolean mAllowCollapse -> e
    int mMaxTabWidth -> f
    androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> b
    int mStackedTabMaxWidth -> g
    android.widget.Spinner mTabSpinner -> d
    java.lang.Runnable mTabSelector -> a
    androidx.appcompat.widget.LinearLayoutCompat mTabLayout -> c
    android.view.animation.Interpolator sAlphaInterpolator -> j
    77:77:void <clinit>() -> <clinit>
    82:93:void <init>(android.content.Context) -> <init>
    214:220:android.widget.Spinner createSpinner() -> a
    293:306:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    310:322:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    325:337:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    260:273:void animateToTab(int) -> animateToTab
    235:257:void animateToVisibility(int) -> animateToVisibility
    204:210:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> b
    146:146:boolean isCollapsed() -> c
    154:170:void performCollapse() -> d
    173:179:boolean performExpand() -> e
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    360:367:void removeAllTabs() -> removeAllTabs
    350:357:void removeTabAt(int) -> removeTabAt
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
    340:347:void updateTab(int) -> updateTab
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$a:
    android.view.View val$tabView -> a
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$b:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> a
    526:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    541:541:long getItemId(int) -> getItemId
    546:551:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$c:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> a
    556:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:568:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$d:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> f
    android.widget.TextView mTextView -> c
    int[] BG_ATTRS -> a
    androidx.appcompat.app.ActionBar$Tab mTab -> b
    android.widget.ImageView mIconView -> d
    android.view.View mCustomView -> e
    394:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> a
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> a
    453:518:void update() -> b
    428:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:450:void onMeasure(int,int) -> onMeasure
    419:424:void setSelected(boolean) -> setSelected
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> c
    571:572:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    598:599:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:594:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    584:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    577:579:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    boolean mExpandedInActionView -> d0
    android.view.View mDropDownAnchor -> x
    boolean mIconifiedByDefault -> P
    int mSuggestionCommitIconResId -> G
    java.lang.CharSequence mOldQueryText -> b0
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> y
    android.content.Intent mVoiceWebSearchIntent -> H
    android.os.Bundle mAppSearchData -> g0
    java.lang.Runnable mReleaseCursorRunnable -> i0
    java.lang.CharSequence mQueryHint -> T
    java.util.WeakHashMap mOutsideDrawablesCache -> j0
    androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> N
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> n0
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> R
    android.widget.ImageView mVoiceButton -> w
    android.view.View$OnKeyListener mTextKeyListener -> l0
    boolean mQueryRefinement -> U
    android.view.View mSubmitArea -> s
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> M
    boolean mIconified -> Q
    java.lang.CharSequence mDefaultQueryHint -> J
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> o0
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> m0
    androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> K
    android.widget.ImageView mCloseButton -> v
    boolean mVoiceButtonEnabled -> a0
    android.graphics.Rect mSearchSrcTextViewBounds -> z
    boolean mClearingFocus -> V
    android.view.View mSearchPlate -> r
    android.widget.ImageView mCollapsedIcon -> D
    java.lang.CharSequence mUserQuery -> c0
    android.view.View$OnClickListener mOnClickListener -> k0
    java.lang.Runnable mUpdateDrawableStateRunnable -> h0
    int[] mTemp2 -> C
    android.view.View$OnClickListener mOnSearchClickListener -> O
    android.widget.ImageView mGoButton -> u
    androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener -> L
    android.graphics.drawable.Drawable mSearchHintIcon -> E
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> p
    int mCollapsedImeOptions -> e0
    android.view.View mSearchEditFrame -> q
    int mSuggestionRowLayout -> F
    android.app.SearchableInfo mSearchable -> f0
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> A
    boolean mSubmitButtonEnabled -> S
    int[] mTemp -> B
    androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> q0
    int mMaxWidth -> W
    android.widget.ImageView mSearchButton -> t
    android.content.Intent mVoiceAppSearchIntent -> I
    android.text.TextWatcher mTextWatcher -> p0
    176:176:void <clinit>() -> <clinit>
    267:268:void <init>(android.content.Context) -> <init>
    271:272:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    275:387:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    851:856:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> a
    914:920:void updateSubmitButton(boolean) -> a
    1043:1082:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> a
    1088:1089:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> a
    1477:1487:boolean launchSuggestion(int,int,java.lang.String) -> a
    1494:1504:void launchIntent(android.content.Intent) -> a
    1516:1519:void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    1537:1560:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    1582:1637:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    1656:1692:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> a
    1706:1706:boolean isLandscapeMode(android.content.Context) -> a
    869:890:void updateViewsVisibility(boolean) -> b
    973:974:void onQueryRefine(java.lang.CharSequence) -> b
    1388:1393:boolean onItemClicked(int,int,java.lang.String) -> b
    1567:1571:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> b
    1153:1159:void updateVoiceButton(boolean) -> c
    1174:1185:void onTextChanged(java.lang.CharSequence) -> c
    1399:1402:boolean onItemSelected(int) -> c
    497:502:void clearFocus() -> clearFocus
    1444:1464:void rewriteQueryFromSuggestion(int) -> d
    1364:1385:void adjustDropDownSizeAndPosition() -> e
    1202:1203:void dismissSuggestions() -> f
    1697:1703:void forceSuggestionQuery() -> g
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:864:int getPreferredHeight() -> getPreferredHeight
    859:859:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:626:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:906:boolean hasVoiceSearch() -> h
    910:910:boolean isSubmitAreaEnabled() -> i
    655:655:boolean isIconfiedByDefault() -> isIconfiedByDefault
    683:683:boolean isIconified() -> isIconified
    735:735:boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    705:705:boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    1206:1223:void onCloseClicked() -> j
    1226:1232:void onSearchClicked() -> k
    1188:1199:void onSubmitQuery() -> l
    1258:1265:void onTextFocusChanged() -> m
    1236:1255:void onVoiceClicked() -> n
    945:946:void postUpdateFocusedState() -> o
    1279:1284:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1298:void onActionViewExpanded() -> onActionViewExpanded
    964:967:void onDetachedFromWindow() -> onDetachedFromWindow
    832:848:void onLayout(boolean,int,int,int,int) -> onLayout
    783:828:void onMeasure(int,int) -> onMeasure
    1353:1361:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1348:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1269:1272:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    933:942:void updateCloseButton() -> p
    949:960:void updateFocusedState() -> q
    1102:1104:void updateQueryHint() -> r
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1110:1144:void updateSearchAutoComplete() -> s
    429:430:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    669:674:void setIconified(boolean) -> setIconified
    642:646:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:442:void setImeOptions(int) -> setImeOptions
    464:465:void setInputType(int) -> setInputType
    764:767:void setMaxWidth(int) -> setMaxWidth
    520:521:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:530:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:512:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:551:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:539:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:581:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1513:void setQuery(java.lang.CharSequence) -> setQuery
    594:596:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:728:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:420:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:697:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:748:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    923:930:void updateSubmitArea() -> t
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
    androidx.appcompat.widget.SearchView this$0 -> a
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:182:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
    androidx.appcompat.widget.SearchView this$0 -> a
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1725:1725:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1715:1715:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1720:1721:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
    androidx.appcompat.widget.SearchView this$0 -> a
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:191:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
    androidx.appcompat.widget.SearchView this$0 -> a
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:337:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
    androidx.appcompat.widget.SearchView this$0 -> a
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:381:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
    androidx.appcompat.widget.SearchView this$0 -> a
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:990:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
    androidx.appcompat.widget.SearchView this$0 -> a
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1032:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
    androidx.appcompat.widget.SearchView this$0 -> a
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1169:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
    androidx.appcompat.widget.SearchView this$0 -> a
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1416:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
    androidx.appcompat.widget.SearchView this$0 -> a
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1428:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1437:1437:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$k:
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
    2029:2051:void <init>() -> <init>
    2063:2069:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> a
    2072:2078:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> a
    2054:2060:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> b
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$l:
    boolean isIconified -> b
    1325:1325:void <clinit>() -> <clinit>
    1304:1305:void <init>(android.os.Parcelable) -> <init>
    1308:1310:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1320:java.lang.String toString() -> toString
    1314:1316:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$l$a:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> g
    boolean mHasPendingShowSoftInputRequest -> f
    int mThreshold -> d
    androidx.appcompat.widget.SearchView mSearchView -> e
    1842:1843:void <init>(android.content.Context) -> <init>
    1846:1847:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1852:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1876:1876:boolean isEmpty() -> a
    1992:1998:void showSoftInputIfNecessary() -> b
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1972:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1983:1988:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1860:void onFinishInflate() -> onFinishInflate
    1921:1923:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1936:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1917:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1895:1895:void performCompletion() -> performCompletion
    1885:1885:void replaceText(java.lang.CharSequence) -> replaceText
    2001:2022:void setImeVisibility(boolean) -> setImeVisibility
    1863:1864:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1870:void setThreshold(int) -> setThreshold
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> a
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1838:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$m:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    1760:1767:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1770:1774:void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
    1778:1819:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
androidx.appcompat.widget.ShareActionProvider -> androidx.appcompat.widget.ShareActionProvider:
    java.lang.String mShareHistoryFileName -> g
    androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> h
    int mMaxShownActivityCount -> d
    androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> e
    android.content.Context mContext -> f
    androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> i
    197:199:void <init>(android.content.Context) -> <init>
    383:391:void setActivityChooserPolicyIfNeeded() -> a
    411:419:void updateIntent(android.content.Intent) -> a
    249:249:boolean hasSubMenu() -> hasSubMenu
    222:241:android.view.View onCreateActionView() -> onCreateActionView
    258:286:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    212:214:void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    321:323:void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    342:351:void setShareIntent(android.content.Intent) -> setShareIntent
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> androidx.appcompat.widget.ShareActionProvider$a:
    androidx.appcompat.widget.ShareActionProvider this$0 -> a
    397:398:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    402:406:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> androidx.appcompat.widget.ShareActionProvider$b:
    androidx.appcompat.widget.ShareActionProvider this$0 -> a
    357:358:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    362:374:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> j0:
    int mText2UrlCol -> n
    android.app.SearchableInfo mSearchable -> e
    int mIconName1Col -> o
    int mText1Col -> l
    int mText2Col -> m
    boolean mClosed -> i
    int mQueryRefinement -> j
    int mCommitIconResId -> h
    java.util.WeakHashMap mOutsideDrawablesCache -> g
    androidx.appcompat.widget.SearchView mSearchView -> d
    android.content.Context mProviderContext -> f
    android.content.res.ColorStateList mUrlColor -> k
    int mIconName2Col -> p
    int mFlagsCol -> q
    96:107:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    119:120:void setQueryRefinement(int) -> a
    337:348:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> a
    353:360:void setViewText(android.widget.TextView,java.lang.CharSequence) -> a
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> a
    389:404:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    551:577:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> a
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> a
    593:596:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> a
    648:654:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> a
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    682:691:java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    738:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> b
    508:509:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> b
    626:637:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> b
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> b
    276:326:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    196:209:void updateSpinnerState(android.database.Cursor) -> c
    218:238:void changeCursor(android.database.Cursor) -> changeCursor
    416:439:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    474:484:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    451:461:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    136:136:boolean hasStableIds() -> hasStableIds
    245:251:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    182:185:void notifyDataSetChanged() -> notifyDataSetChanged
    190:193:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:334:void onClick(android.view.View) -> onClick
    147:155:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> j0$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
    265:271:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    int mSwitchMinWidth -> l
    boolean mHasTrackTint -> i
    int mSwitchBottom -> E
    boolean mShowText -> q
    android.animation.ObjectAnimator mPositionAnimator -> K
    int mSwitchTop -> C
    android.graphics.drawable.Drawable mThumbDrawable -> a
    int mThumbWidth -> A
    android.text.method.TransformationMethod mSwitchTransformationMethod -> J
    android.graphics.Rect mTempRect -> M
    java.lang.CharSequence mTextOn -> o
    float mTouchY -> u
    int mSwitchWidth -> y
    int[] CHECKED_STATE_SET -> O
    android.content.res.ColorStateList mTrackTintList -> g
    int mMinFlingVelocity -> w
    android.view.VelocityTracker mVelocityTracker -> v
    android.text.Layout mOffLayout -> I
    int mTouchSlop -> s
    boolean mHasThumbTint -> d
    boolean mSplitTrack -> n
    android.graphics.drawable.Drawable mTrackDrawable -> f
    int mSwitchPadding -> m
    boolean mHasTrackTintMode -> j
    int mThumbTextPadding -> k
    int mSwitchRight -> D
    android.graphics.PorterDuff$Mode mThumbTintMode -> c
    int mSwitchLeft -> B
    android.text.TextPaint mTextPaint -> F
    android.content.res.ColorStateList mThumbTintList -> b
    java.lang.CharSequence mTextOff -> p
    float mThumbPosition -> x
    int mSwitchHeight -> z
    android.graphics.PorterDuff$Mode mTrackTintMode -> h
    boolean mHasThumbTintMode -> e
    float mTouchX -> t
    android.util.Property THUMB_POS -> N
    android.content.res.ColorStateList mTextColors -> G
    int mTouchMode -> r
    android.text.Layout mOnLayout -> H
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> L
    101:184:void <clinit>() -> <clinit>
    194:195:void <init>(android.content.Context) -> <init>
    205:206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    343:359:void setSwitchTypefaceByIndex(int,int) -> a
    698:715:void applyThumbTint() -> a
    878:882:android.text.Layout makeLayout(java.lang.CharSequence) -> a
    892:905:boolean hitThumb(float,float) -> a
    988:992:void cancelSuperTouch(android.view.MotionEvent) -> a
    1028:1035:void animateThumbToCheckedState(boolean) -> a
    1430:1430:float constrain(float,float,float) -> a
    575:592:void applyTrackTint() -> b
    1000:1025:void stopDrag(android.view.MotionEvent) -> b
    1038:1041:void cancelPositionAnimator() -> c
    1137:1198:void draw(android.graphics.Canvas) -> draw
    1357:1368:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1353:void drawableStateChanged() -> drawableStateChanged
    1267:1274:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1286:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1320:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    1377:1391:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    1326:1330:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1263:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1414:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1133:void onLayout(boolean,int,int,int,int) -> onLayout
    801:865:void onMeasure(int,int) -> onMeasure
    869:875:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1077:void setChecked(boolean) -> setChecked
    1422:1424:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:789:void setShowText(boolean) -> setShowText
    727:729:void setSplitTrack(boolean) -> setSplitTrack
    437:439:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:415:void setSwitchPadding(int) -> setSwitchPadding
    304:340:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    368:386:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:403:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    774:776:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:757:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:611:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1055:void setThumbPosition(float) -> setThumbPosition
    622:623:void setThumbResource(int) -> setThumbResource
    461:463:void setThumbTextPadding(int) -> setThumbTextPadding
    652:656:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:684:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:492:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:503:void setTrackResource(int) -> setTrackResource
    530:534:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:561:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1059:1060:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$a:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> a
    110:111:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> a
    102:102:java.lang.Object get(java.lang.Object) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
androidx.appcompat.widget.ThemeUtils -> k0:
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> a
    100:105:android.util.TypedValue getTypedValue() -> a
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> a
    63:69:int getThemeAttrColor(android.content.Context,int) -> b
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> c
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper -> androidx.appcompat.widget.ThemedSpinnerAdapter$Helper:
    android.content.Context mContext -> a
    android.view.LayoutInflater mInflater -> b
    android.view.LayoutInflater mDropDownInflater -> c
    111:114:void <init>(android.content.Context) -> <init>
    152:152:android.view.LayoutInflater getDropDownViewInflater() -> getDropDownViewInflater
    140:140:android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
    124:132:void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    android.content.res.Resources$Theme mTheme -> b
    java.lang.Object CACHE_LOCK -> c
    java.util.ArrayList sCache -> d
    android.content.res.Resources mResources -> a
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    78:83:boolean shouldWrap(android.content.Context) -> a
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> a
androidx.appcompat.widget.TintResources -> l0:
    java.lang.ref.WeakReference mContextRef -> b
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    250:250:int getChangingConfigurations() -> getChangingConfigurations
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    205:205:float getFraction(int,int,int,float) -> getFraction
    131:131:int getIndex(int) -> getIndex
    127:127:int getIndexCount() -> getIndexCount
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    197:197:int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    147:147:java.lang.String getNonResourceString(int) -> getNonResourceString
    241:241:java.lang.String getPositionDescription() -> getPositionDescription
    209:209:int getResourceId(int,int) -> getResourceId
    135:135:android.content.res.Resources getResources() -> getResources
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    221:222:int getType(int) -> getType
    217:217:boolean getValue(int,android.util.TypedValue) -> getValue
    233:233:boolean hasValue(int) -> hasValue
    123:123:int length() -> length
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:59:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    237:237:android.util.TypedValue peekValue(int) -> peekValue
    245:246:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    int mButtonGravity -> n
    boolean mCollapsible -> N
    int mTitleTextAppearance -> l
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> M
    android.content.res.ColorStateList mTitleTextColor -> z
    java.util.ArrayList mTempViews -> D
    android.widget.ImageView mLogoView -> e
    androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter -> J
    android.view.View mExpandedActionView -> i
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> H
    android.widget.TextView mTitleTextView -> b
    androidx.appcompat.widget.ActionMenuView mMenuView -> a
    android.widget.ImageButton mCollapseButtonView -> h
    int mGravity -> w
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> G
    int mContentInsetStartWithNavigation -> u
    android.widget.ImageButton mNavButtonView -> d
    int mTitleMarginBottom -> s
    java.lang.CharSequence mSubtitleText -> y
    boolean mEatingHover -> C
    int mTitleMarginEnd -> q
    int mMaxButtonHeight -> o
    android.graphics.drawable.Drawable mCollapseIcon -> f
    int mSubtitleTextAppearance -> m
    int mPopupTheme -> k
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> I
    java.util.ArrayList mHiddenViews -> E
    java.lang.CharSequence mCollapseDescription -> g
    android.content.Context mPopupContext -> j
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> L
    int[] mTempMargins -> F
    android.content.res.ColorStateList mSubtitleTextColor -> A
    android.widget.TextView mSubtitleTextView -> c
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> K
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> t
    int mContentInsetEndWithActions -> v
    int mTitleMarginTop -> r
    java.lang.CharSequence mTitleText -> x
    boolean mEatingTouch -> B
    int mTitleMarginStart -> p
    java.lang.Runnable mShowOverflowMenuRunnable -> O
    228:229:void <init>(android.content.Context) -> <init>
    232:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:351:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1510:1527:void addSystemView(android.view.View,boolean) -> a
    1627:1644:void measureChildConstrained(android.view.View,int,int,int,int,int) -> a
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> a
    2043:2058:int getViewListMeasuredWidth(java.util.List,int[]) -> a
    2063:2071:int layoutChildLeft(android.view.View,int,int[],int) -> a
    2088:2093:int getChildTop(android.view.View,int) -> a
    2139:2165:void addCustomViewsWithGravity(java.util.List,int) -> a
    2168:2175:int getChildHorizontalGravity(int) -> a
    2186:2187:int getHorizontalMargins(android.view.View) -> a
    2251:2257:void addChildrenForExpandedActionView() -> a
    1491:1507:void ensureCollapseButtonView() -> b
    2076:2084:int layoutChildRight(android.view.View,int,int[],int) -> b
    2120:2125:int getChildVerticalGravity(int) -> b
    2192:2193:int getVerticalMargins(android.view.View) -> b
    2260:2260:boolean isChildOrHidden(android.view.View) -> c
    2288:2291:void ensureContentInsets() -> c
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:728:void collapseActionView() -> collapseActionView
    693:696:void ensureLogoView() -> d
    2182:2182:boolean shouldLayout(android.view.View) -> d
    593:596:void dismissPopupMenus() -> dismissPopupMenus
    1152:1162:void ensureMenu() -> e
    1165:1175:void ensureMenuView() -> f
    1481:1488:void ensureNavButtonView() -> g
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1388:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1345:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1440:1445:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1460:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1475:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1426:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    1565:1567:void postShowOverflowMenu() -> h
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    2238:2248:void removeChildrenForExpandedActionView() -> i
    1191:1192:void inflateMenu(int) -> inflateMenu
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    601:616:boolean isTitleTruncated() -> isTitleTruncated
    1676:1686:boolean shouldCollapse() -> j
    1571:1573:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2040:void onLayout(boolean,int,int,int,int) -> onLayout
    1691:1821:void onMeasure(int,int) -> onMeasure
    1543:1562:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:497:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1538:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1049:1050:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1069:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1095:void setCollapseIcon(int) -> setCollapseIcon
    1108:1114:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2272:void setCollapsible(boolean) -> setCollapsible
    1406:1415:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1364:1373:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1288:1290:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1225:1227:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:510:void setLogo(int) -> setLogo
    629:641:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:664:void setLogoDescription(int) -> setLogoDescription
    675:681:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:587:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2280:2285:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    929:930:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:949:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:967:void setNavigationIcon(int) -> setNavigationIcon
    984:996:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1022:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1204:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1138:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:369:void setPopupTheme(int) -> setPopupTheme
    803:804:void setSubtitle(int) -> setSubtitle
    814:838:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:860:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:890:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:902:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:749:void setTitle(int) -> setTitle
    760:784:void setTitle(java.lang.CharSequence) -> setTitle
    394:400:void setTitleMargin(int,int,int,int) -> setTitleMargin
    485:487:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:466:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:422:void setTitleMarginStart(int) -> setTitleMarginStart
    441:444:void setTitleMarginTop(int) -> setTitleMarginTop
    845:849:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:869:void setTitleTextColor(int) -> setTitleTextColor
    877:881:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
    androidx.appcompat.widget.Toolbar this$0 -> a
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:209:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
    androidx.appcompat.widget.Toolbar this$0 -> a
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
    androidx.appcompat.widget.Toolbar this$0 -> a
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1504:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> a
    androidx.appcompat.widget.Toolbar this$0 -> c
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> b
    2447:2448:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2558:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2538:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2503:2503:boolean flagActionItems() -> flagActionItems
    2563:2563:int getId() -> getId
    2461:2461:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2453:2457:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2499:2499:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2573:2573:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2568:2568:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2494:2494:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2490:2490:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2467:2486:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    int mViewType -> a
    2354:2355:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2360:void <init>(int,int) -> <init>
    2363:2365:void <init>(int,int,int) -> <init>
    2368:2369:void <init>(int) -> <init>
    2372:2375:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2379:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2386:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2390:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2397:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> a
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    int expandedMenuItemId -> b
    boolean isOverflowOpen -> c
    2425:2425:void <clinit>() -> <clinit>
    2405:2406:void <init>(android.os.Parcel) -> <init>
    2409:2412:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2416:void <init>(android.os.Parcelable) -> <init>
    2420:2423:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$a:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    boolean mMenuPrepared -> n
    android.view.Window$Callback mWindowCallback -> m
    android.graphics.drawable.Drawable mIcon -> f
    android.graphics.drawable.Drawable mLogo -> g
    boolean mTitleSet -> i
    android.graphics.drawable.Drawable mNavIcon -> h
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> o
    android.widget.Spinner mSpinner -> d
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> j
    java.lang.CharSequence mSubtitle -> k
    java.lang.CharSequence mHomeDescription -> l
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.view.View mTabView -> c
    android.view.View mCustomView -> e
    int mNavigationMode -> p
    int mDefaultNavigationContentDescription -> q
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> r
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    206:212:int detectDisplayOptions() -> a
    260:264:void setTitleInt(java.lang.CharSequence) -> a
    556:561:void animateToVisibility(int) -> animateToVisibility
    503:509:void ensureSpinner() -> b
    630:637:void updateHomeAccessibility() -> c
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    611:616:void updateNavigationIcon() -> d
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    322:331:void updateToolbarLogo() -> e
    222:222:android.content.Context getContext() -> getContext
    551:551:android.view.View getCustomView() -> getCustomView
    380:380:int getDisplayOptions() -> getDisplayOptions
    535:535:int getDropdownItemCount() -> getDropdownItemCount
    530:530:int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    656:656:int getHeight() -> getHeight
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    268:268:java.lang.CharSequence getSubtitle() -> getSubtitle
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    666:666:int getVisibility() -> getVisibility
    438:438:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    291:291:boolean hasIcon() -> hasIcon
    296:296:boolean hasLogo() -> hasLogo
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    443:443:boolean isTitleTruncated() -> isTitleTruncated
    646:647:void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    641:642:void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    651:652:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    604:608:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    514:517:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    521:522:void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    599:600:void setNavigationIcon(int) -> setNavigationIcon
    463:500:void setNavigationMode(int) -> setNavigationMode
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:566:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$a:
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> a
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> b
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$b:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    48:48:void <init>() -> <init>
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> m0:
    java.lang.Runnable mHideRunnable -> e
    java.lang.Runnable mShowRunnable -> d
    androidx.appcompat.widget.TooltipCompatHandler sActiveHandler -> k
    boolean mFromTouch -> i
    androidx.appcompat.widget.TooltipCompatHandler sPendingHandler -> j
    java.lang.CharSequence mTooltipText -> b
    android.view.View mAnchor -> a
    int mAnchorX -> f
    int mAnchorY -> g
    int mHoverSlop -> c
    androidx.appcompat.widget.TooltipPopup mPopup -> h
    108:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> a
    163:189:void show(boolean) -> a
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> a
    224:225:void cancelPendingShow() -> a
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> a
    250:252:void clearAnchorPos() -> b
    192:207:void hide() -> c
    220:221:void scheduleShow() -> d
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.widget.TooltipCompatHandler$1 -> m0$a:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> a
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> m0$b:
    androidx.appcompat.widget.TooltipCompatHandler this$0 -> a
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> n0:
    android.content.Context mContext -> a
    int[] mTmpAnchorPos -> f
    int[] mTmpAppPos -> g
    android.widget.TextView mMessageView -> c
    android.graphics.Rect mTmpDisplayFrame -> e
    android.view.View mContentView -> b
    android.view.WindowManager$LayoutParams mLayoutParams -> d
    58:73:void <init>(android.content.Context) -> <init>
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> a
    90:96:void hide() -> a
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> a
    187:207:android.view.View getAppRootView(android.view.View) -> a
    99:99:boolean isShowing() -> b
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    java.lang.ref.WeakReference mContextRef -> a
    boolean sCompatVectorFromResourcesEnabled -> b
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> a
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    83:84:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> d
    java.lang.ref.WeakReference mInflatedViewRef -> c
    int mInflatedId -> b
    int mLayoutResource -> a
    androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener -> e
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    42:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> setDelegate
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$a:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$b:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    android.os.Handler mMainHandler -> c
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> a
    59:60:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:73:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:50:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
    54:59:void executeOnMainThread(java.lang.Runnable) -> executeOnMainThread
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    java.util.HashMap mHashMap -> e
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> b
    int mSize -> d
    java.util.WeakHashMap mIterators -> c
    35:43:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$a:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$b:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    java.lang.Object mValue -> b
    java.lang.Object mKey -> a
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    boolean mBeforeStart -> b
    318:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    263:264:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> androidx.arch.core.internal.SafeIterableMap$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.asynclayoutinflater.view.AsyncLayoutInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater:
    android.os.Handler$Callback mHandlerCallback -> d
    android.os.Handler mHandler -> b
    android.view.LayoutInflater mInflater -> a
    androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread mInflateThread -> c
    75:79:void <init>(android.content.Context) -> <init>
    84:85:void inflate(int,android.view.ViewGroup,androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener) -> inflate
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1 -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$a:
    androidx.asynclayoutinflater.view.AsyncLayoutInflater this$0 -> a
    95:95:void <init>(androidx.asynclayoutinflater.view.AsyncLayoutInflater) -> <init>
    98:106:boolean handleMessage(android.os.Message) -> handleMessage
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$b:
    java.lang.String[] sClassPrefixList -> a
    127:127:void <clinit>() -> <clinit>
    134:135:void <init>(android.content.Context) -> <init>
    139:139:android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
    144:156:android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$c:
    android.view.ViewGroup parent -> b
    androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener callback -> e
    int resid -> c
    android.view.View view -> d
    androidx.asynclayoutinflater.view.AsyncLayoutInflater inflater -> a
    122:123:void <init>() -> <init>
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$d:
    java.util.concurrent.ArrayBlockingQueue mQueue -> a
    androidx.core.util.Pools$SynchronizedPool mRequestPool -> b
    androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread sInstance -> c
    163:165:void <clinit>() -> <clinit>
    160:172:void <init>() -> <init>
    207:211:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest obtainRequest() -> a
    225:227:void enqueue(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> a
    180:184:void runInner() -> b
    215:221:void releaseRequest(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> b
    168:168:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread getInstance() -> c
    202:202:void run() -> run
androidx.camera.camera2.Camera2AppConfig -> androidx.camera.camera2.Camera2AppConfig:
    46:47:void <init>() -> <init>
    55:77:androidx.camera.core.AppConfig create(android.content.Context) -> create
androidx.camera.camera2.Camera2Config -> androidx.camera.camera2.Camera2Config:
    androidx.camera.core.Config$Option TEMPLATE_TYPE_OPTION -> c
    androidx.camera.core.Config$Option DEVICE_STATE_CALLBACK_OPTION -> d
    androidx.camera.core.Config mConfig -> b
    androidx.camera.core.Config$Option SESSION_STATE_CALLBACK_OPTION -> e
    androidx.camera.core.Config$Option SESSION_CAPTURE_CALLBACK_OPTION -> f
    50:63:void <clinit>() -> <clinit>
    74:76:void <init>(androidx.camera.core.Config) -> <init>
    82:82:androidx.camera.core.Config$Option createCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key) -> a
    202:202:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    226:227:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    190:190:androidx.camera.camera2.impl.CameraEventCallbacks getCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks) -> getCameraEventCallback
    99:100:java.lang.Object getCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> getCaptureRequestOption
    110:120:java.util.Set getCaptureRequestOptions() -> getCaptureRequestOptions
    136:136:int getCaptureRequestTemplate(int) -> getCaptureRequestTemplate
    149:149:android.hardware.camera2.CameraDevice$StateCallback getDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback) -> getDeviceStateCallback
    175:175:android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> getSessionCaptureCallback
    162:162:android.hardware.camera2.CameraCaptureSession$StateCallback getSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback) -> getSessionStateCallback
    234:234:java.util.Set listOptions() -> listOptions
    210:210:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    219:219:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.camera2.Camera2Config$1 -> androidx.camera.camera2.Camera2Config$a:
    java.util.Set val$optionSet -> a
    113:113:void <init>(androidx.camera.camera2.Camera2Config,java.util.Set) -> <init>
    116:117:boolean onOptionMatched(androidx.camera.core.Config$Option) -> onOptionMatched
androidx.camera.camera2.Camera2Config$Builder -> androidx.camera.camera2.Camera2Config$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableOptionsBundle -> a
    386:388:void <init>() -> <init>
    425:425:androidx.camera.camera2.Camera2Config build() -> build
    393:393:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    410:415:androidx.camera.camera2.Camera2Config$Builder insertAllOptions(androidx.camera.core.Config) -> insertAllOptions
    402:404:androidx.camera.camera2.Camera2Config$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> setCaptureRequestOption
androidx.camera.camera2.Camera2Config$Extender -> androidx.camera.camera2.Camera2Config$Extender:
    androidx.camera.core.Config$ExtendableBuilder mBaseBuilder -> a
    250:252:void <init>(androidx.camera.core.Config$ExtendableBuilder) -> <init>
    370:372:androidx.camera.camera2.Camera2Config$Extender setCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks) -> setCameraEventCallback
    266:268:androidx.camera.camera2.Camera2Config$Extender setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object) -> setCaptureRequestOption
    284:285:androidx.camera.camera2.Camera2Config$Extender setCaptureRequestTemplate(int) -> setCaptureRequestTemplate
    305:307:androidx.camera.camera2.Camera2Config$Extender setDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback) -> setDeviceStateCallback
    355:357:androidx.camera.camera2.Camera2Config$Extender setSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> setSessionCaptureCallback
    329:331:androidx.camera.camera2.Camera2Config$Extender setSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback) -> setSessionStateCallback
androidx.camera.camera2.impl.Camera -> o0:
    androidx.camera.camera2.impl.compat.CameraManagerCompat mCameraManager -> d
    int mCameraDeviceError -> n
    java.util.concurrent.atomic.AtomicInteger mReleaseRequestCount -> t
    androidx.camera.camera2.impl.Camera$CameraAvailability mCameraAvailability -> y
    java.lang.Object mPendingLock -> r
    androidx.camera.core.CameraInfoInternal mCameraInfoInternal -> l
    android.hardware.camera2.CameraDevice mCameraDevice -> m
    java.util.Map mReleasedCaptureSessions -> w
    androidx.camera.core.SessionConfig mCameraControlSessionConfig -> q
    androidx.camera.camera2.impl.CaptureSession mCaptureSession -> p
    androidx.camera.core.Observable mAvailableCamerasObservable -> x
    java.lang.String mCameraId -> c
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer mUserReleaseNotifier -> v
    androidx.camera.camera2.impl.Camera$InternalState mState -> h
    androidx.camera.core.UseCaseAttachState mUseCaseAttachState -> b
    java.lang.Object mCameraInfoLock -> e
    androidx.camera.camera2.impl.Camera$StateCallback mStateCallback -> k
    java.util.List mPendingForAddOnline -> s
    androidx.camera.camera2.impl.Camera2CameraControl mCameraControlInternal -> j
    java.util.concurrent.Executor mExecutor -> g
    android.os.Handler mHandler -> f
    java.lang.Object mAttachedUseCaseLock -> a
    androidx.camera.core.impl.LiveDataObservable mObservableState -> i
    androidx.camera.camera2.impl.CaptureSession$Builder mCaptureSessionBuilder -> o
    com.google.common.util.concurrent.ListenableFuture mUserReleaseFuture -> u
    171:191:void <init>(androidx.camera.camera2.impl.compat.CameraManagerCompat,java.lang.String,androidx.camera.core.Observable,android.os.Handler) -> <init>
    288:323:void configAndClose() -> a
    359:389:void closeCamera(boolean) -> a
    394:434:com.google.common.util.concurrent.ListenableFuture releaseSession(androidx.camera.camera2.impl.CaptureSession,boolean) -> a
    672:674:boolean isUseCaseOnline(androidx.camera.core.UseCase) -> a
    750:756:void clearCameraControlPreviewAspectRatio(java.util.Collection) -> a
    895:916:void postSurfaceClosedError(androidx.camera.core.DeferrableSurface$SurfaceClosedException) -> a
    961:969:boolean checkAndAttachRepeatingSurface(androidx.camera.core.CaptureConfig$Builder) -> a
    1007:1036:void submitCaptureRequests(java.util.List) -> a
    1125:1152:void setState(androidx.camera.camera2.impl.Camera$InternalState) -> a
    1156:1158:java.lang.String getErrorMessage(int) -> a
    683:702:void addOnlineUseCase(java.util.Collection) -> addOnlineUseCase
    658:662:void notifyAttachToUseCaseSurfaces(androidx.camera.core.UseCase) -> b
    739:747:void updateCameraControlPreviewAspectRatio(java.util.Collection) -> b
    927:938:void resetCaptureSession(boolean) -> b
    941:950:android.hardware.camera2.CameraDevice$StateCallback createDeviceStateCallback() -> b
    334:354:void finishClose() -> c
    665:669:void notifyDetachFromUseCaseSurfaces(androidx.camera.core.UseCase) -> c
    253:282:void close() -> close
    512:532:com.google.common.util.concurrent.ListenableFuture getOrCreateUserReleaseFuture() -> d
    633:655:void reattachUseCaseSurfaces(androidx.camera.core.UseCase) -> d
    327:327:boolean isSessionCloseComplete() -> e
    830:848:void openCameraDevice() -> f
    874:879:void openCaptureSession() -> g
    995:995:androidx.camera.core.CameraControlInternal getCameraControlInternal() -> getCameraControlInternal
    813:820:androidx.camera.core.CameraInfoInternal getCameraInfoInternal() -> getCameraInfoInternal
    479:479:androidx.camera.core.Observable getCameraState() -> getCameraState
    485:507:void releaseInternal() -> h
    853:855:void updateCaptureSessionConfig() -> i
    1048:1049:void onCameraControlCaptureRequests(java.util.List) -> onCameraControlCaptureRequests
    1041:1043:void onCameraControlUpdateSessionConfig(androidx.camera.core.SessionConfig) -> onCameraControlUpdateSessionConfig
    542:558:void onUseCaseActive(androidx.camera.core.UseCase) -> onUseCaseActive
    565:578:void onUseCaseInactive(androidx.camera.core.UseCase) -> onUseCaseInactive
    607:621:void onUseCaseReset(androidx.camera.core.UseCase) -> onUseCaseReset
    586:600:void onUseCaseUpdated(androidx.camera.core.UseCase) -> onUseCaseUpdated
    211:243:void open() -> open
    446:473:com.google.common.util.concurrent.ListenableFuture release() -> release
    764:797:void removeOnlineUseCase(java.util.Collection) -> removeOnlineUseCase
    1054:1054:java.lang.String toString() -> toString
androidx.camera.camera2.impl.Camera$1 -> o0$g:
    androidx.camera.camera2.impl.Camera this$0 -> a
    212:212:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    215:216:void run() -> run
androidx.camera.camera2.impl.Camera$10 -> o0$a:
    androidx.camera.core.UseCase val$useCase -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    587:587:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.core.UseCase) -> <init>
    590:591:void run() -> run
androidx.camera.camera2.impl.Camera$11 -> o0$b:
    androidx.camera.core.UseCase val$useCase -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    608:608:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.core.UseCase) -> <init>
    611:612:void run() -> run
androidx.camera.camera2.impl.Camera$12 -> o0$c:
    java.util.Collection val$useCases -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    705:705:void <init>(androidx.camera.camera2.impl.Camera,java.util.Collection) -> <init>
    708:709:void run() -> run
androidx.camera.camera2.impl.Camera$13 -> o0$d:
    java.util.Collection val$useCases -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    769:769:void <init>(androidx.camera.camera2.impl.Camera,java.util.Collection) -> <init>
    772:773:void run() -> run
androidx.camera.camera2.impl.Camera$14 -> o0$e:
    androidx.camera.core.SessionConfig$ErrorListener val$errorListener -> a
    androidx.camera.core.SessionConfig val$sessionConfigError -> b
    905:905:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.core.SessionConfig$ErrorListener,androidx.camera.core.SessionConfig) -> <init>
    908:910:void run() -> run
androidx.camera.camera2.impl.Camera$15 -> o0$f:
    java.util.List val$captureConfigs -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    1008:1008:void <init>(androidx.camera.camera2.impl.Camera,java.util.List) -> <init>
    1011:1012:void run() -> run
androidx.camera.camera2.impl.Camera$2 -> o0$h:
    androidx.camera.camera2.impl.Camera this$0 -> a
    254:254:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    257:258:void run() -> run
androidx.camera.camera2.impl.Camera$3 -> o0$i:
    android.graphics.SurfaceTexture val$surfaceTexture -> b
    android.view.Surface val$surface -> a
    293:293:void <init>(androidx.camera.camera2.impl.Camera,android.view.Surface,android.graphics.SurfaceTexture) -> <init>
    296:298:void run() -> run
androidx.camera.camera2.impl.Camera$4 -> o0$j:
    androidx.camera.camera2.impl.CaptureSession val$captureSession -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    402:402:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.camera2.impl.CaptureSession) -> <init>
    406:424:void onSuccess(java.lang.Void) -> a
    430:430:void onFailure(java.lang.Throwable) -> onFailure
    402:402:void onSuccess(java.lang.Object) -> onSuccess
androidx.camera.camera2.impl.Camera$5 -> o0$k:
    androidx.camera.camera2.impl.Camera this$0 -> a
    447:447:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    452:458:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.camera2.impl.Camera$5$1 -> o0$k$a:
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    androidx.camera.camera2.impl.Camera$5 this$1 -> b
    452:452:void <init>(androidx.camera.camera2.impl.Camera$5,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    455:456:void run() -> run
androidx.camera.camera2.impl.Camera$6 -> o0$l:
    androidx.camera.camera2.impl.Camera this$0 -> a
    463:463:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    466:467:void run() -> run
androidx.camera.camera2.impl.Camera$7 -> o0$m:
    androidx.camera.camera2.impl.Camera this$0 -> a
    515:515:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    519:523:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.camera2.impl.Camera$8 -> o0$n:
    androidx.camera.core.UseCase val$useCase -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    543:543:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.core.UseCase) -> <init>
    546:547:void run() -> run
androidx.camera.camera2.impl.Camera$9 -> o0$o:
    androidx.camera.core.UseCase val$useCase -> a
    androidx.camera.camera2.impl.Camera this$0 -> b
    566:566:void <init>(androidx.camera.camera2.impl.Camera,androidx.camera.core.UseCase) -> <init>
    569:570:void run() -> run
androidx.camera.camera2.impl.Camera$CameraAvailability -> o0$p:
    java.lang.String mCameraId -> a
    androidx.camera.camera2.impl.Camera this$0 -> d
    boolean mCameraAvailable -> b
    int mNumAvailableCameras -> c
    1336:1338:void <init>(androidx.camera.camera2.impl.Camera,java.lang.String) -> <init>
    1367:1375:void onNewData(java.lang.Integer) -> a
    1386:1386:boolean isCameraAvailable() -> a
    1342:1352:void onCameraAvailable(java.lang.String) -> onCameraAvailable
    1356:1362:void onCameraUnavailable(java.lang.String) -> onCameraUnavailable
    1380:1380:void onError(java.lang.Throwable) -> onError
    1315:1315:void onNewData(java.lang.Object) -> onNewData
androidx.camera.camera2.impl.Camera$InternalState -> o0$q:
    androidx.camera.camera2.impl.Camera$InternalState CLOSING -> e
    androidx.camera.camera2.impl.Camera$InternalState REOPENING -> f
    androidx.camera.camera2.impl.Camera$InternalState OPENING -> c
    androidx.camera.camera2.impl.Camera$InternalState OPENED -> d
    androidx.camera.camera2.impl.Camera$InternalState INITIALIZED -> a
    androidx.camera.camera2.impl.Camera$InternalState PENDING_OPEN -> b
    androidx.camera.camera2.impl.Camera$InternalState[] $VALUES -> i
    androidx.camera.camera2.impl.Camera$InternalState RELEASING -> g
    androidx.camera.camera2.impl.Camera$InternalState RELEASED -> h
    1068:1057:void <clinit>() -> <clinit>
    1057:1057:void <init>(java.lang.String,int) -> <init>
    1057:1057:androidx.camera.camera2.impl.Camera$InternalState valueOf(java.lang.String) -> valueOf
    1057:1057:androidx.camera.camera2.impl.Camera$InternalState[] values() -> values
androidx.camera.camera2.impl.Camera$StateCallback -> o0$r:
    androidx.camera.camera2.impl.Camera this$0 -> a
    1174:1174:void <init>(androidx.camera.camera2.impl.Camera) -> <init>
    1269:1295:void handleErrorOnOpen(android.hardware.camera2.CameraDevice,int) -> a
    1303:1308:void reopenCameraAfterError() -> a
    1202:1219:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    1223:1237:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    1243:1266:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    1178:1198:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.camera2.impl.Camera2CameraCaptureResult -> p0:
    android.hardware.camera2.CaptureResult mCaptureResult -> b
    java.lang.Object mTag -> a
    40:43:void <init>(java.lang.Object,android.hardware.camera2.CaptureResult) -> <init>
    205:205:android.hardware.camera2.CaptureResult getCaptureResult() -> a
    112:118:androidx.camera.core.CameraCaptureMetaData$AeState getAeState() -> getAeState
    53:60:androidx.camera.core.CameraCaptureMetaData$AfMode getAfMode() -> getAfMode
    81:87:androidx.camera.core.CameraCaptureMetaData$AfState getAfState() -> getAfState
    142:148:androidx.camera.core.CameraCaptureMetaData$AwbState getAwbState() -> getAwbState
    169:176:androidx.camera.core.CameraCaptureMetaData$FlashState getFlashState() -> getFlashState
    201:201:java.lang.Object getTag() -> getTag
    191:196:long getTimestamp() -> getTimestamp
androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter -> androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter:
    44:44:void <init>() -> <init>
    37:40:android.hardware.camera2.CaptureResult getCaptureResult(androidx.camera.core.CameraCaptureResult) -> getCaptureResult
androidx.camera.camera2.impl.Camera2CameraControl -> androidx.camera.camera2.impl.Camera2CameraControl:
    androidx.camera.core.SessionConfig$Builder mSessionConfigBuilder -> f
    androidx.camera.camera2.impl.FocusMeteringControl mFocusMeteringControl -> h
    java.util.concurrent.ScheduledExecutorService mScheduler -> e
    android.hardware.camera2.CameraCharacteristics mCameraCharacteristics -> c
    boolean mIsTorchOn -> i
    android.graphics.Rect mCropRect -> k
    java.util.concurrent.Executor mExecutor -> b
    android.util.Rational mPreviewAspectRatio -> g
    androidx.camera.core.FlashMode mFlashMode -> j
    androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback mSessionCallback -> a
    androidx.camera.core.CameraControlInternal$ControlUpdateListener mControlUpdateListener -> d
    80:103:void <init>(android.hardware.camera2.CameraCharacteristics,androidx.camera.core.CameraControlInternal$ControlUpdateListener,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.Executor) -> <init>
    251:253:void setCropRegionInternal(android.graphics.Rect) -> a
    258:262:android.graphics.Rect getCropSensorRegion() -> a
    278:279:void addCaptureResultListener(androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener) -> a
    284:298:void enableTorchInternal(boolean) -> a
    304:305:void submitCaptureRequestsInternal(java.util.List) -> a
    396:412:int getSupportedAeMode(int) -> a
    447:452:boolean isModeInList(int,int[]) -> a
    238:238:int getDefaultTemplate() -> b
    273:274:void removeCaptureResultListener(androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener) -> b
    365:382:int getSupportedAfMode(int) -> b
    268:268:android.graphics.Rect getSensorRect() -> c
    426:442:int getSupportedAwbMode(int) -> c
    216:223:void cancelAfAeTrigger(boolean,boolean) -> cancelAfAeTrigger
    121:127:void cancelFocusAndMetering() -> cancelFocusAndMetering
    316:350:androidx.camera.core.Config getSessionOptions() -> d
    244:246:void updateSessionConfig() -> e
    164:173:void enableTorch(boolean) -> enableTorch
    143:143:androidx.camera.core.FlashMode getFlashMode() -> getFlashMode
    178:178:boolean isTorchOn() -> isTorchOn
    132:138:void setCropRegion(android.graphics.Rect) -> setCropRegion
    150:158:void setFlashMode(androidx.camera.core.FlashMode) -> setFlashMode
    106:107:void setPreviewAspectRatio(android.util.Rational) -> setPreviewAspectRatio
    111:117:void startFocusAndMetering(androidx.camera.core.FocusMeteringAction) -> startFocusAndMetering
    228:234:void submitCaptureRequests(java.util.List) -> submitCaptureRequests
    200:206:void triggerAePrecapture() -> triggerAePrecapture
    186:192:void triggerAf() -> triggerAf
androidx.camera.camera2.impl.Camera2CameraControl$1 -> androidx.camera.camera2.impl.Camera2CameraControl$b:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> a
    97:97:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    100:101:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$10 -> androidx.camera.camera2.impl.Camera2CameraControl$a:
    java.util.List val$captureConfigs -> a
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> b
    228:228:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,java.util.List) -> <init>
    231:232:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$2 -> androidx.camera.camera2.impl.Camera2CameraControl$c:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> b
    androidx.camera.core.FocusMeteringAction val$action -> a
    111:111:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,androidx.camera.core.FocusMeteringAction) -> <init>
    114:115:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$3 -> androidx.camera.camera2.impl.Camera2CameraControl$d:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> a
    121:121:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    124:125:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$4 -> androidx.camera.camera2.impl.Camera2CameraControl$e:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> b
    android.graphics.Rect val$crop -> a
    132:132:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,android.graphics.Rect) -> <init>
    135:136:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$5 -> androidx.camera.camera2.impl.Camera2CameraControl$f:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> a
    152:152:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    155:156:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$6 -> androidx.camera.camera2.impl.Camera2CameraControl$g:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> b
    boolean val$torch -> a
    166:166:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,boolean) -> <init>
    169:170:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$7 -> androidx.camera.camera2.impl.Camera2CameraControl$h:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> a
    186:186:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    189:190:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$8 -> androidx.camera.camera2.impl.Camera2CameraControl$i:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> a
    200:200:void <init>(androidx.camera.camera2.impl.Camera2CameraControl) -> <init>
    203:204:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$9 -> androidx.camera.camera2.impl.Camera2CameraControl$j:
    androidx.camera.camera2.impl.Camera2CameraControl this$0 -> c
    boolean val$cancelAfTrigger -> a
    boolean val$cancelAePrecaptureTrigger -> b
    216:216:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,boolean,boolean) -> <init>
    219:221:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback -> androidx.camera.camera2.impl.Camera2CameraControl$k:
    java.util.concurrent.Executor mExecutor -> b
    java.util.Set mResultListeners -> a
    471:473:void <init>(java.util.concurrent.Executor) -> <init>
    477:478:void addListener(androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener) -> a
    482:483:void removeListener(androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener) -> b
    491:507:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback$1 -> androidx.camera.camera2.impl.Camera2CameraControl$k$a:
    android.hardware.camera2.TotalCaptureResult val$result -> a
    androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback this$0 -> b
    491:491:void <init>(androidx.camera.camera2.impl.Camera2CameraControl$CameraControlSessionCallback,android.hardware.camera2.TotalCaptureResult) -> <init>
    494:505:void run() -> run
androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener -> androidx.camera.camera2.impl.Camera2CameraControl$l:
    boolean onCaptureResult(android.hardware.camera2.TotalCaptureResult) -> a
androidx.camera.camera2.impl.Camera2CameraFactory -> androidx.camera.camera2.impl.Camera2CameraFactory:
    android.os.Handler sHandler -> d
    androidx.camera.camera2.impl.compat.CameraManagerCompat mCameraManager -> b
    android.os.HandlerThread sHandlerThread -> c
    androidx.camera.camera2.impl.CameraAvailabilityRegistry mAvailabilityRegistry -> a
    53:60:void <clinit>() -> <clinit>
    64:69:void <init>(android.content.Context) -> <init>
    98:104:java.lang.String cameraIdForLensFacing(androidx.camera.core.CameraX$LensFacing) -> cameraIdForLensFacing
    83:87:java.util.Set getAvailableCameraIds() -> getAvailableCameraIds
    74:77:androidx.camera.core.BaseCamera getCamera(java.lang.String) -> getCamera
    111:111:androidx.camera.core.LensFacingCameraIdFilter getLensFacingCameraIdFilter(androidx.camera.core.CameraX$LensFacing) -> getLensFacingCameraIdFilter
androidx.camera.camera2.impl.Camera2CameraInfo -> q0:
    androidx.lifecycle.MutableLiveData mFlashAvailability -> b
    android.hardware.camera2.CameraCharacteristics mCameraCharacteristics -> a
    47:51:void <init>(android.hardware.camera2.CameraManager,java.lang.String) -> <init>
    96:99:int getSensorOrientation() -> a
    111:112:void checkCharacteristicAvailable(android.hardware.camera2.CameraCharacteristics$Key,java.lang.String) -> a
    103:106:int getSupportedHardwareLevel() -> b
    125:126:void logDeviceInfo() -> c
    131:153:void logDeviceLevel() -> d
    68:72:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
    82:89:int getSensorRotationDegrees(int) -> getSensorRotationDegrees
    120:120:int getSensorRotationDegrees() -> getSensorRotationDegrees
    158:158:androidx.lifecycle.LiveData isFlashAvailable() -> isFlashAvailable
androidx.camera.camera2.impl.Camera2CaptureCallbacks -> androidx.camera.camera2.impl.Camera2CaptureCallbacks:
    43:44:void <init>() -> <init>
    55:55:android.hardware.camera2.CameraCaptureSession$CaptureCallback createComboCallback(java.util.List) -> a
    62:62:android.hardware.camera2.CameraCaptureSession$CaptureCallback createComboCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback[]) -> createComboCallback
    49:49:android.hardware.camera2.CameraCaptureSession$CaptureCallback createNoOpCallback() -> createNoOpCallback
androidx.camera.camera2.impl.Camera2CaptureCallbacks$ComboSessionCaptureCallback -> androidx.camera.camera2.impl.Camera2CaptureCallbacks$a:
    java.util.List mCallbacks -> a
    115:122:void <init>(java.util.List) -> <init>
    129:132:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    138:141:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    147:150:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    156:159:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    164:167:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    172:175:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    181:184:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.Camera2CaptureCallbacks$NoOpSessionCaptureCallback -> androidx.camera.camera2.impl.Camera2CaptureCallbacks$b:
    65:65:void <init>() -> <init>
    73:73:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    79:79:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    85:85:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    92:92:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    97:97:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    102:102:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    108:108:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.Camera2CaptureOptionUnpacker -> r0:
    androidx.camera.camera2.impl.Camera2CaptureOptionUnpacker INSTANCE -> a
    34:34:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    38:78:void unpack(androidx.camera.core.UseCaseConfig,androidx.camera.core.CaptureConfig$Builder) -> unpack
androidx.camera.camera2.impl.Camera2CaptureRequestBuilder -> androidx.camera.camera2.impl.Camera2CaptureRequestBuilder:
    39:39:void <init>() -> <init>
    53:64:java.util.List getConfiguredSurfaces(java.util.List,java.util.Map) -> a
    69:89:void applyImplementationOptionToCaptureBuilder(android.hardware.camera2.CaptureRequest$Builder,androidx.camera.core.Config) -> a
    106:128:android.hardware.camera2.CaptureRequest build(androidx.camera.core.CaptureConfig,android.hardware.camera2.CameraDevice,java.util.Map) -> build
    141:150:android.hardware.camera2.CaptureRequest buildWithoutTarget(androidx.camera.core.CaptureConfig,android.hardware.camera2.CameraDevice) -> buildWithoutTarget
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager -> androidx.camera.camera2.impl.Camera2DeviceSurfaceManager:
    java.util.Map mCameraSupportedSurfaceCombinationMap -> a
    android.util.Size MAXIMUM_PREVIEW_SIZE -> c
    boolean mIsInitialized -> b
    58:58:void <clinit>() -> <clinit>
    63:70:void <init>(android.content.Context) -> <init>
    186:203:void init(android.content.Context,androidx.camera.camera2.impl.CamcorderProfileHelper) -> a
    305:316:java.lang.String getCameraIdFromConfig(androidx.camera.core.UseCaseConfig) -> a
    88:91:boolean checkSupported(java.lang.String,java.util.List) -> checkSupported
    290:291:android.util.Rational getCorrectedAspectRatio(androidx.camera.core.UseCaseConfig) -> getCorrectedAspectRatio
    214:215:android.util.Size getMaxOutputSize(java.lang.String,int) -> getMaxOutputSize
    236:237:android.util.Size getPreviewSize() -> getPreviewSize
    147:148:java.util.Map getSuggestedResolutions(java.lang.String,java.util.List,java.util.List) -> getSuggestedResolutions
    266:267:boolean requiresCorrectedAspectRatio(androidx.camera.core.UseCaseConfig) -> requiresCorrectedAspectRatio
    118:121:androidx.camera.core.SurfaceConfig transformSurfaceConfig(java.lang.String,int,android.util.Size) -> transformSurfaceConfig
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager$1 -> androidx.camera.camera2.impl.Camera2DeviceSurfaceManager$a:
    64:64:void <init>(androidx.camera.camera2.impl.Camera2DeviceSurfaceManager) -> <init>
    67:67:boolean hasProfile(int,int) -> hasProfile
androidx.camera.camera2.impl.Camera2Initializer -> androidx.camera.camera2.impl.Camera2Initializer:
    38:38:void <init>() -> <init>
    74:74:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    63:63:java.lang.String getType(android.net.Uri) -> getType
    69:69:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    43:46:boolean onCreate() -> onCreate
    57:57:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    83:83:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.camera.camera2.impl.Camera2LensFacingCameraIdFilter -> androidx.camera.camera2.impl.Camera2LensFacingCameraIdFilter:
    android.hardware.camera2.CameraManager mCameraManager -> b
    androidx.camera.core.CameraX$LensFacing mLensFacing -> a
    45:48:void <init>(android.hardware.camera2.CameraManager,androidx.camera.core.CameraX$LensFacing) -> <init>
    81:90:java.lang.Integer cameraXLensFacingToCamera2LensFacing(androidx.camera.core.CameraX$LensFacing) -> a
    53:71:java.util.Set filter(java.util.Set) -> filter
    77:77:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
androidx.camera.camera2.impl.Camera2SessionOptionUnpacker -> s0:
    androidx.camera.camera2.impl.Camera2SessionOptionUnpacker INSTANCE -> a
    38:38:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    43:97:void unpack(androidx.camera.core.UseCaseConfig,androidx.camera.core.SessionConfig$Builder) -> unpack
androidx.camera.camera2.impl.CameraAvailabilityRegistry -> t0:
    androidx.camera.core.impl.LiveDataObservable mAvailableCameras -> c
    java.lang.Object mLock -> d
    java.util.concurrent.Executor mExecutor -> b
    java.util.Map mCameraStates -> e
    int mMaxAllowedOpenedCameras -> a
    60:65:void <init>(int,java.util.concurrent.Executor) -> <init>
    76:98:void registerCamera(androidx.camera.core.BaseCamera) -> a
    110:110:androidx.camera.core.Observable getAvailableCameraCount() -> a
    117:124:void unregisterCamera(androidx.camera.core.BaseCamera,androidx.camera.core.Observable$Observer) -> a
    133:141:void updateState(androidx.camera.core.BaseCamera,androidx.camera.core.BaseCamera$State) -> a
    160:185:int recalculateAvailableCameras() -> b
androidx.camera.camera2.impl.CameraAvailabilityRegistry$1 -> t0$a:
    androidx.camera.core.BaseCamera val$camera -> a
    androidx.camera.camera2.impl.CameraAvailabilityRegistry this$0 -> b
    81:81:void <init>(androidx.camera.camera2.impl.CameraAvailabilityRegistry,androidx.camera.core.BaseCamera) -> <init>
    84:89:void onNewData(androidx.camera.core.BaseCamera$State) -> a
    95:95:void onError(java.lang.Throwable) -> onError
    81:81:void onNewData(java.lang.Object) -> onNewData
androidx.camera.camera2.impl.CameraBurstCaptureCallback -> androidx.camera.camera2.impl.CameraBurstCaptureCallback:
    java.util.Map mCallbackMap -> a
    48:50:void <init>() -> <init>
    113:114:java.util.List getCallbacks(android.hardware.camera2.CaptureRequest) -> a
    120:131:void addCamera2Callbacks(android.hardware.camera2.CaptureRequest,java.util.List) -> a
    58:61:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    66:69:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    74:77:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    84:87:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    104:104:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    110:110:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    95:98:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.CameraEventCallback -> androidx.camera.camera2.impl.CameraEventCallback:
    30:30:void <init>() -> <init>
    76:76:androidx.camera.core.CaptureConfig onDisableSession() -> onDisableSession
    53:53:androidx.camera.core.CaptureConfig onEnableSession() -> onEnableSession
    41:41:androidx.camera.core.CaptureConfig onPresetSession() -> onPresetSession
    64:64:androidx.camera.core.CaptureConfig onRepeating() -> onRepeating
androidx.camera.camera2.impl.CameraEventCallbacks -> androidx.camera.camera2.impl.CameraEventCallbacks:
    38:40:void <init>(androidx.camera.camera2.impl.CameraEventCallback[]) -> <init>
    35:35:java.lang.Object clone() -> clone
    57:59:androidx.camera.core.MultiValueSet clone() -> clone
    45:45:androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback createComboCallback() -> createComboCallback
    51:51:androidx.camera.camera2.impl.CameraEventCallbacks createEmptyCallback() -> createEmptyCallback
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback -> androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback:
    java.util.List mCallbacks -> a
    69:73:void <init>(java.util.List) -> <init>
    145:145:java.util.List getCallbacks() -> getCallbacks
    133:140:java.util.List onDisableSession() -> onDisableSession
    99:106:java.util.List onEnableSession() -> onEnableSession
    82:89:java.util.List onPresetSession() -> onPresetSession
    116:123:java.util.List onRepeating() -> onRepeating
androidx.camera.camera2.impl.CaptureCallbackAdapter -> u0:
    androidx.camera.core.CameraCaptureCallback mCameraCaptureCallback -> a
    36:38:void <init>(androidx.camera.core.CameraCaptureCallback) -> <init>
    48:52:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    59:65:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
androidx.camera.camera2.impl.CaptureCallbackContainer -> v0:
    android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback -> a
    32:34:void <init>(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> <init>
    40:40:androidx.camera.camera2.impl.CaptureCallbackContainer create(android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    45:45:android.hardware.camera2.CameraCaptureSession$CaptureCallback getCaptureCallback() -> a
androidx.camera.camera2.impl.CaptureCallbackConverter -> w0:
    40:45:android.hardware.camera2.CameraCaptureSession$CaptureCallback toCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> a
    63:79:void toCaptureCallback(androidx.camera.core.CameraCaptureCallback,java.util.List) -> a
androidx.camera.camera2.impl.CaptureSession -> x0:
    boolean mCloseSurfacesOnSessionClose -> j
    androidx.camera.core.Config mCameraEventOnRepeatingOptions -> h
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer mReleaseCompleter -> n
    java.util.concurrent.Executor mExecutor -> b
    android.hardware.camera2.CameraCaptureSession$CaptureCallback mCaptureCallback -> d
    androidx.camera.core.SessionConfig mSessionConfig -> g
    androidx.camera.camera2.impl.CaptureSession$StateCallback mCaptureSessionStateCallback -> e
    androidx.camera.camera2.impl.CaptureSession$State mState -> l
    com.google.common.util.concurrent.ListenableFuture mReleaseFuture -> m
    java.util.List mCaptureConfigs -> c
    java.util.Map mConfiguredSurfaceMap -> i
    java.lang.Object mStateLock -> a
    android.hardware.camera2.CameraCaptureSession mCameraCaptureSession -> f
    java.util.List mConfiguredDeferrableSurfaces -> k
    129:139:void <init>(java.util.concurrent.Executor,boolean) -> <init>
    163:189:void setSessionConfig(androidx.camera.core.SessionConfig) -> a
    206:303:void open(androidx.camera.core.SessionConfig,android.hardware.camera2.CameraDevice) -> a
    316:356:void close() -> a
    369:425:com.google.common.util.concurrent.ListenableFuture release(boolean) -> a
    466:486:void issueCaptureRequests(java.util.List) -> a
    640:646:android.hardware.camera2.CameraCaptureSession$CaptureCallback createCamera2CaptureCallback(java.util.List,android.hardware.camera2.CameraCaptureSession$CaptureCallback[]) -> a
    851:858:void closeConfiguredDeferrableSurfaces() -> b
    861:872:java.util.List setupConfiguredSurface(java.util.List) -> b
    436:437:void forceClose() -> c
    660:682:androidx.camera.core.Config mergeOptions(java.util.List) -> c
    491:493:java.util.List getCaptureConfigs() -> d
    878:882:java.util.concurrent.Executor getExecutor() -> e
    147:149:androidx.camera.core.SessionConfig getSessionConfig() -> f
    557:634:void issueBurstCaptureRequest() -> g
    509:553:void issueRepeatingCaptureRequests() -> h
    441:445:void notifySurfaceAttached() -> i
    450:457:void notifySurfaceDetached() -> j
androidx.camera.camera2.impl.CaptureSession$1 -> x0$a:
    78:78:void <init>(androidx.camera.camera2.impl.CaptureSession) -> <init>
    84:84:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
androidx.camera.camera2.impl.CaptureSession$2 -> x0$b:
    androidx.camera.camera2.impl.CaptureSession this$0 -> a
    405:405:void <init>(androidx.camera.camera2.impl.CaptureSession) -> <init>
    409:413:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.camera2.impl.CaptureSession$Builder -> x0$c:
    java.util.concurrent.Executor mExecutor -> a
    int mSupportedHardwareLevel -> b
    885:887:void <init>() -> <init>
    890:900:androidx.camera.camera2.impl.CaptureSession build() -> a
    904:905:void setExecutor(java.util.concurrent.Executor) -> a
    908:909:void setSupportedHardwareLevel(int) -> a
androidx.camera.camera2.impl.CaptureSession$State -> x0$d:
    androidx.camera.camera2.impl.CaptureSession$State UNINITIALIZED -> a
    androidx.camera.camera2.impl.CaptureSession$State[] $VALUES -> h
    androidx.camera.camera2.impl.CaptureSession$State INITIALIZED -> b
    androidx.camera.camera2.impl.CaptureSession$State OPENING -> c
    androidx.camera.camera2.impl.CaptureSession$State OPENED -> d
    androidx.camera.camera2.impl.CaptureSession$State CLOSED -> e
    androidx.camera.camera2.impl.CaptureSession$State RELEASING -> f
    androidx.camera.camera2.impl.CaptureSession$State RELEASED -> g
    687:685:void <clinit>() -> <clinit>
    685:685:void <init>(java.lang.String,int) -> <init>
    685:685:androidx.camera.camera2.impl.CaptureSession$State valueOf(java.lang.String) -> valueOf
    685:685:androidx.camera.camera2.impl.CaptureSession$State[] values() -> values
androidx.camera.camera2.impl.CaptureSession$StateCallback -> x0$e:
    androidx.camera.camera2.impl.CaptureSession this$0 -> a
    725:725:void <init>(androidx.camera.camera2.impl.CaptureSession) -> <init>
    797:822:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    827:845:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    734:771:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    776:792:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
androidx.camera.camera2.impl.FocusMeteringControl -> y0:
    androidx.camera.camera2.impl.Camera2CameraControl mCameraControl -> a
    java.lang.Integer mCurrentAfState -> f
    androidx.camera.core.FocusMeteringAction mCurrentFocusMeteringAction -> d
    long mFocusTimeoutCounter -> h
    java.util.concurrent.Executor mExecutor -> b
    boolean mIsInAfAutoMode -> e
    java.util.concurrent.ScheduledFuture mAutoCancelHandle -> g
    androidx.camera.camera2.impl.Camera2CameraControl$CaptureResultListener mSessionListenerForFocus -> i
    java.util.concurrent.ScheduledExecutorService mScheduler -> c
    android.hardware.camera2.params.MeteringRectangle[] mAfRects -> j
    android.hardware.camera2.params.MeteringRectangle[] mAeRects -> k
    android.hardware.camera2.params.MeteringRectangle[] mAwbRects -> l
    84:88:void <init>(androidx.camera.camera2.impl.Camera2CameraControl,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService) -> <init>
    96:116:void addFocusMeteringOptions(androidx.camera.camera2.Camera2Config$Builder) -> a
    123:150:android.graphics.PointF getFOVAdjustedPoint(androidx.camera.core.MeteringPoint,android.util.Rational,android.util.Rational) -> a
    156:174:android.hardware.camera2.params.MeteringRectangle getMeteringRect(androidx.camera.core.MeteringPoint,android.graphics.PointF,android.graphics.Rect) -> a
    179:179:int rangeLimit(int,int,int) -> a
    185:234:void startFocusAndMetering(androidx.camera.core.FocusMeteringAction,android.util.Rational) -> a
    268:283:void cancelAfAeTrigger(boolean,boolean) -> a
    300:388:void executeMeteringAction(android.hardware.camera2.params.MeteringRectangle[],android.hardware.camera2.params.MeteringRectangle[],android.hardware.camera2.params.MeteringRectangle[],androidx.camera.core.FocusMeteringAction) -> a
    397:414:void cancelFocusAndMetering() -> a
    288:292:void disableAutoCancel() -> b
    238:238:int getDefaultTemplate() -> c
    392:392:boolean shouldTriggerAF() -> d
    255:263:void triggerAePrecapture() -> e
    243:251:void triggerAf() -> f
androidx.camera.camera2.impl.FocusMeteringControl$1 -> y0$a:
    androidx.camera.core.FocusMeteringAction val$focusMeteringAction -> a
    androidx.camera.camera2.impl.FocusMeteringControl this$0 -> b
    327:327:void <init>(androidx.camera.camera2.impl.FocusMeteringControl,androidx.camera.core.FocusMeteringAction) -> <init>
    333:351:boolean onCaptureResult(android.hardware.camera2.TotalCaptureResult) -> a
androidx.camera.camera2.impl.FocusMeteringControl$2 -> y0$b:
    long val$timeoutId -> a
    androidx.camera.camera2.impl.FocusMeteringControl this$0 -> b
    369:369:void <init>(androidx.camera.camera2.impl.FocusMeteringControl,long) -> <init>
    372:381:void run() -> run
androidx.camera.camera2.impl.FocusMeteringControl$2$1 -> y0$b$a:
    androidx.camera.camera2.impl.FocusMeteringControl$2 this$1 -> a
    372:372:void <init>(androidx.camera.camera2.impl.FocusMeteringControl$2) -> <init>
    376:379:void run() -> run
androidx.camera.camera2.impl.ImageAnalysisConfigProvider -> androidx.camera.camera2.impl.ImageAnalysisConfigProvider:
    androidx.camera.core.CameraFactory mCameraFactory -> a
    android.util.Rational DEFAULT_ASPECT_RATIO_4_3 -> c
    android.util.Rational DEFAULT_ASPECT_RATIO_3_4 -> d
    android.view.WindowManager mWindowManager -> b
    43:44:void <clinit>() -> <clinit>
    49:52:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
    40:40:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    56:94:androidx.camera.core.ImageAnalysisConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.camera2.impl.ImageCaptureConfigProvider -> androidx.camera.camera2.impl.ImageCaptureConfigProvider:
    androidx.camera.core.CameraFactory mCameraFactory -> a
    android.util.Rational DEFAULT_ASPECT_RATIO_4_3 -> c
    android.util.Rational DEFAULT_ASPECT_RATIO_3_4 -> d
    android.view.WindowManager mWindowManager -> b
    43:44:void <clinit>() -> <clinit>
    49:52:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
    40:40:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    56:94:androidx.camera.core.ImageCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.camera2.impl.ImageCaptureOptionUnpacker -> z0:
    androidx.camera.core.DeviceProperties mDeviceProperties -> b
    androidx.camera.camera2.impl.ImageCaptureOptionUnpacker INSTANCE -> c
    36:36:void <clinit>() -> <clinit>
    34:38:void <init>() -> <init>
    65:85:void applyPixelHdrPlusChangeForCaptureMode(androidx.camera.core.ImageCapture$CaptureMode,androidx.camera.camera2.Camera2Config$Builder) -> a
    42:45:void unpack(androidx.camera.core.UseCaseConfig,androidx.camera.core.CaptureConfig$Builder) -> unpack
androidx.camera.camera2.impl.PreviewConfigProvider -> androidx.camera.camera2.impl.PreviewConfigProvider:
    androidx.camera.core.CameraFactory mCameraFactory -> a
    android.util.Rational DEFAULT_ASPECT_RATIO_4_3 -> c
    android.util.Rational DEFAULT_ASPECT_RATIO_3_4 -> d
    android.view.WindowManager mWindowManager -> b
    43:44:void <clinit>() -> <clinit>
    49:52:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
    40:40:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    56:92:androidx.camera.core.PreviewConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.camera2.impl.SupportedSurfaceCombination -> a1:
    androidx.camera.camera2.impl.CamcorderProfileHelper mCamcorderProfileHelper -> i
    android.util.Rational ASPECT_RATIO_4_3 -> q
    android.util.Rational ASPECT_RATIO_3_4 -> r
    android.util.Rational ASPECT_RATIO_16_9 -> s
    android.util.Rational ASPECT_RATIO_9_16 -> t
    int mHardwareLevel -> e
    android.util.Size QUALITY_480P_SIZE -> p
    android.util.Size QUALITY_720P_SIZE -> o
    android.util.Size QUALITY_1080P_SIZE -> n
    android.util.Size QUALITY_2160P_SIZE -> m
    java.util.List mSurfaceCombinations -> a
    java.util.Map mMaxSizeCache -> b
    android.util.Size ZERO_SIZE -> l
    android.util.Size DEFAULT_SIZE -> k
    android.util.Size MAX_PREVIEW_SIZE -> j
    boolean mIsRawSupported -> f
    boolean mIsBurstCaptureSupported -> g
    android.hardware.camera2.CameraCharacteristics mCharacteristics -> d
    java.lang.String mCameraId -> c
    androidx.camera.core.SurfaceSizeDefinition mSurfaceSizeDefinition -> h
    69:80:void <clinit>() -> <clinit>
    92:96:void <init>(android.content.Context,java.lang.String,androidx.camera.camera2.impl.CamcorderProfileHelper) -> <init>
    98:99:void <init>() -> <init>
    121:131:boolean checkSupported(java.util.List) -> a
    143:146:androidx.camera.core.SurfaceConfig transformSurfaceConfig(int,android.util.Size) -> a
    190:248:java.util.Map getSuggestedResolutions(java.util.List,java.util.List) -> a
    260:276:android.util.Rational getCorrectedAspectRatio(androidx.camera.core.UseCaseConfig) -> a
    284:290:android.util.Size fetchMaxSize(int) -> a
    330:356:java.util.List getSupportedOutputSizes(androidx.camera.core.UseCase) -> a
    442:449:android.util.Rational rotateAspectRatioByRotation(android.util.Rational,int) -> a
    465:473:boolean hasMatchingAspectRatio(android.util.Size,android.util.Rational) -> a
    494:494:int getArea(android.util.Size) -> a
    498:501:boolean ratioIntersectsMod16Segment(int,int,android.util.Rational) -> a
    507:530:void removeSupportedSizesByTargetSize(java.util.List,android.util.Size) -> a
    592:640:android.util.Size[] getAllOutputSizesByFormat(int,androidx.camera.core.UseCase) -> a
    664:673:void init(android.content.Context) -> a
    1008:1056:void generateSupportedCombinationList(android.hardware.camera2.CameraManager) -> a
    1060:1060:void checkCustomization() -> a
    1066:1071:void generateSurfaceSizeDefinition(android.view.WindowManager) -> a
    477:490:boolean isPossibleMod16FromAspectRatio(android.util.Size,android.util.Rational) -> b
    534:544:java.util.List getAllPossibleSizeArrangements(java.util.List) -> b
    587:587:android.util.Size[] getAllOutputSizesByFormat(int) -> b
    947:973:java.util.List getBurstSupportedCombinationList() -> b
    1078:1096:android.util.Size getPreviewSize(android.view.WindowManager) -> b
    294:326:java.util.List getUseCasesPriorityOrder(java.util.List) -> c
    658:660:android.util.Size getMaxOutputSizeByFormat(int) -> c
    809:865:java.util.List getFullSupportedCombinationList() -> c
    455:458:boolean isRotationNeeded(int) -> d
    682:745:java.util.List getLegacySupportedCombinationList() -> d
    977:1003:java.util.List getLevel3SupportedCombinationList() -> e
    749:805:java.util.List getLimitedSupportedCombinationList() -> f
    869:943:java.util.List getRAWSupportedCombinationList() -> g
    1104:1121:android.util.Size getRecordSize() -> h
    280:280:androidx.camera.core.SurfaceSizeDefinition getSurfaceSizeDefinition() -> i
    254:254:boolean requiresCorrectedAspectRatio() -> j
androidx.camera.camera2.impl.SupportedSurfaceCombination$CompareSizesByArea -> a1$a:
    boolean mReverse -> a
    1128:1129:void <init>() -> <init>
    1131:1133:void <init>(boolean) -> <init>
    1138:1147:int compare(android.util.Size,android.util.Size) -> a
    1125:1125:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.camera2.impl.SupportedSurfaceCombination$CompareSizesByDistanceToTargetRatio -> a1$b:
    java.lang.Float mTargetRatio -> a
    1155:1157:void <init>(java.lang.Float) -> <init>
    1162:1169:int compare(android.util.Size,android.util.Size) -> a
    1152:1152:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.camera2.impl.UseCaseSurfaceOccupancyManager -> b1:
    35:39:void checkUseCaseLimitNotExceeded(java.util.List,java.util.List) -> a
androidx.camera.camera2.impl.VideoCaptureConfigProvider -> androidx.camera.camera2.impl.VideoCaptureConfigProvider:
    androidx.camera.core.CameraFactory mCameraFactory -> a
    android.util.Rational DEFAULT_ASPECT_RATIO_16_9 -> c
    android.util.Rational DEFAULT_ASPECT_RATIO_9_16 -> d
    android.view.WindowManager mWindowManager -> b
    43:44:void <clinit>() -> <clinit>
    49:52:void <init>(androidx.camera.core.CameraFactory,android.content.Context) -> <init>
    40:40:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    56:94:androidx.camera.core.VideoCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CameraCaptureSessionCompatImpl IMPL -> a
    42:42:void <clinit>() -> <clinit>
    45:46:void <init>() -> <init>
    49:53:androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CameraCaptureSessionCompatImpl chooseImplementation() -> a
    103:103:int captureBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> captureBurstRequests
    149:149:int captureSingleRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> captureSingleRequest
    194:194:int setRepeatingBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> setRepeatingBurstRequests
    236:236:int setSingleRepeatingRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> setSingleRepeatingRequest
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CameraCaptureSessionCompatImpl -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$a:
    int captureSingleRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    int setRepeatingBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    int captureBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
    int setSingleRepeatingRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b:
    java.util.concurrent.Executor mExecutor -> b
    android.hardware.camera2.CameraCaptureSession$CaptureCallback mWrappedCallback -> a
    275:278:void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> <init>
    358:365:void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> onCaptureBufferLost
    308:315:void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    320:327:void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    296:303:void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> onCaptureProgressed
    344:351:void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
    332:339:void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    284:291:void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> onCaptureStarted
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$1 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$a:
    android.hardware.camera2.CaptureRequest val$request -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> e
    long val$frameNumber -> d
    long val$timestamp -> c
    284:284:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long) -> <init>
    288:289:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$2 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$b:
    android.hardware.camera2.CaptureRequest val$request -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    android.hardware.camera2.CaptureResult val$partialResult -> c
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> d
    296:296:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult) -> <init>
    300:301:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$3 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$c:
    android.hardware.camera2.CaptureRequest val$request -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    android.hardware.camera2.TotalCaptureResult val$result -> c
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> d
    308:308:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> <init>
    312:313:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$4 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$d:
    android.hardware.camera2.CaptureRequest val$request -> b
    android.hardware.camera2.CaptureFailure val$failure -> c
    android.hardware.camera2.CameraCaptureSession val$session -> a
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> d
    320:320:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> <init>
    324:325:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$5 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$e:
    android.hardware.camera2.CameraCaptureSession val$session -> a
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> d
    long val$frameNumber -> c
    int val$sequenceId -> b
    332:332:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,int,long) -> <init>
    336:337:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$6 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$f:
    android.hardware.camera2.CameraCaptureSession val$session -> a
    int val$sequenceId -> b
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> c
    344:344:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,int) -> <init>
    348:349:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper$7 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$b$g:
    android.hardware.camera2.CaptureRequest val$request -> b
    android.view.Surface val$target -> c
    android.hardware.camera2.CameraCaptureSession val$session -> a
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper this$0 -> e
    long val$frameNumber -> d
    358:358:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$CaptureCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long) -> <init>
    362:363:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c:
    android.hardware.camera2.CameraCaptureSession$StateCallback mWrappedCallback -> a
    java.util.concurrent.Executor mExecutor -> b
    374:377:void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback) -> <init>
    414:421:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    426:433:void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession) -> onCaptureQueueEmpty
    438:445:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    392:399:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    381:388:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    403:410:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    451:458:void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> onSurfacePrepared
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$1 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$a:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    381:381:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    385:386:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$2 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$b:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    392:392:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    396:397:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$3 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$c:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    403:403:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    407:408:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$4 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$d:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    414:414:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    418:419:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$5 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$e:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    426:426:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    430:431:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$6 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$f:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> b
    android.hardware.camera2.CameraCaptureSession val$session -> a
    438:438:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession) -> <init>
    442:443:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper$7 -> androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$c$g:
    androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper this$0 -> c
    android.hardware.camera2.CameraCaptureSession val$session -> a
    android.view.Surface val$surface -> b
    451:451:void <init>(androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> <init>
    455:456:void run() -> run
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompatApi28Impl -> c1:
    31:31:void <init>() -> <init>
    46:49:int captureSingleRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    56:59:int setRepeatingBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    36:39:int captureBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
    66:69:int setSingleRepeatingRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompatBaseImpl -> d1:
    32:32:void <init>() -> <init>
    51:57:int captureSingleRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    64:70:int setRepeatingBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> a
    38:44:int captureBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
    77:83:int setSingleRepeatingRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback) -> b
androidx.camera.camera2.impl.compat.CameraDeviceCompat -> androidx.camera.camera2.impl.compat.CameraDeviceCompat:
    androidx.camera.camera2.impl.compat.CameraDeviceCompat$CameraDeviceCompatImpl IMPL -> a
    55:55:void <clinit>() -> <clinit>
    58:59:void <init>() -> <init>
    79:87:androidx.camera.camera2.impl.compat.CameraDeviceCompat$CameraDeviceCompatImpl chooseImplementation() -> a
    75:76:void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> createCaptureSession
androidx.camera.camera2.impl.compat.CameraDeviceCompat$CameraDeviceCompatImpl -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$a:
    void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> a
androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$b:
    java.util.concurrent.Executor mExecutor -> b
    android.hardware.camera2.CameraDevice$StateCallback mWrappedCallback -> a
    101:104:void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback) -> <init>
    138:144:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    118:124:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    128:134:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    108:114:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper$1 -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$b$a:
    android.hardware.camera2.CameraDevice val$camera -> a
    androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper this$0 -> b
    108:108:void <init>(androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraDevice) -> <init>
    111:112:void run() -> run
androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper$2 -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$b$b:
    android.hardware.camera2.CameraDevice val$camera -> a
    androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper this$0 -> b
    118:118:void <init>(androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraDevice) -> <init>
    121:122:void run() -> run
androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper$3 -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$b$c:
    android.hardware.camera2.CameraDevice val$camera -> a
    int val$error -> b
    androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper this$0 -> c
    128:128:void <init>(androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraDevice,int) -> <init>
    131:132:void run() -> run
androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper$4 -> androidx.camera.camera2.impl.compat.CameraDeviceCompat$b$d:
    android.hardware.camera2.CameraDevice val$camera -> a
    androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper this$0 -> b
    138:138:void <init>(androidx.camera.camera2.impl.compat.CameraDeviceCompat$StateCallbackExecutorWrapper,android.hardware.camera2.CameraDevice) -> <init>
    141:142:void run() -> run
androidx.camera.camera2.impl.compat.CameraDeviceCompatApi23Impl -> e1:
    36:36:void <init>() -> <init>
    41:67:void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> a
androidx.camera.camera2.impl.compat.CameraDeviceCompatApi24Impl -> f1:
    36:36:void <init>() -> <init>
    41:70:void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> a
androidx.camera.camera2.impl.compat.CameraDeviceCompatApi28Impl -> g1:
    29:29:void <init>() -> <init>
    34:40:void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> a
androidx.camera.camera2.impl.compat.CameraDeviceCompatBaseImpl -> h1:
    37:37:void <init>() -> <init>
    39:44:java.util.List unpackSurfaces(java.util.List) -> a
    76:85:void checkPhysicalCameraIdValid(android.hardware.camera2.CameraDevice,java.util.List) -> a
    90:91:void createBaseCaptureSession(android.hardware.camera2.CameraDevice,java.util.List,android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler) -> a
    96:99:void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> a
    48:54:void checkPreconditions(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat) -> b
androidx.camera.camera2.impl.compat.CameraManagerCompat -> androidx.camera.camera2.impl.compat.CameraManagerCompat:
    androidx.camera.camera2.impl.compat.CameraManagerCompat$CameraManagerCompatImpl mImpl -> a
    40:42:void <init>(androidx.camera.camera2.impl.compat.CameraManagerCompat$CameraManagerCompatImpl) -> <init>
    47:51:androidx.camera.camera2.impl.compat.CameraManagerCompat from(android.content.Context) -> from
    124:125:void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback) -> openCamera
    77:78:void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback) -> registerAvailabilityCallback
    94:95:void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback) -> unregisterAvailabilityCallback
    135:135:android.hardware.camera2.CameraManager unwrap() -> unwrap
androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper -> androidx.camera.camera2.impl.compat.CameraManagerCompat$a:
    android.hardware.camera2.CameraManager$AvailabilityCallback mWrappedCallback -> b
    java.util.concurrent.Executor mExecutor -> a
    163:166:void <init>(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback) -> <init>
    170:176:void onCameraAccessPrioritiesChanged() -> onCameraAccessPrioritiesChanged
    179:185:void onCameraAvailable(java.lang.String) -> onCameraAvailable
    189:195:void onCameraUnavailable(java.lang.String) -> onCameraUnavailable
androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper$1 -> androidx.camera.camera2.impl.compat.CameraManagerCompat$a$a:
    androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper this$0 -> a
    170:170:void <init>(androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper) -> <init>
    173:174:void run() -> run
androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper$2 -> androidx.camera.camera2.impl.compat.CameraManagerCompat$a$b:
    androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper this$0 -> b
    java.lang.String val$cameraId -> a
    179:179:void <init>(androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper,java.lang.String) -> <init>
    182:183:void run() -> run
androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper$3 -> androidx.camera.camera2.impl.compat.CameraManagerCompat$a$c:
    androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper this$0 -> b
    java.lang.String val$cameraId -> a
    189:189:void <init>(androidx.camera.camera2.impl.compat.CameraManagerCompat$AvailabilityCallbackExecutorWrapper,java.lang.String) -> <init>
    192:193:void run() -> run
androidx.camera.camera2.impl.compat.CameraManagerCompat$CameraManagerCompatImpl -> androidx.camera.camera2.impl.compat.CameraManagerCompat$b:
    void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback) -> a
    void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
    void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
androidx.camera.camera2.impl.compat.CameraManagerCompatApi28Impl -> i1:
    35:36:void <init>(android.content.Context) -> <init>
    43:44:void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
    51:52:void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
    60:61:void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback) -> a
androidx.camera.camera2.impl.compat.CameraManagerCompatBaseImpl -> j1:
    android.hardware.camera2.CameraManager mCameraManager -> a
    java.lang.Object mObject -> b
    42:45:void <init>(android.content.Context,java.lang.Object) -> <init>
    47:50:void <init>(android.content.Context) -> <init>
    55:56:void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
    78:87:void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback) -> a
    93:101:void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback) -> a
    106:106:android.hardware.camera2.CameraManager getCameraManager() -> a
androidx.camera.camera2.impl.compat.CameraManagerCompatBaseImpl$CameraManagerCompatParamsApi21 -> j1$a:
    java.util.Map mWrapperMap -> a
    109:110:void <init>() -> <init>
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat -> androidx.camera.camera2.impl.compat.params.InputConfigurationCompat:
    androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$InputConfigurationCompatImpl mImpl -> a
    52:58:void <init>(int,int,int) -> <init>
    60:62:void <init>(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$InputConfigurationCompatImpl) -> <init>
    125:129:boolean equals(java.lang.Object) -> equals
    111:111:int getFormat() -> getFormat
    102:102:int getHeight() -> getHeight
    93:93:int getWidth() -> getWidth
    137:137:int hashCode() -> hashCode
    150:150:java.lang.String toString() -> toString
    164:164:java.lang.Object unwrap() -> unwrap
    77:83:androidx.camera.camera2.impl.compat.params.InputConfigurationCompat wrap(java.lang.Object) -> wrap
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$InputConfigurationCompatApi23Impl -> androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$a:
    android.hardware.camera2.params.InputConfiguration mObject -> a
    251:253:void <init>(java.lang.Object) -> <init>
    256:257:void <init>(int,int,int) -> <init>
    277:277:java.lang.Object getInputConfiguration() -> a
    282:285:boolean equals(java.lang.Object) -> equals
    271:271:int getFormat() -> getFormat
    266:266:int getHeight() -> getHeight
    261:261:int getWidth() -> getWidth
    291:291:int hashCode() -> hashCode
    296:296:java.lang.String toString() -> toString
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$InputConfigurationCompatBaseImpl -> androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$b:
    int mHeight -> b
    int mFormat -> c
    int mWidth -> a
    186:190:void <init>(int,int,int) -> <init>
    209:209:java.lang.Object getInputConfiguration() -> a
    214:221:boolean equals(java.lang.Object) -> equals
    204:204:int getFormat() -> getFormat
    199:199:int getHeight() -> getHeight
    194:194:int getWidth() -> getWidth
    228:234:int hashCode() -> hashCode
    240:240:java.lang.String toString() -> toString
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$InputConfigurationCompatImpl -> androidx.camera.camera2.impl.compat.params.InputConfigurationCompat$c:
    java.lang.Object getInputConfiguration() -> a
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat -> androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat:
    androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat$OutputConfigurationCompatImpl mImpl -> a
    49:59:void <init>(android.view.Surface) -> <init>
    93:100:void <init>(android.util.Size,java.lang.Class) -> <init>
    102:104:void <init>(androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat$OutputConfigurationCompatImpl) -> <init>
    265:266:void addSurface(android.view.Surface) -> addSurface
    178:179:void enableSurfaceSharing() -> enableSurfaceSharing
    343:347:boolean equals(java.lang.Object) -> equals
    293:293:int getMaxSharedSurfaceCount() -> getMaxSharedSurfaceCount
    189:189:java.lang.String getPhysicalCameraId() -> getPhysicalCameraId
    305:305:android.view.Surface getSurface() -> getSurface
    328:328:int getSurfaceGroupId() -> getSurfaceGroupId
    318:318:java.util.List getSurfaces() -> getSurfaces
    355:355:int hashCode() -> hashCode
    283:284:void removeSurface(android.view.Surface) -> removeSurface
    220:221:void setPhysicalCameraId(java.lang.String) -> setPhysicalCameraId
    368:368:java.lang.Object unwrap() -> unwrap
    119:139:androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat wrap(java.lang.Object) -> wrap
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat$OutputConfigurationCompatImpl -> androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat$a:
    int getMaxSharedSurfaceCount() -> a
    void removeSurface(android.view.Surface) -> a
    void setPhysicalCameraId(java.lang.String) -> a
    void addSurface(android.view.Surface) -> b
    java.util.List getSurfaces() -> b
    java.lang.String getPhysicalCameraId() -> c
    void enableSurfaceSharing() -> d
    java.lang.Object getOutputConfiguration() -> e
    int getSurfaceGroupId() -> f
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi24Impl -> k1:
    38:39:void <init>(android.view.Surface) -> <init>
    42:43:void <init>(java.lang.Object) -> <init>
    48:48:androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi24Impl wrap(android.hardware.camera2.params.OutputConfiguration) -> a
    70:71:void setPhysicalCameraId(java.lang.String) -> a
    88:88:java.util.List getSurfaces() -> b
    76:76:java.lang.String getPhysicalCameraId() -> c
    57:58:void enableSurfaceSharing() -> d
    98:99:java.lang.Object getOutputConfiguration() -> e
    93:93:int getSurfaceGroupId() -> f
    62:62:boolean isSurfaceSharingEnabled() -> g
    82:82:android.view.Surface getSurface() -> getSurface
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi24Impl$OutputConfigurationParamsApi24 -> k1$a:
    android.hardware.camera2.params.OutputConfiguration mOutputConfiguration -> a
    java.lang.String mPhysicalCameraId -> b
    boolean mIsShared -> c
    108:110:void <init>(android.hardware.camera2.params.OutputConfiguration) -> <init>
    114:120:boolean equals(java.lang.Object) -> equals
    128:137:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi26Impl -> l1:
    42:43:void <init>(android.view.Surface) -> <init>
    46:47:void <init>(java.lang.Object) -> <init>
    52:52:androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi26Impl wrap(android.hardware.camera2.params.OutputConfiguration) -> a
    104:105:void setPhysicalCameraId(java.lang.String) -> a
    118:119:void removeSurface(android.view.Surface) -> a
    142:145:int getMaxSharedSurfaceCount() -> a
    71:73:java.util.List getMutableSurfaceListApi26(android.hardware.camera2.params.OutputConfiguration) -> b
    96:97:void addSurface(android.view.Surface) -> b
    155:155:java.util.List getSurfaces() -> b
    110:110:java.lang.String getPhysicalCameraId() -> c
    83:84:void enableSurfaceSharing() -> d
    160:161:java.lang.Object getOutputConfiguration() -> e
    88:88:boolean isSurfaceSharingEnabled() -> g
    62:65:int getMaxSharedSurfaceCountApi26() -> h
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi26Impl$OutputConfigurationParamsApi26 -> l1$a:
    android.hardware.camera2.params.OutputConfiguration mOutputConfiguration -> a
    java.lang.String mPhysicalCameraId -> b
    169:171:void <init>(android.hardware.camera2.params.OutputConfiguration) -> <init>
    175:181:boolean equals(java.lang.Object) -> equals
    188:196:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi28Impl -> m1:
    34:35:void <init>(android.view.Surface) -> <init>
    38:39:void <init>(java.lang.Object) -> <init>
    44:44:androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatApi28Impl wrap(android.hardware.camera2.params.OutputConfiguration) -> a
    52:53:void removeSurface(android.view.Surface) -> a
    60:60:int getMaxSharedSurfaceCount() -> a
    68:69:void setPhysicalCameraId(java.lang.String) -> a
    75:75:java.lang.String getPhysicalCameraId() -> c
    80:81:java.lang.Object getOutputConfiguration() -> e
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatBaseImpl -> n1:
    java.lang.Object mObject -> a
    47:49:void <init>(android.view.Surface) -> <init>
    54:56:void <init>(java.lang.Object) -> <init>
    75:76:void setPhysicalCameraId(java.lang.String) -> a
    112:118:void removeSurface(android.view.Surface) -> a
    128:128:int getMaxSharedSurfaceCount() -> a
    91:93:void addSurface(android.view.Surface) -> b
    152:152:java.util.List getSurfaces() -> b
    81:81:java.lang.String getPhysicalCameraId() -> c
    63:64:void enableSurfaceSharing() -> d
    164:164:java.lang.Object getOutputConfiguration() -> e
    179:183:boolean equals(java.lang.Object) -> equals
    158:158:int getSurfaceGroupId() -> f
    67:67:boolean isSurfaceSharingEnabled() -> g
    137:142:android.view.Surface getSurface() -> getSurface
    191:191:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompatBaseImpl$OutputConfigurationParamsApi21 -> n1$a:
    java.util.List mSurfaces -> a
    boolean mIsShared -> f
    int mConfiguredGenerationId -> d
    android.util.Size mConfiguredSize -> b
    int mConfiguredFormat -> c
    java.lang.String mPhysicalCameraId -> e
    217:223:void <init>(android.view.Surface) -> <init>
    249:262:int getSurfaceFormat(android.view.Surface) -> a
    271:275:int getSurfaceGenerationId(android.view.Surface) -> b
    232:242:android.util.Size getSurfaceSize(android.view.Surface) -> c
    283:294:boolean equals(java.lang.Object) -> equals
    309:321:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat -> androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat:
    androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionConfigurationCompatImpl mImpl -> a
    85:93:void <init>(int,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback) -> <init>
    95:97:void <init>(androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionConfigurationCompatImpl) -> <init>
    126:131:java.util.List transformToCompat(java.util.List) -> a
    252:256:boolean equals(java.lang.Object) -> equals
    181:181:java.util.concurrent.Executor getExecutor() -> getExecutor
    190:190:androidx.camera.camera2.impl.compat.params.InputConfigurationCompat getInputConfiguration() -> getInputConfiguration
    163:163:java.util.List getOutputConfigurations() -> getOutputConfigurations
    212:212:android.hardware.camera2.CaptureRequest getSessionParameters() -> getSessionParameters
    154:154:int getSessionType() -> getSessionType
    172:172:android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback() -> getStateCallback
    202:203:void setInputConfiguration(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat) -> setInputConfiguration
    234:235:void setSessionParameters(android.hardware.camera2.CaptureRequest) -> setSessionParameters
    139:144:java.util.List transformFromCompat(java.util.List) -> transformFromCompat
    247:247:java.lang.Object unwrap() -> unwrap
    112:119:androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat wrap(java.lang.Object) -> wrap
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionConfigurationCompatApi28Impl -> androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$a:
    java.util.List mOutputConfigurations -> b
    android.hardware.camera2.params.SessionConfiguration mObject -> a
    407:411:void <init>(java.lang.Object) -> <init>
    417:418:void <init>(int,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback) -> <init>
    443:443:androidx.camera.camera2.impl.compat.params.InputConfigurationCompat getInputConfiguration() -> a
    448:449:void setInputConfiguration(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat) -> a
    458:459:void setSessionParameters(android.hardware.camera2.CaptureRequest) -> a
    464:464:java.lang.Object getSessionConfiguration() -> b
    422:422:int getSessionType() -> c
    438:438:java.util.concurrent.Executor getExecutor() -> d
    433:433:android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback() -> e
    469:473:boolean equals(java.lang.Object) -> equals
    428:428:java.util.List getOutputConfigurations() -> f
    453:453:android.hardware.camera2.CaptureRequest getSessionParameters() -> g
    478:478:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionConfigurationCompatBaseImpl -> androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$b:
    java.util.List mOutputConfigurations -> a
    android.hardware.camera2.CameraCaptureSession$StateCallback mStateCallback -> b
    android.hardware.camera2.CaptureRequest mSessionParameters -> f
    java.util.concurrent.Executor mExecutor -> c
    androidx.camera.camera2.impl.compat.params.InputConfigurationCompat mInputConfig -> e
    int mSessionType -> d
    302:307:void <init>(int,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback) -> <init>
    332:332:androidx.camera.camera2.impl.compat.params.InputConfigurationCompat getInputConfiguration() -> a
    337:340:void setInputConfiguration(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat) -> a
    352:353:void setSessionParameters(android.hardware.camera2.CaptureRequest) -> a
    358:358:java.lang.Object getSessionConfiguration() -> b
    311:311:int getSessionType() -> c
    326:326:java.util.concurrent.Executor getExecutor() -> d
    321:321:android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback() -> e
    363:382:boolean equals(java.lang.Object) -> equals
    316:316:java.util.List getOutputConfigurations() -> f
    347:347:android.hardware.camera2.CaptureRequest getSessionParameters() -> g
    387:396:int hashCode() -> hashCode
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionConfigurationCompatImpl -> androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$c:
    androidx.camera.camera2.impl.compat.params.InputConfigurationCompat getInputConfiguration() -> a
    void setInputConfiguration(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat) -> a
    void setSessionParameters(android.hardware.camera2.CaptureRequest) -> a
    java.lang.Object getSessionConfiguration() -> b
    int getSessionType() -> c
    java.util.concurrent.Executor getExecutor() -> d
    android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback() -> e
    java.util.List getOutputConfigurations() -> f
    android.hardware.camera2.CaptureRequest getSessionParameters() -> g
androidx.camera.core.-$$Lambda$CameraRepository$aEDlNx9TCoGh32RTJWIYsY4vL5Y -> o1:
    androidx.camera.core.CameraRepository f$0 -> a
androidx.camera.core.-$$Lambda$CameraRepository$uURbfXM7tkGK6jSncRM-ZODrZas -> p1:
    androidx.camera.core.CameraRepository f$0 -> a
    androidx.camera.core.BaseCamera f$1 -> b
androidx.camera.core.-$$Lambda$Preview$qML5DlrImCBrd-9RtDjP3HCgo9E -> q1:
    androidx.camera.core.Preview$OnPreviewOutputUpdateListener f$0 -> a
    androidx.camera.core.Preview$PreviewOutput f$1 -> b
androidx.camera.core.-$$Lambda$VideoCapture$VideoSavedListenerWrapper$bKPotF4fxBHfXERaOtSnphhIRNc -> r1:
    androidx.camera.core.VideoCapture$VideoSavedListenerWrapper f$0 -> a
    java.lang.Throwable f$3 -> d
    java.lang.String f$2 -> c
    androidx.camera.core.VideoCapture$VideoCaptureError f$1 -> b
androidx.camera.core.-$$Lambda$VideoCapture$VideoSavedListenerWrapper$vLMoiAzzt8RX4-cghVgVbALA4Mc -> s1:
    androidx.camera.core.VideoCapture$VideoSavedListenerWrapper f$0 -> a
    java.io.File f$1 -> b
androidx.camera.core.AndroidImageProxy -> t1:
    androidx.camera.core.AndroidImageProxy$PlaneProxy[] mPlanes -> b
    android.media.Image mImage -> a
    long mTimestamp -> c
    boolean SET_TIMESTAMP_AVAILABLE_IN_FRAMEWORK -> d
    33:33:void <clinit>() -> <clinit>
    51:65:void <init>(android.media.Image) -> <init>
    69:68:void close() -> close
    74:74:android.graphics.Rect getCropRect() -> getCropRect
    84:84:int getFormat() -> getFormat
    89:89:int getHeight() -> getHeight
    156:156:android.media.Image getImage() -> getImage
    151:151:androidx.camera.core.ImageInfo getImageInfo() -> getImageInfo
    117:117:androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes() -> getPlanes
    99:98:long getTimestamp() -> getTimestamp
    94:94:int getWidth() -> getWidth
    79:78:void setCropRect(android.graphics.Rect) -> setCropRect
    108:107:void setTimestamp(long) -> setTimestamp
androidx.camera.core.AndroidImageProxy$PlaneProxy -> t1$a:
    android.media.Image$Plane mPlane -> a
    125:127:void <init>(android.media.Image$Plane) -> <init>
    141:141:java.nio.ByteBuffer getBuffer() -> getBuffer
    136:136:int getPixelStride() -> getPixelStride
    131:131:int getRowStride() -> getRowStride
androidx.camera.core.AndroidImageReaderProxy -> u1:
    android.media.ImageReader mImageReader -> a
    48:50:void <init>(android.media.ImageReader) -> <init>
    55:54:androidx.camera.core.ImageProxy acquireLatestImage() -> acquireLatestImage
    65:64:androidx.camera.core.ImageProxy acquireNextImage() -> acquireNextImage
    74:73:void close() -> close
    79:79:int getHeight() -> getHeight
    89:89:int getImageFormat() -> getImageFormat
    94:94:int getMaxImages() -> getMaxImages
    99:99:android.view.Surface getSurface() -> getSurface
    84:84:int getWidth() -> getWidth
    108:107:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    118:117:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor) -> setOnImageAvailableListener
androidx.camera.core.AndroidImageReaderProxy$1 -> u1$a:
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener val$listener -> b
    java.util.concurrent.Executor val$executor -> a
    androidx.camera.core.AndroidImageReaderProxy this$0 -> c
    119:119:void <init>(androidx.camera.core.AndroidImageReaderProxy,java.util.concurrent.Executor,androidx.camera.core.ImageReaderProxy$OnImageAvailableListener) -> <init>
    122:129:void onImageAvailable(android.media.ImageReader) -> onImageAvailable
androidx.camera.core.AndroidImageReaderProxy$1$1 -> u1$a$a:
    androidx.camera.core.AndroidImageReaderProxy$1 this$1 -> a
    122:122:void <init>(androidx.camera.core.AndroidImageReaderProxy$1) -> <init>
    125:126:void run() -> run
androidx.camera.core.AppConfig -> androidx.camera.core.AppConfig:
    androidx.camera.core.Config$Option OPTION_CAMERA_FACTORY -> c
    androidx.camera.core.Config$Option OPTION_DEVICE_SURFACE_MANAGER -> d
    androidx.camera.core.Config$Option OPTION_USECASE_CONFIG_FACTORY -> e
    androidx.camera.core.OptionsBundle mConfig -> b
    40:46:void <clinit>() -> <clinit>
    55:57:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    105:105:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    130:131:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    67:67:androidx.camera.core.CameraFactory getCameraFactory(androidx.camera.core.CameraFactory) -> getCameraFactory
    79:79:androidx.camera.core.CameraDeviceSurfaceManager getDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager) -> getDeviceSurfaceManager
    150:153:java.lang.Class getTargetClass(java.lang.Class) -> getTargetClass
    162:164:java.lang.Class getTargetClass() -> getTargetClass
    172:172:java.lang.String getTargetName(java.lang.String) -> getTargetName
    180:180:java.lang.String getTargetName() -> getTargetName
    93:93:androidx.camera.core.UseCaseConfigFactory getUseCaseConfigRepository(androidx.camera.core.UseCaseConfigFactory) -> getUseCaseConfigRepository
    138:138:java.util.Set listOptions() -> listOptions
    114:114:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    123:123:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.AppConfig$Builder -> androidx.camera.core.AppConfig$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    195:196:void <init>() -> <init>
    198:212:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    283:283:androidx.camera.core.AppConfig build() -> build
    222:222:androidx.camera.core.AppConfig$Builder fromConfig(androidx.camera.core.Config) -> fromConfig
    273:273:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    233:234:androidx.camera.core.AppConfig$Builder setCameraFactory(androidx.camera.core.CameraFactory) -> setCameraFactory
    245:246:androidx.camera.core.AppConfig$Builder setDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager) -> setDeviceSurfaceManager
    187:187:java.lang.Object setTargetClass(java.lang.Class) -> setTargetClass
    293:301:androidx.camera.core.AppConfig$Builder setTargetClass(java.lang.Class) -> setTargetClass
    187:187:java.lang.Object setTargetName(java.lang.String) -> setTargetName
    309:310:androidx.camera.core.AppConfig$Builder setTargetName(java.lang.String) -> setTargetName
    260:261:androidx.camera.core.AppConfig$Builder setUseCaseConfigFactory(androidx.camera.core.UseCaseConfigFactory) -> setUseCaseConfigFactory
androidx.camera.core.AspectRatio -> androidx.camera.core.AspectRatio:
    androidx.camera.core.AspectRatio[] $VALUES -> a
    22:20:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:androidx.camera.core.AspectRatio valueOf(java.lang.String) -> valueOf
    20:20:androidx.camera.core.AspectRatio[] values() -> values
androidx.camera.core.AutoValue_Config_Option -> v1:
    java.lang.Object token -> c
    java.lang.String id -> a
    java.lang.Class valueClass -> b
    19:21:void <init>(java.lang.String,java.lang.Class,java.lang.Object) -> <init>
    58:67:boolean equals(java.lang.Object) -> equals
    33:33:java.lang.String getId() -> getId
    44:44:java.lang.Object getToken() -> getToken
    38:38:java.lang.Class getValueClass() -> getValueClass
    72:79:int hashCode() -> hashCode
    49:49:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_DeviceProperties -> w1:
    java.lang.String manufacturer -> a
    java.lang.String model -> b
    int sdkVersion -> c
    17:19:void <init>(java.lang.String,java.lang.String,int) -> <init>
    55:64:boolean equals(java.lang.Object) -> equals
    69:76:int hashCode() -> hashCode
    31:31:java.lang.String manufacturer() -> manufacturer
    36:36:java.lang.String model() -> model
    41:41:int sdkVersion() -> sdkVersion
    46:46:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_ImageReaderFormatRecommender_FormatCombo -> x1:
    int imageAnalysisFormat -> b
    int imageCaptureFormat -> a
    14:17:void <init>(int,int) -> <init>
    26:26:int imageAnalysisFormat() -> a
    21:21:int imageCaptureFormat() -> b
    39:47:boolean equals(java.lang.Object) -> equals
    52:57:int hashCode() -> hashCode
    31:31:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_Preview_PreviewOutput -> y1:
    android.graphics.SurfaceTexture surfaceTexture -> a
    android.util.Size textureSize -> b
    int rotationDegrees -> c
    21:23:void <init>(android.graphics.SurfaceTexture,android.util.Size,int) -> <init>
    61:70:boolean equals(java.lang.Object) -> equals
    47:47:int getRotationDegrees() -> getRotationDegrees
    36:36:android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    42:42:android.util.Size getTextureSize() -> getTextureSize
    75:82:int hashCode() -> hashCode
    52:52:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_SurfaceConfig -> z1:
    androidx.camera.core.SurfaceConfig$ConfigSize configSize -> b
    androidx.camera.core.SurfaceConfig$ConfigType configType -> a
    14:16:void <init>(androidx.camera.core.SurfaceConfig$ConfigType,androidx.camera.core.SurfaceConfig$ConfigSize) -> <init>
    45:53:boolean equals(java.lang.Object) -> equals
    32:32:androidx.camera.core.SurfaceConfig$ConfigSize getConfigSize() -> getConfigSize
    27:27:androidx.camera.core.SurfaceConfig$ConfigType getConfigType() -> getConfigType
    58:63:int hashCode() -> hashCode
    37:37:java.lang.String toString() -> toString
androidx.camera.core.AutoValue_SurfaceSizeDefinition -> a2:
    android.util.Size recordSize -> c
    android.util.Size previewSize -> b
    android.util.Size analysisSize -> a
    19:21:void <init>(android.util.Size,android.util.Size,android.util.Size) -> <init>
    60:69:boolean equals(java.lang.Object) -> equals
    36:36:android.util.Size getAnalysisSize() -> getAnalysisSize
    41:41:android.util.Size getPreviewSize() -> getPreviewSize
    46:46:android.util.Size getRecordSize() -> getRecordSize
    74:81:int hashCode() -> hashCode
    51:51:java.lang.String toString() -> toString
androidx.camera.core.BaseCamera$State -> androidx.camera.core.BaseCamera$State:
    androidx.camera.core.BaseCamera$State[] $VALUES -> a
    48:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:androidx.camera.core.BaseCamera$State valueOf(java.lang.String) -> valueOf
    41:41:androidx.camera.core.BaseCamera$State[] values() -> values
androidx.camera.core.CameraCaptureCallback -> androidx.camera.core.CameraCaptureCallback:
    29:29:void <init>() -> <init>
    38:38:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
    47:47:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> onCaptureFailed
androidx.camera.core.CameraCaptureCallbacks -> androidx.camera.core.CameraCaptureCallbacks:
    34:35:void <init>() -> <init>
    44:49:androidx.camera.core.CameraCaptureCallback createComboCallback(java.util.List) -> a
    54:54:androidx.camera.core.CameraCaptureCallback createComboCallback(androidx.camera.core.CameraCaptureCallback[]) -> createComboCallback
    39:39:androidx.camera.core.CameraCaptureCallback createNoOpCallback() -> createNoOpCallback
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback -> androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback:
    java.util.List mCallbacks -> a
    74:81:void <init>(java.util.List) -> <init>
    99:99:java.util.List getCallbacks() -> getCallbacks
    85:88:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
    92:95:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> onCaptureFailed
androidx.camera.core.CameraCaptureCallbacks$NoOpCameraCaptureCallback -> androidx.camera.core.CameraCaptureCallbacks$a:
    57:57:void <init>() -> <init>
    60:60:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
    64:64:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> onCaptureFailed
androidx.camera.core.CameraCaptureFailure -> androidx.camera.core.CameraCaptureFailure:
    androidx.camera.core.CameraCaptureFailure$Reason mReason -> a
    34:36:void <init>(androidx.camera.core.CameraCaptureFailure$Reason) -> <init>
    45:45:androidx.camera.core.CameraCaptureFailure$Reason getReason() -> getReason
androidx.camera.core.CameraCaptureFailure$Reason -> androidx.camera.core.CameraCaptureFailure$Reason:
    androidx.camera.core.CameraCaptureFailure$Reason[] $VALUES -> a
    54:53:void <clinit>() -> <clinit>
    53:53:void <init>(java.lang.String,int) -> <init>
    53:53:androidx.camera.core.CameraCaptureFailure$Reason valueOf(java.lang.String) -> valueOf
    53:53:androidx.camera.core.CameraCaptureFailure$Reason[] values() -> values
androidx.camera.core.CameraCaptureMetaData -> androidx.camera.core.CameraCaptureMetaData:
    29:29:void <init>() -> <init>
androidx.camera.core.CameraCaptureMetaData$AeState -> androidx.camera.core.CameraCaptureMetaData$AeState:
    androidx.camera.core.CameraCaptureMetaData$AeState[] $VALUES -> a
    82:79:void <clinit>() -> <clinit>
    79:79:void <init>(java.lang.String,int) -> <init>
    79:79:androidx.camera.core.CameraCaptureMetaData$AeState valueOf(java.lang.String) -> valueOf
    79:79:androidx.camera.core.CameraCaptureMetaData$AeState[] values() -> values
androidx.camera.core.CameraCaptureMetaData$AfMode -> androidx.camera.core.CameraCaptureMetaData$AfMode:
    androidx.camera.core.CameraCaptureMetaData$AfMode[] $VALUES -> a
    35:32:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.String,int) -> <init>
    32:32:androidx.camera.core.CameraCaptureMetaData$AfMode valueOf(java.lang.String) -> valueOf
    32:32:androidx.camera.core.CameraCaptureMetaData$AfMode[] values() -> values
androidx.camera.core.CameraCaptureMetaData$AfState -> androidx.camera.core.CameraCaptureMetaData$AfState:
    androidx.camera.core.CameraCaptureMetaData$AfState[] $VALUES -> a
    60:57:void <clinit>() -> <clinit>
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:androidx.camera.core.CameraCaptureMetaData$AfState valueOf(java.lang.String) -> valueOf
    57:57:androidx.camera.core.CameraCaptureMetaData$AfState[] values() -> values
androidx.camera.core.CameraCaptureMetaData$AwbState -> androidx.camera.core.CameraCaptureMetaData$AwbState:
    androidx.camera.core.CameraCaptureMetaData$AwbState[] $VALUES -> a
    107:104:void <clinit>() -> <clinit>
    104:104:void <init>(java.lang.String,int) -> <init>
    104:104:androidx.camera.core.CameraCaptureMetaData$AwbState valueOf(java.lang.String) -> valueOf
    104:104:androidx.camera.core.CameraCaptureMetaData$AwbState[] values() -> values
androidx.camera.core.CameraCaptureMetaData$FlashState -> androidx.camera.core.CameraCaptureMetaData$FlashState:
    androidx.camera.core.CameraCaptureMetaData$FlashState[] $VALUES -> a
    126:123:void <clinit>() -> <clinit>
    123:123:void <init>(java.lang.String,int) -> <init>
    123:123:androidx.camera.core.CameraCaptureMetaData$FlashState valueOf(java.lang.String) -> valueOf
    123:123:androidx.camera.core.CameraCaptureMetaData$FlashState[] values() -> values
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult -> androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult:
    67:67:void <init>() -> <init>
    70:70:androidx.camera.core.CameraCaptureResult create() -> create
    88:88:androidx.camera.core.CameraCaptureMetaData$AeState getAeState() -> getAeState
    76:76:androidx.camera.core.CameraCaptureMetaData$AfMode getAfMode() -> getAfMode
    82:82:androidx.camera.core.CameraCaptureMetaData$AfState getAfState() -> getAfState
    94:94:androidx.camera.core.CameraCaptureMetaData$AwbState getAwbState() -> getAwbState
    100:100:androidx.camera.core.CameraCaptureMetaData$FlashState getFlashState() -> getFlashState
    110:110:java.lang.Object getTag() -> getTag
    105:105:long getTimestamp() -> getTimestamp
androidx.camera.core.CameraCaptureResultImageInfo -> b2:
    androidx.camera.core.CameraCaptureResult mCameraCaptureResult -> a
    26:28:void <init>(androidx.camera.core.CameraCaptureResult) -> <init>
    42:42:androidx.camera.core.CameraCaptureResult getCameraCaptureResult() -> a
    33:33:java.lang.Object getTag() -> getTag
    38:38:long getTimestamp() -> getTimestamp
androidx.camera.core.CameraCaptureResults -> androidx.camera.core.CameraCaptureResults:
    44:45:void <init>() -> <init>
    37:40:androidx.camera.core.CameraCaptureResult retrieveCameraCaptureResult(androidx.camera.core.ImageInfo) -> retrieveCameraCaptureResult
androidx.camera.core.CameraCaptureSessionStateCallbacks -> androidx.camera.core.CameraCaptureSessionStateCallbacks:
    38:39:void <init>() -> <init>
    53:58:android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(java.util.List) -> createComboCallback
    66:66:android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(android.hardware.camera2.CameraCaptureSession$StateCallback[]) -> createComboCallback
    45:45:android.hardware.camera2.CameraCaptureSession$StateCallback createNoOpCallback() -> createNoOpCallback
androidx.camera.core.CameraCaptureSessionStateCallbacks$ComboSessionStateCallback -> androidx.camera.core.CameraCaptureSessionStateCallbacks$a:
    java.util.List mCallbacks -> a
    103:110:void <init>(java.util.List) -> <init>
    121:124:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    143:146:void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession) -> onCaptureQueueEmpty
    128:131:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    158:161:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    114:117:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    135:138:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    151:154:void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> onSurfacePrepared
androidx.camera.core.CameraCaptureSessionStateCallbacks$NoOpSessionStateCallback -> androidx.camera.core.CameraCaptureSessionStateCallbacks$b:
    69:69:void <init>() -> <init>
    76:76:void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
    88:88:void onCaptureQueueEmpty(android.hardware.camera2.CameraCaptureSession) -> onCaptureQueueEmpty
    80:80:void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    96:96:void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    72:72:void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    84:84:void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    92:92:void onSurfacePrepared(android.hardware.camera2.CameraCaptureSession,android.view.Surface) -> onSurfacePrepared
androidx.camera.core.CameraControlInternal -> androidx.camera.core.CameraControlInternal:
    84:84:void <clinit>() -> <clinit>
androidx.camera.core.CameraControlInternal$1 -> androidx.camera.core.CameraControlInternal$a:
    84:84:void <init>() -> <init>
    119:119:void cancelAfAeTrigger(boolean,boolean) -> cancelAfAeTrigger
    133:133:void cancelFocusAndMetering() -> cancelFocusAndMetering
    101:101:void enableTorch(boolean) -> enableTorch
    92:92:androidx.camera.core.FlashMode getFlashMode() -> getFlashMode
    105:105:boolean isTorchOn() -> isTorchOn
    87:87:void setCropRegion(android.graphics.Rect) -> setCropRegion
    97:97:void setFlashMode(androidx.camera.core.FlashMode) -> setFlashMode
    128:128:void startFocusAndMetering(androidx.camera.core.FocusMeteringAction) -> startFocusAndMetering
    123:123:void submitCaptureRequests(java.util.List) -> submitCaptureRequests
    114:114:void triggerAePrecapture() -> triggerAePrecapture
    110:110:void triggerAf() -> triggerAf
androidx.camera.core.CameraDeviceConfig -> androidx.camera.core.CameraDeviceConfig:
    45:54:void <clinit>() -> <clinit>
androidx.camera.core.CameraDeviceStateCallbacks -> androidx.camera.core.CameraDeviceStateCallbacks:
    36:37:void <init>() -> <init>
    51:56:android.hardware.camera2.CameraDevice$StateCallback createComboCallback(java.util.List) -> createComboCallback
    64:64:android.hardware.camera2.CameraDevice$StateCallback createComboCallback(android.hardware.camera2.CameraDevice$StateCallback[]) -> createComboCallback
    43:43:android.hardware.camera2.CameraDevice$StateCallback createNoOpCallback() -> createNoOpCallback
androidx.camera.core.CameraDeviceStateCallbacks$ComboDeviceStateCallback -> androidx.camera.core.CameraDeviceStateCallbacks$a:
    java.util.List mCallbacks -> a
    88:95:void <init>(java.util.List) -> <init>
    106:109:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    113:116:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    120:123:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    99:102:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.core.CameraDeviceStateCallbacks$NoOpDeviceStateCallback -> androidx.camera.core.CameraDeviceStateCallbacks$b:
    67:67:void <init>() -> <init>
    74:74:void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    78:78:void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    82:82:void onError(android.hardware.camera2.CameraDevice,int) -> onError
    70:70:void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
androidx.camera.core.CameraIdFilterSet -> androidx.camera.core.CameraIdFilterSet:
    java.util.Set mCameraIdFilterSet -> a
    32:33:void <init>() -> <init>
    53:60:void addCameraIdFilter(androidx.camera.core.CameraIdFilter) -> addCameraIdFilter
    38:42:java.util.Set filter(java.util.Set) -> filter
    48:48:java.util.Set getCameraIdFilters() -> getCameraIdFilters
androidx.camera.core.CameraInfoUnavailableException -> androidx.camera.core.CameraInfoUnavailableException:
    27:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    33:34:void <init>(java.lang.String) -> <init>
androidx.camera.core.CameraOrientationUtil -> androidx.camera.core.CameraOrientationUtil:
    37:38:void <init>() -> <init>
    56:70:int getRelativeImageRotation(int,int,boolean) -> getRelativeImageRotation
    86:103:int surfaceRotationToDegrees(int) -> surfaceRotationToDegrees
androidx.camera.core.CameraRepository -> androidx.camera.core.CameraRepository:
    java.util.Map mCameras -> b
    java.util.Set mReleasingCameras -> c
    com.google.common.util.concurrent.ListenableFuture mDeinitFuture -> d
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer mDeinitCompleter -> e
    java.lang.Object mCamerasLock -> a
    44:51:void <init>() -> <init>
    104:106:java.lang.Object lambda$deinit$0(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> a
    116:130:void lambda$deinit$1(androidx.camera.core.BaseCamera) -> a
    194:195:void attachUseCasesToCamera(androidx.camera.core.BaseCamera,java.util.Set) -> a
    216:217:void detachUseCasesFromCamera(androidx.camera.core.BaseCamera,java.util.Set) -> b
    88:139:com.google.common.util.concurrent.ListenableFuture deinit() -> deinit
    152:160:androidx.camera.core.BaseCamera getCamera(java.lang.String) -> getCamera
    67:77:void init(androidx.camera.core.CameraFactory) -> init
    181:188:void onGroupActive(androidx.camera.core.UseCaseGroup) -> onGroupActive
    203:210:void onGroupInactive(androidx.camera.core.UseCaseGroup) -> onGroupInactive
androidx.camera.core.CameraX -> androidx.camera.core.CameraX:
    androidx.camera.core.UseCaseConfigFactory mDefaultConfigFactory -> g
    androidx.camera.core.CameraRepository mCameraRepository -> a
    androidx.camera.core.CameraX INSTANCE -> i
    java.util.concurrent.atomic.AtomicBoolean mInitialized -> b
    androidx.camera.core.ErrorHandler mErrorHandler -> d
    androidx.camera.core.CameraDeviceSurfaceManager mSurfaceManager -> f
    androidx.camera.core.CameraFactory mCameraFactory -> e
    android.content.Context mContext -> h
    androidx.camera.core.UseCaseGroupRepository mUseCaseGroupRepository -> c
    118:118:void <clinit>() -> <clinit>
    129:130:void <init>() -> <init>
    601:603:void attach(java.lang.String,androidx.camera.core.UseCase) -> a
    618:620:void detach(java.lang.String,java.util.List) -> a
    634:687:void calculateSuggestedResolutions(androidx.lifecycle.LifecycleOwner,androidx.camera.core.UseCase[]) -> a
    712:719:void initInternal(android.content.Context,androidx.camera.core.AppConfig) -> a
    739:741:com.google.common.util.concurrent.ListenableFuture deinitInternal() -> a
    745:745:androidx.camera.core.UseCaseGroupLifecycleController getOrCreateUseCaseGroup(androidx.lifecycle.LifecycleOwner) -> a
    696:697:androidx.camera.core.CameraDeviceSurfaceManager getCameraDeviceSurfaceManager() -> b
    172:205:void bindToLifecycle(androidx.lifecycle.LifecycleOwner,androidx.camera.core.UseCase[]) -> bindToLifecycle
    755:755:androidx.camera.core.CameraRepository getCameraRepository() -> c
    704:705:androidx.camera.core.UseCaseConfigFactory getDefaultConfigFactory() -> d
    527:527:com.google.common.util.concurrent.ListenableFuture deinit() -> deinit
    562:574:java.util.Collection getActiveUseCases() -> getActiveUseCases
    441:442:androidx.camera.core.CameraControl getCameraControl(androidx.camera.core.CameraX$LensFacing) -> getCameraControl
    587:588:androidx.camera.core.CameraFactory getCameraFactory() -> getCameraFactory
    407:407:androidx.camera.core.CameraInfoInternal getCameraInfo(java.lang.String) -> getCameraInfo
    422:425:androidx.camera.core.CameraInfo getCameraInfo(androidx.camera.core.CameraX$LensFacing) -> getCameraInfo
    346:354:java.lang.String getCameraWithCameraDeviceConfig(androidx.camera.core.CameraDeviceConfig) -> getCameraWithCameraDeviceConfig
    326:326:java.lang.String getCameraWithLensFacing(androidx.camera.core.CameraX$LensFacing) -> getCameraWithLensFacing
    538:538:android.content.Context getContext() -> getContext
    382:391:androidx.camera.core.CameraX$LensFacing getDefaultLensFacing() -> getDefaultLensFacing
    473:473:androidx.camera.core.UseCaseConfig getDefaultUseCaseConfig(java.lang.Class,androidx.camera.core.CameraX$LensFacing) -> getDefaultUseCaseConfig
    454:454:androidx.camera.core.CameraDeviceSurfaceManager getSurfaceManager() -> getSurfaceManager
    307:307:boolean hasCameraWithLensFacing(androidx.camera.core.CameraX$LensFacing) -> hasCameraWithLensFacing
    514:515:void init(android.content.Context,androidx.camera.core.AppConfig) -> init
    215:225:boolean isBound(androidx.camera.core.UseCase) -> isBound
    551:551:boolean isInitialized() -> isInitialized
    499:500:void postError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> postError
    487:488:void setErrorListener(androidx.camera.core.CameraX$ErrorListener,android.os.Handler) -> setErrorListener
    243:273:void unbind(androidx.camera.core.UseCase[]) -> unbind
    283:294:void unbindAll() -> unbindAll
androidx.camera.core.CameraX$1 -> androidx.camera.core.CameraX$a:
    androidx.camera.core.CameraX this$0 -> a
    746:746:void <init>(androidx.camera.core.CameraX) -> <init>
    749:750:void setup(androidx.camera.core.UseCaseGroup) -> setup
androidx.camera.core.CameraX$ErrorCode -> androidx.camera.core.CameraX$ErrorCode:
    androidx.camera.core.CameraX$ErrorCode[] $VALUES -> a
    761:759:void <clinit>() -> <clinit>
    759:759:void <init>(java.lang.String,int) -> <init>
    759:759:androidx.camera.core.CameraX$ErrorCode valueOf(java.lang.String) -> valueOf
    759:759:androidx.camera.core.CameraX$ErrorCode[] values() -> values
androidx.camera.core.CameraX$LensFacing -> androidx.camera.core.CameraX$LensFacing:
    androidx.camera.core.CameraX$LensFacing[] $VALUES -> a
    769:767:void <clinit>() -> <clinit>
    767:767:void <init>(java.lang.String,int) -> <init>
    767:767:androidx.camera.core.CameraX$LensFacing valueOf(java.lang.String) -> valueOf
    767:767:androidx.camera.core.CameraX$LensFacing[] values() -> values
androidx.camera.core.CameraXThreads -> androidx.camera.core.CameraXThreads:
    34:35:void <init>() -> <init>
androidx.camera.core.CaptureBundles -> c2:
    36:36:androidx.camera.core.CaptureBundle singleDefaultCaptureBundle() -> a
    41:41:androidx.camera.core.CaptureBundle createCaptureBundle(androidx.camera.core.CaptureStage[]) -> a
    46:46:androidx.camera.core.CaptureBundle createCaptureBundle(java.util.List) -> a
androidx.camera.core.CaptureBundles$CaptureBundleImpl -> c2$a:
    java.util.List mCaptureStageList -> a
    59:63:void <init>(java.util.List) -> <init>
    69:69:java.util.List getCaptureStages() -> getCaptureStages
androidx.camera.core.CaptureConfig -> androidx.camera.core.CaptureConfig:
    java.util.List mSurfaces -> a
    java.lang.Object mTag -> f
    java.util.List mCameraCaptureCallbacks -> d
    androidx.camera.core.Config mImplementationOptions -> b
    boolean mUseRepeatingSurface -> e
    int mTemplateType -> c
    85:92:void <init>(java.util.List,androidx.camera.core.Config,int,java.util.List,boolean,java.lang.Object) -> <init>
    96:96:androidx.camera.core.CaptureConfig defaultEmptyCaptureConfig() -> defaultEmptyCaptureConfig
    118:118:java.util.List getCameraCaptureCallbacks() -> getCameraCaptureCallbacks
    105:105:androidx.camera.core.Config getImplementationOptions() -> getImplementationOptions
    101:101:java.util.List getSurfaces() -> getSurfaces
    122:122:java.lang.Object getTag() -> getTag
    109:109:int getTemplateType() -> getTemplateType
    113:113:boolean isUseRepeatingSurface() -> isUseRepeatingSurface
androidx.camera.core.CaptureConfig$Builder -> androidx.camera.core.CaptureConfig$Builder:
    java.lang.Object mTag -> f
    java.util.List mCameraCaptureCallbacks -> d
    androidx.camera.core.MutableConfig mImplementationOptions -> b
    boolean mUseRepeatingSurface -> e
    java.util.Set mSurfaces -> a
    int mTemplateType -> c
    156:157:void <init>() -> <init>
    159:166:void <init>(androidx.camera.core.CaptureConfig) -> <init>
    194:194:int getTemplateType() -> a
    226:229:void addAllCameraCaptureCallbacks(java.util.Collection) -> addAllCameraCaptureCallbacks
    213:214:void addCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> addCameraCaptureCallback
    259:274:void addImplementationOptions(androidx.camera.core.Config) -> addImplementationOptions
    233:234:void addSurface(androidx.camera.core.DeferrableSurface) -> addSurface
    297:297:androidx.camera.core.CaptureConfig build() -> build
    243:244:void clearSurfaces() -> clearSurfaces
    174:178:androidx.camera.core.CaptureConfig$Builder createFrom(androidx.camera.core.UseCaseConfig) -> createFrom
    190:190:androidx.camera.core.CaptureConfig$Builder from(androidx.camera.core.CaptureConfig) -> from
    277:277:androidx.camera.core.Config getImplementationOptions() -> getImplementationOptions
    249:249:java.util.Set getSurfaces() -> getSurfaces
    238:239:void removeSurface(androidx.camera.core.DeferrableSurface) -> removeSurface
    253:254:void setImplementationOptions(androidx.camera.core.Config) -> setImplementationOptions
    289:290:void setTag(java.lang.Object) -> setTag
    204:205:void setTemplateType(int) -> setTemplateType
    285:286:void setUseRepeatingSurface(boolean) -> setUseRepeatingSurface
androidx.camera.core.CaptureStage$DefaultCaptureStage -> androidx.camera.core.CaptureStage$DefaultCaptureStage:
    androidx.camera.core.CaptureConfig mCaptureConfig -> a
    44:47:void <init>() -> <init>
    56:56:androidx.camera.core.CaptureConfig getCaptureConfig() -> getCaptureConfig
    51:51:int getId() -> getId
androidx.camera.core.CheckedSurfaceTexture -> d2:
    androidx.camera.core.FixedSizeSurfaceTexture mSurfaceTexture -> f
    android.view.Surface mSurface -> g
    androidx.camera.core.CheckedSurfaceTexture$Resource mResource -> h
    49:58:void <init>(android.util.Size) -> <init>
    96:96:android.graphics.SurfaceTexture getSurfaceTexture() -> a
    106:115:void releaseResourceWhenDetached(androidx.camera.core.CheckedSurfaceTexture$Resource) -> a
    119:123:void runOnMainThread(java.lang.Runnable) -> a
    69:69:com.google.common.util.concurrent.ListenableFuture provideSurface() -> provideSurface
    102:103:void release() -> release
androidx.camera.core.CheckedSurfaceTexture$1 -> d2$a:
    androidx.camera.core.CheckedSurfaceTexture this$0 -> a
    70:70:void <init>(androidx.camera.core.CheckedSurfaceTexture) -> <init>
    74:88:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.CheckedSurfaceTexture$1$1 -> d2$a$a:
    androidx.camera.core.CheckedSurfaceTexture$1 this$1 -> b
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    75:75:void <init>(androidx.camera.core.CheckedSurfaceTexture$1,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    78:85:void run() -> run
androidx.camera.core.CheckedSurfaceTexture$2 -> d2$b:
    androidx.camera.core.CheckedSurfaceTexture$Resource val$resource -> a
    109:109:void <init>(androidx.camera.core.CheckedSurfaceTexture,androidx.camera.core.CheckedSurfaceTexture$Resource) -> <init>
    112:113:void onSurfaceDetached() -> onSurfaceDetached
androidx.camera.core.CheckedSurfaceTexture$Resource -> d2$c:
    androidx.camera.core.FixedSizeSurfaceTexture mSurfaceTexture -> a
    androidx.camera.core.CheckedSurfaceTexture this$0 -> e
    android.view.Surface mSurface -> b
    boolean mIsReleasing -> c
    boolean mIsReadyToRelease -> d
    130:134:void <init>(androidx.camera.core.CheckedSurfaceTexture) -> <init>
    138:139:void setSurfaceTexture(androidx.camera.core.FixedSizeSurfaceTexture) -> a
    143:144:void setSurface(android.view.Surface) -> a
    151:150:void setReleasing(boolean) -> a
    156:155:boolean requestRelease() -> a
    147:147:boolean isReleasing() -> b
    166:165:void release() -> c
androidx.camera.core.Config$Option -> androidx.camera.core.Config$Option:
    155:156:void <init>() -> <init>
    170:170:androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class) -> create
    190:190:androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class,java.lang.Object) -> create
androidx.camera.core.DeferrableSurface -> androidx.camera.core.DeferrableSurface:
    androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener mOnSurfaceDetachedListener -> c
    java.lang.Object mLock -> e
    java.util.concurrent.Executor mListenerExecutor -> d
    boolean mClosed -> b
    int mAttachedCount -> a
    81:81:void <clinit>() -> <clinit>
    44:99:void <init>() -> <init>
    213:222:void callOnSurfaceDetachedListener(androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener,java.util.concurrent.Executor) -> a
    145:147:void close() -> close
    227:229:int getAttachedCount() -> getAttachedCount
    109:115:com.google.common.util.concurrent.ListenableFuture getSurface() -> getSurface
    126:136:void notifySurfaceAttached() -> notifySurfaceAttached
    155:177:void notifySurfaceDetached() -> notifySurfaceDetached
    194:204:void setOnSurfaceDetachedListener(java.util.concurrent.Executor,androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener) -> setOnSurfaceDetachedListener
androidx.camera.core.DeferrableSurface$1 -> androidx.camera.core.DeferrableSurface$a:
    androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener val$listener -> a
    216:216:void <init>(androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener) -> <init>
    219:220:void run() -> run
androidx.camera.core.DeferrableSurface$SurfaceClosedException -> androidx.camera.core.DeferrableSurface$SurfaceClosedException:
    androidx.camera.core.DeferrableSurface mDeferrableSurface -> a
    57:59:void <init>(java.lang.String,java.lang.Throwable,androidx.camera.core.DeferrableSurface) -> <init>
    62:64:void <init>(java.lang.String,androidx.camera.core.DeferrableSurface) -> <init>
    73:73:androidx.camera.core.DeferrableSurface getDeferrableSurface() -> getDeferrableSurface
androidx.camera.core.DeferrableSurfaces -> androidx.camera.core.DeferrableSurfaces:
    45:46:void <init>() -> <init>
    58:58:java.util.List surfaceList(java.util.Collection) -> surfaceList
    70:86:java.util.List surfaceList(java.util.Collection,boolean) -> surfaceList
    100:112:java.util.Set surfaceSet(java.util.Collection) -> surfaceSet
androidx.camera.core.DeviceProperties -> androidx.camera.core.DeviceProperties:
    33:33:void <init>() -> <init>
    36:36:androidx.camera.core.DeviceProperties create() -> create
    41:41:androidx.camera.core.DeviceProperties create(java.lang.String,java.lang.String,int) -> create
androidx.camera.core.DisplayOrientedMeteringPointFactory -> androidx.camera.core.DisplayOrientedMeteringPointFactory:
    androidx.camera.core.CameraInfo mCameraInfo -> e
    android.view.Display mDisplay -> d
    float mHeight -> b
    float mWidth -> a
    androidx.camera.core.CameraX$LensFacing mLensFacing -> c
    67:69:void <init>(android.content.Context,androidx.camera.core.CameraX$LensFacing,float,float) -> <init>
    86:95:void <init>(android.view.Display,androidx.camera.core.CameraX$LensFacing,float,float) -> <init>
    154:162:int getRelativeCameraOrientation(boolean) -> a
    105:148:android.graphics.PointF translatePoint(float,float) -> translatePoint
androidx.camera.core.ErrorHandler -> androidx.camera.core.ErrorHandler:
    androidx.camera.core.CameraX$ErrorListener mListener -> b
    android.os.Handler mHandler -> c
    java.lang.Object mErrorLock -> a
    36:44:void <init>() -> <init>
    54:62:void postError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> a
    72:83:void setErrorListener(androidx.camera.core.CameraX$ErrorListener,android.os.Handler) -> a
androidx.camera.core.ErrorHandler$1 -> androidx.camera.core.ErrorHandler$a:
    androidx.camera.core.CameraX$ErrorListener val$listenerReference -> a
    java.lang.String val$message -> c
    androidx.camera.core.CameraX$ErrorCode val$error -> b
    56:56:void <init>(androidx.camera.core.ErrorHandler,androidx.camera.core.CameraX$ErrorListener,androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> <init>
    59:60:void run() -> run
androidx.camera.core.ErrorHandler$PrintingErrorListener -> androidx.camera.core.ErrorHandler$b:
    87:87:void <init>() -> <init>
    90:91:void onError(androidx.camera.core.CameraX$ErrorCode,java.lang.String) -> onError
androidx.camera.core.Exif -> androidx.camera.core.Exif:
    java.lang.ThreadLocal DATE_FORMAT -> d
    java.lang.ThreadLocal TIME_FORMAT -> e
    java.lang.ThreadLocal DATETIME_FORMAT -> f
    java.lang.String TAG -> c
    boolean mRemoveTimestamp -> b
    androidx.exifinterface.media.ExifInterface mExifInterface -> a
    48:64:void <clinit>() -> <clinit>
    81:83:void <init>(androidx.exifinterface.media.ExifInterface) -> <init>
    112:112:java.lang.String convertToExifDateTime(long) -> a
    256:266:void attachLastModifiedTimestamp() -> a
    591:608:long parseTimestamp(java.lang.String,java.lang.String) -> a
    613:619:long parseTimestamp(java.lang.String) -> a
    571:572:void attachLocation(android.location.Location) -> attachLocation
    542:556:void attachTimestamp() -> attachTimestamp
    120:120:java.util.Date convertFromExifDate(java.lang.String) -> b
    153:153:int getOrientation() -> b
    116:116:java.util.Date convertFromExifDateTime(java.lang.String) -> c
    91:91:androidx.camera.core.Exif createFromFile(java.io.File) -> createFromFile
    100:100:androidx.camera.core.Exif createFromFileString(java.lang.String) -> createFromFileString
    108:108:androidx.camera.core.Exif createFromInputStream(java.io.InputStream) -> createFromInputStream
    124:124:java.util.Date convertFromExifTime(java.lang.String) -> d
    507:538:void flipHorizontally() -> flipHorizontally
    468:499:void flipVertically() -> flipVertically
    169:169:java.lang.String getDescription() -> getDescription
    164:164:int getHeight() -> getHeight
    273:291:long getLastModifiedTimestamp() -> getLastModifiedTimestamp
    324:367:android.location.Location getLocation() -> getLocation
    179:183:int getRotation() -> getRotation
    299:318:long getTimestamp() -> getTimestamp
    159:159:int getWidth() -> getWidth
    231:233:boolean isFlippedHorizontally() -> isFlippedHorizontally
    205:211:boolean isFlippedVertically() -> isFlippedVertically
    576:587:void removeLocation() -> removeLocation
    560:567:void removeTimestamp() -> removeTimestamp
    375:460:void rotate(int) -> rotate
    129:133:void save() -> save
    174:175:void setDescription(java.lang.String) -> setDescription
    137:137:java.lang.String toString() -> toString
androidx.camera.core.Exif$1 -> androidx.camera.core.Exif$a:
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    54:54:java.text.SimpleDateFormat initialValue() -> initialValue
androidx.camera.core.Exif$2 -> androidx.camera.core.Exif$b:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object initialValue() -> initialValue
    61:61:java.text.SimpleDateFormat initialValue() -> initialValue
androidx.camera.core.Exif$3 -> androidx.camera.core.Exif$c:
    65:65:void <init>() -> <init>
    65:65:java.lang.Object initialValue() -> initialValue
    68:68:java.text.SimpleDateFormat initialValue() -> initialValue
androidx.camera.core.Exif$Speed -> androidx.camera.core.Exif$d:
    625:625:androidx.camera.core.Exif$Speed$Converter fromKilometersPerHour(double) -> a
    637:637:androidx.camera.core.Exif$Speed$Converter fromKnots(double) -> b
    633:633:androidx.camera.core.Exif$Speed$Converter fromMilesPerHour(double) -> c
androidx.camera.core.Exif$Speed$Converter -> androidx.camera.core.Exif$d$a:
    double mMph -> a
    643:645:void <init>(double) -> <init>
    660:660:double toMetersPerSecond() -> a
androidx.camera.core.ExtendableUseCaseConfigFactory -> androidx.camera.core.ExtendableUseCaseConfigFactory:
    java.util.Map mDefaultProviders -> a
    32:33:void <init>() -> <init>
    47:51:androidx.camera.core.UseCaseConfig getConfig(java.lang.Class,androidx.camera.core.CameraX$LensFacing) -> getConfig
    38:39:void installDefaultProvider(java.lang.Class,androidx.camera.core.ConfigProvider) -> installDefaultProvider
androidx.camera.core.FixedSizeSurfaceTexture -> e2:
    androidx.camera.core.FixedSizeSurfaceTexture$Owner SELF_OWNER -> b
    androidx.camera.core.FixedSizeSurfaceTexture$Owner mOwner -> a
    42:42:void <clinit>() -> <clinit>
    57:58:void <init>(int,android.util.Size) -> <init>
    69:72:void <init>(int,android.util.Size,androidx.camera.core.FixedSizeSurfaceTexture$Owner) -> <init>
    144:148:void release() -> release
    137:137:void setDefaultBufferSize(int,int) -> setDefaultBufferSize
androidx.camera.core.FixedSizeSurfaceTexture$1 -> e2$a:
    42:42:void <init>() -> <init>
    45:45:boolean requestRelease() -> a
androidx.camera.core.FixedSizeSurfaceTexture$Owner -> e2$b:
    boolean requestRelease() -> a
androidx.camera.core.FixedSizeSurfaceTextures -> f2:
    24:28:androidx.camera.core.FixedSizeSurfaceTexture createDetachedSurfaceTexture(android.util.Size) -> a
androidx.camera.core.FlashMode -> androidx.camera.core.FlashMode:
    androidx.camera.core.FlashMode[] $VALUES -> a
    25:20:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:androidx.camera.core.FlashMode valueOf(java.lang.String) -> valueOf
    20:20:androidx.camera.core.FlashMode[] values() -> values
androidx.camera.core.FocusMeteringAction -> androidx.camera.core.FocusMeteringAction:
    java.util.List mMeteringPointsAE -> b
    java.util.List mMeteringPointsAF -> a
    java.util.concurrent.atomic.AtomicBoolean mHasNotifiedListener -> g
    long mAutoCancelDurationInMs -> f
    androidx.camera.core.FocusMeteringAction$OnAutoFocusListener mOnAutoFocusListener -> e
    java.util.List mMeteringPointsAWB -> c
    java.util.concurrent.Executor mListenerExecutor -> d
    androidx.camera.core.FocusMeteringAction$MeteringMode DEFAULT_METERINGMODE -> h
    61:61:void <clinit>() -> <clinit>
    73:80:void <init>(androidx.camera.core.FocusMeteringAction$Builder) -> <init>
    94:94:long getAutoCancelDurationInMs() -> getAutoCancelDurationInMs
    110:110:java.util.List getMeteringPointsAE() -> getMeteringPointsAE
    102:102:java.util.List getMeteringPointsAF() -> getMeteringPointsAF
    118:118:java.util.List getMeteringPointsAWB() -> getMeteringPointsAWB
    87:87:androidx.camera.core.FocusMeteringAction$OnAutoFocusListener getOnAutoFocusListener() -> getOnAutoFocusListener
    125:125:boolean isAutoCancelEnabled() -> isAutoCancelEnabled
    140:150:void notifyAutoFocusCompleted(boolean) -> notifyAutoFocusCompleted
androidx.camera.core.FocusMeteringAction$1 -> androidx.camera.core.FocusMeteringAction$a:
    androidx.camera.core.FocusMeteringAction this$0 -> b
    boolean val$isFocused -> a
    142:142:void <init>(androidx.camera.core.FocusMeteringAction,boolean) -> <init>
    145:146:void run() -> run
androidx.camera.core.FocusMeteringAction$Builder -> androidx.camera.core.FocusMeteringAction$Builder:
    java.util.List mMeteringPointsAE -> b
    java.util.List mMeteringPointsAF -> a
    long mAutoCancelDurationInMs -> f
    androidx.camera.core.FocusMeteringAction$OnAutoFocusListener mOnAutoFocusListener -> d
    java.util.List mMeteringPointsAWB -> c
    java.util.concurrent.Executor mListenerExecutor -> e
    199:200:void <init>(androidx.camera.core.MeteringPoint) -> <init>
    202:204:void <init>(androidx.camera.core.MeteringPoint,androidx.camera.core.FocusMeteringAction$MeteringMode) -> <init>
    228:228:androidx.camera.core.FocusMeteringAction$Builder addPoint(androidx.camera.core.MeteringPoint) -> addPoint
    236:256:androidx.camera.core.FocusMeteringAction$Builder addPoint(androidx.camera.core.MeteringPoint,androidx.camera.core.FocusMeteringAction$MeteringMode) -> addPoint
    306:306:androidx.camera.core.FocusMeteringAction build() -> build
    297:298:androidx.camera.core.FocusMeteringAction$Builder disableAutoCancel() -> disableAutoCancel
    211:211:androidx.camera.core.FocusMeteringAction$Builder from(androidx.camera.core.MeteringPoint) -> from
    220:220:androidx.camera.core.FocusMeteringAction$Builder from(androidx.camera.core.MeteringPoint,androidx.camera.core.FocusMeteringAction$MeteringMode) -> from
    288:289:androidx.camera.core.FocusMeteringAction$Builder setAutoCancelDuration(long,java.util.concurrent.TimeUnit) -> setAutoCancelDuration
    265:266:androidx.camera.core.FocusMeteringAction$Builder setAutoFocusCallback(androidx.camera.core.FocusMeteringAction$OnAutoFocusListener) -> setAutoFocusCallback
    276:278:androidx.camera.core.FocusMeteringAction$Builder setAutoFocusCallback(java.util.concurrent.Executor,androidx.camera.core.FocusMeteringAction$OnAutoFocusListener) -> setAutoFocusCallback
androidx.camera.core.FocusMeteringAction$MeteringMode -> androidx.camera.core.FocusMeteringAction$MeteringMode:
    androidx.camera.core.FocusMeteringAction$MeteringMode[] $VALUES -> a
    170:169:void <clinit>() -> <clinit>
    169:169:void <init>(java.lang.String,int) -> <init>
    169:169:androidx.camera.core.FocusMeteringAction$MeteringMode valueOf(java.lang.String) -> valueOf
    169:169:androidx.camera.core.FocusMeteringAction$MeteringMode[] values() -> values
androidx.camera.core.ForwardingImageProxy -> g2:
    androidx.camera.core.ImageProxy mImage -> a
    java.util.Set mOnImageCloseListeners -> b
    49:51:void <init>(androidx.camera.core.ImageProxy) -> <init>
    115:114:void addOnImageCloseListener(androidx.camera.core.ForwardingImageProxy$OnImageCloseListener) -> a
    121:126:void notifyOnImageCloseListeners() -> a
    55:57:void close() -> close
    61:61:android.graphics.Rect getCropRect() -> getCropRect
    71:71:int getFormat() -> getFormat
    76:76:int getHeight() -> getHeight
    106:106:android.media.Image getImage() -> getImage
    101:101:androidx.camera.core.ImageInfo getImageInfo() -> getImageInfo
    96:96:androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes() -> getPlanes
    86:86:long getTimestamp() -> getTimestamp
    81:81:int getWidth() -> getWidth
    66:65:void setCropRect(android.graphics.Rect) -> setCropRect
    91:90:void setTimestamp(long) -> setTimestamp
androidx.camera.core.ForwardingImageProxy$OnImageCloseListener -> g2$a:
    void onImageClose(androidx.camera.core.ImageProxy) -> a
androidx.camera.core.ForwardingImageReaderListener -> h2:
    java.util.List mImageReaders -> a
    39:42:void <init>(java.util.List) -> <init>
    46:45:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ImageAnalysis -> androidx.camera.core.ImageAnalysis:
    androidx.camera.core.ImageAnalysisNonBlockingAnalyzer mImageAnalysisNonBlockingAnalyzer -> m
    java.util.concurrent.atomic.AtomicReference mAnalyzerExecutor -> i
    java.util.concurrent.atomic.AtomicReference mSubscribedAnalyzer -> h
    androidx.camera.core.ImageAnalysisBlockingAnalyzer mImageAnalysisBlockingAnalyzer -> l
    androidx.camera.core.DeferrableSurface mDeferrableSurface -> o
    androidx.camera.core.ImageAnalysisConfig$Builder mUseCaseConfigBuilder -> k
    androidx.camera.core.ImageReaderProxy mImageReader -> n
    java.util.concurrent.atomic.AtomicInteger mRelativeRotation -> j
    57:57:void <clinit>() -> <clinit>
    81:97:void <init>(androidx.camera.core.ImageAnalysisConfig) -> <init>
    101:150:androidx.camera.core.SessionConfig$Builder createPipeline(androidx.camera.core.ImageAnalysisConfig,android.util.Size) -> a
    157:177:void clearPipeline() -> a
    355:365:void tryUpdateRelativeRotation(java.lang.String) -> b
    303:305:void clear() -> clear
    258:259:androidx.camera.core.ImageAnalysis$Analyzer getAnalyzer() -> getAnalyzer
    316:322:androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing) -> getDefaultBuilder
    334:340:java.util.Map onSuggestedResolutionUpdated(java.util.Map) -> onSuggestedResolutionUpdated
    188:193:void removeAnalyzer() -> removeAnalyzer
    282:288:void setAnalyzer(java.util.concurrent.Executor,androidx.camera.core.ImageAnalysis$Analyzer) -> setAnalyzer
    222:247:void setTargetRotation(int) -> setTargetRotation
    292:292:java.lang.String toString() -> toString
androidx.camera.core.ImageAnalysis$1 -> androidx.camera.core.ImageAnalysis$a:
    androidx.camera.core.ImageAnalysis this$0 -> d
    androidx.camera.core.ImageAnalysisConfig val$config -> a
    android.util.Size val$resolution -> b
    java.lang.String val$cameraId -> c
    138:138:void <init>(androidx.camera.core.ImageAnalysis,androidx.camera.core.ImageAnalysisConfig,android.util.Size,java.lang.String) -> <init>
    142:147:void onError(androidx.camera.core.SessionConfig,androidx.camera.core.SessionConfig$SessionError) -> onError
androidx.camera.core.ImageAnalysis$2 -> androidx.camera.core.ImageAnalysis$b:
    androidx.camera.core.ImageReaderProxy val$imageReaderProxy -> a
    168:168:void <init>(androidx.camera.core.ImageAnalysis,androidx.camera.core.ImageReaderProxy) -> <init>
    171:174:void onSurfaceDetached() -> onSurfaceDetached
androidx.camera.core.ImageAnalysis$Defaults -> androidx.camera.core.ImageAnalysis$Defaults:
    android.util.Size DEFAULT_MAX_RESOLUTION -> c
    android.util.Size DEFAULT_TARGET_RESOLUTION -> b
    androidx.camera.core.ImageAnalysisConfig DEFAULT_CONFIG -> d
    androidx.camera.core.ImageAnalysis$ImageReaderMode DEFAULT_IMAGE_READER_MODE -> a
    425:444:void <clinit>() -> <clinit>
    424:424:void <init>() -> <init>
    423:423:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    448:448:androidx.camera.core.ImageAnalysisConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.core.ImageAnalysis$ImageReaderMode -> androidx.camera.core.ImageAnalysis$ImageReaderMode:
    androidx.camera.core.ImageAnalysis$ImageReaderMode[] $VALUES -> a
    376:374:void <clinit>() -> <clinit>
    374:374:void <init>(java.lang.String,int) -> <init>
    374:374:androidx.camera.core.ImageAnalysis$ImageReaderMode valueOf(java.lang.String) -> valueOf
    374:374:androidx.camera.core.ImageAnalysis$ImageReaderMode[] values() -> values
androidx.camera.core.ImageAnalysisAbstractAnalyzer -> i2:
    java.util.concurrent.atomic.AtomicBoolean mIsClosed -> d
    java.util.concurrent.atomic.AtomicInteger mRelativeRotation -> b
    java.util.concurrent.atomic.AtomicReference mUserExecutor -> c
    java.util.concurrent.atomic.AtomicReference mSubscribedAnalyzer -> a
    42:47:void <init>(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference) -> <init>
    53:58:void analyzeImage(androidx.camera.core.ImageProxy) -> a
    71:72:void close() -> a
    75:75:boolean isClosed() -> b
    64:65:void open() -> c
androidx.camera.core.ImageAnalysisBlockingAnalyzer -> j2:
    33:34:void <init>(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference) -> <init>
    38:61:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ImageAnalysisBlockingAnalyzer$1 -> j2$a:
    androidx.camera.core.ImageProxy val$image -> a
    androidx.camera.core.ImageAnalysisBlockingAnalyzer this$0 -> b
    45:45:void <init>(androidx.camera.core.ImageAnalysisBlockingAnalyzer,androidx.camera.core.ImageProxy) -> <init>
    49:52:void run() -> run
androidx.camera.core.ImageAnalysisConfig -> androidx.camera.core.ImageAnalysisConfig:
    androidx.camera.core.Config$Option OPTION_IMAGE_READER_MODE -> c
    androidx.camera.core.Config$Option OPTION_IMAGE_QUEUE_DEPTH -> d
    androidx.camera.core.OptionsBundle mConfig -> b
    46:48:void <clinit>() -> <clinit>
    55:57:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    126:126:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    150:151:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    472:472:java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor) -> getBackgroundExecutor
    484:484:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    259:259:androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter) -> getCameraIdFilter
    273:273:androidx.camera.core.CameraIdFilter getCameraIdFilter() -> getCameraIdFilter
    544:544:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> getCaptureOptionUnpacker
    552:552:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker() -> getCaptureOptionUnpacker
    527:527:androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> getDefaultCaptureConfig
    535:535:androidx.camera.core.CaptureConfig getDefaultCaptureConfig() -> getDefaultCaptureConfig
    410:410:android.util.Size getDefaultResolution(android.util.Size) -> getDefaultResolution
    424:424:android.util.Size getDefaultResolution() -> getDefaultResolution
    494:494:androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig) -> getDefaultSessionConfig
    502:502:androidx.camera.core.SessionConfig getDefaultSessionConfig() -> getDefaultSessionConfig
    100:100:int getImageQueueDepth(int) -> getImageQueueDepth
    114:114:int getImageQueueDepth() -> getImageQueueDepth
    71:71:androidx.camera.core.ImageAnalysis$ImageReaderMode getImageReaderMode(androidx.camera.core.ImageAnalysis$ImageReaderMode) -> getImageReaderMode
    85:85:androidx.camera.core.ImageAnalysis$ImageReaderMode getImageReaderMode() -> getImageReaderMode
    232:232:androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing) -> getLensFacing
    244:244:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
    432:432:android.util.Size getMaxResolution(android.util.Size) -> getMaxResolution
    440:440:android.util.Size getMaxResolution() -> getMaxResolution
    511:511:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> getSessionOptionUnpacker
    519:519:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker() -> getSessionOptionUnpacker
    449:449:java.util.List getSupportedResolutions(java.util.List) -> getSupportedResolutions
    457:457:java.util.List getSupportedResolutions() -> getSupportedResolutions
    558:558:int getSurfaceOccupancyPriority(int) -> getSurfaceOccupancyPriority
    564:564:int getSurfaceOccupancyPriority() -> getSurfaceOccupancyPriority
    325:325:androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio) -> getTargetAspectRatio
    337:337:androidx.camera.core.AspectRatio getTargetAspectRatio() -> getTargetAspectRatio
    294:294:android.util.Rational getTargetAspectRatioCustom(android.util.Rational) -> getTargetAspectRatioCustom
    312:312:android.util.Rational getTargetAspectRatioCustom() -> getTargetAspectRatioCustom
    170:174:java.lang.Class getTargetClass(java.lang.Class) -> getTargetClass
    183:186:java.lang.Class getTargetClass() -> getTargetClass
    202:202:java.lang.String getTargetName(java.lang.String) -> getTargetName
    217:217:java.lang.String getTargetName() -> getTargetName
    383:383:android.util.Size getTargetResolution(android.util.Size) -> getTargetResolution
    395:395:android.util.Size getTargetResolution() -> getTargetResolution
    354:354:int getTargetRotation(int) -> getTargetRotation
    370:370:int getTargetRotation() -> getTargetRotation
    573:573:androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> getUseCaseEventListener
    581:581:androidx.camera.core.UseCase$EventListener getUseCaseEventListener() -> getUseCaseEventListener
    158:158:java.util.Set listOptions() -> listOptions
    134:134:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    143:143:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.ImageAnalysisConfig$Builder -> androidx.camera.core.ImageAnalysisConfig$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    598:599:void <init>() -> <init>
    601:615:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    588:588:androidx.camera.core.UseCaseConfig build() -> build
    697:703:androidx.camera.core.ImageAnalysisConfig build() -> build
    625:625:androidx.camera.core.ImageAnalysisConfig$Builder fromConfig(androidx.camera.core.ImageAnalysisConfig) -> fromConfig
    685:685:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    588:588:java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    925:926:androidx.camera.core.ImageAnalysisConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    588:588:java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    773:774:androidx.camera.core.ImageAnalysisConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    588:588:java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    965:966:androidx.camera.core.ImageAnalysisConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    588:588:java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    945:946:androidx.camera.core.ImageAnalysisConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    588:588:java.lang.Object setDefaultResolution(android.util.Size) -> setDefaultResolution
    891:893:androidx.camera.core.ImageAnalysisConfig$Builder setDefaultResolution(android.util.Size) -> setDefaultResolution
    588:588:java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    936:937:androidx.camera.core.ImageAnalysisConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    672:673:androidx.camera.core.ImageAnalysisConfig$Builder setImageQueueDepth(int) -> setImageQueueDepth
    639:640:androidx.camera.core.ImageAnalysisConfig$Builder setImageReaderMode(androidx.camera.core.ImageAnalysis$ImageReaderMode) -> setImageReaderMode
    588:588:java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    755:756:androidx.camera.core.ImageAnalysisConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    588:588:java.lang.Object setMaxResolution(android.util.Size) -> setMaxResolution
    901:902:androidx.camera.core.ImageAnalysisConfig$Builder setMaxResolution(android.util.Size) -> setMaxResolution
    588:588:java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    955:956:androidx.camera.core.ImageAnalysisConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    588:588:java.lang.Object setSupportedResolutions(java.util.List) -> setSupportedResolutions
    910:911:androidx.camera.core.ImageAnalysisConfig$Builder setSupportedResolutions(java.util.List) -> setSupportedResolutions
    588:588:java.lang.Object setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    974:975:androidx.camera.core.ImageAnalysisConfig$Builder setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    588:588:java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    829:830:androidx.camera.core.ImageAnalysisConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    588:588:java.lang.Object setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    807:809:androidx.camera.core.ImageAnalysisConfig$Builder setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    588:588:java.lang.Object setTargetClass(java.lang.Class) -> setTargetClass
    713:721:androidx.camera.core.ImageAnalysisConfig$Builder setTargetClass(java.lang.Class) -> setTargetClass
    588:588:java.lang.Object setTargetName(java.lang.String) -> setTargetName
    737:738:androidx.camera.core.ImageAnalysisConfig$Builder setTargetName(java.lang.String) -> setTargetName
    588:588:java.lang.Object setTargetResolution(android.util.Size) -> setTargetResolution
    871:877:androidx.camera.core.ImageAnalysisConfig$Builder setTargetResolution(android.util.Size) -> setTargetResolution
    588:588:java.lang.Object setTargetRotation(int) -> setTargetRotation
    846:847:androidx.camera.core.ImageAnalysisConfig$Builder setTargetRotation(int) -> setTargetRotation
    588:588:java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
    984:985:androidx.camera.core.ImageAnalysisConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
androidx.camera.core.ImageAnalysisNonBlockingAnalyzer -> k2:
    androidx.camera.core.ImageProxy mCachedImage -> f
    java.util.concurrent.atomic.AtomicLong mFinishedImageTimestamp -> h
    java.util.concurrent.Executor mBackgroundExecutor -> e
    java.util.concurrent.atomic.AtomicLong mPostedImageTimestamp -> g
    56:61:void <init>(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Executor) -> <init>
    83:82:void close() -> a
    108:107:void analyze(androidx.camera.core.ImageProxy) -> b
    74:73:void open() -> c
    161:160:void finishImage(androidx.camera.core.ImageProxy) -> c
    94:93:void analyzeCachedImage() -> d
    65:70:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 -> k2$a:
    androidx.camera.core.ImageProxy val$imageProxy -> a
    androidx.camera.core.ImageAnalysisNonBlockingAnalyzer this$0 -> b
    134:134:void <init>(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer,androidx.camera.core.ImageProxy) -> <init>
    138:147:void run() -> run
androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1$1 -> k2$a$a:
    androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1 this$1 -> a
    141:141:void <init>(androidx.camera.core.ImageAnalysisNonBlockingAnalyzer$1) -> <init>
    144:145:void run() -> run
androidx.camera.core.ImageCapture -> androidx.camera.core.ImageCapture:
    androidx.camera.core.ForwardingImageProxy$OnImageCloseListener mOnImageCloseListener -> A
    androidx.camera.core.CaptureBundle mCaptureBundle -> q
    androidx.camera.core.DeferrableSurface mDeferrableSurface -> x
    androidx.camera.core.SessionConfig$Builder mSessionConfigBuilder -> l
    androidx.camera.core.ImageReaderProxy mImageReader -> u
    androidx.camera.core.ImageCapture$Metadata EMPTY_METADATA -> B
    java.util.concurrent.ExecutorService mExecutor -> n
    androidx.camera.core.FlashMode mFlashMode -> z
    androidx.camera.core.ImageCaptureConfig$Builder mUseCaseConfigBuilder -> t
    boolean mEnableCheck3AConverged -> y
    androidx.camera.core.CameraCaptureCallback mMetadataMatchingCaptureCallback -> v
    java.util.Deque mImageCaptureRequests -> k
    androidx.camera.core.ImageCapture$CaptureCallbackChecker mSessionCallbackChecker -> o
    android.os.HandlerThread mProcessingImageResultThread -> i
    int mMaxCaptureStages -> r
    android.os.Handler mProcessingImageResultHandler -> j
    androidx.camera.core.CaptureProcessor mCaptureProcessor -> s
    androidx.camera.core.ImageCaptureConfig mConfig -> w
    android.os.Handler mMainHandler -> h
    androidx.camera.core.CaptureConfig mCaptureConfig -> m
    androidx.camera.core.ImageCapture$CaptureMode mCaptureMode -> p
    97:103:void <clinit>() -> <clinit>
    167:177:void <init>(androidx.camera.core.ImageCaptureConfig) -> <init>
    211:283:androidx.camera.core.SessionConfig$Builder createPipeline(androidx.camera.core.ImageCaptureConfig,android.util.Size) -> a
    290:312:void clearPipeline() -> a
    578:599:void sendImageCaptureRequest(java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageCapturedListener) -> a
    888:910:boolean is3AConverged(androidx.camera.core.CameraCaptureResult) -> a
    943:950:void cancelAfAeTrigger(androidx.camera.core.ImageCapture$TakePictureState) -> a
    1060:1062:androidx.camera.core.CaptureBundle getCaptureBundle(androidx.camera.core.CaptureBundle) -> a
    333:334:androidx.camera.core.CameraControlInternal getCurrentCameraControl() -> b
    862:872:com.google.common.util.concurrent.ListenableFuture check3AConverged(androidx.camera.core.ImageCapture$TakePictureState) -> b
    833:834:com.google.common.util.concurrent.ListenableFuture getPreCaptureStateIfNeeded() -> c
    847:851:boolean isFlashRequired(androidx.camera.core.ImageCapture$TakePictureState) -> c
    699:702:void clear() -> clear
    604:608:void issueImageCaptureRequests() -> d
    954:1033:com.google.common.util.concurrent.ListenableFuture issueTakePicture(androidx.camera.core.ImageCapture$TakePictureState) -> d
    623:683:void takePictureInternal() -> e
    801:802:com.google.common.util.concurrent.ListenableFuture postTakePicture(androidx.camera.core.ImageCapture$TakePictureState) -> e
    769:769:com.google.common.util.concurrent.ListenableFuture preTakePicture(androidx.camera.core.ImageCapture$TakePictureState) -> f
    937:939:void triggerAePrecapture(androidx.camera.core.ImageCapture$TakePictureState) -> g
    323:329:androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing) -> getDefaultBuilder
    349:349:androidx.camera.core.FlashMode getFlashMode() -> getFlashMode
    931:933:void triggerAf(androidx.camera.core.ImageCapture$TakePictureState) -> h
    922:927:void triggerAfIfNeeded(androidx.camera.core.ImageCapture$TakePictureState) -> i
    340:341:void onCameraControlReady(java.lang.String) -> onCameraControlReady
    713:716:java.util.Map onSuggestedResolutionUpdated(java.util.Map) -> onSuggestedResolutionUpdated
    358:360:void setFlashMode(androidx.camera.core.FlashMode) -> setFlashMode
    378:387:void setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    414:423:void setTargetRotation(int) -> setTargetRotation
    437:449:void takePicture(java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageCapturedListener) -> takePicture
    464:465:void takePicture(java.io.File,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageSavedListener) -> takePicture
    486:572:void takePicture(java.io.File,androidx.camera.core.ImageCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageSavedListener) -> takePicture
    688:688:java.lang.String toString() -> toString
androidx.camera.core.ImageCapture$1 -> androidx.camera.core.ImageCapture$k:
    java.util.concurrent.atomic.AtomicInteger mId -> a
    119:120:void <init>(androidx.camera.core.ImageCapture) -> <init>
    124:124:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.camera.core.ImageCapture$10 -> androidx.camera.core.ImageCapture$a:
    androidx.camera.core.ImageCapture$TakePictureState val$state -> a
    androidx.camera.core.ImageCapture this$0 -> b
    632:632:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    635:635:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Void) -> a
    632:632:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
androidx.camera.core.ImageCapture$11 -> androidx.camera.core.ImageCapture$b:
    androidx.camera.core.ImageCapture$TakePictureState val$state -> a
    androidx.camera.core.ImageCapture this$0 -> b
    626:626:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    629:629:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Void) -> a
    626:626:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
androidx.camera.core.ImageCapture$12 -> androidx.camera.core.ImageCapture$c:
    androidx.camera.core.ImageCapture this$0 -> a
    740:740:void <init>(androidx.camera.core.ImageCapture) -> <init>
    749:760:void onImageClose(androidx.camera.core.ImageProxy) -> a
androidx.camera.core.ImageCapture$12$1 -> androidx.camera.core.ImageCapture$c$a:
    androidx.camera.core.ImageProxy val$image -> a
    androidx.camera.core.ImageCapture$12 this$1 -> b
    750:750:void <init>(androidx.camera.core.ImageCapture$12,androidx.camera.core.ImageProxy) -> <init>
    753:754:void run() -> run
androidx.camera.core.ImageCapture$13 -> androidx.camera.core.ImageCapture$d:
    787:787:void <init>(androidx.camera.core.ImageCapture) -> <init>
    790:790:java.lang.Void apply(java.lang.Boolean) -> a
    787:787:java.lang.Object apply(java.lang.Object) -> apply
androidx.camera.core.ImageCapture$14 -> androidx.camera.core.ImageCapture$e:
    androidx.camera.core.ImageCapture$TakePictureState val$state -> a
    androidx.camera.core.ImageCapture this$0 -> b
    771:771:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    775:782:com.google.common.util.concurrent.ListenableFuture apply(androidx.camera.core.CameraCaptureResult) -> a
    771:771:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
androidx.camera.core.ImageCapture$15 -> androidx.camera.core.ImageCapture$f:
    androidx.camera.core.ImageCapture$TakePictureState val$state -> b
    java.util.concurrent.Executor val$executor -> a
    androidx.camera.core.ImageCapture this$0 -> c
    802:802:void <init>(androidx.camera.core.ImageCapture,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    807:814:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.ImageCapture$15$1 -> androidx.camera.core.ImageCapture$f$a:
    androidx.camera.core.ImageCapture$15 this$1 -> b
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    807:807:void <init>(androidx.camera.core.ImageCapture$15,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    810:812:void run() -> run
androidx.camera.core.ImageCapture$16 -> androidx.camera.core.ImageCapture$g:
    835:835:void <init>(androidx.camera.core.ImageCapture) -> <init>
    835:835:java.lang.Object check(androidx.camera.core.CameraCaptureResult) -> check
    839:839:androidx.camera.core.CameraCaptureResult check(androidx.camera.core.CameraCaptureResult) -> check
androidx.camera.core.ImageCapture$17 -> androidx.camera.core.ImageCapture$h:
    androidx.camera.core.ImageCapture this$0 -> a
    873:873:void <init>(androidx.camera.core.ImageCapture) -> <init>
    873:873:java.lang.Object check(androidx.camera.core.CameraCaptureResult) -> check
    876:880:java.lang.Boolean check(androidx.camera.core.CameraCaptureResult) -> check
androidx.camera.core.ImageCapture$18 -> androidx.camera.core.ImageCapture$i:
    java.util.List val$captureConfigs -> b
    androidx.camera.core.CaptureStage val$captureStage -> c
    androidx.camera.core.CaptureConfig$Builder val$builder -> a
    1000:1000:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.CaptureConfig$Builder,java.util.List,androidx.camera.core.CaptureStage) -> <init>
    1004:1025:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.ImageCapture$18$1 -> androidx.camera.core.ImageCapture$i$a:
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    1005:1005:void <init>(androidx.camera.core.ImageCapture$18,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    1009:1010:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
    1015:1020:void onCaptureFailed(androidx.camera.core.CameraCaptureFailure) -> onCaptureFailed
androidx.camera.core.ImageCapture$19 -> androidx.camera.core.ImageCapture$j:
    java.util.List val$futureList -> a
    androidx.camera.core.ImageCapture$TakePictureState val$state -> b
    1033:1033:void <init>(androidx.camera.core.ImageCapture,java.util.List,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    1037:1054:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.ImageCapture$19$1 -> androidx.camera.core.ImageCapture$j$a:
    androidx.camera.core.ImageCapture$19 this$1 -> b
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    1040:1040:void <init>(androidx.camera.core.ImageCapture$19,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    1043:1045:void onSuccess(java.util.List) -> a
    1049:1050:void onFailure(java.lang.Throwable) -> onFailure
    1040:1040:void onSuccess(java.lang.Object) -> onSuccess
androidx.camera.core.ImageCapture$2 -> androidx.camera.core.ImageCapture$l:
    androidx.camera.core.ImageCapture this$0 -> a
    241:241:void <init>(androidx.camera.core.ImageCapture) -> <init>
    244:263:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ImageCapture$3 -> androidx.camera.core.ImageCapture$m:
    androidx.camera.core.ImageCaptureConfig val$config -> a
    android.util.Size val$resolution -> b
    androidx.camera.core.ImageCapture this$0 -> c
    271:271:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCaptureConfig,android.util.Size) -> <init>
    275:280:void onError(androidx.camera.core.SessionConfig,androidx.camera.core.SessionConfig$SessionError) -> onError
androidx.camera.core.ImageCapture$4 -> androidx.camera.core.ImageCapture$n:
    androidx.camera.core.ImageReaderProxy val$imageReaderProxy -> a
    android.os.HandlerThread val$handlerThread -> b
    300:300:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageReaderProxy,android.os.HandlerThread) -> <init>
    303:309:void onSurfaceDetached() -> onSurfaceDetached
androidx.camera.core.ImageCapture$5 -> androidx.camera.core.ImageCapture$o:
    androidx.camera.core.ImageCapture$OnImageCapturedListener val$listener -> b
    java.util.concurrent.Executor val$executor -> a
    androidx.camera.core.ImageCapture this$0 -> c
    439:439:void <init>(androidx.camera.core.ImageCapture,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageCapturedListener) -> <init>
    442:443:void run() -> run
androidx.camera.core.ImageCapture$6 -> androidx.camera.core.ImageCapture$p:
    java.io.File val$saveLocation -> a
    androidx.camera.core.ImageCapture$OnImageSavedListener val$imageSavedListener -> d
    androidx.camera.core.ImageCapture$Metadata val$metadata -> b
    java.util.concurrent.Executor val$executor -> c
    androidx.camera.core.ImageCapture this$0 -> e
    488:488:void <init>(androidx.camera.core.ImageCapture,java.io.File,androidx.camera.core.ImageCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageSavedListener) -> <init>
    491:493:void run() -> run
androidx.camera.core.ImageCapture$7 -> androidx.camera.core.ImageCapture$q:
    androidx.camera.core.ImageCapture$OnImageSavedListener val$imageSavedListener -> a
    519:519:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCapture$OnImageSavedListener) -> <init>
    528:539:void onError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable) -> onError
    522:523:void onImageSaved(java.io.File) -> onImageSaved
androidx.camera.core.ImageCapture$8 -> androidx.camera.core.ImageCapture$r:
    androidx.camera.core.ImageCapture$OnImageSavedListener val$imageSavedListener -> e
    java.io.File val$saveLocation -> a
    androidx.camera.core.ImageSaver$OnImageSavedListener val$imageSavedListenerWrapper -> d
    androidx.camera.core.ImageCapture$Metadata val$metadata -> b
    java.util.concurrent.Executor val$executor -> c
    545:545:void <init>(androidx.camera.core.ImageCapture,java.io.File,androidx.camera.core.ImageCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.ImageSaver$OnImageSavedListener,androidx.camera.core.ImageCapture$OnImageSavedListener) -> <init>
    548:559:void onCaptureSuccess(androidx.camera.core.ImageProxy,int) -> onCaptureSuccess
    565:566:void onError(androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable) -> onError
androidx.camera.core.ImageCapture$9 -> androidx.camera.core.ImageCapture$s:
    androidx.camera.core.ImageCapture$TakePictureState val$state -> a
    androidx.camera.core.ImageCapture this$0 -> b
    639:639:void <init>(androidx.camera.core.ImageCapture,androidx.camera.core.ImageCapture$TakePictureState) -> <init>
    642:643:void onSuccess(java.lang.Void) -> a
    652:680:void onTakePictureFinish(java.lang.Throwable) -> a
    647:649:void onFailure(java.lang.Throwable) -> onFailure
    639:639:void onSuccess(java.lang.Object) -> onSuccess
androidx.camera.core.ImageCapture$9$1 -> androidx.camera.core.ImageCapture$s$a:
    androidx.camera.core.ImageCapture$9 this$1 -> b
    java.lang.Throwable val$error -> a
    662:662:void <init>(androidx.camera.core.ImageCapture$9,java.lang.Throwable) -> <init>
    665:675:void run() -> run
androidx.camera.core.ImageCapture$CaptureCallbackChecker -> androidx.camera.core.ImageCapture$CaptureCallbackChecker:
    java.util.Set mCaptureResultListeners -> a
    1230:1234:void <init>() -> <init>
    1251:1251:com.google.common.util.concurrent.ListenableFuture checkCaptureResult(androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker) -> a
    1268:1269:com.google.common.util.concurrent.ListenableFuture checkCaptureResult(androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker,long,java.lang.Object) -> a
    1307:1321:void deliverCaptureResultToListeners(androidx.camera.core.CameraCaptureResult) -> a
    1326:1328:void addListener(androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultListener) -> a
    1238:1239:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
androidx.camera.core.ImageCapture$CaptureCallbackChecker$1 -> androidx.camera.core.ImageCapture$CaptureCallbackChecker$a:
    androidx.camera.core.ImageCapture$CaptureCallbackChecker this$0 -> e
    androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker val$checker -> a
    java.lang.Object val$defValue -> d
    long val$startTimeInMs -> b
    long val$timeoutInMs -> c
    1275:1275:void <init>(androidx.camera.core.ImageCapture$CaptureCallbackChecker,androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker,long,long,java.lang.Object) -> <init>
    1279:1298:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.ImageCapture$CaptureCallbackChecker$1$1 -> androidx.camera.core.ImageCapture$CaptureCallbackChecker$a$a:
    androidx.camera.core.ImageCapture$CaptureCallbackChecker$1 this$1 -> b
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    1280:1280:void <init>(androidx.camera.core.ImageCapture$CaptureCallbackChecker$1,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    1284:1295:boolean onCaptureResult(androidx.camera.core.CameraCaptureResult) -> a
androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultListener -> androidx.camera.core.ImageCapture$CaptureCallbackChecker$b:
    boolean onCaptureResult(androidx.camera.core.CameraCaptureResult) -> a
androidx.camera.core.ImageCapture$CaptureMode -> androidx.camera.core.ImageCapture$CaptureMode:
    androidx.camera.core.ImageCapture$CaptureMode[] $VALUES -> a
    1098:1093:void <clinit>() -> <clinit>
    1093:1093:void <init>(java.lang.String,int) -> <init>
    1093:1093:androidx.camera.core.ImageCapture$CaptureMode valueOf(java.lang.String) -> valueOf
    1093:1093:androidx.camera.core.ImageCapture$CaptureMode[] values() -> values
androidx.camera.core.ImageCapture$Defaults -> androidx.camera.core.ImageCapture$Defaults:
    androidx.camera.core.FlashMode DEFAULT_FLASH_MODE -> b
    androidx.camera.core.ImageCaptureConfig DEFAULT_CONFIG -> c
    androidx.camera.core.ImageCapture$CaptureMode DEFAULT_CAPTURE_MODE -> a
    1172:1186:void <clinit>() -> <clinit>
    1170:1170:void <init>() -> <init>
    1169:1169:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    1190:1190:androidx.camera.core.ImageCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.core.ImageCapture$ImageCaptureError -> androidx.camera.core.ImageCapture$ImageCaptureError:
    androidx.camera.core.ImageCapture$ImageCaptureError[] $VALUES -> a
    1081:1075:void <clinit>() -> <clinit>
    1075:1075:void <init>(java.lang.String,int) -> <init>
    1075:1075:androidx.camera.core.ImageCapture$ImageCaptureError valueOf(java.lang.String) -> valueOf
    1075:1075:androidx.camera.core.ImageCapture$ImageCaptureError[] values() -> values
androidx.camera.core.ImageCapture$ImageCaptureRequest -> androidx.camera.core.ImageCapture$t:
    androidx.camera.core.ImageCapture$OnImageCapturedListener mListener -> d
    android.util.Rational mTargetRatio -> b
    java.util.concurrent.Executor mListenerExecutor -> c
    int mRotationDegrees -> a
    1370:1375:void <init>(androidx.camera.core.ImageCapture,int,android.util.Rational,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageCapturedListener) -> <init>
    1379:1398:void dispatchImage(androidx.camera.core.ImageProxy) -> a
    1403:1412:void callbackError(androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable) -> a
androidx.camera.core.ImageCapture$ImageCaptureRequest$1 -> androidx.camera.core.ImageCapture$t$a:
    androidx.camera.core.ImageProxy val$image -> a
    androidx.camera.core.ImageCapture$ImageCaptureRequest this$1 -> b
    1379:1379:void <init>(androidx.camera.core.ImageCapture$ImageCaptureRequest,androidx.camera.core.ImageProxy) -> <init>
    1382:1390:void run() -> run
androidx.camera.core.ImageCapture$ImageCaptureRequest$2 -> androidx.camera.core.ImageCapture$t$b:
    androidx.camera.core.ImageCapture$ImageCaptureRequest this$1 -> d
    androidx.camera.core.ImageCapture$ImageCaptureError val$imageCaptureError -> a
    java.lang.Throwable val$cause -> c
    java.lang.String val$message -> b
    1403:1403:void <init>(androidx.camera.core.ImageCapture$ImageCaptureRequest,androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable) -> <init>
    1406:1407:void run() -> run
androidx.camera.core.ImageCapture$Metadata -> androidx.camera.core.ImageCapture$Metadata:
    1195:1195:void <init>() -> <init>
androidx.camera.core.ImageCapture$OnImageCapturedListener -> androidx.camera.core.ImageCapture$OnImageCapturedListener:
    1122:1122:void <init>() -> <init>
    1151:1152:void onCaptureSuccess(androidx.camera.core.ImageProxy,int) -> onCaptureSuccess
    1158:1158:void onError(androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable) -> onError
androidx.camera.core.ImageCapture$TakePictureState -> androidx.camera.core.ImageCapture$u:
    java.util.List mCaptureSuccess -> e
    java.lang.Throwable mError -> f
    androidx.camera.core.CameraCaptureResult mPreCaptureState -> a
    boolean mIsAfTriggered -> b
    boolean mIsAePrecaptureTriggered -> c
    boolean mIsFlashTriggered -> d
    1212:1218:void <init>() -> <init>
androidx.camera.core.ImageCaptureConfig -> androidx.camera.core.ImageCaptureConfig:
    androidx.camera.core.Config$Option OPTION_IMAGE_CAPTURE_MODE -> c
    androidx.camera.core.Config$Option OPTION_FLASH_MODE -> d
    androidx.camera.core.Config$Option OPTION_BUFFER_FORMAT -> g
    androidx.camera.core.Config$Option OPTION_MAX_CAPTURE_STAGES -> h
    androidx.camera.core.Config$Option OPTION_CAPTURE_BUNDLE -> e
    androidx.camera.core.Config$Option OPTION_CAPTURE_PROCESSOR -> f
    androidx.camera.core.OptionsBundle mConfig -> b
    46:57:void <clinit>() -> <clinit>
    65:67:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    231:231:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    255:256:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    577:577:java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor) -> getBackgroundExecutor
    589:589:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    181:181:java.lang.Integer getBufferFormat(java.lang.Integer) -> getBufferFormat
    194:194:java.lang.Integer getBufferFormat() -> getBufferFormat
    364:364:androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter) -> getCameraIdFilter
    378:378:androidx.camera.core.CameraIdFilter getCameraIdFilter() -> getCameraIdFilter
    127:127:androidx.camera.core.CaptureBundle getCaptureBundle(androidx.camera.core.CaptureBundle) -> getCaptureBundle
    140:140:androidx.camera.core.CaptureBundle getCaptureBundle() -> getCaptureBundle
    79:79:androidx.camera.core.ImageCapture$CaptureMode getCaptureMode(androidx.camera.core.ImageCapture$CaptureMode) -> getCaptureMode
    90:90:androidx.camera.core.ImageCapture$CaptureMode getCaptureMode() -> getCaptureMode
    649:649:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> getCaptureOptionUnpacker
    657:657:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker() -> getCaptureOptionUnpacker
    154:154:androidx.camera.core.CaptureProcessor getCaptureProcessor(androidx.camera.core.CaptureProcessor) -> getCaptureProcessor
    167:167:androidx.camera.core.CaptureProcessor getCaptureProcessor() -> getCaptureProcessor
    615:615:androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> getDefaultCaptureConfig
    623:623:androidx.camera.core.CaptureConfig getDefaultCaptureConfig() -> getDefaultCaptureConfig
    515:515:android.util.Size getDefaultResolution(android.util.Size) -> getDefaultResolution
    529:529:android.util.Size getDefaultResolution() -> getDefaultResolution
    599:599:androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig) -> getDefaultSessionConfig
    607:607:androidx.camera.core.SessionConfig getDefaultSessionConfig() -> getDefaultSessionConfig
    102:102:androidx.camera.core.FlashMode getFlashMode(androidx.camera.core.FlashMode) -> getFlashMode
    113:113:androidx.camera.core.FlashMode getFlashMode() -> getFlashMode
    337:337:androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing) -> getLensFacing
    349:349:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
    207:207:int getMaxCaptureStages(int) -> getMaxCaptureStages
    219:219:int getMaxCaptureStages() -> getMaxCaptureStages
    537:537:android.util.Size getMaxResolution(android.util.Size) -> getMaxResolution
    545:545:android.util.Size getMaxResolution() -> getMaxResolution
    632:632:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> getSessionOptionUnpacker
    640:640:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker() -> getSessionOptionUnpacker
    554:554:java.util.List getSupportedResolutions(java.util.List) -> getSupportedResolutions
    562:562:java.util.List getSupportedResolutions() -> getSupportedResolutions
    663:663:int getSurfaceOccupancyPriority(int) -> getSurfaceOccupancyPriority
    669:669:int getSurfaceOccupancyPriority() -> getSurfaceOccupancyPriority
    430:430:androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio) -> getTargetAspectRatio
    442:442:androidx.camera.core.AspectRatio getTargetAspectRatio() -> getTargetAspectRatio
    399:399:android.util.Rational getTargetAspectRatioCustom(android.util.Rational) -> getTargetAspectRatioCustom
    417:417:android.util.Rational getTargetAspectRatioCustom() -> getTargetAspectRatioCustom
    275:279:java.lang.Class getTargetClass(java.lang.Class) -> getTargetClass
    288:291:java.lang.Class getTargetClass() -> getTargetClass
    307:307:java.lang.String getTargetName(java.lang.String) -> getTargetName
    322:322:java.lang.String getTargetName() -> getTargetName
    488:488:android.util.Size getTargetResolution(android.util.Size) -> getTargetResolution
    500:500:android.util.Size getTargetResolution() -> getTargetResolution
    459:459:int getTargetRotation(int) -> getTargetRotation
    475:475:int getTargetRotation() -> getTargetRotation
    678:678:androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> getUseCaseEventListener
    686:686:androidx.camera.core.UseCase$EventListener getUseCaseEventListener() -> getUseCaseEventListener
    263:263:java.util.Set listOptions() -> listOptions
    239:239:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    248:248:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.ImageCaptureConfig$Builder -> androidx.camera.core.ImageCaptureConfig$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    704:705:void <init>() -> <init>
    707:721:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    693:693:androidx.camera.core.UseCaseConfig build() -> build
    755:761:androidx.camera.core.ImageCaptureConfig build() -> build
    731:731:androidx.camera.core.ImageCaptureConfig$Builder fromConfig(androidx.camera.core.ImageCaptureConfig) -> fromConfig
    743:743:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    693:693:java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    1073:1074:androidx.camera.core.ImageCaptureConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    837:838:androidx.camera.core.ImageCaptureConfig$Builder setBufferFormat(int) -> setBufferFormat
    693:693:java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    931:932:androidx.camera.core.ImageCaptureConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    802:803:androidx.camera.core.ImageCaptureConfig$Builder setCaptureBundle(androidx.camera.core.CaptureBundle) -> setCaptureBundle
    776:777:androidx.camera.core.ImageCaptureConfig$Builder setCaptureMode(androidx.camera.core.ImageCapture$CaptureMode) -> setCaptureMode
    693:693:java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    1113:1114:androidx.camera.core.ImageCaptureConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    816:817:androidx.camera.core.ImageCaptureConfig$Builder setCaptureProcessor(androidx.camera.core.CaptureProcessor) -> setCaptureProcessor
    693:693:java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    1093:1094:androidx.camera.core.ImageCaptureConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    693:693:java.lang.Object setDefaultResolution(android.util.Size) -> setDefaultResolution
    1048:1050:androidx.camera.core.ImageCaptureConfig$Builder setDefaultResolution(android.util.Size) -> setDefaultResolution
    693:693:java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    1084:1085:androidx.camera.core.ImageCaptureConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    788:789:androidx.camera.core.ImageCaptureConfig$Builder setFlashMode(androidx.camera.core.FlashMode) -> setFlashMode
    693:693:java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    913:914:androidx.camera.core.ImageCaptureConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    851:852:androidx.camera.core.ImageCaptureConfig$Builder setMaxCaptureStages(int) -> setMaxCaptureStages
    693:693:java.lang.Object setMaxResolution(android.util.Size) -> setMaxResolution
    1058:1059:androidx.camera.core.ImageCaptureConfig$Builder setMaxResolution(android.util.Size) -> setMaxResolution
    693:693:java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    1103:1104:androidx.camera.core.ImageCaptureConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    693:693:java.lang.Object setSupportedResolutions(java.util.List) -> setSupportedResolutions
    860:861:androidx.camera.core.ImageCaptureConfig$Builder setSupportedResolutions(java.util.List) -> setSupportedResolutions
    693:693:java.lang.Object setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    1122:1123:androidx.camera.core.ImageCaptureConfig$Builder setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    693:693:java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    987:988:androidx.camera.core.ImageCaptureConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    693:693:java.lang.Object setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    965:967:androidx.camera.core.ImageCaptureConfig$Builder setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    693:693:java.lang.Object setTargetClass(java.lang.Class) -> setTargetClass
    871:879:androidx.camera.core.ImageCaptureConfig$Builder setTargetClass(java.lang.Class) -> setTargetClass
    693:693:java.lang.Object setTargetName(java.lang.String) -> setTargetName
    895:896:androidx.camera.core.ImageCaptureConfig$Builder setTargetName(java.lang.String) -> setTargetName
    693:693:java.lang.Object setTargetResolution(android.util.Size) -> setTargetResolution
    1029:1034:androidx.camera.core.ImageCaptureConfig$Builder setTargetResolution(android.util.Size) -> setTargetResolution
    693:693:java.lang.Object setTargetRotation(int) -> setTargetRotation
    1004:1005:androidx.camera.core.ImageCaptureConfig$Builder setTargetRotation(int) -> setTargetRotation
    693:693:java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
    1132:1133:androidx.camera.core.ImageCaptureConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
androidx.camera.core.ImageFormatConstants -> androidx.camera.core.ImageFormatConstants:
    37:38:void <init>() -> <init>
androidx.camera.core.ImageOutputConfig -> androidx.camera.core.ImageOutputConfig:
    60:110:void <clinit>() -> <clinit>
androidx.camera.core.ImageProxyDownsampler -> l2:
    44:45:androidx.camera.core.ForwardingImageProxy downsample(androidx.camera.core.ImageProxy,int,int,androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod) -> a
    150:186:void resizeAveraging(java.nio.ByteBuffer,int,int,int,int,byte[],int,int) -> a
    191:191:androidx.camera.core.ImageProxy$PlaneProxy createPlaneProxy(int,int,byte[]) -> a
    111:138:void resizeNearestNeighbor(java.nio.ByteBuffer,int,int,int,int,byte[],int,int) -> b
androidx.camera.core.ImageProxyDownsampler$1 -> l2$a:
    byte[] val$data -> b
    int val$pixelStride -> d
    java.nio.ByteBuffer mBuffer -> a
    int val$rowStride -> c
    191:192:void <init>(byte[],int,int) -> <init>
    206:206:java.nio.ByteBuffer getBuffer() -> getBuffer
    201:201:int getPixelStride() -> getPixelStride
    196:196:int getRowStride() -> getRowStride
androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod -> l2$b:
    androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod AVERAGING -> b
    androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] $VALUES -> c
    androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod NEAREST_NEIGHBOR -> a
    213:211:void <clinit>() -> <clinit>
    211:211:void <init>(java.lang.String,int) -> <init>
    211:211:androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod valueOf(java.lang.String) -> valueOf
    211:211:androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] values() -> values
androidx.camera.core.ImageProxyDownsampler$ForwardingImageProxyImpl -> l2$c:
    int mDownsampledWidth -> d
    int mDownsampledHeight -> e
    androidx.camera.core.ImageProxy$PlaneProxy[] mDownsampledPlanes -> c
    228:232:void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageProxy$PlaneProxy[],int,int) -> <init>
    241:241:int getHeight() -> getHeight
    246:246:androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes() -> getPlanes
    236:236:int getWidth() -> getWidth
androidx.camera.core.ImageReaderFormatRecommender -> m2:
    32:35:androidx.camera.core.ImageReaderFormatRecommender$FormatCombo chooseCombo() -> a
androidx.camera.core.ImageReaderFormatRecommender$FormatCombo -> m2$a:
    41:41:void <init>() -> <init>
    int imageAnalysisFormat() -> a
    43:43:androidx.camera.core.ImageReaderFormatRecommender$FormatCombo create(int,int) -> a
    int imageCaptureFormat() -> b
androidx.camera.core.ImageReaderProxys -> androidx.camera.core.ImageReaderProxys:
    java.util.List sSharedImageReaderProxys -> b
    java.util.Set sSharedReaderWhitelist -> c
    androidx.camera.core.ImageReaderProxy sSharedImageReader -> d
    java.lang.String TAG -> a
    40:43:void <clinit>() -> <clinit>
    47:48:void <init>() -> <init>
    64:67:androidx.camera.core.ImageReaderProxy createCompatibleReader(java.lang.String,int,int,int,int,java.util.concurrent.Executor) -> a
    141:150:boolean inSharedReaderWhitelist(androidx.camera.core.DeviceProperties) -> a
    154:157:void clearSharedReaders() -> a
    82:83:androidx.camera.core.ImageReaderProxy createIsolatedReader(int,int,int,int) -> createIsolatedReader
    100:128:androidx.camera.core.ImageReaderProxy createSharedReader(java.lang.String,int,int,int,int,java.util.concurrent.Executor) -> createSharedReader
androidx.camera.core.ImageReaderProxys$1 -> androidx.camera.core.ImageReaderProxys$a:
    119:119:void <init>() -> <init>
    122:126:void onReaderClose(androidx.camera.core.ImageReaderProxy) -> a
androidx.camera.core.ImageSaver -> androidx.camera.core.ImageSaver:
    androidx.camera.core.ImageProxy mImage -> b
    java.io.File mFile -> f
    boolean mIsReversedVertical -> e
    androidx.camera.core.ImageSaver$OnImageSavedListener mListener -> h
    java.util.concurrent.Executor mExecutor -> g
    android.location.Location mLocation -> a
    int mOrientation -> c
    boolean mIsReversedHorizontal -> d
    57:66:void <init>(androidx.camera.core.ImageProxy,java.io.File,int,boolean,boolean,android.location.Location,java.util.concurrent.Executor,androidx.camera.core.ImageSaver$OnImageSavedListener) -> <init>
    123:129:void postSuccess() -> a
    133:139:void postError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable) -> a
    71:120:void run() -> run
androidx.camera.core.ImageSaver$1 -> androidx.camera.core.ImageSaver$a:
    androidx.camera.core.ImageSaver this$0 -> a
    123:123:void <init>(androidx.camera.core.ImageSaver) -> <init>
    126:127:void run() -> run
androidx.camera.core.ImageSaver$2 -> androidx.camera.core.ImageSaver$b:
    androidx.camera.core.ImageSaver$SaveError val$saveError -> a
    java.lang.Throwable val$cause -> c
    java.lang.String val$message -> b
    androidx.camera.core.ImageSaver this$0 -> d
    133:133:void <init>(androidx.camera.core.ImageSaver,androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable) -> <init>
    136:137:void run() -> run
androidx.camera.core.ImageSaver$SaveError -> androidx.camera.core.ImageSaver$SaveError:
    androidx.camera.core.ImageSaver$SaveError[] $VALUES -> a
    144:142:void <clinit>() -> <clinit>
    142:142:void <init>(java.lang.String,int) -> <init>
    142:142:androidx.camera.core.ImageSaver$SaveError valueOf(java.lang.String) -> valueOf
    142:142:androidx.camera.core.ImageSaver$SaveError[] values() -> values
androidx.camera.core.ImageUtil -> androidx.camera.core.ImageUtil:
    52:60:byte[] imageToJpegByteArray(androidx.camera.core.ImageProxy) -> a
    65:76:byte[] cropByteArray(byte[],android.graphics.Rect) -> a
    117:140:android.graphics.Rect computeCropRectFromAspectRatio(android.util.Size,android.util.Rational) -> a
    151:152:android.util.Rational rotate(android.util.Rational,int) -> a
    160:166:byte[] nv21ToJpeg(byte[],int,int,android.graphics.Rect) -> a
    236:239:android.util.Rational inverseRational(android.util.Rational) -> a
    101:101:boolean isAspectRatioValid(android.util.Rational) -> b
    106:106:boolean isAspectRatioValid(android.util.Size,android.util.Rational) -> b
    252:259:byte[] jpegImageToJpegByteArray(androidx.camera.core.ImageProxy) -> b
    226:231:boolean isCropAspectRatioHasEffect(android.util.Size,android.util.Rational) -> c
    245:248:boolean shouldCropImage(androidx.camera.core.ImageProxy) -> c
    264:264:byte[] yuvImageToJpegByteArray(androidx.camera.core.ImageProxy) -> d
    173:222:byte[] yuv_420_888toNv21(androidx.camera.core.ImageProxy) -> e
androidx.camera.core.ImageUtil$CodecFailedException -> androidx.camera.core.ImageUtil$CodecFailedException:
    androidx.camera.core.ImageUtil$CodecFailedException$FailureType mFailureType -> a
    287:289:void <init>(java.lang.String,androidx.camera.core.ImageUtil$CodecFailedException$FailureType) -> <init>
    292:292:androidx.camera.core.ImageUtil$CodecFailedException$FailureType getFailureType() -> getFailureType
androidx.camera.core.ImageUtil$CodecFailedException$FailureType -> androidx.camera.core.ImageUtil$CodecFailedException$a:
    androidx.camera.core.ImageUtil$CodecFailedException$FailureType DECODE_FAILED -> b
    androidx.camera.core.ImageUtil$CodecFailedException$FailureType ENCODE_FAILED -> a
    androidx.camera.core.ImageUtil$CodecFailedException$FailureType[] $VALUES -> d
    androidx.camera.core.ImageUtil$CodecFailedException$FailureType UNKNOWN -> c
    274:273:void <clinit>() -> <clinit>
    273:273:void <init>(java.lang.String,int) -> <init>
    273:273:androidx.camera.core.ImageUtil$CodecFailedException$FailureType valueOf(java.lang.String) -> valueOf
    273:273:androidx.camera.core.ImageUtil$CodecFailedException$FailureType[] values() -> values
androidx.camera.core.ImmediateSurface -> androidx.camera.core.ImmediateSurface:
    android.view.Surface mSurface -> f
    37:39:void <init>(android.view.Surface) -> <init>
    44:44:com.google.common.util.concurrent.ListenableFuture provideSurface() -> provideSurface
androidx.camera.core.LensFacingCameraIdFilter -> androidx.camera.core.LensFacingCameraIdFilter:
    32:32:void <init>() -> <init>
    48:52:androidx.camera.core.LensFacingCameraIdFilter createLensFacingCameraIdFilter(androidx.camera.core.CameraX$LensFacing) -> createLensFacingCameraIdFilter
    41:41:androidx.camera.core.LensFacingCameraIdFilter createLensFacingCameraIdFilterWithIdSet(androidx.camera.core.CameraX$LensFacing,java.util.Set) -> createLensFacingCameraIdFilterWithIdSet
androidx.camera.core.LensFacingCameraIdFilter$SettableLensFacingCameraIdFilter -> androidx.camera.core.LensFacingCameraIdFilter$a:
    java.util.Set mIds -> b
    androidx.camera.core.CameraX$LensFacing mLensFacing -> a
    60:63:void <init>(androidx.camera.core.CameraX$LensFacing,java.util.Set) -> <init>
    68:75:java.util.Set filter(java.util.Set) -> filter
    81:81:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
androidx.camera.core.MetadataImageReader -> n2:
    androidx.camera.core.CameraCaptureCallback mCameraCaptureCallback -> b
    int mImageProxiesIndex -> j
    androidx.camera.core.ImageReaderProxy mImageReaderProxy -> e
    android.util.LongSparseArray mPendingImageInfos -> h
    android.util.LongSparseArray mPendingImages -> i
    java.lang.Object mLock -> a
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mTransformedListener -> c
    java.util.concurrent.Executor mExecutor -> g
    java.util.List mAcquiredImageProxies -> l
    boolean mClosed -> d
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mListener -> f
    java.util.List mMatchedImageProxies -> k
    112:117:void <init>(int,int,int,int,android.os.Handler) -> <init>
    134:138:void init(java.util.concurrent.Executor) -> a
    263:265:void onImageClose(androidx.camera.core.ImageProxy) -> a
    269:290:void enqueueImageProxy(androidx.camera.core.SettableImageProxy) -> a
    308:308:androidx.camera.core.CameraCaptureCallback getCameraCaptureCallback() -> a
    313:340:void imageIncoming(androidx.camera.core.ImageReaderProxy) -> a
    346:356:void resultIncoming(androidx.camera.core.CameraCaptureResult) -> a
    143:168:androidx.camera.core.ImageProxy acquireLatestImage() -> acquireLatestImage
    174:188:androidx.camera.core.ImageProxy acquireNextImage() -> acquireNextImage
    294:303:void dequeImageProxy(androidx.camera.core.ImageProxy) -> b
    402:420:void matchImages() -> b
    368:397:void removeStaleData() -> c
    193:206:void close() -> close
    211:213:int getHeight() -> getHeight
    225:227:int getImageFormat() -> getImageFormat
    232:234:int getMaxImages() -> getMaxImages
    239:241:android.view.Surface getSurface() -> getSurface
    218:220:int getWidth() -> getWidth
    248:249:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    254:258:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor) -> setOnImageAvailableListener
androidx.camera.core.MetadataImageReader$1 -> n2$a:
    androidx.camera.core.MetadataImageReader this$0 -> a
    52:52:void <init>(androidx.camera.core.MetadataImageReader) -> <init>
    55:57:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
androidx.camera.core.MetadataImageReader$2 -> n2$b:
    androidx.camera.core.MetadataImageReader this$0 -> a
    62:62:void <init>(androidx.camera.core.MetadataImageReader) -> <init>
    65:66:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.MetadataImageReader$3 -> n2$c:
    androidx.camera.core.MetadataImageReader this$0 -> a
    276:276:void <init>(androidx.camera.core.MetadataImageReader) -> <init>
    279:280:void run() -> run
androidx.camera.core.MeteringPoint -> androidx.camera.core.MeteringPoint:
    float mWeight -> d
    float mSize -> c
    android.util.Rational mFOVAspectRatio -> e
    float mNormalizedCropRegionY -> b
    float mNormalizedCropRegionX -> a
    59:65:void <init>(float,float,float,float,android.util.Rational) -> <init>
    129:129:android.util.Rational getFOVAspectRatio() -> getFOVAspectRatio
    71:71:float getNormalizedCropRegionX() -> getNormalizedCropRegionX
    78:78:float getNormalizedCropRegionY() -> getNormalizedCropRegionY
    86:86:float getSize() -> getSize
    93:93:float getWeight() -> getWeight
    120:121:void setFOVAspectRatio(android.util.Rational) -> setFOVAspectRatio
    106:107:void setSize(float) -> setSize
    113:114:void setWeight(float) -> setWeight
androidx.camera.core.MeteringPointFactory -> androidx.camera.core.MeteringPointFactory:
    33:36:void <init>() -> <init>
    64:64:androidx.camera.core.MeteringPoint createPoint(float,float) -> createPoint
    82:83:androidx.camera.core.MeteringPoint createPoint(float,float,float,float) -> createPoint
androidx.camera.core.MultiValueSet -> androidx.camera.core.MultiValueSet:
    java.util.Set mSet -> a
    36:38:void <init>() -> <init>
    47:48:void addAll(java.util.List) -> addAll
    35:35:java.lang.Object clone() -> clone
    55:55:java.util.List getAllItems() -> getAllItems
androidx.camera.core.MutableOptionsBundle -> androidx.camera.core.MutableOptionsBundle:
    java.util.Comparator ID_COMPARE -> c
    34:34:void <clinit>() -> <clinit>
    43:44:void <init>(java.util.TreeMap) -> <init>
    52:52:androidx.camera.core.MutableOptionsBundle create() -> create
    62:67:androidx.camera.core.MutableOptionsBundle from(androidx.camera.core.Config) -> from
    81:82:void insertOption(androidx.camera.core.Config$Option,java.lang.Object) -> insertOption
    74:76:java.lang.Object removeOption(androidx.camera.core.Config$Option) -> removeOption
androidx.camera.core.MutableOptionsBundle$1 -> androidx.camera.core.MutableOptionsBundle$a:
    35:35:void <init>() -> <init>
    38:38:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    35:35:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.OptionsBundle -> androidx.camera.core.OptionsBundle:
    androidx.camera.core.OptionsBundle EMPTY_BUNDLE -> b
    41:41:void <clinit>() -> <clinit>
    51:53:void <init>(java.util.TreeMap) -> <init>
    104:104:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    93:93:androidx.camera.core.OptionsBundle emptyBundle() -> emptyBundle
    130:143:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    66:81:androidx.camera.core.OptionsBundle from(androidx.camera.core.Config) -> from
    99:99:java.util.Set listOptions() -> listOptions
    110:111:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    125:125:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.OptionsBundle$1 -> androidx.camera.core.OptionsBundle$a:
    42:42:void <init>() -> <init>
    45:45:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    42:42:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.OptionsBundle$2 -> androidx.camera.core.OptionsBundle$b:
    71:71:void <init>() -> <init>
    74:74:int compare(androidx.camera.core.Config$Option,androidx.camera.core.Config$Option) -> a
    71:71:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.camera.core.Preview -> androidx.camera.core.Preview:
    boolean mSurfaceDispatched -> n
    androidx.camera.core.SurfaceTextureHolder mSurfaceTextureHolder -> p
    java.util.concurrent.Executor mOutputUpdateExecutor -> q
    androidx.camera.core.Preview$PreviewSurfaceCallback mPreviewSurfaceCallback -> l
    androidx.camera.core.SessionConfig$Builder mSessionConfigBuilder -> o
    androidx.camera.core.Preview$PreviewOutput mLatestPreviewOutput -> m
    android.os.HandlerThread mProcessingPreviewThread -> h
    androidx.camera.core.PreviewConfig$Builder mUseCaseConfigBuilder -> j
    androidx.camera.core.Preview$OnPreviewOutputUpdateListener mSubscribedPreviewOutputListener -> k
    android.os.Handler mProcessingPreviewHandler -> i
    84:84:void <clinit>() -> <clinit>
    115:117:void <init>(androidx.camera.core.PreviewConfig) -> <init>
    121:187:androidx.camera.core.SessionConfig$Builder createPipeline(androidx.camera.core.PreviewConfig,android.util.Size) -> a
    194:208:void clearPipeline() -> a
    368:372:void updateListener(androidx.camera.core.Preview$OnPreviewOutputUpdateListener,androidx.camera.core.Preview$PreviewOutput) -> a
    541:589:void updateOutput(android.graphics.SurfaceTexture,android.util.Size) -> a
    359:364:void updateConfigAndOutput(androidx.camera.core.PreviewConfig,android.util.Size) -> b
    368:368:void lambda$updateListener$0(androidx.camera.core.Preview$OnPreviewOutputUpdateListener,androidx.camera.core.Preview$PreviewOutput) -> b
    375:377:androidx.camera.core.CameraControlInternal getCurrentCameraControl() -> b
    530:537:void invalidateMetadata() -> c
    493:505:void clear() -> clear
    403:404:void enableTorch(boolean) -> enableTorch
    458:463:androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing) -> getDefaultBuilder
    236:237:androidx.camera.core.Preview$OnPreviewOutputUpdateListener getOnPreviewOutputUpdateListener() -> getOnPreviewOutputUpdateListener
    324:325:androidx.camera.core.Preview$PreviewSurfaceCallback getPreviewSurfaceCallback() -> getPreviewSurfaceCallback
    408:408:boolean isTorchOn() -> isTorchOn
    516:520:java.util.Map onSuggestedResolutionUpdated(java.util.Map) -> onSuggestedResolutionUpdated
    220:225:void removePreviewOutputListener() -> removePreviewOutputListener
    353:356:void removePreviewSurfaceCallback() -> removePreviewSurfaceCallback
    277:278:void setOnPreviewOutputUpdateListener(androidx.camera.core.Preview$OnPreviewOutputUpdateListener) -> setOnPreviewOutputUpdateListener
    294:314:void setOnPreviewOutputUpdateListener(java.util.concurrent.Executor,androidx.camera.core.Preview$OnPreviewOutputUpdateListener) -> setOnPreviewOutputUpdateListener
    338:343:void setPreviewSurfaceCallback(androidx.camera.core.Preview$PreviewSurfaceCallback) -> setPreviewSurfaceCallback
    431:441:void setTargetRotation(int) -> setTargetRotation
    446:446:java.lang.String toString() -> toString
    474:483:void updateUseCaseConfig(androidx.camera.core.UseCaseConfig) -> updateUseCaseConfig
    391:392:void zoom(android.graphics.Rect) -> zoom
androidx.camera.core.Preview$1 -> androidx.camera.core.Preview$a:
    androidx.camera.core.ImageInfoProcessor val$processor -> a
    androidx.camera.core.Preview this$0 -> b
    154:154:void <init>(androidx.camera.core.Preview,androidx.camera.core.ImageInfoProcessor) -> <init>
    158:163:void onCaptureCompleted(androidx.camera.core.CameraCaptureResult) -> onCaptureCompleted
androidx.camera.core.Preview$2 -> androidx.camera.core.Preview$b:
    androidx.camera.core.PreviewConfig val$config -> a
    android.util.Size val$resolution -> b
    androidx.camera.core.Preview this$0 -> c
    174:174:void <init>(androidx.camera.core.Preview,androidx.camera.core.PreviewConfig,android.util.Size) -> <init>
    178:184:void onError(androidx.camera.core.SessionConfig,androidx.camera.core.SessionConfig$SessionError) -> onError
androidx.camera.core.Preview$Defaults -> androidx.camera.core.Preview$Defaults:
    androidx.camera.core.PreviewConfig DEFAULT_CONFIG -> b
    android.util.Size DEFAULT_MAX_RESOLUTION -> a
    641:652:void <clinit>() -> <clinit>
    639:639:void <init>() -> <init>
    638:638:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    656:662:androidx.camera.core.PreviewConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.core.Preview$PreviewOutput -> androidx.camera.core.Preview$PreviewOutput:
    673:674:void <init>() -> <init>
    678:678:androidx.camera.core.Preview$PreviewOutput create(android.graphics.SurfaceTexture,android.util.Size,int) -> a
androidx.camera.core.Preview$UseCaseError -> androidx.camera.core.Preview$UseCaseError:
    androidx.camera.core.Preview$UseCaseError[] $VALUES -> a
    594:592:void <clinit>() -> <clinit>
    592:592:void <init>(java.lang.String,int) -> <init>
    592:592:androidx.camera.core.Preview$UseCaseError valueOf(java.lang.String) -> valueOf
    592:592:androidx.camera.core.Preview$UseCaseError[] values() -> values
androidx.camera.core.PreviewConfig -> androidx.camera.core.PreviewConfig:
    androidx.camera.core.Config$Option IMAGE_INFO_PROCESSOR -> c
    androidx.camera.core.Config$Option OPTION_PREVIEW_CAPTURE_PROCESSOR -> d
    androidx.camera.core.OptionsBundle mConfig -> b
    47:49:void <clinit>() -> <clinit>
    54:56:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    529:529:androidx.camera.core.ImageInfoProcessor getImageInfoProcessor(androidx.camera.core.ImageInfoProcessor) -> a
    67:67:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    91:92:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    413:413:java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor) -> getBackgroundExecutor
    425:425:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    200:200:androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter) -> getCameraIdFilter
    214:214:androidx.camera.core.CameraIdFilter getCameraIdFilter() -> getCameraIdFilter
    485:485:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> getCaptureOptionUnpacker
    493:493:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker() -> getCaptureOptionUnpacker
    550:550:androidx.camera.core.CaptureProcessor getCaptureProcessor(androidx.camera.core.CaptureProcessor) -> getCaptureProcessor
    563:563:androidx.camera.core.CaptureProcessor getCaptureProcessor() -> getCaptureProcessor
    468:468:androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> getDefaultCaptureConfig
    476:476:androidx.camera.core.CaptureConfig getDefaultCaptureConfig() -> getDefaultCaptureConfig
    351:351:android.util.Size getDefaultResolution(android.util.Size) -> getDefaultResolution
    365:365:android.util.Size getDefaultResolution() -> getDefaultResolution
    435:435:androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig) -> getDefaultSessionConfig
    443:443:androidx.camera.core.SessionConfig getDefaultSessionConfig() -> getDefaultSessionConfig
    173:173:androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing) -> getLensFacing
    185:185:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
    373:373:android.util.Size getMaxResolution(android.util.Size) -> getMaxResolution
    381:381:android.util.Size getMaxResolution() -> getMaxResolution
    452:452:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> getSessionOptionUnpacker
    460:460:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker() -> getSessionOptionUnpacker
    390:390:java.util.List getSupportedResolutions(java.util.List) -> getSupportedResolutions
    398:398:java.util.List getSupportedResolutions() -> getSupportedResolutions
    499:499:int getSurfaceOccupancyPriority(int) -> getSurfaceOccupancyPriority
    505:505:int getSurfaceOccupancyPriority() -> getSurfaceOccupancyPriority
    266:266:androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio) -> getTargetAspectRatio
    278:278:androidx.camera.core.AspectRatio getTargetAspectRatio() -> getTargetAspectRatio
    235:235:android.util.Rational getTargetAspectRatioCustom(android.util.Rational) -> getTargetAspectRatioCustom
    253:253:android.util.Rational getTargetAspectRatioCustom() -> getTargetAspectRatioCustom
    111:115:java.lang.Class getTargetClass(java.lang.Class) -> getTargetClass
    124:127:java.lang.Class getTargetClass() -> getTargetClass
    143:143:java.lang.String getTargetName(java.lang.String) -> getTargetName
    158:158:java.lang.String getTargetName() -> getTargetName
    324:324:android.util.Size getTargetResolution(android.util.Size) -> getTargetResolution
    336:336:android.util.Size getTargetResolution() -> getTargetResolution
    295:295:int getTargetRotation(int) -> getTargetRotation
    311:311:int getTargetRotation() -> getTargetRotation
    514:514:androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> getUseCaseEventListener
    522:522:androidx.camera.core.UseCase$EventListener getUseCaseEventListener() -> getUseCaseEventListener
    99:99:java.util.Set listOptions() -> listOptions
    75:75:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    84:84:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.PreviewConfig$Builder -> androidx.camera.core.PreviewConfig$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    580:581:void <init>() -> <init>
    583:597:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    570:570:androidx.camera.core.UseCaseConfig build() -> build
    631:637:androidx.camera.core.PreviewConfig build() -> build
    607:607:androidx.camera.core.PreviewConfig$Builder fromConfig(androidx.camera.core.PreviewConfig) -> fromConfig
    619:619:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    570:570:java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    862:863:androidx.camera.core.PreviewConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    570:570:java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    707:708:androidx.camera.core.PreviewConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    570:570:java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    902:903:androidx.camera.core.PreviewConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    943:944:androidx.camera.core.PreviewConfig$Builder setCaptureProcessor(androidx.camera.core.CaptureProcessor) -> setCaptureProcessor
    570:570:java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    882:883:androidx.camera.core.PreviewConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    570:570:java.lang.Object setDefaultResolution(android.util.Size) -> setDefaultResolution
    829:830:androidx.camera.core.PreviewConfig$Builder setDefaultResolution(android.util.Size) -> setDefaultResolution
    570:570:java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    873:874:androidx.camera.core.PreviewConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    929:930:androidx.camera.core.PreviewConfig$Builder setImageInfoProcessor(androidx.camera.core.ImageInfoProcessor) -> setImageInfoProcessor
    570:570:java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    689:690:androidx.camera.core.PreviewConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    570:570:java.lang.Object setMaxResolution(android.util.Size) -> setMaxResolution
    838:839:androidx.camera.core.PreviewConfig$Builder setMaxResolution(android.util.Size) -> setMaxResolution
    570:570:java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    892:893:androidx.camera.core.PreviewConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    570:570:java.lang.Object setSupportedResolutions(java.util.List) -> setSupportedResolutions
    847:848:androidx.camera.core.PreviewConfig$Builder setSupportedResolutions(java.util.List) -> setSupportedResolutions
    570:570:java.lang.Object setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    911:912:androidx.camera.core.PreviewConfig$Builder setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    570:570:java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    766:767:androidx.camera.core.PreviewConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    570:570:java.lang.Object setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    741:743:androidx.camera.core.PreviewConfig$Builder setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    570:570:java.lang.Object setTargetClass(java.lang.Class) -> setTargetClass
    647:655:androidx.camera.core.PreviewConfig$Builder setTargetClass(java.lang.Class) -> setTargetClass
    570:570:java.lang.Object setTargetName(java.lang.String) -> setTargetName
    671:672:androidx.camera.core.PreviewConfig$Builder setTargetName(java.lang.String) -> setTargetName
    570:570:java.lang.Object setTargetResolution(android.util.Size) -> setTargetResolution
    809:815:androidx.camera.core.PreviewConfig$Builder setTargetResolution(android.util.Size) -> setTargetResolution
    570:570:java.lang.Object setTargetRotation(int) -> setTargetRotation
    783:784:androidx.camera.core.PreviewConfig$Builder setTargetRotation(int) -> setTargetRotation
    570:570:java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
    921:922:androidx.camera.core.PreviewConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
androidx.camera.core.ProcessingImageReader -> o2:
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mTransformedListener -> b
    androidx.camera.core.CaptureProcessor mCaptureProcessor -> j
    androidx.camera.core.SettableImageProxyBundle mSettableImageProxyBundle -> k
    androidx.camera.core.ImageReaderProxy mInputImageReader -> f
    androidx.camera.core.ImageReaderProxy mOutputImageReader -> g
    boolean mClosed -> e
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mListener -> h
    java.lang.Object mLock -> a
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mImageProcessedListener -> c
    androidx.camera.core.impl.utils.futures.FutureCallback mCaptureStageReadyCallback -> d
    java.util.concurrent.Executor mExecutor -> i
    java.util.List mCaptureIdList -> l
    139:150:void <init>(int,int,int,int,android.os.Handler,androidx.camera.core.CaptureBundle,androidx.camera.core.CaptureProcessor) -> <init>
    170:179:void init(java.util.concurrent.Executor,androidx.camera.core.CaptureBundle,androidx.camera.core.CaptureProcessor) -> a
    267:285:void setCaptureBundle(androidx.camera.core.CaptureBundle) -> a
    291:294:androidx.camera.core.CameraCaptureCallback getCameraCaptureCallback() -> a
    309:331:void imageIncoming(androidx.camera.core.ImageReaderProxy) -> a
    184:186:androidx.camera.core.ImageProxy acquireLatestImage() -> acquireLatestImage
    192:194:androidx.camera.core.ImageProxy acquireNextImage() -> acquireNextImage
    299:305:void setupSettableImageProxyBundleCallbacks() -> b
    199:208:void close() -> close
    213:215:int getHeight() -> getHeight
    227:229:int getImageFormat() -> getImageFormat
    234:236:int getMaxImages() -> getMaxImages
    241:243:android.view.Surface getSurface() -> getSurface
    220:222:int getWidth() -> getWidth
    250:251:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    257:262:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor) -> setOnImageAvailableListener
androidx.camera.core.ProcessingImageReader$1 -> o2$a:
    androidx.camera.core.ProcessingImageReader this$0 -> a
    54:54:void <init>(androidx.camera.core.ProcessingImageReader) -> <init>
    57:58:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ProcessingImageReader$2 -> o2$b:
    androidx.camera.core.ProcessingImageReader this$0 -> a
    63:63:void <init>(androidx.camera.core.ProcessingImageReader) -> <init>
    67:81:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ProcessingImageReader$2$1 -> o2$b$a:
    androidx.camera.core.ProcessingImageReader$2 this$1 -> a
    69:69:void <init>(androidx.camera.core.ProcessingImageReader$2) -> <init>
    72:73:void run() -> run
androidx.camera.core.ProcessingImageReader$3 -> o2$c:
    androidx.camera.core.ProcessingImageReader this$0 -> a
    86:86:void <init>(androidx.camera.core.ProcessingImageReader) -> <init>
    89:90:void onSuccess(java.util.List) -> a
    95:95:void onFailure(java.lang.Throwable) -> onFailure
    86:86:void onSuccess(java.lang.Object) -> onSuccess
androidx.camera.core.ProcessingSurfaceTexture -> p2:
    androidx.camera.core.CaptureStage mCaptureStage -> o
    androidx.camera.core.MetadataImageReader mInputImageReader -> j
    android.view.Surface mSurfaceTextureSurface -> n
    java.lang.Object mLock -> f
    android.util.Size mResolution -> i
    android.graphics.SurfaceTexture mSurfaceTexture -> m
    androidx.camera.core.CameraCaptureCallback mCameraCaptureCallback -> q
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mTransformedListener -> g
    boolean mReleased -> h
    android.os.Handler mImageReaderHandler -> l
    android.view.Surface mInputSurface -> k
    androidx.camera.core.CaptureProcessor mCaptureProcessor -> p
    108:118:void <init>(int,int,int,android.os.Handler,androidx.camera.core.CaptureStage,androidx.camera.core.CaptureProcessor) -> <init>
    164:170:android.graphics.SurfaceTexture getSurfaceTexture() -> a
    250:292:void imageIncoming(androidx.camera.core.ImageReaderProxy) -> a
    240:243:void closeInputs() -> b
    180:186:androidx.camera.core.CameraCaptureCallback getCameraCaptureCallback() -> c
    151:151:com.google.common.util.concurrent.ListenableFuture provideSurface() -> provideSurface
    197:234:void release() -> release
androidx.camera.core.ProcessingSurfaceTexture$1 -> p2$a:
    androidx.camera.core.ProcessingSurfaceTexture this$0 -> a
    46:46:void <init>(androidx.camera.core.ProcessingSurfaceTexture) -> <init>
    49:50:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ProcessingSurfaceTexture$2 -> p2$b:
    211:211:void <init>(androidx.camera.core.ProcessingSurfaceTexture) -> <init>
    214:221:void onImageAvailable(androidx.camera.core.ImageReaderProxy) -> onImageAvailable
androidx.camera.core.ProcessingSurfaceTexture$3 -> p2$c:
    androidx.camera.core.ProcessingSurfaceTexture this$0 -> a
    228:228:void <init>(androidx.camera.core.ProcessingSurfaceTexture) -> <init>
    231:232:void onSurfaceDetached() -> onSurfaceDetached
androidx.camera.core.QueuedImageReaderProxy -> q2:
    java.util.Set mAcquiredImages -> g
    java.util.concurrent.Executor mOnImageAvailableExecutor -> k
    java.util.Set mOnReaderCloseListeners -> h
    java.util.List mImages -> f
    int mCurrentPosition -> i
    boolean mClosed -> l
    android.view.Surface mSurface -> e
    int mMaxImages -> d
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener mOnImageAvailableListener -> j
    int mHeight -> b
    int mFormat -> c
    int mWidth -> a
    83:92:void <init>(int,int,int,int,android.view.Surface) -> <init>
    153:152:void enqueueImage(androidx.camera.core.ForwardingImageProxy) -> a
    241:240:void onImageClose(androidx.camera.core.ImageProxy) -> a
    259:259:boolean isClosed() -> a
    268:267:void addOnReaderCloseListener(androidx.camera.core.QueuedImageReaderProxy$OnReaderCloseListener) -> a
    97:96:androidx.camera.core.ImageProxy acquireLatestImage() -> acquireLatestImage
    127:126:androidx.camera.core.ImageProxy acquireNextImage() -> acquireNextImage
    278:277:void notifyOnReaderCloseListeners() -> b
    272:271:void throwExceptionIfClosed() -> c
    176:175:void close() -> close
    193:194:int getHeight() -> getHeight
    205:206:int getImageFormat() -> getImageFormat
    211:212:int getMaxImages() -> getMaxImages
    217:216:android.view.Surface getSurface() -> getSurface
    199:200:int getWidth() -> getWidth
    225:224:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,android.os.Handler) -> setOnImageAvailableListener
    234:233:void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor) -> setOnImageAvailableListener
androidx.camera.core.QueuedImageReaderProxy$1 -> q2$a:
    androidx.camera.core.QueuedImageReaderProxy this$0 -> b
    androidx.camera.core.ImageReaderProxy$OnImageAvailableListener val$listener -> a
    160:160:void <init>(androidx.camera.core.QueuedImageReaderProxy,androidx.camera.core.ImageReaderProxy$OnImageAvailableListener) -> <init>
    163:166:void run() -> run
androidx.camera.core.QueuedImageReaderProxy$OnReaderCloseListener -> q2$b:
    void onReaderClose(androidx.camera.core.ImageReaderProxy) -> a
androidx.camera.core.ReferenceCountedImageProxy -> r2:
    int mReferenceCount -> c
    43:44:void <init>(androidx.camera.core.ImageProxy) -> <init>
    54:53:androidx.camera.core.ImageProxy fork() -> b
    70:69:void close() -> close
androidx.camera.core.SensorOrientedMeteringPointFactory -> androidx.camera.core.SensorOrientedMeteringPointFactory:
    float mHeight -> b
    float mWidth -> a
    58:62:void <init>(float,float) -> <init>
    80:84:void <init>(float,float,androidx.camera.core.UseCase) -> <init>
    88:94:android.util.Rational getUseCaseAspectRatio(androidx.camera.core.UseCase) -> a
    112:113:android.graphics.PointF translatePoint(float,float) -> translatePoint
androidx.camera.core.SessionConfig -> androidx.camera.core.SessionConfig:
    java.util.List mDeviceStateCallbacks -> b
    java.util.List mSurfaces -> a
    java.util.List mErrorListeners -> e
    java.util.List mSingleCameraCaptureCallbacks -> d
    java.util.List mSessionStateCallbacks -> c
    androidx.camera.core.CaptureConfig mRepeatingCaptureConfig -> f
    80:88:void <init>(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,androidx.camera.core.CaptureConfig) -> <init>
    93:93:androidx.camera.core.SessionConfig defaultEmptySessionConfig() -> defaultEmptySessionConfig
    119:119:java.util.List getDeviceStateCallbacks() -> getDeviceStateCallbacks
    137:137:java.util.List getErrorListeners() -> getErrorListeners
    109:109:androidx.camera.core.Config getImplementationOptions() -> getImplementationOptions
    131:131:java.util.List getRepeatingCameraCaptureCallbacks() -> getRepeatingCameraCaptureCallbacks
    148:148:androidx.camera.core.CaptureConfig getRepeatingCaptureConfig() -> getRepeatingCaptureConfig
    125:125:java.util.List getSessionStateCallbacks() -> getSessionStateCallbacks
    143:143:java.util.List getSingleCameraCaptureCallbacks() -> getSingleCameraCaptureCallbacks
    104:104:java.util.List getSurfaces() -> getSurfaces
    113:113:int getTemplateType() -> getTemplateType
androidx.camera.core.SessionConfig$BaseBuilder -> androidx.camera.core.SessionConfig$a:
    java.util.List mInteropCameraCaptureCallbacks -> f
    java.util.List mErrorListeners -> e
    java.util.List mSessionStateCallbacks -> d
    java.util.List mDeviceStateCallbacks -> c
    java.util.Set mSurfaces -> a
    androidx.camera.core.CaptureConfig$Builder mCaptureConfigBuilder -> b
    204:210:void <init>() -> <init>
androidx.camera.core.SessionConfig$Builder -> androidx.camera.core.SessionConfig$Builder:
    219:219:void <init>() -> <init>
    356:358:void addAllCameraCaptureCallbacks(java.util.Collection) -> addAllCameraCaptureCallbacks
    280:283:void addAllDeviceStateCallbacks(java.util.Collection) -> addAllDeviceStateCallbacks
    330:331:void addAllRepeatingCameraCaptureCallbacks(java.util.Collection) -> addAllRepeatingCameraCaptureCallbacks
    306:309:void addAllSessionStateCallbacks(java.util.List) -> addAllSessionStateCallbacks
    342:344:void addCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> addCameraCaptureCallback
    268:269:void addDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback) -> addDeviceStateCallback
    370:371:void addErrorListener(androidx.camera.core.SessionConfig$ErrorListener) -> addErrorListener
    404:405:void addImplementationOptions(androidx.camera.core.Config) -> addImplementationOptions
    382:383:void addNonRepeatingSurface(androidx.camera.core.DeferrableSurface) -> addNonRepeatingSurface
    319:320:void addRepeatingCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback) -> addRepeatingCameraCaptureCallback
    293:294:void addSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback) -> addSessionStateCallback
    376:378:void addSurface(androidx.camera.core.DeferrableSurface) -> addSurface
    413:413:androidx.camera.core.SessionConfig build() -> build
    393:395:void clearSurfaces() -> clearSurfaces
    227:231:androidx.camera.core.SessionConfig$Builder createFrom(androidx.camera.core.UseCaseConfig) -> createFrom
    363:363:java.util.List getSingleCameraCaptureCallbacks() -> getSingleCameraCaptureCallbacks
    387:389:void removeSurface(androidx.camera.core.DeferrableSurface) -> removeSurface
    399:400:void setImplementationOptions(androidx.camera.core.Config) -> setImplementationOptions
    257:258:void setTag(java.lang.Object) -> setTag
    250:251:void setTemplateType(int) -> setTemplateType
androidx.camera.core.SessionConfig$SessionError -> androidx.camera.core.SessionConfig$SessionError:
    androidx.camera.core.SessionConfig$SessionError[] $VALUES -> a
    157:151:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    151:151:androidx.camera.core.SessionConfig$SessionError valueOf(java.lang.String) -> valueOf
    151:151:androidx.camera.core.SessionConfig$SessionError[] values() -> values
androidx.camera.core.SessionConfig$ValidatingBuilder -> androidx.camera.core.SessionConfig$ValidatingBuilder:
    boolean mValid -> j
    boolean mTemplateSet -> k
    java.util.List mSingleCameraCaptureCallbacks -> i
    java.util.List mSessionStateCallbacks -> h
    java.util.List mDeviceStateCallbacks -> g
    430:438:void <init>() -> <init>
    445:523:void add(androidx.camera.core.SessionConfig) -> add
    536:537:androidx.camera.core.SessionConfig build() -> build
    527:527:boolean isValid() -> isValid
androidx.camera.core.SettableImageProxy -> s2:
    androidx.camera.core.ImageInfo mImageInfo -> c
    32:34:void <init>(androidx.camera.core.ImageProxy,androidx.camera.core.ImageInfo) -> <init>
    38:38:androidx.camera.core.ImageInfo getImageInfo() -> getImageInfo
androidx.camera.core.SettableImageProxyBundle -> t2:
    android.util.SparseArray mFutureResults -> c
    java.util.List mCaptureIdList -> e
    java.util.List mOwnedImageProxies -> d
    android.util.SparseArray mCompleters -> b
    boolean mClosed -> f
    java.lang.Object mLock -> a
    59:62:void <init>(java.util.List) -> <init>
    93:113:void addImageProxy(androidx.camera.core.ImageProxy) -> a
    120:131:void close() -> a
    138:149:void reset() -> b
    153:171:void setup() -> c
    86:86:java.util.List getCaptureIds() -> getCaptureIds
    67:80:com.google.common.util.concurrent.ListenableFuture getImageProxy(int) -> getImageProxy
androidx.camera.core.SettableImageProxyBundle$1 -> t2$a:
    androidx.camera.core.SettableImageProxyBundle this$0 -> b
    int val$captureId -> a
    156:156:void <init>(androidx.camera.core.SettableImageProxyBundle,int) -> <init>
    161:165:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.SingleCloseImageProxy -> u2:
    boolean mClosed -> c
    33:34:void <init>(androidx.camera.core.ImageProxy) -> <init>
    38:37:void close() -> close
androidx.camera.core.SingleImageProxyBundle -> androidx.camera.core.SingleImageProxyBundle:
    androidx.camera.core.ImageProxy mImageProxy -> b
    int mCaptureId -> a
    44:48:void <init>(androidx.camera.core.ImageProxy) -> <init>
    76:77:void close() -> a
    92:92:java.util.List getCaptureIds() -> getCaptureIds
    82:86:com.google.common.util.concurrent.ListenableFuture getImageProxy(int) -> getImageProxy
androidx.camera.core.SurfaceCombination -> androidx.camera.core.SurfaceCombination:
    java.util.List mSurfaceConfigList -> a
    40:41:void <init>() -> <init>
    45:65:void generateArrangements(java.util.List,int,int[],int) -> a
    141:145:java.util.List getElementsArrangements(int) -> a
    69:73:boolean addSurfaceConfig(androidx.camera.core.SurfaceConfig) -> addSurfaceConfig
    86:86:java.util.List getSurfaceConfigList() -> getSurfaceConfigList
    97:100:boolean isSupported(java.util.List) -> isSupported
    78:82:boolean removeSurfaceConfig(androidx.camera.core.SurfaceConfig) -> removeSurfaceConfig
androidx.camera.core.SurfaceConfig -> androidx.camera.core.SurfaceConfig:
    43:44:void <init>() -> <init>
    50:50:androidx.camera.core.SurfaceConfig create(androidx.camera.core.SurfaceConfig$ConfigType,androidx.camera.core.SurfaceConfig$ConfigSize) -> create
    67:75:boolean isSupported(androidx.camera.core.SurfaceConfig) -> isSupported
androidx.camera.core.SurfaceConfig$ConfigSize -> androidx.camera.core.SurfaceConfig$ConfigSize:
    androidx.camera.core.SurfaceConfig$ConfigSize[] $VALUES -> b
    int mId -> a
    99:97:void <clinit>() -> <clinit>
    120:122:void <init>(java.lang.String,int,int) -> <init>
    125:125:int getId() -> a
    97:97:androidx.camera.core.SurfaceConfig$ConfigSize valueOf(java.lang.String) -> valueOf
    97:97:androidx.camera.core.SurfaceConfig$ConfigSize[] values() -> values
androidx.camera.core.SurfaceConfig$ConfigType -> androidx.camera.core.SurfaceConfig$ConfigType:
    androidx.camera.core.SurfaceConfig$ConfigType[] $VALUES -> a
    85:84:void <clinit>() -> <clinit>
    84:84:void <init>(java.lang.String,int) -> <init>
    84:84:androidx.camera.core.SurfaceConfig$ConfigType valueOf(java.lang.String) -> valueOf
    84:84:androidx.camera.core.SurfaceConfig$ConfigType[] values() -> values
androidx.camera.core.SurfaceSizeDefinition -> androidx.camera.core.SurfaceSizeDefinition:
    40:41:void <init>() -> <init>
    58:58:androidx.camera.core.SurfaceSizeDefinition create(android.util.Size,android.util.Size,android.util.Size) -> create
androidx.camera.core.SurfaceTextureHolder -> v2:
    android.graphics.SurfaceTexture getSurfaceTexture() -> a
androidx.camera.core.TargetConfig -> androidx.camera.core.TargetConfig:
    43:50:void <clinit>() -> <clinit>
androidx.camera.core.ThreadConfig -> androidx.camera.core.ThreadConfig:
    androidx.camera.core.Config$Option OPTION_BACKGROUND_EXECUTOR -> a
    44:44:void <clinit>() -> <clinit>
androidx.camera.core.UseCase -> androidx.camera.core.UseCase:
    java.util.Map mAttachedCameraControlMap -> b
    java.util.Map mAttachedCameraIdToSessionConfigMap -> c
    androidx.camera.core.UseCaseConfig mUseCaseConfig -> f
    java.util.Map mAttachedSurfaceResolutionMap -> d
    androidx.camera.core.UseCase$State mState -> e
    int mImageFormat -> g
    java.util.Set mListeners -> a
    95:97:void <init>(androidx.camera.core.UseCaseConfig) -> <init>
    233:234:void detachCameraControl(java.lang.String) -> a
    217:218:void addStateChangeListener(androidx.camera.core.UseCase$StateChangeListener) -> addStateChangeListener
    168:180:androidx.camera.core.UseCaseConfig applyDefaults(androidx.camera.core.UseCaseConfig,androidx.camera.core.UseCaseConfig$Builder) -> applyDefaults
    227:229:void attachCameraControl(java.lang.String,androidx.camera.core.CameraControlInternal) -> attachCameraControl
    206:207:void attachToCamera(java.lang.String,androidx.camera.core.SessionConfig) -> attachToCamera
    363:369:void clear() -> clear
    193:193:java.util.Set getAttachedCameraIds() -> getAttachedCameraIds
    395:395:android.util.Size getAttachedSurfaceResolution(java.lang.String) -> getAttachedSurfaceResolution
    463:467:androidx.camera.core.CameraControlInternal getCameraControl(java.lang.String) -> getCameraControl
    348:356:java.lang.String getCameraIdUnchecked(androidx.camera.core.UseCaseConfig) -> getCameraIdUnchecked
    116:116:androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing) -> getDefaultBuilder
    478:478:int getImageFormat() -> getImageFormat
    372:372:java.lang.String getName() -> getName
    259:261:androidx.camera.core.SessionConfig getSessionConfig(java.lang.String) -> getSessionConfig
    383:383:androidx.camera.core.UseCaseConfig getUseCaseConfig() -> getUseCaseConfig
    275:277:void notifyActive() -> notifyActive
    287:289:void notifyInactive() -> notifyInactive
    312:315:void notifyReset() -> notifyReset
    325:337:void notifyState() -> notifyState
    299:302:void notifyUpdated() -> notifyUpdated
    450:454:void onBind() -> onBind
    440:440:void onCameraControlReady(java.lang.String) -> onCameraControlReady
    246:247:void removeStateChangeListener(androidx.camera.core.UseCase$StateChangeListener) -> removeStateChangeListener
    482:483:void setImageFormat(int) -> setImageFormat
    408:413:void updateSuggestedResolution(java.util.Map) -> updateSuggestedResolution
    137:148:void updateUseCaseConfig(androidx.camera.core.UseCaseConfig) -> updateUseCaseConfig
androidx.camera.core.UseCase$State -> androidx.camera.core.UseCase$a:
    androidx.camera.core.UseCase$State ACTIVE -> a
    androidx.camera.core.UseCase$State[] $VALUES -> c
    androidx.camera.core.UseCase$State INACTIVE -> b
    487:485:void <clinit>() -> <clinit>
    485:485:void <init>(java.lang.String,int) -> <init>
    485:485:androidx.camera.core.UseCase$State valueOf(java.lang.String) -> valueOf
    485:485:androidx.camera.core.UseCase$State[] values() -> values
androidx.camera.core.UseCaseAttachState -> androidx.camera.core.UseCaseAttachState:
    java.util.Map mAttachedUseCasesToInfoMap -> b
    java.lang.String mCameraId -> a
    51:53:void <init>(java.lang.String) -> <init>
    208:213:androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo getOrCreateUseCaseAttachInfo(androidx.camera.core.UseCase) -> a
    217:224:java.util.Collection getUseCases(androidx.camera.core.UseCaseAttachState$AttachStateFilter) -> a
    163:176:androidx.camera.core.SessionConfig$ValidatingBuilder getActiveAndOnlineBuilder() -> getActiveAndOnlineBuilder
    129:129:java.util.Collection getActiveAndOnlineUseCases() -> getActiveAndOnlineUseCases
    181:193:androidx.camera.core.SessionConfig$ValidatingBuilder getOnlineBuilder() -> getOnlineBuilder
    119:119:java.util.Collection getOnlineUseCases() -> getOnlineUseCases
    199:204:androidx.camera.core.SessionConfig getUseCaseSessionConfig(androidx.camera.core.UseCase) -> getUseCaseSessionConfig
    110:115:boolean isUseCaseOnline(androidx.camera.core.UseCase) -> isUseCaseOnline
    61:63:void setUseCaseActive(androidx.camera.core.UseCase) -> setUseCaseActive
    71:80:void setUseCaseInactive(androidx.camera.core.UseCase) -> setUseCaseInactive
    98:106:void setUseCaseOffline(androidx.camera.core.UseCase) -> setUseCaseOffline
    88:90:void setUseCaseOnline(androidx.camera.core.UseCase) -> setUseCaseOnline
    146:159:void updateUseCase(androidx.camera.core.UseCase) -> updateUseCase
androidx.camera.core.UseCaseAttachState$1 -> androidx.camera.core.UseCaseAttachState$a:
    120:120:void <init>(androidx.camera.core.UseCaseAttachState) -> <init>
    123:123:boolean filter(androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo) -> a
androidx.camera.core.UseCaseAttachState$2 -> androidx.camera.core.UseCaseAttachState$b:
    131:131:void <init>(androidx.camera.core.UseCaseAttachState) -> <init>
    134:134:boolean filter(androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo) -> a
androidx.camera.core.UseCaseAttachState$AttachStateFilter -> androidx.camera.core.UseCaseAttachState$c:
    boolean filter(androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo) -> a
androidx.camera.core.UseCaseAttachState$UseCaseAttachInfo -> androidx.camera.core.UseCaseAttachState$d:
    androidx.camera.core.SessionConfig mSessionConfig -> a
    boolean mOnline -> b
    boolean mActive -> c
    247:249:void <init>(androidx.camera.core.SessionConfig) -> <init>
    264:264:boolean getActive() -> a
    268:269:void setActive(boolean) -> a
    256:256:boolean getOnline() -> b
    260:261:void setOnline(boolean) -> b
    252:252:androidx.camera.core.SessionConfig getSessionConfig() -> c
androidx.camera.core.UseCaseConfig -> androidx.camera.core.UseCaseConfig:
    42:82:void <clinit>() -> <clinit>
androidx.camera.core.UseCaseEventConfig -> androidx.camera.core.UseCaseEventConfig:
    32:32:void <clinit>() -> <clinit>
androidx.camera.core.UseCaseGroup -> androidx.camera.core.UseCaseGroup:
    java.util.Set mUseCases -> c
    androidx.camera.core.UseCaseGroup$StateChangeListener mListener -> d
    java.lang.Object mUseCasesLock -> b
    boolean mIsActive -> e
    java.lang.Object mListenerLock -> a
    43:64:void <init>() -> <init>
    87:89:void setListener(androidx.camera.core.UseCaseGroup$StateChangeListener) -> a
    105:107:boolean contains(androidx.camera.core.UseCase) -> a
    144:156:java.util.Map getCameraIdToUseCaseMap() -> a
    98:100:boolean addUseCase(androidx.camera.core.UseCase) -> addUseCase
    117:119:boolean removeUseCase(androidx.camera.core.UseCase) -> b
    138:140:java.util.Collection getUseCases() -> b
    161:161:boolean isActive() -> c
    124:128:void clear() -> clear
    68:73:void start() -> d
    78:83:void stop() -> e
androidx.camera.core.UseCaseGroup$StateChangeListener -> androidx.camera.core.UseCaseGroup$a:
androidx.camera.core.UseCaseGroupLifecycleController -> androidx.camera.core.UseCaseGroupLifecycleController:
    androidx.camera.core.UseCaseGroup mUseCaseGroup -> b
    java.lang.Object mUseCaseGroupLock -> a
    androidx.lifecycle.Lifecycle mLifecycle -> c
    38:39:void <init>(androidx.lifecycle.Lifecycle) -> <init>
    42:46:void <init>(androidx.lifecycle.Lifecycle,androidx.camera.core.UseCaseGroup) -> <init>
    89:91:androidx.camera.core.UseCaseGroup getUseCaseGroup() -> a
    78:85:void notifyState() -> b
    64:66:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    50:52:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    57:59:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.camera.core.UseCaseGroupRepository -> androidx.camera.core.UseCaseGroupRepository:
    java.util.Map mLifecycleToUseCaseGroupControllerMap -> b
    java.util.List mActiveLifecycleOwnerList -> c
    androidx.lifecycle.LifecycleOwner mCurrentActiveLifecycleOwner -> d
    java.lang.Object mUseCasesLock -> a
    40:49:void <init>() -> <init>
    84:91:androidx.camera.core.UseCaseGroupLifecycleController getOrCreateUseCaseGroup(androidx.lifecycle.LifecycleOwner,androidx.camera.core.UseCaseGroupRepository$UseCaseGroupSetup) -> a
    109:110:androidx.camera.core.UseCaseGroupLifecycleController createUseCaseGroup(androidx.lifecycle.LifecycleOwner) -> a
    132:132:androidx.lifecycle.LifecycleObserver createLifecycleObserver() -> a
    194:197:java.util.Collection getUseCaseGroups() -> b
androidx.camera.core.UseCaseGroupRepository$2 -> androidx.camera.core.UseCaseGroupRepository$2:
    androidx.camera.core.UseCaseGroupRepository this$0 -> a
    132:132:void <init>(androidx.camera.core.UseCaseGroupRepository) -> <init>
    185:187:void onDestroy(androidx.lifecycle.LifecycleOwner) -> onDestroy
    139:153:void onStart(androidx.lifecycle.LifecycleOwner) -> onStart
    161:175:void onStop(androidx.lifecycle.LifecycleOwner) -> onStop
androidx.camera.core.VideoCapture -> androidx.camera.core.VideoCapture:
    android.media.MediaCodec$BufferInfo mVideoBufferInfo -> h
    android.view.Surface mCameraSurface -> A
    short[] sAudioEncoding -> K
    java.util.concurrent.atomic.AtomicBoolean mIsFirstVideoSampleWrite -> r
    int mAudioBitRate -> G
    int mAudioChannelCount -> E
    int mAudioBufferSize -> C
    android.media.MediaCodec mAudioEncoder -> v
    androidx.camera.core.VideoCaptureConfig$Builder mUseCaseConfigBuilder -> t
    android.media.MediaMuxer mMuxer -> w
    int mVideoTrackIndex -> y
    android.os.Handler mAudioHandler -> m
    java.util.concurrent.atomic.AtomicBoolean mEndOfAudioStreamSignal -> o
    android.os.Handler mVideoHandler -> k
    android.os.HandlerThread mAudioHandlerThread -> l
    java.lang.Object mMuxerLock -> i
    android.os.HandlerThread mVideoHandlerThread -> j
    java.util.concurrent.atomic.AtomicBoolean mIsFirstAudioSampleWrite -> s
    android.media.MediaCodec$BufferInfo mAudioBufferInfo -> q
    android.media.AudioRecord mAudioRecorder -> B
    int mAudioSampleRate -> F
    boolean mMuxerStarted -> x
    android.media.MediaCodec mVideoEncoder -> u
    androidx.camera.core.DeferrableSurface mDeferrableSurface -> H
    int mAudioTrackIndex -> z
    java.util.concurrent.atomic.AtomicBoolean mEndOfAudioVideoSignal -> p
    androidx.camera.core.VideoCapture$Metadata EMPTY_METADATA -> I
    java.util.concurrent.atomic.AtomicBoolean mEndOfVideoStreamSignal -> n
    int[] CamcorderQuality -> J
    boolean mIsRecording -> D
    73:93:void <clinit>() -> <clinit>
    147:157:void <init>(androidx.camera.core.VideoCaptureConfig) -> <init>
    161:169:android.media.MediaFormat createMediaFormat(androidx.camera.core.VideoCaptureConfig,android.util.Size) -> a
    404:431:void releaseCameraSurface(boolean) -> a
    459:509:void setupEncoder(android.util.Size) -> a
    554:581:boolean writeAudioEncodedBuffer(int) -> a
    677:746:boolean audioEncode(androidx.camera.core.VideoCapture$OnVideoSavedListener) -> a
    750:750:java.nio.ByteBuffer getInputBuffer(android.media.MediaCodec,int) -> a
    759:766:android.media.MediaFormat createAudioMediaFormat() -> a
    771:817:android.media.AudioRecord autoConfigAudioRecordSource(androidx.camera.core.VideoCaptureConfig) -> a
    823:847:void setAudioParametersByCamcorderProfile(android.util.Size,java.lang.String) -> a
    518:550:boolean writeVideoEncodedBuffer(int) -> b
    591:672:boolean videoEncode(androidx.camera.core.VideoCapture$OnVideoSavedListener) -> b
    754:754:java.nio.ByteBuffer getOutputBuffer(android.media.MediaCodec,int) -> b
    382:401:void clear() -> clear
    182:188:androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing) -> getDefaultBuilder
    200:213:java.util.Map onSuggestedResolutionUpdated(java.util.Map) -> onSuggestedResolutionUpdated
    443:451:void setTargetRotation(int) -> setTargetRotation
    241:244:void startRecording(java.io.File,java.util.concurrent.Executor,androidx.camera.core.VideoCapture$OnVideoSavedListener) -> startRecording
    263:278:void startRecording(java.io.File,androidx.camera.core.VideoCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.VideoCapture$OnVideoSavedListener) -> startRecording
    366:372:void stopRecording() -> stopRecording
androidx.camera.core.VideoCapture$1 -> androidx.camera.core.VideoCapture$a:
    androidx.camera.core.VideoCapture this$0 -> b
    androidx.camera.core.VideoCapture$OnVideoSavedListener val$postListener -> a
    337:337:void <init>(androidx.camera.core.VideoCapture,androidx.camera.core.VideoCapture$OnVideoSavedListener) -> <init>
    340:341:void run() -> run
androidx.camera.core.VideoCapture$2 -> androidx.camera.core.VideoCapture$b:
    java.io.File val$saveLocation -> b
    androidx.camera.core.VideoCapture this$0 -> c
    androidx.camera.core.VideoCapture$OnVideoSavedListener val$postListener -> a
    345:345:void <init>(androidx.camera.core.VideoCapture,androidx.camera.core.VideoCapture$OnVideoSavedListener,java.io.File) -> <init>
    348:352:void run() -> run
androidx.camera.core.VideoCapture$3 -> androidx.camera.core.VideoCapture$c:
    android.media.MediaCodec val$videoEncoder -> b
    android.view.Surface val$surface -> c
    boolean val$releaseVideoEncoder -> a
    413:413:void <init>(androidx.camera.core.VideoCapture,boolean,android.media.MediaCodec,android.view.Surface) -> <init>
    416:423:void onSurfaceDetached() -> onSurfaceDetached
androidx.camera.core.VideoCapture$4 -> androidx.camera.core.VideoCapture$d:
    androidx.camera.core.VideoCapture this$0 -> b
    android.util.Size val$resolution -> a
    481:481:void <init>(androidx.camera.core.VideoCapture,android.util.Size) -> <init>
    485:486:void onError(androidx.camera.core.SessionConfig,androidx.camera.core.SessionConfig$SessionError) -> onError
androidx.camera.core.VideoCapture$Defaults -> androidx.camera.core.VideoCapture$Defaults:
    android.util.Size DEFAULT_MAX_RESOLUTION -> a
    androidx.camera.core.VideoCaptureConfig DEFAULT_CONFIG -> b
    898:936:void <clinit>() -> <clinit>
    896:896:void <init>() -> <init>
    895:895:androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
    940:940:androidx.camera.core.VideoCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing) -> getConfig
androidx.camera.core.VideoCapture$Metadata -> androidx.camera.core.VideoCapture$Metadata:
    945:945:void <init>() -> <init>
androidx.camera.core.VideoCapture$VideoCaptureError -> androidx.camera.core.VideoCapture$VideoCaptureError:
    androidx.camera.core.VideoCapture$VideoCaptureError[] $VALUES -> a
    863:857:void <clinit>() -> <clinit>
    857:857:void <init>(java.lang.String,int) -> <init>
    857:857:androidx.camera.core.VideoCapture$VideoCaptureError valueOf(java.lang.String) -> valueOf
    857:857:androidx.camera.core.VideoCapture$VideoCaptureError[] values() -> values
androidx.camera.core.VideoCapture$VideoSavedListenerWrapper -> androidx.camera.core.VideoCapture$e:
    java.util.concurrent.Executor mExecutor -> a
    androidx.camera.core.VideoCapture$OnVideoSavedListener mOnVideoSavedListener -> b
    957:960:void <init>(androidx.camera.core.VideoCapture,java.util.concurrent.Executor,androidx.camera.core.VideoCapture$OnVideoSavedListener) -> <init>
    965:965:void lambda$onVideoSaved$0(java.io.File) -> a
    976:976:void lambda$onError$1(androidx.camera.core.VideoCapture$VideoCaptureError,java.lang.String,java.lang.Throwable) -> a
    975:980:void onError(androidx.camera.core.VideoCapture$VideoCaptureError,java.lang.String,java.lang.Throwable) -> onError
    965:969:void onVideoSaved(java.io.File) -> onVideoSaved
androidx.camera.core.VideoCaptureConfig -> androidx.camera.core.VideoCaptureConfig:
    androidx.camera.core.Config$Option OPTION_VIDEO_FRAME_RATE -> c
    androidx.camera.core.Config$Option OPTION_BIT_RATE -> d
    androidx.camera.core.Config$Option OPTION_AUDIO_SAMPLE_RATE -> g
    androidx.camera.core.Config$Option OPTION_AUDIO_CHANNEL_COUNT -> h
    androidx.camera.core.Config$Option OPTION_INTRA_FRAME_INTERVAL -> e
    androidx.camera.core.Config$Option OPTION_AUDIO_BIT_RATE -> f
    androidx.camera.core.OptionsBundle mConfig -> b
    androidx.camera.core.Config$Option OPTION_AUDIO_RECORD_SOURCE -> i
    androidx.camera.core.Config$Option OPTION_AUDIO_MIN_BUFFER_SIZE -> j
    49:63:void <clinit>() -> <clinit>
    70:72:void <init>(androidx.camera.core.OptionsBundle) -> <init>
    271:271:boolean containsOption(androidx.camera.core.Config$Option) -> containsOption
    295:296:void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher) -> findOptions
    147:147:int getAudioBitRate(int) -> getAudioBitRate
    159:159:int getAudioBitRate() -> getAudioBitRate
    197:197:int getAudioChannelCount(int) -> getAudioChannelCount
    209:209:int getAudioChannelCount() -> getAudioChannelCount
    247:247:int getAudioMinBufferSize(int) -> getAudioMinBufferSize
    259:259:int getAudioMinBufferSize() -> getAudioMinBufferSize
    222:222:int getAudioRecordSource(int) -> getAudioRecordSource
    234:234:int getAudioRecordSource() -> getAudioRecordSource
    172:172:int getAudioSampleRate(int) -> getAudioSampleRate
    184:184:int getAudioSampleRate() -> getAudioSampleRate
    607:607:java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor) -> getBackgroundExecutor
    619:619:java.util.concurrent.Executor getBackgroundExecutor() -> getBackgroundExecutor
    103:103:int getBitRate(int) -> getBitRate
    113:113:int getBitRate() -> getBitRate
    403:403:androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter) -> getCameraIdFilter
    417:417:androidx.camera.core.CameraIdFilter getCameraIdFilter() -> getCameraIdFilter
    679:679:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> getCaptureOptionUnpacker
    687:687:androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker() -> getCaptureOptionUnpacker
    662:662:androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> getDefaultCaptureConfig
    670:670:androidx.camera.core.CaptureConfig getDefaultCaptureConfig() -> getDefaultCaptureConfig
    545:545:android.util.Size getDefaultResolution(android.util.Size) -> getDefaultResolution
    559:559:android.util.Size getDefaultResolution() -> getDefaultResolution
    629:629:androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig) -> getDefaultSessionConfig
    637:637:androidx.camera.core.SessionConfig getDefaultSessionConfig() -> getDefaultSessionConfig
    124:124:int getIFrameInterval(int) -> getIFrameInterval
    134:134:int getIFrameInterval() -> getIFrameInterval
    376:376:androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing) -> getLensFacing
    388:388:androidx.camera.core.CameraX$LensFacing getLensFacing() -> getLensFacing
    567:567:android.util.Size getMaxResolution(android.util.Size) -> getMaxResolution
    575:575:android.util.Size getMaxResolution() -> getMaxResolution
    646:646:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> getSessionOptionUnpacker
    654:654:androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker() -> getSessionOptionUnpacker
    584:584:java.util.List getSupportedResolutions(java.util.List) -> getSupportedResolutions
    592:592:java.util.List getSupportedResolutions() -> getSupportedResolutions
    693:693:int getSurfaceOccupancyPriority(int) -> getSurfaceOccupancyPriority
    699:699:int getSurfaceOccupancyPriority() -> getSurfaceOccupancyPriority
    469:469:androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio) -> getTargetAspectRatio
    481:481:androidx.camera.core.AspectRatio getTargetAspectRatio() -> getTargetAspectRatio
    438:438:android.util.Rational getTargetAspectRatioCustom(android.util.Rational) -> getTargetAspectRatioCustom
    456:456:android.util.Rational getTargetAspectRatioCustom() -> getTargetAspectRatioCustom
    314:318:java.lang.Class getTargetClass(java.lang.Class) -> getTargetClass
    327:330:java.lang.Class getTargetClass() -> getTargetClass
    346:346:java.lang.String getTargetName(java.lang.String) -> getTargetName
    361:361:java.lang.String getTargetName() -> getTargetName
    522:522:android.util.Size getTargetResolution(android.util.Size) -> getTargetResolution
    530:530:android.util.Size getTargetResolution() -> getTargetResolution
    498:498:int getTargetRotation(int) -> getTargetRotation
    514:514:int getTargetRotation() -> getTargetRotation
    708:708:androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> getUseCaseEventListener
    716:716:androidx.camera.core.UseCase$EventListener getUseCaseEventListener() -> getUseCaseEventListener
    82:82:int getVideoFrameRate(int) -> getVideoFrameRate
    92:92:int getVideoFrameRate() -> getVideoFrameRate
    303:303:java.util.Set listOptions() -> listOptions
    279:279:java.lang.Object retrieveOption(androidx.camera.core.Config$Option) -> retrieveOption
    288:288:java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object) -> retrieveOption
androidx.camera.core.VideoCaptureConfig$Builder -> androidx.camera.core.VideoCaptureConfig$Builder:
    androidx.camera.core.MutableOptionsBundle mMutableConfig -> a
    734:735:void <init>() -> <init>
    737:751:void <init>(androidx.camera.core.MutableOptionsBundle) -> <init>
    723:723:androidx.camera.core.UseCaseConfig build() -> build
    785:791:androidx.camera.core.VideoCaptureConfig build() -> build
    761:761:androidx.camera.core.VideoCaptureConfig$Builder fromConfig(androidx.camera.core.VideoCaptureConfig) -> fromConfig
    773:773:androidx.camera.core.MutableConfig getMutableConfig() -> getMutableConfig
    840:841:androidx.camera.core.VideoCaptureConfig$Builder setAudioBitRate(int) -> setAudioBitRate
    868:869:androidx.camera.core.VideoCaptureConfig$Builder setAudioChannelCount(int) -> setAudioChannelCount
    896:897:androidx.camera.core.VideoCaptureConfig$Builder setAudioMinBufferSize(int) -> setAudioMinBufferSize
    882:883:androidx.camera.core.VideoCaptureConfig$Builder setAudioRecordSource(int) -> setAudioRecordSource
    854:855:androidx.camera.core.VideoCaptureConfig$Builder setAudioSampleRate(int) -> setAudioSampleRate
    723:723:java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    1118:1119:androidx.camera.core.VideoCaptureConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor) -> setBackgroundExecutor
    814:815:androidx.camera.core.VideoCaptureConfig$Builder setBitRate(int) -> setBitRate
    723:723:java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    967:968:androidx.camera.core.VideoCaptureConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter) -> setCameraIdFilter
    723:723:java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    1158:1159:androidx.camera.core.VideoCaptureConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker) -> setCaptureOptionUnpacker
    723:723:java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    1138:1139:androidx.camera.core.VideoCaptureConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig) -> setDefaultCaptureConfig
    723:723:java.lang.Object setDefaultResolution(android.util.Size) -> setDefaultResolution
    1085:1086:androidx.camera.core.VideoCaptureConfig$Builder setDefaultResolution(android.util.Size) -> setDefaultResolution
    723:723:java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    1129:1130:androidx.camera.core.VideoCaptureConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig) -> setDefaultSessionConfig
    826:827:androidx.camera.core.VideoCaptureConfig$Builder setIFrameInterval(int) -> setIFrameInterval
    723:723:java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    949:950:androidx.camera.core.VideoCaptureConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing) -> setLensFacing
    723:723:java.lang.Object setMaxResolution(android.util.Size) -> setMaxResolution
    1094:1095:androidx.camera.core.VideoCaptureConfig$Builder setMaxResolution(android.util.Size) -> setMaxResolution
    723:723:java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    1148:1149:androidx.camera.core.VideoCaptureConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker) -> setSessionOptionUnpacker
    723:723:java.lang.Object setSupportedResolutions(java.util.List) -> setSupportedResolutions
    1103:1104:androidx.camera.core.VideoCaptureConfig$Builder setSupportedResolutions(java.util.List) -> setSupportedResolutions
    723:723:java.lang.Object setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    1167:1168:androidx.camera.core.VideoCaptureConfig$Builder setSurfaceOccupancyPriority(int) -> setSurfaceOccupancyPriority
    723:723:java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    1022:1023:androidx.camera.core.VideoCaptureConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio) -> setTargetAspectRatio
    723:723:java.lang.Object setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    1000:1002:androidx.camera.core.VideoCaptureConfig$Builder setTargetAspectRatioCustom(android.util.Rational) -> setTargetAspectRatioCustom
    723:723:java.lang.Object setTargetClass(java.lang.Class) -> setTargetClass
    907:915:androidx.camera.core.VideoCaptureConfig$Builder setTargetClass(java.lang.Class) -> setTargetClass
    723:723:java.lang.Object setTargetName(java.lang.String) -> setTargetName
    931:932:androidx.camera.core.VideoCaptureConfig$Builder setTargetName(java.lang.String) -> setTargetName
    723:723:java.lang.Object setTargetResolution(android.util.Size) -> setTargetResolution
    1066:1071:androidx.camera.core.VideoCaptureConfig$Builder setTargetResolution(android.util.Size) -> setTargetResolution
    723:723:java.lang.Object setTargetRotation(int) -> setTargetRotation
    1039:1040:androidx.camera.core.VideoCaptureConfig$Builder setTargetRotation(int) -> setTargetRotation
    723:723:java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
    1177:1178:androidx.camera.core.VideoCaptureConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener) -> setUseCaseEventListener
    802:803:androidx.camera.core.VideoCaptureConfig$Builder setVideoFrameRate(int) -> setVideoFrameRate
androidx.camera.core.impl.LiveDataObservable -> androidx.camera.core.impl.LiveDataObservable:
    androidx.lifecycle.MutableLiveData mLiveData -> a
    java.util.Map mObservers -> b
    56:61:void <init>() -> <init>
    119:136:void addObserver(java.util.concurrent.Executor,androidx.camera.core.Observable$Observer) -> addObserver
    89:89:com.google.common.util.concurrent.ListenableFuture fetchData() -> fetchData
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    75:76:void postError(java.lang.Throwable) -> postError
    68:69:void postValue(java.lang.Object) -> postValue
    141:153:void removeObserver(androidx.camera.core.Observable$Observer) -> removeObserver
androidx.camera.core.impl.LiveDataObservable$1 -> androidx.camera.core.impl.LiveDataObservable$a:
    androidx.camera.core.impl.LiveDataObservable this$0 -> a
    89:89:void <init>(androidx.camera.core.impl.LiveDataObservable) -> <init>
    94:111:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.impl.LiveDataObservable$1$1 -> androidx.camera.core.impl.LiveDataObservable$a$a:
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    androidx.camera.core.impl.LiveDataObservable$1 this$1 -> b
    94:94:void <init>(androidx.camera.core.impl.LiveDataObservable$1,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    97:108:void run() -> run
androidx.camera.core.impl.LiveDataObservable$2 -> androidx.camera.core.impl.LiveDataObservable$b:
    androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter val$oldAdapter -> a
    androidx.camera.core.impl.LiveDataObservable this$0 -> c
    androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter val$newAdapter -> b
    129:129:void <init>(androidx.camera.core.impl.LiveDataObservable,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter) -> <init>
    132:134:void run() -> run
androidx.camera.core.impl.LiveDataObservable$3 -> androidx.camera.core.impl.LiveDataObservable$c:
    androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter val$adapter -> a
    androidx.camera.core.impl.LiveDataObservable this$0 -> b
    146:146:void <init>(androidx.camera.core.impl.LiveDataObservable,androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter) -> <init>
    149:150:void run() -> run
androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter -> androidx.camera.core.impl.LiveDataObservable$d:
    java.util.concurrent.atomic.AtomicBoolean mActive -> a
    androidx.camera.core.Observable$Observer mObserver -> b
    java.util.concurrent.Executor mExecutor -> c
    230:233:void <init>(java.util.concurrent.Executor,androidx.camera.core.Observable$Observer) -> <init>
    236:237:void disable() -> a
    241:257:void onChanged(androidx.camera.core.impl.LiveDataObservable$Result) -> a
    223:223:void onChanged(java.lang.Object) -> onChanged
androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter$1 -> androidx.camera.core.impl.LiveDataObservable$d$a:
    androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter this$0 -> b
    androidx.camera.core.impl.LiveDataObservable$Result val$result -> a
    241:241:void <init>(androidx.camera.core.impl.LiveDataObservable$LiveDataObserverAdapter,androidx.camera.core.impl.LiveDataObservable$Result) -> <init>
    244:255:void run() -> run
androidx.camera.core.impl.LiveDataObservable$Result -> androidx.camera.core.impl.LiveDataObservable$Result:
    java.lang.Throwable mError -> b
    java.lang.Object mValue -> a
    170:173:void <init>(java.lang.Object,java.lang.Throwable) -> <init>
    179:179:androidx.camera.core.impl.LiveDataObservable$Result fromValue(java.lang.Object) -> a
    186:186:androidx.camera.core.impl.LiveDataObservable$Result fromError(java.lang.Throwable) -> a
    195:195:boolean completedSuccessfully() -> completedSuccessfully
    219:219:java.lang.Throwable getError() -> getError
    205:206:java.lang.Object getValue() -> getValue
androidx.camera.core.impl.utils.Absent -> w2:
    androidx.camera.core.impl.utils.Absent sInstance -> a
    29:29:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    33:33:androidx.camera.core.impl.utils.Optional withType() -> a
    75:75:boolean equals(java.lang.Object) -> equals
    46:46:java.lang.Object get() -> get
    80:80:int hashCode() -> hashCode
    41:41:boolean isPresent() -> isPresent
    51:51:java.lang.Object or(java.lang.Object) -> or
    58:58:androidx.camera.core.impl.utils.Optional or(androidx.camera.core.impl.utils.Optional) -> or
    63:63:java.lang.Object or(androidx.core.util.Supplier) -> or
    70:70:java.lang.Object orNull() -> orNull
    85:85:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.MainThreadAsyncHandler -> androidx.camera.core.impl.utils.MainThreadAsyncHandler:
    android.os.Handler sHandler -> a
    53:53:void <init>() -> <init>
    40:47:android.os.Handler getInstance() -> getInstance
androidx.camera.core.impl.utils.Optional -> androidx.camera.core.impl.utils.Optional:
    107:108:void <init>() -> <init>
    79:79:androidx.camera.core.impl.utils.Optional absent() -> absent
    103:103:androidx.camera.core.impl.utils.Optional fromNullable(java.lang.Object) -> fromNullable
    91:91:androidx.camera.core.impl.utils.Optional of(java.lang.Object) -> of
androidx.camera.core.impl.utils.Present -> x2:
    java.lang.Object mReference -> a
    31:33:void <init>(java.lang.Object) -> <init>
    71:75:boolean equals(java.lang.Object) -> equals
    42:42:java.lang.Object get() -> get
    80:80:int hashCode() -> hashCode
    37:37:boolean isPresent() -> isPresent
    47:49:java.lang.Object or(java.lang.Object) -> or
    54:55:androidx.camera.core.impl.utils.Optional or(androidx.camera.core.impl.utils.Optional) -> or
    60:61:java.lang.Object or(androidx.core.util.Supplier) -> or
    66:66:java.lang.Object orNull() -> orNull
    85:85:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.Threads -> androidx.camera.core.impl.utils.Threads:
    33:34:void <init>() -> <init>
    61:62:void checkBackgroundThread() -> checkBackgroundThread
    52:53:void checkMainThread() -> checkMainThread
    43:43:boolean isBackgroundThread() -> isBackgroundThread
    38:38:boolean isMainThread() -> isMainThread
androidx.camera.core.impl.utils.executor.CameraXExecutors -> androidx.camera.core.impl.utils.executor.CameraXExecutors:
    33:34:void <init>() -> <init>
    51:51:java.util.concurrent.Executor directExecutor() -> directExecutor
    102:102:java.util.concurrent.Executor highPriorityExecutor() -> highPriorityExecutor
    45:45:java.util.concurrent.Executor ioExecutor() -> ioExecutor
    73:73:boolean isSequentialExecutor(java.util.concurrent.Executor) -> isSequentialExecutor
    39:39:java.util.concurrent.ScheduledExecutorService mainThreadExecutor() -> mainThreadExecutor
    84:84:java.util.concurrent.ScheduledExecutorService myLooperExecutor() -> myLooperExecutor
    94:94:java.util.concurrent.ScheduledExecutorService newHandlerExecutor(android.os.Handler) -> newHandlerExecutor
    65:65:java.util.concurrent.Executor newSequentialExecutor(java.util.concurrent.Executor) -> newSequentialExecutor
androidx.camera.core.impl.utils.executor.DirectExecutor -> y2:
    androidx.camera.core.impl.utils.executor.DirectExecutor sDirectExecutor -> a
    25:25:void <init>() -> <init>
    29:36:java.util.concurrent.Executor getInstance() -> a
    43:44:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService -> z2:
    java.lang.ThreadLocal sThreadLocalInstance -> b
    android.os.Handler mHandler -> a
    51:51:void <clinit>() -> <clinit>
    68:70:void <init>(android.os.Handler) -> <init>
    182:182:java.util.concurrent.RejectedExecutionException createPostFailedException() -> a
    169:170:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    76:87:java.util.concurrent.ScheduledExecutorService currentThreadExecutor() -> b
    176:177:void execute(java.lang.Runnable) -> execute
    159:159:boolean isShutdown() -> isShutdown
    164:164:boolean isTerminated() -> isTerminated
    95:102:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    111:118:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    128:129:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    137:138:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    144:145:void shutdown() -> shutdown
    152:153:java.util.List shutdownNow() -> shutdownNow
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$1 -> z2$a:
    52:52:void <init>() -> <init>
    52:52:java.lang.Object initialValue() -> initialValue
    55:62:java.util.concurrent.ScheduledExecutorService initialValue() -> initialValue
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$2 -> z2$b:
    java.lang.Runnable val$command -> a
    95:95:void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService,java.lang.Runnable) -> <init>
    95:95:java.lang.Object call() -> call
    98:99:java.lang.Void call() -> call
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture -> z2$c:
    long mRunAtMillis -> b
    com.google.common.util.concurrent.ListenableFuture mDelegate -> d
    java.util.concurrent.Callable mTask -> c
    java.util.concurrent.atomic.AtomicReference mCompleter -> a
    193:219:void <init>(android.os.Handler,long,java.util.concurrent.Callable) -> <init>
    234:234:int compareTo(java.util.concurrent.Delayed) -> a
    252:252:boolean cancel(boolean) -> cancel
    185:185:int compareTo(java.lang.Object) -> compareTo
    267:267:java.lang.Object get() -> get
    273:273:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    228:228:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    257:257:boolean isCancelled() -> isCancelled
    262:262:boolean isDone() -> isDone
    223:223:boolean isPeriodic() -> isPeriodic
    240:248:void run() -> run
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 -> z2$c$a:
    android.os.Handler val$handler -> a
    androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture this$0 -> c
    java.util.concurrent.Callable val$task -> b
    197:197:void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture,android.os.Handler,java.util.concurrent.Callable) -> <init>
    204:216:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1$1 -> z2$c$a$a:
    androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1 this$1 -> a
    204:204:void <init>(androidx.camera.core.impl.utils.executor.HandlerScheduledExecutorService$HandlerScheduledFuture$1) -> <init>
    209:212:void run() -> run
androidx.camera.core.impl.utils.executor.HighPriorityExecutor -> a3:
    java.util.concurrent.Executor sExecutor -> b
    java.util.concurrent.ExecutorService mHighPriorityService -> a
    30:33:void <init>() -> <init>
    49:56:java.util.concurrent.Executor getInstance() -> a
    63:64:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.HighPriorityExecutor$1 -> a3$a:
    35:35:void <init>(androidx.camera.core.impl.utils.executor.HighPriorityExecutor) -> <init>
    41:44:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.camera.core.impl.utils.executor.IoExecutor -> b3:
    java.util.concurrent.Executor sExecutor -> b
    java.util.concurrent.ExecutorService mIoService -> a
    33:36:void <init>() -> <init>
    58:65:java.util.concurrent.Executor getInstance() -> a
    72:73:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.IoExecutor$1 -> b3$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    39:43:void <init>(androidx.camera.core.impl.utils.executor.IoExecutor) -> <init>
    47:53:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.camera.core.impl.utils.executor.MainThreadExecutor -> c3:
    java.util.concurrent.ScheduledExecutorService sInstance -> a
    35:36:void <init>() -> <init>
    39:47:java.util.concurrent.ScheduledExecutorService getInstance() -> a
androidx.camera.core.impl.utils.executor.SequentialExecutor -> d3:
    java.util.Deque mQueue -> a
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState mWorkerRunningState -> d
    long mWorkerRunCount -> e
    java.util.concurrent.Executor mExecutor -> b
    androidx.camera.core.impl.utils.executor.SequentialExecutor$QueueWorker mWorker -> c
    75:77:void <init>(java.util.concurrent.Executor) -> <init>
    87:115:void execute(java.lang.Runnable) -> execute
androidx.camera.core.impl.utils.executor.SequentialExecutor$1 -> d3$a:
    java.lang.Runnable val$task -> a
    107:107:void <init>(androidx.camera.core.impl.utils.executor.SequentialExecutor,java.lang.Runnable) -> <init>
    110:111:void run() -> run
androidx.camera.core.impl.utils.executor.SequentialExecutor$QueueWorker -> d3$b:
    androidx.camera.core.impl.utils.executor.SequentialExecutor this$0 -> a
    168:168:void <init>(androidx.camera.core.impl.utils.executor.SequentialExecutor) -> <init>
    198:242:void workOnQueue() -> a
    172:176:void run() -> run
androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState -> d3$c:
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState IDLE -> a
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState QUEUED -> c
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState QUEUING -> b
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState RUNNING -> d
    androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState[] $VALUES -> e
    158:156:void <clinit>() -> <clinit>
    156:156:void <init>(java.lang.String,int) -> <init>
    156:156:androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState valueOf(java.lang.String) -> valueOf
    156:156:androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState[] values() -> values
androidx.camera.core.impl.utils.futures.ChainingListenableFuture -> e3:
    com.google.common.util.concurrent.ListenableFuture mInputFuture -> f
    androidx.camera.core.impl.utils.futures.AsyncFunction mFunction -> c
    com.google.common.util.concurrent.ListenableFuture mOutputFuture -> g
    java.util.concurrent.BlockingQueue mMayInterruptIfRunningChannel -> d
    java.util.concurrent.CountDownLatch mOutputCreated -> e
    70:73:void <init>(androidx.camera.core.impl.utils.futures.AsyncFunction,com.google.common.util.concurrent.ListenableFuture) -> <init>
    180:183:void cancel(java.util.concurrent.Future,boolean) -> a
    261:268:java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue) -> a
    282:290:void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object) -> a
    167:175:boolean cancel(boolean) -> cancel
    83:108:java.lang.Object get() -> get
    120:158:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    190:254:void run() -> run
androidx.camera.core.impl.utils.futures.ChainingListenableFuture$1 -> e3$a:
    com.google.common.util.concurrent.ListenableFuture val$outputFuture -> a
    androidx.camera.core.impl.utils.futures.ChainingListenableFuture this$0 -> b
    215:215:void <init>(androidx.camera.core.impl.utils.futures.ChainingListenableFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    222:235:void run() -> run
androidx.camera.core.impl.utils.futures.FutureChain -> androidx.camera.core.impl.utils.futures.FutureChain:
    com.google.common.util.concurrent.ListenableFuture mDelegate -> a
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer mCompleter -> b
    116:118:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    120:132:void <init>() -> <init>
    169:173:boolean set(java.lang.Object) -> a
    177:181:boolean setException(java.lang.Throwable) -> a
    113:114:void addCallback(androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor) -> addCallback
    136:137:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    141:141:boolean cancel(boolean) -> cancel
    65:65:androidx.camera.core.impl.utils.futures.FutureChain from(com.google.common.util.concurrent.ListenableFuture) -> from
    158:158:java.lang.Object get() -> get
    165:165:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    146:146:boolean isCancelled() -> isCancelled
    151:151:boolean isDone() -> isDone
    100:100:androidx.camera.core.impl.utils.futures.FutureChain transform(androidx.arch.core.util.Function,java.util.concurrent.Executor) -> transform
    83:83:androidx.camera.core.impl.utils.futures.FutureChain transformAsync(androidx.camera.core.impl.utils.futures.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
androidx.camera.core.impl.utils.futures.FutureChain$1 -> androidx.camera.core.impl.utils.futures.FutureChain$a:
    androidx.camera.core.impl.utils.futures.FutureChain this$0 -> a
    122:122:void <init>(androidx.camera.core.impl.utils.futures.FutureChain) -> <init>
    126:129:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.impl.utils.futures.Futures -> androidx.camera.core.impl.utils.futures.Futures:
    androidx.arch.core.util.Function IDENTITY_FUNCTION -> a
    136:136:void <clinit>() -> <clinit>
    353:353:void <init>() -> <init>
    261:263:void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor) -> addCallback
    245:245:com.google.common.util.concurrent.ListenableFuture allAsList(java.util.Collection) -> allAsList
    322:323:java.lang.Object getDone(java.util.concurrent.Future) -> getDone
    334:341:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    71:71:com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    85:85:java.util.concurrent.ScheduledFuture immediateFailedScheduledFuture(java.lang.Throwable) -> immediateFailedScheduledFuture
    53:57:com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    157:161:void propagate(com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> propagate
    181:209:void propagateTransform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.Executor) -> propagateTransform
    226:226:com.google.common.util.concurrent.ListenableFuture successfulAsList(java.util.Collection) -> successfulAsList
    126:127:com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,java.util.concurrent.Executor) -> transform
    105:107:com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.AsyncFunction,java.util.concurrent.Executor) -> transformAsync
androidx.camera.core.impl.utils.futures.Futures$1 -> androidx.camera.core.impl.utils.futures.Futures$a:
    androidx.arch.core.util.Function val$function -> a
    127:127:void <init>(androidx.arch.core.util.Function) -> <init>
    131:131:com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
androidx.camera.core.impl.utils.futures.Futures$2 -> androidx.camera.core.impl.utils.futures.Futures$b:
    136:136:void <init>() -> <init>
    139:139:java.lang.Object apply(java.lang.Object) -> apply
androidx.camera.core.impl.utils.futures.Futures$3 -> androidx.camera.core.impl.utils.futures.Futures$c:
    androidx.arch.core.util.Function val$function -> b
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer val$completer -> a
    186:186:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer,androidx.arch.core.util.Function) -> <init>
    198:199:void onFailure(java.lang.Throwable) -> onFailure
    190:194:void onSuccess(java.lang.Object) -> onSuccess
androidx.camera.core.impl.utils.futures.Futures$4 -> androidx.camera.core.impl.utils.futures.Futures$d:
    com.google.common.util.concurrent.ListenableFuture val$input -> a
    203:203:void <init>(com.google.common.util.concurrent.ListenableFuture) -> <init>
    206:207:void run() -> run
androidx.camera.core.impl.utils.futures.Futures$CallbackListener -> androidx.camera.core.impl.utils.futures.Futures$e:
    java.util.concurrent.Future mFuture -> a
    androidx.camera.core.impl.utils.futures.FutureCallback mCallback -> b
    272:275:void <init>(java.util.concurrent.Future,androidx.camera.core.impl.utils.futures.FutureCallback) -> <init>
    281:284:void run() -> run
    294:294:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.futures.ImmediateFuture -> f3:
    39:39:void <init>() -> <init>
    51:52:com.google.common.util.concurrent.ListenableFuture nullFuture() -> a
    57:69:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    73:73:boolean cancel(boolean) -> cancel
    93:94:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    78:78:boolean isCancelled() -> isCancelled
    83:83:boolean isDone() -> isDone
androidx.camera.core.impl.utils.futures.ImmediateFuture$ImmediateFailedFuture -> f3$a:
    java.lang.Throwable mCause -> a
    128:130:void <init>(java.lang.Throwable) -> <init>
    135:135:java.lang.Object get() -> get
    142:142:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.futures.ImmediateFuture$ImmediateFailedScheduledFuture -> f3$b:
    150:151:void <init>(java.lang.Throwable) -> <init>
    160:160:int compareTo(java.util.concurrent.Delayed) -> b
    146:146:int compareTo(java.lang.Object) -> compareTo
    155:155:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
androidx.camera.core.impl.utils.futures.ImmediateFuture$ImmediateSuccessfulFuture -> f3$c:
    androidx.camera.core.impl.utils.futures.ImmediateFuture NULL_FUTURE -> b
    java.lang.Object mValue -> a
    99:99:void <clinit>() -> <clinit>
    105:107:void <init>(java.lang.Object) -> <init>
    113:113:java.lang.Object get() -> get
    119:119:java.lang.String toString() -> toString
androidx.camera.core.impl.utils.futures.ListFuture -> g3:
    java.util.List mValues -> b
    java.util.List mFutures -> a
    java.util.concurrent.atomic.AtomicInteger mRemaining -> d
    com.google.common.util.concurrent.ListenableFuture mResult -> e
    boolean mAllMustSucceed -> c
    androidx.concurrent.futures.CallbackToFutureAdapter$Completer mResultNotifier -> f
    77:95:void <init>(java.util.List,boolean,java.util.concurrent.Executor) -> <init>
    99:142:void init(java.util.concurrent.Executor) -> a
    148:155:void setOneValue(int,java.util.concurrent.Future) -> a
    239:263:void callAllGets() -> a
    199:200:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    230:230:java.util.List get(long,java.util.concurrent.TimeUnit) -> b
    205:205:boolean cancel(boolean) -> cancel
    54:54:java.lang.Object get() -> get
    54:54:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    221:225:java.util.List get() -> get
    210:210:boolean isCancelled() -> isCancelled
    215:215:boolean isDone() -> isDone
androidx.camera.core.impl.utils.futures.ListFuture$1 -> g3$a:
    androidx.camera.core.impl.utils.futures.ListFuture this$0 -> a
    83:83:void <init>(androidx.camera.core.impl.utils.futures.ListFuture) -> <init>
    87:90:java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> attachCompleter
androidx.camera.core.impl.utils.futures.ListFuture$2 -> g3$b:
    androidx.camera.core.impl.utils.futures.ListFuture this$0 -> a
    99:99:void <init>(androidx.camera.core.impl.utils.futures.ListFuture) -> <init>
    104:108:void run() -> run
androidx.camera.core.impl.utils.futures.ListFuture$3 -> g3$c:
    com.google.common.util.concurrent.ListenableFuture val$listenable -> b
    androidx.camera.core.impl.utils.futures.ListFuture this$0 -> c
    int val$index -> a
    135:135:void <init>(androidx.camera.core.impl.utils.futures.ListFuture,int,com.google.common.util.concurrent.ListenableFuture) -> <init>
    138:139:void run() -> run
androidx.cardview.widget.CardView -> androidx.cardview.widget.CardView:
    int[] COLOR_BACKGROUND_ATTR -> h
    androidx.cardview.widget.CardViewDelegate mCardViewDelegate -> g
    androidx.cardview.widget.CardViewImpl IMPL -> i
    int mUserSetMinHeight -> d
    android.graphics.Rect mContentPadding -> e
    android.graphics.Rect mShadowBounds -> f
    boolean mCompatPadding -> a
    boolean mPreventCornerOverlap -> b
    int mUserSetMinWidth -> c
    81:93:void <clinit>() -> <clinit>
    113:114:void <init>(android.content.Context) -> <init>
    117:118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    121:164:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    79:79:void access$001(androidx.cardview.widget.CardView,int,int,int,int) -> a
    303:303:android.content.res.ColorStateList getCardBackgroundColor() -> getCardBackgroundColor
    387:387:float getCardElevation() -> getCardElevation
    343:343:int getContentPaddingBottom() -> getContentPaddingBottom
    313:313:int getContentPaddingLeft() -> getContentPaddingLeft
    323:323:int getContentPaddingRight() -> getContentPaddingRight
    333:333:int getContentPaddingTop() -> getContentPaddingTop
    413:413:float getMaxCardElevation() -> getMaxCardElevation
    424:424:boolean getPreventCornerOverlap() -> getPreventCornerOverlap
    364:364:float getRadius() -> getRadius
    183:183:boolean getUseCompatPadding() -> getUseCompatPadding
    232:262:void onMeasure(int,int) -> onMeasure
    283:284:void setCardBackgroundColor(int) -> setCardBackgroundColor
    293:294:void setCardBackgroundColor(android.content.res.ColorStateList) -> setCardBackgroundColor
    376:377:void setCardElevation(float) -> setCardElevation
    226:228:void setContentPadding(int,int,int,int) -> setContentPadding
    402:403:void setMaxCardElevation(float) -> setMaxCardElevation
    272:274:void setMinimumHeight(int) -> setMinimumHeight
    266:268:void setMinimumWidth(int) -> setMinimumWidth
    169:169:void setPadding(int,int,int,int) -> setPadding
    174:174:void setPaddingRelative(int,int,int,int) -> setPaddingRelative
    441:445:void setPreventCornerOverlap(boolean) -> setPreventCornerOverlap
    354:355:void setRadius(float) -> setRadius
    203:207:void setUseCompatPadding(boolean) -> setUseCompatPadding
androidx.cardview.widget.CardView$1 -> androidx.cardview.widget.CardView$a:
    androidx.cardview.widget.CardView this$0 -> b
    android.graphics.drawable.Drawable mCardBackground -> a
    447:447:void <init>(androidx.cardview.widget.CardView) -> <init>
    452:454:void setCardBackground(android.graphics.drawable.Drawable) -> a
    468:471:void setShadowPadding(int,int,int,int) -> a
    485:485:android.graphics.drawable.Drawable getCardBackground() -> a
    490:490:android.view.View getCardView() -> b
    463:463:boolean getPreventCornerOverlap() -> c
    458:458:boolean getUseCompatPadding() -> d
androidx.cardview.widget.CardViewApi21Impl -> h3:
    26:26:void <init>() -> <init>
    31:38:void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    47:47:void initStatic() -> a
    58:58:float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    78:79:void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    113:114:void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    42:43:void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    73:73:float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    51:54:void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    68:68:float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    63:63:float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    103:104:void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    118:118:android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    108:109:void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    83:83:float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    88:99:void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
    122:122:androidx.cardview.widget.RoundRectDrawable getCardBackground(androidx.cardview.widget.CardViewDelegate) -> j
androidx.cardview.widget.CardViewDelegate -> i3:
androidx.cardview.widget.CardViewImpl -> j3:
    float getMaxElevation(androidx.cardview.widget.CardViewDelegate) -> a
    void initStatic() -> a
    void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float) -> a
    void setBackgroundColor(androidx.cardview.widget.CardViewDelegate,android.content.res.ColorStateList) -> a
    void setElevation(androidx.cardview.widget.CardViewDelegate,float) -> a
    float getRadius(androidx.cardview.widget.CardViewDelegate) -> b
    void setRadius(androidx.cardview.widget.CardViewDelegate,float) -> b
    float getMinHeight(androidx.cardview.widget.CardViewDelegate) -> c
    void setMaxElevation(androidx.cardview.widget.CardViewDelegate,float) -> c
    float getMinWidth(androidx.cardview.widget.CardViewDelegate) -> d
    void onCompatPaddingChanged(androidx.cardview.widget.CardViewDelegate) -> e
    android.content.res.ColorStateList getBackgroundColor(androidx.cardview.widget.CardViewDelegate) -> f
    void onPreventCornerOverlapChanged(androidx.cardview.widget.CardViewDelegate) -> g
    float getElevation(androidx.cardview.widget.CardViewDelegate) -> h
    void updatePadding(androidx.cardview.widget.CardViewDelegate) -> i
androidx.cardview.widget.RoundRectDrawable -> k3:
    android.graphics.PorterDuff$Mode mTintMode -> k
    android.graphics.RectF mBoundsF -> c
    float mPadding -> e
    android.graphics.Paint mPaint -> b
    android.content.res.ColorStateList mBackground -> h
    boolean mInsetForPadding -> f
    boolean mInsetForRadius -> g
    android.content.res.ColorStateList mTint -> j
    float mRadius -> a
    android.graphics.Rect mBoundsI -> d
    android.graphics.PorterDuffColorFilter mTintFilter -> i
    55:62:void <init>(android.content.res.ColorStateList,float) -> <init>
    65:67:void setBackground(android.content.res.ColorStateList) -> a
    70:79:void setPadding(float,boolean,boolean) -> a
    105:117:void updateBounds(android.graphics.Rect) -> a
    131:137:void setRadius(float) -> a
    164:164:android.content.res.ColorStateList getColor() -> a
    206:207:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    82:82:float getPadding() -> b
    159:161:void setColor(android.content.res.ColorStateList) -> b
    155:155:float getRadius() -> c
    87:102:void draw(android.graphics.Canvas) -> draw
    151:151:int getOpacity() -> getOpacity
    127:128:void getOutline(android.graphics.Outline) -> getOutline
    197:198:boolean isStateful() -> isStateful
    121:123:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    183:192:boolean onStateChange(int[]) -> onStateChange
    141:142:void setAlpha(int) -> setAlpha
    146:147:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    169:172:void setTintList(android.content.res.ColorStateList) -> setTintList
    176:179:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.cardview.widget.RoundRectDrawableWithShadow -> l3:
    double COS_45 -> a
    41:41:void <clinit>() -> <clinit>
    189:192:float calculateHorizontalPadding(float,float,boolean) -> a
    180:183:float calculateVerticalPadding(float,float,boolean) -> b
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    androidx.collection.MapCollections mCollections -> h
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    75:123:androidx.collection.MapCollections getCollection() -> b
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$a:
    androidx.collection.ArrayMap this$0 -> d
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    84:84:java.lang.Object colGetEntry(int,int) -> a
    89:89:int colIndexOfKey(java.lang.Object) -> a
    104:105:void colPut(java.lang.Object,java.lang.Object) -> a
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> a
    114:115:void colRemoveAt(int) -> a
    119:120:void colClear() -> a
    94:94:int colIndexOfValue(java.lang.Object) -> b
    99:99:java.util.Map colGetMap() -> b
    79:79:int colGetSize() -> c
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    java.lang.Object[] mArray -> b
    int sTwiceBaseCacheSize -> j
    int sBaseCacheSize -> h
    int[] INT -> e
    int[] mHashes -> a
    java.lang.Object[] sTwiceBaseCache -> i
    int mSize -> c
    java.lang.Object[] OBJECT -> f
    androidx.collection.MapCollections mCollections -> d
    java.lang.Object[] sBaseCache -> g
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    261:265:void <init>(androidx.collection.ArraySet) -> <init>
    271:275:void <init>(java.util.Collection) -> <init>
    83:117:int indexOf(java.lang.Object,int) -> a
    160:196:void allocArrays(int) -> a
    200:233:void freeArrays(int[],java.lang.Object[],int) -> a
    634:682:androidx.collection.MapCollections getCollection() -> a
    359:402:boolean add(java.lang.Object) -> add
    410:423:void addAll(androidx.collection.ArraySet) -> addAll
    719:724:boolean addAll(java.util.Collection) -> addAll
    121:155:int indexOfNull() -> b
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    590:595:int hashCode() -> hashCode
    325:325:int indexOf(java.lang.Object) -> indexOf
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    506:514:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$a:
    androidx.collection.ArraySet this$0 -> d
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    643:643:java.lang.Object colGetEntry(int,int) -> a
    648:648:int colIndexOfKey(java.lang.Object) -> a
    663:664:void colPut(java.lang.Object,java.lang.Object) -> a
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> a
    673:674:void colRemoveAt(int) -> a
    678:679:void colClear() -> a
    653:653:int colIndexOfValue(java.lang.Object) -> b
    658:658:java.util.Map colGetMap() -> b
    638:638:int colGetSize() -> c
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    java.lang.Object[] mElements -> a
    int mCapacityBitmask -> d
    int mHead -> b
    int mTail -> c
    49:50:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    30:34:void doubleCapacity() -> a
    84:89:void addFirst(java.lang.Object) -> addFirst
    96:101:void addLast(java.lang.Object) -> addLast
    138:139:void clear() -> clear
    240:241:java.lang.Object get(int) -> get
    215:216:java.lang.Object getFirst() -> getFirst
    227:228:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:110:java.lang.Object popFirst() -> popFirst
    124:125:java.lang.Object popLast() -> popLast
    182:186:void removeFromEnd(int) -> removeFromEnd
    149:153:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    int mCapacityBitmask -> d
    int[] mElements -> a
    int mHead -> b
    int mTail -> c
    50:51:void <init>() -> <init>
    59:61:void <init>(int) -> <init>
    31:35:void doubleCapacity() -> a
    85:90:void addFirst(int) -> addFirst
    97:102:void addLast(int) -> addLast
    133:134:void clear() -> clear
    197:197:int get(int) -> get
    176:176:int getFirst() -> getFirst
    186:186:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:110:int popFirst() -> popFirst
    122:122:int popLast() -> popLast
    161:165:void removeFromEnd(int) -> removeFromEnd
    144:148:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> m3:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    20:22:void <clinit>() -> <clinit>
    33:37:int idealByteArraySize(int) -> a
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> a
    46:61:int binarySearch(int[],int,int) -> a
    65:80:int binarySearch(long[],int,long) -> a
    25:25:int idealIntArraySize(int) -> b
    29:29:int idealLongArraySize(int) -> c
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    java.lang.Object[] mValues -> c
    java.lang.Object DELETED -> e
    long[] mKeys -> b
    int mSize -> d
    boolean mGarbage -> a
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    217:240:void gc() -> a
    456:483:void append(long,java.lang.Object) -> append
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    428:428:boolean containsKey(long) -> containsKey
    433:433:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(long) -> delete
    109:109:java.lang.Object get(long) -> get
    118:121:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    415:423:int indexOfValue(java.lang.Object) -> indexOfValue
    339:339:boolean isEmpty() -> isEmpty
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    300:303:void putAll(androidx.collection.LongSparseArray) -> putAll
    315:319:java.lang.Object putIfAbsent(long,java.lang.Object) -> putIfAbsent
    139:147:void remove(long) -> remove
    156:164:boolean remove(long,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    185:191:java.lang.Object replace(long,java.lang.Object) -> replace
    203:211:boolean replace(long,java.lang.Object,java.lang.Object) -> replace
    386:391:void setValueAt(int,java.lang.Object) -> setValueAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    java.util.LinkedHashMap map -> a
    int missCount -> h
    int evictionCount -> f
    int hitCount -> g
    int putCount -> d
    int createCount -> e
    int size -> b
    int maxSize -> c
    51:53:void <init>(int) -> <init>
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    255:255:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:282:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    83:84:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    138:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    200:201:java.lang.Object remove(java.lang.Object) -> remove
    65:66:void resize(int) -> resize
    290:290:int size() -> size
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    348:347:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> n3:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    32:32:void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    490:495:java.lang.Object[] toArrayHelper(int) -> b
    int colGetSize() -> c
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    533:536:java.util.Set getEntrySet() -> d
    540:543:java.util.Set getKeySet() -> e
    547:550:java.util.Collection getValues() -> f
androidx.collection.MapCollections$ArrayIterator -> n3$a:
    androidx.collection.MapCollections this$0 -> e
    int mSize -> b
    int mIndex -> c
    int mOffset -> a
    boolean mCanRemove -> d
    43:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> n3$b:
    androidx.collection.MapCollections this$0 -> a
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    170:170:boolean add(java.util.Map$Entry) -> a
    167:167:boolean add(java.lang.Object) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> n3$c:
    androidx.collection.MapCollections this$0 -> a
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> n3$d:
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    int mEnd -> a
    79:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> n3$e:
    androidx.collection.MapCollections this$0 -> a
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    java.lang.Object[] mBaseCache -> d
    java.lang.Object[] mArray -> b
    int mTwiceBaseCacheSize -> g
    int mBaseCacheSize -> e
    int[] mHashes -> a
    int mSize -> c
    java.lang.Object[] mTwiceBaseCache -> f
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    77:80:int binarySearchHashes(int[],int,int) -> a
    88:122:int indexOf(java.lang.Object,int) -> a
    126:160:int indexOfNull() -> a
    165:197:void allocArrays(int) -> a
    201:230:void freeArrays(int[],java.lang.Object[],int) -> a
    326:341:int indexOfValue(java.lang.Object) -> a
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:623:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    java.lang.Object[] mValues -> c
    int[] mKeys -> b
    java.lang.Object DELETED -> e
    int mSize -> d
    boolean mGarbage -> a
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    230:253:void gc() -> a
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    432:432:boolean containsKey(int) -> containsKey
    437:437:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(int) -> delete
    109:109:java.lang.Object get(int) -> get
    118:121:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    352:352:boolean isEmpty() -> isEmpty
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    313:316:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    328:332:java.lang.Object putIfAbsent(int,java.lang.Object) -> putIfAbsent
    139:147:void remove(int) -> remove
    156:164:boolean remove(int,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    184:188:void removeAtRange(int,int) -> removeAtRange
    198:204:java.lang.Object replace(int,java.lang.Object) -> replace
    216:224:boolean replace(int,java.lang.Object,java.lang.Object) -> replace
    388:393:void setValueAt(int,java.lang.Object) -> setValueAt
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.AbstractResolvableFuture:
    java.lang.Object NULL -> g
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
    boolean GENERATE_CANCELLATION_CAUSES -> d
    61:214:void <clinit>() -> <clinit>
    314:315:void <init>() -> <init>
    168:195:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    510:511:java.lang.Object getDoneValue(java.lang.Object) -> a
    797:826:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture) -> a
    846:853:java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> a
    865:904:void complete(androidx.concurrent.futures.AbstractResolvableFuture) -> a
    936:937:void releaseWaiters() -> a
    957:958:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
    1020:1029:void addDoneString(java.lang.StringBuilder) -> a
    1050:1061:void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
    1189:1191:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> a
    650:666:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    919:919:void afterDone() -> afterDone
    1038:1041:java.lang.String userObjectToString(java.lang.Object) -> b
    1197:1198:java.lang.Object checkNotNull(java.lang.Object) -> c
    552:614:boolean cancel(boolean) -> cancel
    356:359:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    467:468:java.lang.Object get() -> get
    630:630:void interruptTask() -> interruptTask
    533:534:boolean isCancelled() -> isCancelled
    527:528:boolean isDone() -> isDone
    1007:1015:java.lang.String pendingToString() -> pendingToString
    682:687:boolean set(java.lang.Object) -> set
    707:712:boolean setException(java.lang.Throwable) -> setException
    743:786:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
    972:996:java.lang.String toString() -> toString
    639:640:boolean wasInterrupted() -> wasInterrupted
androidx.concurrent.futures.AbstractResolvableFuture$1 -> androidx.concurrent.futures.AbstractResolvableFuture$a:
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$b:
    1063:1063:void <init>() -> <init>
    1063:1063:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1) -> <init>
    boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
    boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> a
    boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> a
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.AbstractResolvableFuture$c:
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> d
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    java.lang.Throwable cause -> b
    boolean wasInterrupted -> a
    240:247:void <clinit>() -> <clinit>
    253:256:void <init>(boolean,java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.AbstractResolvableFuture$d:
    androidx.concurrent.futures.AbstractResolvableFuture$Failure FALLBACK_INSTANCE -> b
    java.lang.Throwable exception -> a
    218:218:void <clinit>() -> <clinit>
    228:230:void <init>(java.lang.Throwable) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure$1 -> androidx.concurrent.futures.AbstractResolvableFuture$d$a:
    220:220:void <init>(java.lang.String) -> <init>
    223:223:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.AbstractResolvableFuture$e:
    java.util.concurrent.Executor executor -> b
    java.lang.Runnable task -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> d
    199:199:void <clinit>() -> <clinit>
    207:210:void <init>(java.lang.Runnable,java.util.concurrent.Executor) -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.AbstractResolvableFuture$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> e
    1099:1105:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater) -> <init>
    1109:1110:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> a
    1114:1115:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    1119:1119:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    1124:1124:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
    1129:1129:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> a
androidx.concurrent.futures.AbstractResolvableFuture$SetFuture -> androidx.concurrent.futures.AbstractResolvableFuture$g:
    com.google.common.util.concurrent.ListenableFuture future -> b
    androidx.concurrent.futures.AbstractResolvableFuture owner -> a
    264:267:void <init>(androidx.concurrent.futures.AbstractResolvableFuture,com.google.common.util.concurrent.ListenableFuture) -> <init>
    271:279:void run() -> run
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.AbstractResolvableFuture$h:
    1140:1141:void <init>() -> <init>
    1145:1146:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> a
    1150:1151:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    1155:1161:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    1166:1172:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
    1177:1183:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> a
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.AbstractResolvableFuture$i:
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
    118:118:void <clinit>() -> <clinit>
    129:130:void <init>(boolean) -> <init>
    132:135:void <init>() -> <init>
    140:141:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> a
    148:153:void unpark() -> a
androidx.concurrent.futures.CallbackToFutureAdapter -> androidx.concurrent.futures.CallbackToFutureAdapter:
    54:55:void <init>() -> <init>
    66:86:com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver) -> getFuture
androidx.concurrent.futures.CallbackToFutureAdapter$Completer -> androidx.concurrent.futures.CallbackToFutureAdapter$Completer:
    androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture future -> b
    java.lang.Object tag -> a
    androidx.concurrent.futures.ResolvableFuture cancellationFuture -> c
    boolean attemptedSetting -> d
    200:201:void <init>() -> <init>
    279:282:void fireCancellationListeners() -> a
    272:276:void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor) -> addCancellationListener
    288:291:void setCompletedNormally() -> b
    298:318:void finalize() -> finalize
    213:219:boolean set(java.lang.Object) -> set
    251:258:boolean setCancelled() -> setCancelled
    233:239:boolean setException(java.lang.Throwable) -> setException
androidx.concurrent.futures.CallbackToFutureAdapter$FutureGarbageCollectedException -> androidx.concurrent.futures.CallbackToFutureAdapter$a:
    323:324:void <init>(java.lang.String) -> <init>
    328:328:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture -> androidx.concurrent.futures.CallbackToFutureAdapter$b:
    androidx.concurrent.futures.AbstractResolvableFuture delegate -> b
    java.lang.ref.WeakReference completerWeakReference -> a
    109:111:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer) -> <init>
    140:140:boolean cancelWithoutNotifyingCompleter(boolean) -> a
    146:146:boolean set(java.lang.Object) -> a
    150:150:boolean setException(java.lang.Throwable) -> a
    176:177:void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    130:136:boolean cancel(boolean) -> cancel
    165:165:java.lang.Object get() -> get
    171:171:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    155:155:boolean isCancelled() -> isCancelled
    160:160:boolean isDone() -> isDone
    181:181:java.lang.String toString() -> toString
androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1 -> androidx.concurrent.futures.CallbackToFutureAdapter$b$a:
    androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture this$0 -> h
    113:113:void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture) -> <init>
    117:121:java.lang.String pendingToString() -> pendingToString
androidx.concurrent.futures.DirectExecutor -> o3:
    androidx.concurrent.futures.DirectExecutor[] $VALUES -> b
    androidx.concurrent.futures.DirectExecutor INSTANCE -> a
    26:25:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.String,int) -> <init>
    30:31:void execute(java.lang.Runnable) -> execute
    35:35:java.lang.String toString() -> toString
    25:25:androidx.concurrent.futures.DirectExecutor valueOf(java.lang.String) -> valueOf
    25:25:androidx.concurrent.futures.DirectExecutor[] values() -> values
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.ResolvableFuture:
    60:61:void <init>() -> <init>
    42:42:androidx.concurrent.futures.ResolvableFuture create() -> create
    47:47:boolean set(java.lang.Object) -> set
    52:52:boolean setException(java.lang.Throwable) -> setException
    57:57:boolean setFuture(com.google.common.util.concurrent.ListenableFuture) -> setFuture
androidx.constraintlayout.solver.ArrayLinkedVariables -> androidx.constraintlayout.solver.ArrayLinkedVariables:
    int[] mArrayIndices -> f
    int[] mArrayNextIndices -> g
    androidx.constraintlayout.solver.ArrayRow mRow -> b
    int mLast -> j
    androidx.constraintlayout.solver.SolverVariable candidate -> e
    androidx.constraintlayout.solver.Cache mCache -> c
    boolean mDidFillOnce -> k
    float[] mArrayValues -> h
    int mHead -> i
    int ROW_SIZE -> d
    int currentSize -> a
    100:108:void <init>(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.Cache) -> <init>
    225:335:void add(androidx.constraintlayout.solver.SolverVariable,float,boolean) -> a
    408:419:boolean containsKey(androidx.constraintlayout.solver.SolverVariable) -> a
    443:449:void invert() -> a
    458:464:void divideByAmount(float) -> a
    506:570:androidx.constraintlayout.solver.SolverVariable chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    583:614:void updateFromRow(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow,boolean) -> a
    626:660:void updateFromSystem(androidx.constraintlayout.solver.ArrayRow,androidx.constraintlayout.solver.ArrayRow[]) -> a
    691:714:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(boolean[],androidx.constraintlayout.solver.SolverVariable) -> a
    724:732:androidx.constraintlayout.solver.SolverVariable getVariable(int) -> a
    491:491:boolean isNew(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.LinearSystem) -> b
    742:750:float getVariableValue(int) -> b
    772:775:int sizeInBytes() -> b
    385:399:void clear() -> clear
    779:789:void display() -> display
    759:767:float get(androidx.constraintlayout.solver.SolverVariable) -> get
    117:213:void put(androidx.constraintlayout.solver.SolverVariable,float) -> put
    345:378:float remove(androidx.constraintlayout.solver.SolverVariable,boolean) -> remove
    798:807:java.lang.String toString() -> toString
androidx.constraintlayout.solver.ArrayRow -> androidx.constraintlayout.solver.ArrayRow:
    androidx.constraintlayout.solver.SolverVariable variable -> a
    float constantValue -> b
    boolean used -> c
    boolean isSimpleDefinition -> d
    33:35:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    110:110:boolean hasVariable(androidx.constraintlayout.solver.SolverVariable) -> a
    153:154:androidx.constraintlayout.solver.ArrayRow addSingleError(androidx.constraintlayout.solver.SolverVariable,int) -> a
    278:320:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> a
    331:334:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> a
    391:396:void ensurePositiveConstant() -> a
    407:418:boolean chooseSubject(androidx.constraintlayout.solver.LinearSystem) -> a
    324:326:androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int) -> addError
    480:493:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
    38:38:boolean hasKeyVariable() -> b
    114:118:androidx.constraintlayout.solver.ArrayRow createRowDefinition(androidx.constraintlayout.solver.SolverVariable,int) -> b
    422:422:androidx.constraintlayout.solver.SolverVariable pickPivot(androidx.constraintlayout.solver.SolverVariable) -> b
    378:386:int sizeInBytes() -> c
    426:439:void pivot(androidx.constraintlayout.solver.SolverVariable) -> c
    455:458:void clear() -> clear
    351:355:androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowDimensionRatio
    251:273:androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEqualDimension
    215:243:androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable) -> createRowEqualMatchDimensions
    122:129:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    133:149:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowEquals
    160:178:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowGreaterThan
    182:184:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable) -> createRowGreaterThan
    189:207:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int) -> createRowLowerThan
    369:374:androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float) -> createRowWithAngle
    50:99:java.lang.String toReadableString() -> d
    497:497:androidx.constraintlayout.solver.SolverVariable getKey() -> getKey
    450:450:androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> getPivotCandidate
    466:476:void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row) -> initFromRow
    445:445:boolean isEmpty() -> isEmpty
    103:107:void reset() -> reset
    46:46:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Cache -> androidx.constraintlayout.solver.Cache:
    androidx.constraintlayout.solver.Pools$Pool solverVariablePool -> b
    androidx.constraintlayout.solver.Pools$Pool arrayRowPool -> a
    androidx.constraintlayout.solver.SolverVariable[] mIndexedVariables -> c
    21:24:void <init>() -> <init>
androidx.constraintlayout.solver.GoalRow -> androidx.constraintlayout.solver.GoalRow:
    22:23:void <init>(androidx.constraintlayout.solver.Cache) -> <init>
    27:31:void addError(androidx.constraintlayout.solver.SolverVariable) -> addError
androidx.constraintlayout.solver.LinearSystem -> androidx.constraintlayout.solver.LinearSystem:
    int POOL_SIZE -> o
    int mPoolVariablesCount -> m
    int mMaxRows -> j
    int mNumColumns -> h
    int mNumRows -> i
    java.util.HashMap mVariables -> b
    int TABLE_SIZE -> d
    int mMaxColumns -> e
    androidx.constraintlayout.solver.LinearSystem$Row mGoal -> c
    int mVariablesID -> a
    androidx.constraintlayout.solver.ArrayRow[] mRows -> f
    boolean[] mAlreadyTestedCandidates -> g
    androidx.constraintlayout.solver.SolverVariable[] mPoolVariables -> l
    androidx.constraintlayout.solver.LinearSystem$Row mTempGoal -> n
    androidx.constraintlayout.solver.Cache mCache -> k
    37:37:void <clinit>() -> <clinit>
    78:84:void <init>() -> <init>
    241:242:void addError(androidx.constraintlayout.solver.ArrayRow) -> a
    245:246:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int) -> a
    249:260:void addSingleError(androidx.constraintlayout.solver.ArrayRow,int,int) -> a
    305:318:androidx.constraintlayout.solver.SolverVariable acquireSolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> a
    416:441:void minimizeGoal(androidx.constraintlayout.solver.LinearSystem$Row) -> a
    847:851:void computeValues() -> a
    1329:1347:void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> addCenterPoint
    1098:1104:void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addCentering
    461:535:void addConstraint(androidx.constraintlayout.solver.ArrayRow) -> addConstraint
    1128:1134:androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1146:1166:void addEquality(androidx.constraintlayout.solver.SolverVariable,int) -> addEquality
    1178:1195:void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int) -> addEquality
    1029:1039:void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> addGreaterBarrier
    1003:1012:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addGreaterThan
    1018:1023:void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int) -> addGreaterThan
    1067:1077:void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean) -> addLowerBarrier
    1052:1061:void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int) -> addLowerThan
    1110:1116:void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int) -> addRatio
    538:550:void addRow(androidx.constraintlayout.solver.ArrayRow) -> b
    559:691:int optimize(androidx.constraintlayout.solver.LinearSystem$Row,boolean) -> b
    941:952:void displaySolverVariables() -> b
    448:454:void updateRowFromVariables(androidx.constraintlayout.solver.ArrayRow) -> c
    700:843:int enforceBFS(androidx.constraintlayout.solver.LinearSystem$Row) -> c
    283:296:androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String) -> createErrorVariable
    226:237:androidx.constraintlayout.solver.SolverVariable createExtraVariable() -> createExtraVariable
    170:196:androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object) -> createObjectVariable
    200:207:androidx.constraintlayout.solver.ArrayRow createRow() -> createRow
    1297:1315:androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> createRowCentering
    1230:1234:androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean) -> createRowDimensionPercent
    1201:1215:androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> createRowEquals
    1242:1260:androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> createRowGreaterThan
    1268:1286:androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean) -> createRowLowerThan
    211:222:androidx.constraintlayout.solver.SolverVariable createSlackVariable() -> createSlackVariable
    112:123:void increaseTableSize() -> d
    884:894:void displayVariablesReadableRows() -> displayVariablesReadableRows
    129:136:void releaseRows() -> e
    87:88:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> fillMetrics
    967:967:androidx.constraintlayout.solver.Cache getCache() -> getCache
    898:904:int getMemoryUsed() -> getMemoryUsed
    91:91:androidx.constraintlayout.solver.Metrics getMetrics() -> getMetrics
    908:908:int getNumEquations() -> getNumEquations
    910:910:int getNumVariables() -> getNumVariables
    344:348:int getObjectVariableValue(java.lang.Object) -> getObjectVariableValue
    377:409:void minimize() -> minimize
    142:163:void reset() -> reset
androidx.constraintlayout.solver.LinearSystem$Row -> androidx.constraintlayout.solver.LinearSystem$a:
androidx.constraintlayout.solver.Metrics -> androidx.constraintlayout.solver.Metrics:
    25:54:void <init>() -> <init>
    91:121:void reset() -> reset
    58:58:java.lang.String toString() -> toString
androidx.constraintlayout.solver.Pools$Pool -> p3:
androidx.constraintlayout.solver.Pools$SimplePool -> q3:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    96:98:void <init>(int) -> <init>
    106:113:java.lang.Object acquire() -> a
    123:128:boolean release(java.lang.Object) -> a
    133:148:void releaseAll(java.lang.Object[],int) -> a
androidx.constraintlayout.solver.SolverVariable -> androidx.constraintlayout.solver.SolverVariable:
    androidx.constraintlayout.solver.SolverVariable$Type mType -> d
    int mClientEquationsCount -> f
    int uniqueErrorId -> g
    java.lang.String mName -> a
    float[] strengthVector -> c
    int definitionId -> b
    androidx.constraintlayout.solver.ArrayRow[] mClientEquations -> e
    41:45:void <clinit>() -> <clinit>
    114:117:void <init>(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type) -> <init>
    119:124:void <init>(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> <init>
    89:90:void increaseErrorId() -> a
    163:173:void addToRow(androidx.constraintlayout.solver.ArrayRow) -> addToRow
    213:213:java.lang.String getName() -> getName
    176:186:void removeFromRow(androidx.constraintlayout.solver.ArrayRow) -> removeFromRow
    197:205:void reset() -> reset
    216:216:void setName(java.lang.String) -> setName
    218:222:void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String) -> setType
    229:235:java.lang.String toString() -> toString
    189:194:void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow) -> updateReferencesWithNewDefinition
androidx.constraintlayout.solver.SolverVariable$Type -> androidx.constraintlayout.solver.SolverVariable$Type:
    androidx.constraintlayout.solver.SolverVariable$Type[] $VALUES -> a
    69:65:void <clinit>() -> <clinit>
    65:65:void <init>(java.lang.String,int) -> <init>
    65:65:androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String) -> valueOf
    65:65:androidx.constraintlayout.solver.SolverVariable$Type[] values() -> values
androidx.constraintlayout.solver.widgets.Analyzer -> androidx.constraintlayout.solver.widgets.Analyzer:
    32:33:void <init>() -> <init>
    110:112:boolean determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.List,boolean) -> a
    128:223:boolean traverse(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,java.util.List,boolean) -> a
    260:263:void invalidate(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup) -> a
    274:287:int getMaxDimension(androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup,int) -> a
    304:413:int getMaxDimensionTraversal(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean,int) -> a
    417:422:void setConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> a
    431:433:void singleGroup(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> a
    467:495:void updateSizeDependentWidgets(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
    505:522:int getParentBiasOffset(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    532:548:int resolveDimensionRatio(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    45:100:void determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer) -> determineGroups
    444:454:void setPosition(java.util.List,int,int) -> setPosition
androidx.constraintlayout.solver.widgets.Barrier -> androidx.constraintlayout.solver.widgets.Barrier:
    java.util.ArrayList mNodes -> a0
    int mBarrierType -> Z
    boolean mAllowsGoneWidget -> b0
    28:38:void <init>() -> <init>
    209:219:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    42:42:boolean allowedInBarrier() -> allowedInBarrier
    51:51:boolean allowsGoneWidget() -> allowsGoneWidget
    65:125:void analyze(int) -> analyze
    55:57:void resetResolutionNodes() -> resetResolutionNodes
    132:199:void resolve() -> resolve
    49:49:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    46:47:void setBarrierType(int) -> setBarrierType
androidx.constraintlayout.solver.widgets.Chain -> r3:
    46:72:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int) -> a
    86:443:void applyChainConstraints(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
androidx.constraintlayout.solver.widgets.ChainHead -> androidx.constraintlayout.solver.widgets.ChainHead:
    boolean mIsRtl -> b
    boolean mDefined -> c
    int mOrientation -> a
    58:62:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean) -> <init>
    72:72:boolean isMatchConstraintEqualityCandidate(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    79:160:void defineChainProperties() -> a
    195:199:void define() -> define
    163:163:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst() -> getFirst
    183:183:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget() -> getFirstMatchConstraintWidget
    167:167:androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget() -> getFirstVisibleWidget
    179:179:androidx.constraintlayout.solver.widgets.ConstraintWidget getHead() -> getHead
    171:171:androidx.constraintlayout.solver.widgets.ConstraintWidget getLast() -> getLast
    187:187:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget() -> getLastMatchConstraintWidget
    175:175:androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget() -> getLastVisibleWidget
    191:191:float getTotalWeight() -> getTotalWeight
androidx.constraintlayout.solver.widgets.ConstraintAnchor -> androidx.constraintlayout.solver.widgets.ConstraintAnchor:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type mType -> c
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrength -> f
    androidx.constraintlayout.solver.widgets.ResolutionAnchor mResolutionAnchor -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType mConnectionType -> g
    int mConnectionCreator -> h
    androidx.constraintlayout.solver.SolverVariable mSolverVariable -> i
    androidx.constraintlayout.solver.widgets.ConstraintWidget mOwner -> b
    int mGoneMargin -> e
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> d
    86:89:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> <init>
    588:605:boolean isConnectionToMe(androidx.constraintlayout.solver.widgets.ConstraintWidget,java.util.HashSet) -> a
    194:194:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    210:230:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int,boolean) -> connect
    241:241:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int) -> connect
    251:251:boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    163:163:int getConnectionCreator() -> getConnectionCreator
    150:150:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType() -> getConnectionType
    125:132:int getMargin() -> getMargin
    613:631:androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite() -> getOpposite
    112:112:androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner() -> getOwner
    457:465:int getPriorityLevel() -> getPriorityLevel
    58:58:androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode() -> getResolutionNode
    435:443:int getSnapPriorityLevel() -> getSnapPriorityLevel
    95:95:androidx.constraintlayout.solver.SolverVariable getSolverVariable() -> getSolverVariable
    138:138:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength() -> getStrength
    144:144:androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget() -> getTarget
    118:118:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType() -> getType
    259:259:boolean isConnected() -> isConnected
    553:553:boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isConnectionAllowed
    566:577:boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> isConnectionAllowed
    316:327:boolean isSideAnchor() -> isSideAnchor
    340:346:boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isSimilarDimensionConnection
    479:531:boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isSnapCompatibleWith
    268:282:boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> isValidConnection
    401:406:boolean isVerticalAnchor() -> isVerticalAnchor
    175:182:void reset() -> reset
    101:106:void resetSolverVariable(androidx.constraintlayout.solver.Cache) -> resetSolverVariable
    169:169:void setConnectionCreator(int) -> setConnectionCreator
    157:158:void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType) -> setConnectionType
    390:393:void setGoneMargin(int) -> setGoneMargin
    380:383:void setMargin(int) -> setMargin
    370:373:void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength) -> setStrength
    424:424:java.lang.String toString() -> toString
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] $VALUES -> a
    46:46:void <clinit>() -> <clinit>
    46:46:void <init>(java.lang.String,int) -> <init>
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String) -> valueOf
    46:46:androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] $VALUES -> a
    41:41:void <clinit>() -> <clinit>
    41:41:void <init>(java.lang.String,int) -> <init>
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String) -> valueOf
    41:41:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type -> androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] $VALUES -> a
    36:36:void <clinit>() -> <clinit>
    36:36:void <init>(java.lang.String,int) -> <init>
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String) -> valueOf
    36:36:androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout -> androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout:
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment mAlignment -> m0
    35:35:void <init>() -> <init>
    45:46:void <init>(int,int,int,int) -> <init>
    54:55:void <init>(int,int) -> <init>
    63:92:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment -> androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment:
    androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] $VALUES -> a
    27:26:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    26:26:androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment valueOf(java.lang.String) -> valueOf
    26:26:androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintTableLayout -> androidx.constraintlayout.solver.widgets.ConstraintTableLayout:
    java.util.ArrayList mHorizontalSlices -> r0
    java.util.ArrayList mVerticalSlices -> q0
    java.util.ArrayList mHorizontalGuidelines -> t0
    java.util.ArrayList mVerticalGuidelines -> s0
    boolean mVerticalGrowth -> m0
    int mPadding -> p0
    int mNumRows -> o0
    androidx.constraintlayout.solver.LinearSystem system -> u0
    int mNumCols -> n0
    66:67:void <init>() -> <init>
    78:79:void <init>(int,int,int,int) -> <init>
    88:89:void <init>(int,int) -> <init>
    316:344:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    481:540:void setChildrenConnections() -> c
    580:588:void computeGuidelinesPercentPositions() -> computeGuidelinesPercentPositions
    252:265:void cycleColumnAlignment(int) -> cycleColumnAlignment
    453:475:void setHorizontalSlices() -> d
    424:446:void setVerticalSlices() -> e
    406:417:void updateDebugSolverNames() -> f
    158:168:java.lang.String getColumnAlignmentRepresentation(int) -> getColumnAlignmentRepresentation
    134:148:java.lang.String getColumnsAlignmentRepresentation() -> getColumnsAlignmentRepresentation
    306:306:java.util.ArrayList getHorizontalGuidelines() -> getHorizontalGuidelines
    116:116:int getNumCols() -> getNumCols
    107:107:int getNumRows() -> getNumRows
    125:125:int getPadding() -> getPadding
    98:98:java.lang.String getType() -> getType
    296:296:java.util.ArrayList getVerticalGuidelines() -> getVerticalGuidelines
    573:573:boolean handlesInternalConstraints() -> handlesInternalConstraints
    208:208:boolean isVerticalGrowth() -> isVerticalGrowth
    239:244:void setColumnAlignment(int,int) -> setColumnAlignment
    273:287:void setColumnAlignment(java.lang.String) -> setColumnAlignment
    398:401:void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String) -> setDebugSolverName
    179:184:void setNumCols(int) -> setNumCols
    194:199:void setNumRows(int) -> setNumRows
    226:229:void setPadding(int) -> setPadding
    351:388:void setTableDimensions() -> setTableDimensions
    217:218:void setVerticalGrowth(boolean) -> setVerticalGrowth
    549:564:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$HorizontalSlice -> androidx.constraintlayout.solver.widgets.ConstraintTableLayout$a:
    androidx.constraintlayout.solver.widgets.ConstraintWidget top -> a
    androidx.constraintlayout.solver.widgets.ConstraintWidget bottom -> b
    36:36:void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout) -> <init>
androidx.constraintlayout.solver.widgets.ConstraintTableLayout$VerticalSlice -> androidx.constraintlayout.solver.widgets.ConstraintTableLayout$b:
    androidx.constraintlayout.solver.widgets.ConstraintWidget left -> a
    androidx.constraintlayout.solver.widgets.ConstraintWidget right -> b
    int alignment -> c
    45:48:void <init>(androidx.constraintlayout.solver.widgets.ConstraintTableLayout) -> <init>
androidx.constraintlayout.solver.widgets.ConstraintWidget -> androidx.constraintlayout.solver.widgets.ConstraintWidget:
    boolean mIsHeightWrapContent -> m
    float mMatchConstraintPercentHeight -> k
    int mWrapWidth -> K
    int mDrawY -> G
    int mMatchConstraintDefaultHeight -> d
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBaseline -> w
    int mHeight -> C
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mLeft -> s
    boolean mOptimizerMeasurable -> T
    int mVerticalChainStyle -> X
    float mResolvedDimensionRatio -> o
    float mVerticalBiasPercent -> N
    int mContainerItemSkip -> P
    int mWrapHeight -> L
    float mMatchConstraintPercentWidth -> h
    int mDrawWidth -> H
    int mMatchConstraintMinHeight -> i
    boolean mOptimizerMeasured -> U
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterX -> x
    int mRelX -> D
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTop -> t
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionWidth -> a
    int[] mResolvedMatchConstraintDefault -> e
    int[] mMaxDimension -> q
    int mVisibility -> Q
    int mResolvedDimensionRatioSide -> n
    int mMatchConstraintMaxHeight -> j
    androidx.constraintlayout.solver.widgets.ConstraintWidget mParent -> A
    androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup mBelongingGroup -> p
    int mDrawHeight -> I
    int mMatchConstraintMinWidth -> f
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenterY -> y
    boolean mGroupsToSolver -> V
    int mRelY -> E
    java.lang.String mType -> S
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mRight -> u
    java.lang.Object mCompanionWidget -> O
    float[] mWeight -> Y
    androidx.constraintlayout.solver.widgets.ResolutionDimension mResolutionHeight -> b
    int mBaselineDistance -> J
    boolean mIsWidthWrapContent -> l
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mCenter -> z
    int mDrawX -> F
    int mMatchConstraintMaxWidth -> g
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mBottom -> v
    int mWidth -> B
    int mMatchConstraintDefaultWidth -> c
    java.lang.String mDebugName -> R
    int mHorizontalChainStyle -> W
    float mCircleConstraintAngle -> r
    float mHorizontalBiasPercent -> M
    209:209:void <clinit>() -> <clinit>
    407:409:void <init>() -> <init>
    419:426:void <init>(int,int,int,int) -> <init>
    435:436:void <init>(int,int) -> <init>
    456:464:void addAnchors() -> a
    1548:1553:int getRelativePositioning(int) -> a
    1564:1569:void setRelativePositioning(int,int) -> a
    2612:2753:void applyConstraints(androidx.constraintlayout.solver.LinearSystem,boolean,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour,boolean,androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,int,int,float,boolean,boolean,int,int,int,float,boolean) -> a
    2337:2522:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    1677:1677:boolean allowedInBarrier() -> allowedInBarrier
    353:354:void analyze(int) -> analyze
    2313:2314:boolean isChainHead(int) -> b
    1719:1720:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int) -> connect
    1723:1724:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int) -> connect
    1728:1731:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    1744:1746:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> connect
    1759:1760:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> connect
    1776:1778:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength) -> connect
    1794:1838:void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int) -> connect
    605:608:void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int) -> connectCircularConstraint
    1691:1691:void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> connectedTo
    700:707:void createObjectVariables(androidx.constraintlayout.solver.LinearSystem) -> createObjectVariables
    2115:2123:void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> disconnectUnlockedWidget
    2100:2107:void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> disconnectWidget
    1146:1154:void forceUpdateDrawPosition() -> forceUpdateDrawPosition
    2132:2134:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    1050:1050:java.util.ArrayList getAnchors() -> getAnchors
    1031:1031:int getBaselineDistance() -> getBaselineDistance
    1007:1012:float getBiasPercent(int) -> getBiasPercent
    976:976:int getBottom() -> getBottom
    1041:1041:java.lang.Object getCompanionWidget() -> getCompanionWidget
    1612:1612:int getContainerItemSkip() -> getContainerItemSkip
    652:652:java.lang.String getDebugName() -> getDebugName
    2188:2193:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int) -> getDimensionBehaviour
    1359:1359:float getDimensionRatio() -> getDimensionRatio
    1368:1368:int getDimensionRatioSide() -> getDimensionRatioSide
    893:893:int getDrawBottom() -> getDrawBottom
    884:884:int getDrawHeight() -> getDrawHeight
    902:902:int getDrawRight() -> getDrawRight
    880:880:int getDrawWidth() -> getDrawWidth
    867:867:int getDrawX() -> getDrawX
    876:876:int getDrawY() -> getDrawY
    830:833:int getHeight() -> getHeight
    986:986:float getHorizontalBiasPercent() -> getHorizontalBiasPercent
    2240:2260:androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget() -> getHorizontalChainControlWidget
    1650:1650:int getHorizontalChainStyle() -> getHorizontalChainStyle
    2169:2169:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour() -> getHorizontalDimensionBehaviour
    745:745:int getInternalDrawBottom() -> getInternalDrawBottom
    741:741:int getInternalDrawRight() -> getInternalDrawRight
    949:949:int getLeft() -> getLeft
    852:857:int getLength(int) -> getLength
    101:101:int getMaxHeight() -> getMaxHeight
    105:105:int getMaxWidth() -> getMaxWidth
    940:940:int getMinHeight() -> getMinHeight
    931:931:int getMinWidth() -> getMinWidth
    798:812:int getOptimizerWrapHeight() -> getOptimizerWrapHeight
    780:794:int getOptimizerWrapWidth() -> getOptimizerWrapWidth
    555:555:androidx.constraintlayout.solver.widgets.ConstraintWidget getParent() -> getParent
    394:397:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionHeight() -> getResolutionHeight
    383:386:androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionWidth() -> getResolutionWidth
    967:967:int getRight() -> getRight
    539:546:androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer() -> getRootWidgetContainer
    912:912:int getRootX() -> getRootX
    922:922:int getRootY() -> getRootY
    958:958:int getTop() -> getTop
    616:616:java.lang.String getType() -> getType
    996:996:float getVerticalBiasPercent() -> getVerticalBiasPercent
    2283:2303:androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget() -> getVerticalChainControlWidget
    1670:1670:int getVerticalChainStyle() -> getVerticalChainStyle
    2178:2178:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour() -> getVerticalDimensionBehaviour
    643:643:int getVisibility() -> getVisibility
    773:776:int getWidth() -> getWidth
    842:842:int getWrapHeight() -> getWrapHeight
    821:821:int getWrapWidth() -> getWrapWidth
    755:755:int getX() -> getX
    764:764:int getY() -> getY
    512:529:boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> hasAncestor
    1022:1022:boolean hasBaseline() -> hasBaseline
    1704:1708:void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int) -> immediateConnect
    369:375:boolean isFullyResolved() -> isFullyResolved
    595:595:boolean isHeightWrapContent() -> isHeightWrapContent
    2227:2231:boolean isInHorizontalChain() -> isInHorizontalChain
    2270:2274:boolean isInVerticalChain() -> isInVerticalChain
    492:502:boolean isInsideConstraintLayout() -> isInsideConstraintLayout
    472:472:boolean isRoot() -> isRoot
    482:482:boolean isRootContainer() -> isRootContainer
    125:125:boolean isSpreadHeight() -> isSpreadHeight
    117:117:boolean isSpreadWidth() -> isSpreadWidth
    580:580:boolean isWidthWrapContent() -> isWidthWrapContent
    257:324:void reset() -> reset
    1969:1989:void resetAllConstraints() -> resetAllConstraints
    1998:2051:void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> resetAnchor
    2057:2068:void resetAnchors() -> resetAnchors
    2074:2092:void resetAnchors(int) -> resetAnchors
    334:337:void resetResolutionNodes() -> resetResolutionNodes
    442:450:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    361:361:void resolve() -> resolve
    1577:1578:void setBaselineDistance(int) -> setBaselineDistance
    1587:1588:void setCompanionWidget(java.lang.Object) -> setCompanionWidget
    1599:1604:void setContainerItemSkip(int) -> setContainerItemSkip
    659:660:void setDebugName(java.lang.String) -> setDebugName
    679:692:void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String) -> setDebugSolverName
    1442:1450:void setDimension(int,int) -> setDimension
    1287:1289:void setDimensionRatio(java.lang.String) -> setDimensionRatio
    1349:1351:void setDimensionRatio(float,int) -> setDimensionRatio
    1204:1205:void setDrawHeight(int) -> setDrawHeight
    1163:1167:void setDrawOrigin(int,int) -> setDrawOrigin
    1195:1196:void setDrawWidth(int) -> setDrawWidth
    1175:1177:void setDrawX(int) -> setDrawX
    1185:1187:void setDrawY(int) -> setDrawY
    1461:1495:void setFrame(int,int,int,int) -> setFrame
    1505:1511:void setFrame(int,int,int) -> setFrame
    1100:1124:void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int) -> setGoneMargin
    1225:1229:void setHeight(int) -> setHeight
    588:589:void setHeightWrapContent(boolean) -> setHeightWrapContent
    1378:1379:void setHorizontalBiasPercent(float) -> setHorizontalBiasPercent
    1640:1641:void setHorizontalChainStyle(int) -> setHorizontalChainStyle
    1520:1525:void setHorizontalDimension(int,int) -> setHorizontalDimension
    2203:2207:void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setHorizontalDimensionBehaviour
    1254:1261:void setHorizontalMatchStyle(int,int,int,float) -> setHorizontalMatchStyle
    1621:1622:void setHorizontalWeight(float) -> setHorizontalWeight
    1238:1243:void setLength(int,int) -> setLength
    113:114:void setMaxHeight(int) -> setMaxHeight
    109:110:void setMaxWidth(int) -> setMaxWidth
    1410:1415:void setMinHeight(int) -> setMinHeight
    1397:1402:void setMinWidth(int) -> setMinWidth
    1089:1091:void setOffset(int,int) -> setOffset
    1078:1080:void setOrigin(int,int) -> setOrigin
    564:565:void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> setParent
    625:626:void setType(java.lang.String) -> setType
    1388:1389:void setVerticalBiasPercent(float) -> setVerticalBiasPercent
    1660:1661:void setVerticalChainStyle(int) -> setVerticalChainStyle
    1534:1539:void setVerticalDimension(int,int) -> setVerticalDimension
    2215:2219:void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour) -> setVerticalDimensionBehaviour
    1272:1279:void setVerticalMatchStyle(int,int,int,float) -> setVerticalMatchStyle
    1630:1631:void setVerticalWeight(float) -> setVerticalWeight
    634:635:void setVisibility(int) -> setVisibility
    1213:1217:void setWidth(int) -> setWidth
    572:573:void setWidthWrapContent(boolean) -> setWidthWrapContent
    1432:1433:void setWrapHeight(int) -> setWrapHeight
    1423:1424:void setWrapWidth(int) -> setWrapWidth
    1059:1060:void setX(int) -> setX
    1068:1069:void setY(int) -> setY
    2534:2588:void setupDimensionRatio(boolean,boolean,boolean,boolean) -> setupDimensionRatio
    716:716:java.lang.String toString() -> toString
    1132:1140:void updateDrawPosition() -> updateDrawPosition
    2865:2882:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
    343:346:void updateResolutionNodes() -> updateResolutionNodes
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment -> androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment:
    androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] $VALUES -> a
    136:135:void <clinit>() -> <clinit>
    135:135:void <init>(java.lang.String,int) -> <init>
    135:135:androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment valueOf(java.lang.String) -> valueOf
    135:135:androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour -> androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour:
    androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] $VALUES -> a
    143:142:void <clinit>() -> <clinit>
    142:142:void <init>(java.lang.String,int) -> <init>
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String) -> valueOf
    142:142:androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values() -> values
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer -> androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer:
    int mPaddingRight -> d0
    int mPaddingTop -> c0
    int mPaddingLeft -> b0
    int mVerticalChainsSize -> g0
    androidx.constraintlayout.solver.widgets.Snapshot mSnapshot -> a0
    int mHorizontalChainsSize -> f0
    int mPaddingBottom -> e0
    int mOptimizationLevel -> j0
    androidx.constraintlayout.solver.widgets.ChainHead[] mHorizontalChainsArray -> i0
    boolean mIsRtl -> Z
    androidx.constraintlayout.solver.widgets.ChainHead[] mVerticalChainsArray -> h0
    boolean mHeightMeasuredTooSmall -> l0
    boolean mWidthMeasuredTooSmall -> k0
    82:83:void <init>() -> <init>
    94:95:void <init>(int,int,int,int) -> <init>
    104:105:void <init>(int,int) -> <init>
    729:735:void addChain(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    744:750:void addHorizontalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    180:213:boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem) -> addChildrenToSolver
    280:285:void analyze(int) -> analyze
    718:720:void resetChains() -> b
    759:765:void addVerticalChain(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
    44:45:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> fillMetrics
    693:703:java.util.ArrayList getHorizontalGuidelines() -> getHorizontalGuidelines
    122:122:int getOptimizationLevel() -> getOptimizationLevel
    707:707:androidx.constraintlayout.solver.LinearSystem getSystem() -> getSystem
    141:141:java.lang.String getType() -> getType
    674:684:java.util.ArrayList getVerticalGuidelines() -> getVerticalGuidelines
    777:777:java.util.List getWidgetGroups() -> getWidgetGroups
    661:661:boolean handlesInternalConstraints() -> handlesInternalConstraints
    164:164:boolean isHeightMeasuredTooSmall() -> isHeightMeasuredTooSmall
    267:267:boolean isRtl() -> isRtl
    159:159:boolean isWidthMeasuredTooSmall() -> isWidthMeasuredTooSmall
    298:570:void layout() -> layout
    630:653:void optimize() -> optimize
    131:131:boolean optimizeFor(int) -> optimizeFor
    604:610:void optimizeForDimensions(int,int) -> optimizeForDimensions
    613:618:void optimizeReset() -> optimizeReset
    573:575:void preOptimize() -> preOptimize
    146:154:void reset() -> reset
    590:601:void resetGraph() -> resetGraph
    113:114:void setOptimizationLevel(int) -> setOptimizationLevel
    248:252:void setPadding(int,int,int,int) -> setPadding
    259:260:void setRtl(boolean) -> setRtl
    578:587:void solveGraph() -> solveGraph
    222:237:void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[]) -> updateChildrenFromSolver
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup -> androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup:
    java.util.List mStartVerticalWidgets -> d
    java.util.List mStartHorizontalWidgets -> c
    java.util.HashSet mWidgetsToSetVertical -> f
    java.util.List mUnresolvedWidgets -> h
    java.util.HashSet mWidgetsToSetHorizontal -> e
    java.util.List mWidgetsToSolve -> g
    int mGroupHeight -> b
    int mGroupWidth -> a
    55:57:void <init>(java.util.List) -> <init>
    59:62:void <init>(java.util.List,boolean) -> <init>
    74:79:java.util.Set getWidgetsToSet(int) -> a
    83:88:void addWidgetsToSet(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    99:112:java.util.List getWidgetsToSolve() -> a
    122:152:void getWidgetsToSolveTraversal(java.util.ArrayList,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    173:244:void updateResolvedDimension(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    158:165:void updateUnresolvedWidgets() -> b
    65:70:java.util.List getStartWidgets(int) -> getStartWidgets
androidx.constraintlayout.solver.widgets.Guideline -> androidx.constraintlayout.solver.widgets.Guideline:
    int mHeadSize -> d0
    androidx.constraintlayout.solver.widgets.Rectangle mHead -> c0
    int mOrientation -> a0
    boolean mIsPositionRelaxed -> b0
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> Z
    50:57:void <init>() -> <init>
    250:285:void addToSolver(androidx.constraintlayout.solver.LinearSystem) -> addToSolver
    61:61:boolean allowedInBarrier() -> allowedInBarrier
    213:246:void analyze(int) -> analyze
    340:345:void inferRelativeBeginPosition() -> b
    348:353:void inferRelativeEndPosition() -> c
    356:366:void cyclePosition() -> cyclePosition
    332:337:void inferRelativePercentPosition() -> d
    107:107:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor() -> getAnchor
    137:159:androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type) -> getAnchor
    164:164:java.util.ArrayList getAnchors() -> getAnchors
    78:85:androidx.constraintlayout.solver.widgets.Rectangle getHead() -> getHead
    121:121:int getOrientation() -> getOrientation
    200:200:int getRelativeBegin() -> getRelativeBegin
    65:74:int getRelativeBehaviour() -> getRelativeBehaviour
    204:204:int getRelativeEnd() -> getRelativeEnd
    196:196:float getRelativePercent() -> getRelativePercent
    117:117:java.lang.String getType() -> getType
    308:329:void setDrawOrigin(int,int) -> setDrawOrigin
    180:185:void setGuideBegin(int) -> setGuideBegin
    188:193:void setGuideEnd(int) -> setGuideEnd
    168:169:void setGuidePercent(int) -> setGuidePercent
    172:177:void setGuidePercent(float) -> setGuidePercent
    125:126:void setMinimumPosition(int) -> setMinimumPosition
    89:104:void setOrientation(int) -> setOrientation
    129:133:void setPositionRelaxed(boolean) -> setPositionRelaxed
    289:304:void updateFromSolver(androidx.constraintlayout.solver.LinearSystem) -> updateFromSolver
androidx.constraintlayout.solver.widgets.Helper -> androidx.constraintlayout.solver.widgets.Helper:
    8:10:void <init>() -> <init>
    18:23:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    29:30:void removeAllIds() -> removeAllIds
androidx.constraintlayout.solver.widgets.Optimizer -> androidx.constraintlayout.solver.widgets.Optimizer:
    boolean[] flags -> a
    44:44:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    57:99:void checkMatchParent(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    111:134:boolean optimizableMatchConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,int) -> a
    152:367:void analyze(int,androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    383:486:boolean applyChainOptimized(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer,androidx.constraintlayout.solver.LinearSystem,int,int,androidx.constraintlayout.solver.widgets.ChainHead) -> a
    671:685:void setOptimizedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,int) -> a
androidx.constraintlayout.solver.widgets.Rectangle -> androidx.constraintlayout.solver.widgets.Rectangle:
    21:21:void <init>() -> <init>
    41:41:boolean intersects(androidx.constraintlayout.solver.widgets.Rectangle) -> a
    46:46:boolean contains(int,int) -> contains
    50:50:int getCenterX() -> getCenterX
    51:51:int getCenterY() -> getCenterY
    28:32:void setBounds(int,int,int,int) -> setBounds
androidx.constraintlayout.solver.widgets.ResolutionAnchor -> androidx.constraintlayout.solver.widgets.ResolutionAnchor:
    androidx.constraintlayout.solver.widgets.ResolutionDimension oppositeDimension -> l
    int oppositeDimensionMultiplier -> m
    float resolvedOffset -> g
    int dimensionMultiplier -> k
    int type -> h
    float offset -> e
    androidx.constraintlayout.solver.widgets.ResolutionAnchor resolvedTarget -> f
    androidx.constraintlayout.solver.widgets.ResolutionAnchor opposite -> i
    androidx.constraintlayout.solver.widgets.ResolutionAnchor target -> d
    androidx.constraintlayout.solver.widgets.ResolutionDimension dimension -> j
    androidx.constraintlayout.solver.widgets.ConstraintAnchor myAnchor -> c
    51:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    90:101:java.lang.String sType(int) -> a
    304:312:void addResolvedValue(androidx.constraintlayout.solver.LinearSystem) -> a
    262:269:void dependsOn(int,androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> dependsOn
    272:278:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int) -> dependsOn
    281:290:void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> dependsOn
    315:315:float getResolvedValue() -> getResolvedValue
    56:64:void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension) -> remove
    229:242:void reset() -> reset
    79:87:void resolve(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> resolve
    110:221:void resolve() -> resolve
    293:295:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float) -> setOpposite
    298:301:void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension) -> setOpposite
    224:225:void setType(int) -> setType
    68:75:java.lang.String toString() -> toString
    245:259:void update() -> update
androidx.constraintlayout.solver.widgets.ResolutionDimension -> androidx.constraintlayout.solver.widgets.ResolutionDimension:
    float value -> c
    21:23:void <init>() -> <init>
    41:42:void remove() -> remove
    26:28:void reset() -> reset
    31:38:void resolve(int) -> resolve
androidx.constraintlayout.solver.widgets.ResolutionNode -> androidx.constraintlayout.solver.widgets.ResolutionNode:
    java.util.HashSet dependents -> a
    int state -> b
    23:35:void <init>() -> <init>
    38:39:void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode) -> addDependent
    63:73:void didResolve() -> didResolve
    47:51:void invalidate() -> invalidate
    54:60:void invalidateAnchors() -> invalidateAnchors
    76:76:boolean isResolved() -> isResolved
    85:85:void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension) -> remove
    42:44:void reset() -> reset
    81:81:void resolve() -> resolve
androidx.constraintlayout.solver.widgets.Snapshot -> androidx.constraintlayout.solver.widgets.Snapshot:
    int mHeight -> d
    java.util.ArrayList mConnections -> e
    int mY -> b
    int mWidth -> c
    int mX -> a
    91:101:void <init>(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> <init>
    126:134:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> applyTo
    109:118:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> updateFrom
androidx.constraintlayout.solver.widgets.Snapshot$Connection -> androidx.constraintlayout.solver.widgets.Snapshot$a:
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mTarget -> b
    androidx.constraintlayout.solver.widgets.ConstraintAnchor mAnchor -> a
    androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength mStrengh -> d
    int mCreator -> e
    int mMargin -> c
    47:53:void <init>(androidx.constraintlayout.solver.widgets.ConstraintAnchor) -> <init>
    81:83:void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> a
    61:73:void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> b
androidx.constraintlayout.solver.widgets.WidgetContainer -> androidx.constraintlayout.solver.widgets.WidgetContainer:
    35:36:void <init>() -> <init>
    47:48:void <init>(int,int,int,int) -> <init>
    57:58:void <init>(int,int) -> <init>
    72:78:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> add
    86:90:void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[]) -> add
    145:170:androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float) -> findWidget
    183:195:java.util.ArrayList findWidgets(int,int,int,int) -> findWidgets
    205:229:androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList) -> getBounds
    108:108:java.util.ArrayList getChildren() -> getChildren
    117:130:androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer() -> getRootConstraintContainer
    277:288:void layout() -> layout
    98:100:void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget) -> remove
    301:302:void removeAllChildren() -> removeAllChildren
    62:64:void reset() -> reset
    292:298:void resetSolverVariables(androidx.constraintlayout.solver.Cache) -> resetSolverVariables
    245:251:void setOffset(int,int) -> setOffset
    259:271:void updateDrawPosition() -> updateDrawPosition
androidx.constraintlayout.widget.Barrier -> androidx.constraintlayout.widget.Barrier:
    int mIndicatedType -> b
    int mResolvedType -> c
    androidx.constraintlayout.solver.widgets.Barrier mBarrier -> d
    115:117:void <init>(android.content.Context) -> <init>
    120:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:127:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    204:204:boolean allowsGoneWidget() -> allowsGoneWidget
    135:135:int getType() -> getType
    181:197:void init(android.util.AttributeSet) -> init
    200:201:void setAllowsGoneWidget(boolean) -> setAllowsGoneWidget
    144:173:void setType(int) -> setType
androidx.constraintlayout.widget.ConstraintHelper -> androidx.constraintlayout.widget.ConstraintHelper:
    java.lang.String mReferenceIds -> a
    64:67:void <init>(android.content.Context) -> <init>
    70:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    76:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    168:201:void addID(java.lang.String) -> a
    103:103:int[] getReferencedIds() -> getReferencedIds
    85:96:void init(android.util.AttributeSet) -> init
    135:135:void onDraw(android.graphics.Canvas) -> onDraw
    142:147:void onMeasure(int,int) -> onMeasure
    207:219:void setIds(java.lang.String) -> setIds
    111:115:void setReferencedIds(int[]) -> setReferencedIds
    122:127:void setTag(int,java.lang.Object) -> setTag
    253:253:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    261:261:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    229:243:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
    154:162:void validateParams() -> validateParams
androidx.constraintlayout.widget.ConstraintLayout -> androidx.constraintlayout.widget.ConstraintLayout:
    androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer mLayoutWidget -> d
    int mLastMeasureWidth -> n
    int mLastMeasureHeight -> o
    androidx.constraintlayout.widget.ConstraintSet mConstraintSet -> k
    int mConstraintSetId -> l
    boolean mDirtyHierarchy -> i
    int mOptimizationLevel -> j
    java.util.HashMap mDesignIds -> m
    int mMaxHeight -> h
    int mMinHeight -> f
    int mMaxWidth -> g
    int mMinWidth -> e
    java.util.ArrayList mVariableDimensionsWidgets -> c
    java.util.ArrayList mConstraintHelpers -> b
    androidx.constraintlayout.solver.Metrics mMetrics -> p
    android.util.SparseArray mChildrenByIds -> a
    570:572:void <init>(android.content.Context) -> <init>
    575:577:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    580:582:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    595:627:void init(android.util.AttributeSet) -> a
    808:1128:void setChildrenConstraints() -> a
    1131:1144:androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int) -> a
    1161:1255:void internalMeasureChildren(int,int) -> a
    634:638:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    791:805:void updateHierarchy() -> b
    1283:1486:void internalMeasureDimensions(int,int) -> b
    1258:1273:void updatePostMeasures() -> c
    1798:1849:void setSelfDimensionBehaviour(int,int) -> c
    1996:1996:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2023:2061:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1496:1498:void fillMetrics(androidx.constraintlayout.solver.Metrics) -> fillMetrics
    482:482:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1980:1980:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    482:482:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1972:1972:androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1988:1988:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    560:566:java.lang.Object getDesignInformation(int,java.lang.Object) -> getDesignInformation
    787:787:int getMaxHeight() -> getMaxHeight
    777:777:int getMaxWidth() -> getMaxWidth
    740:740:int getMinHeight() -> getMinHeight
    730:730:int getMinWidth() -> getMinWidth
    1965:1965:int getOptimizationLevel() -> getOptimizationLevel
    2015:2015:android.view.View getViewById(int) -> getViewById
    1154:1157:androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View) -> getViewWidget
    1875:1932:void onLayout(boolean,int,int,int,int) -> onLayout
    1505:1795:void onMeasure(int,int) -> onMeasure
    656:679:void onViewAdded(android.view.View) -> onViewAdded
    686:695:void onViewRemoved(android.view.View) -> onViewRemoved
    645:649:void removeView(android.view.View) -> removeView
    3172:3181:void requestLayout() -> requestLayout
    2004:2005:void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet) -> setConstraintSet
    542:554:void setDesignInformation(int,java.lang.Object,java.lang.Object) -> setDesignInformation
    589:592:void setId(int) -> setId
    762:767:void setMaxHeight(int) -> setMaxHeight
    749:754:void setMaxWidth(int) -> setMaxWidth
    716:721:void setMinHeight(int) -> setMinHeight
    703:708:void setMinWidth(int) -> setMinWidth
    1955:1956:void setOptimizationLevel(int) -> setOptimizationLevel
    3189:3189:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1860:1864:void solveLinearSystem(java.lang.String) -> solveLinearSystem
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams:
    int resolveGoneRightMargin -> n
    int resolvedRightToRight -> l
    int resolveGoneLeftMargin -> m
    int resolvedLeftToRight -> j
    int resolvedRightToLeft -> k
    int resolvedLeftToLeft -> i
    float dimensionRatioValue -> a
    int dimensionRatioSide -> b
    boolean needsBaseline -> e
    boolean isGuideline -> f
    boolean isHelper -> g
    float resolvedGuidePercent -> r
    boolean isInPlaceholder -> h
    androidx.constraintlayout.solver.widgets.ConstraintWidget widget -> s
    float resolvedHorizontalBias -> o
    boolean horizontalDimensionFixed -> c
    int resolvedGuideBegin -> p
    boolean verticalDimensionFixed -> d
    int resolvedGuideEnd -> q
    2478:2538:void <init>(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> <init>
    2649:2995:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3040:3041:void <init>(int,int) -> <init>
    3044:3045:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2465:2468:void reset() -> reset
    3053:3164:void resolveLayoutDirection(int) -> resolveLayoutDirection
    2998:3038:void validate() -> validate
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$Table -> androidx.constraintlayout.widget.ConstraintLayout$LayoutParams$a:
    android.util.SparseIntArray map -> a
    2592:2645:void <clinit>() -> <clinit>
androidx.constraintlayout.widget.ConstraintSet -> androidx.constraintlayout.widget.ConstraintSet:
    int[] VISIBILITY_FLAGS -> b
    android.util.SparseIntArray mapToConstant -> c
    java.util.HashMap mConstraints -> a
    195:352:void <clinit>() -> <clinit>
    59:198:void <init>() -> <init>
    797:889:void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout) -> a
    1071:1072:void createHorizontalChain(int,int,int,int,int[],float[],int,int,int) -> a
    2110:2113:androidx.constraintlayout.widget.ConstraintSet$Constraint get(int) -> a
    2181:2185:int lookupID(android.content.res.TypedArray,int,int) -> a
    2189:2193:androidx.constraintlayout.widget.ConstraintSet$Constraint fillFromAttributeList(android.content.Context,android.util.AttributeSet) -> a
    2197:2440:void populateConstraint(androidx.constraintlayout.widget.ConstraintSet$Constraint,android.content.res.TypedArray) -> a
    2443:2476:int[] convertReferenceString(android.view.View,java.lang.String) -> a
    1909:1917:void addToHorizontalChain(int,int,int) -> addToHorizontalChain
    1927:1935:void addToHorizontalChainRTL(int,int,int) -> addToHorizontalChainRTL
    1945:1953:void addToVerticalChain(int,int,int) -> addToVerticalChain
    789:791:void applyTo(androidx.constraintlayout.widget.ConstraintLayout) -> applyTo
    2117:2119:java.lang.String sideToString(int) -> b
    909:910:void center(int,int,int,int,int,int,int,float) -> center
    951:955:void centerHorizontally(int,int,int,int,int,int,int,float) -> centerHorizontally
    1319:1324:void centerHorizontally(int,int) -> centerHorizontally
    971:975:void centerHorizontallyRtl(int,int,int,int,int,int,int,float) -> centerHorizontallyRtl
    1333:1338:void centerHorizontallyRtl(int,int) -> centerHorizontallyRtl
    991:995:void centerVertically(int,int,int,int,int,int,int,float) -> centerVertically
    1348:1353:void centerVertically(int,int) -> centerVertically
    1361:1362:void clear(int) -> clear
    1371:1418:void clear(int,int) -> clear
    684:685:void clone(android.content.Context,int) -> clone
    693:697:void clone(androidx.constraintlayout.widget.ConstraintSet) -> clone
    705:753:void clone(androidx.constraintlayout.widget.ConstraintLayout) -> clone
    761:781:void clone(androidx.constraintlayout.widget.Constraints) -> clone
    1106:1120:void connect(int,int,int,int,int) -> connect
    1219:1232:void connect(int,int,int,int) -> connect
    1741:1745:void constrainCircle(int,int,int,float) -> constrainCircle
    1831:1832:void constrainDefaultHeight(int,int) -> constrainDefaultHeight
    1844:1845:void constrainDefaultWidth(int,int) -> constrainDefaultWidth
    1714:1715:void constrainHeight(int,int) -> constrainHeight
    1757:1758:void constrainMaxHeight(int,int) -> constrainMaxHeight
    1770:1771:void constrainMaxWidth(int,int) -> constrainMaxWidth
    1783:1784:void constrainMinHeight(int,int) -> constrainMinHeight
    1796:1797:void constrainMinWidth(int,int) -> constrainMinWidth
    1818:1819:void constrainPercentHeight(int,float) -> constrainPercentHeight
    1807:1808:void constrainPercentWidth(int,float) -> constrainPercentWidth
    1727:1728:void constrainWidth(int,int) -> constrainWidth
    2047:2050:void create(int,int) -> create
    2062:2067:void createBarrier(int,int,int[]) -> createBarrier
    1048:1049:void createHorizontalChain(int,int,int,int,int[],float[],int) -> createHorizontalChain
    1065:1066:void createHorizontalChainRtl(int,int,int,int,int[],float[],int) -> createHorizontalChainRtl
    1011:1012:void createVerticalChain(int,int,int,int,int[],float[],int) -> createVerticalChain
    1547:1547:boolean getApplyElevation(int) -> getApplyElevation
    355:355:androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int) -> getParameters
    2145:2178:void load(android.content.Context,int) -> load
    1995:2038:void removeFromHorizontalChain(int) -> removeFromHorizontalChain
    1963:1985:void removeFromVerticalChain(int) -> removeFromVerticalChain
    1538:1539:void setAlpha(int,float) -> setAlpha
    1558:1559:void setApplyElevation(int,boolean) -> setApplyElevation
    2108:2108:void setBarrierType(int,int) -> setBarrierType
    1518:1519:void setDimensionRatio(int,java.lang.String) -> setDimensionRatio
    1568:1570:void setElevation(int,float) -> setElevation
    1463:1488:void setGoneMargin(int,int,int) -> setGoneMargin
    2076:2080:void setGuidelineBegin(int,int) -> setGuidelineBegin
    2089:2092:void setGuidelineEnd(int,int) -> setGuidelineEnd
    2101:2104:void setGuidelinePercent(int,float) -> setGuidelinePercent
    1497:1498:void setHorizontalBias(int,float) -> setHorizontalBias
    1882:1883:void setHorizontalChainStyle(int,int) -> setHorizontalChainStyle
    1856:1857:void setHorizontalWeight(int,float) -> setHorizontalWeight
    1428:1453:void setMargin(int,int,int) -> setMargin
    1579:1580:void setRotation(int,float) -> setRotation
    1589:1590:void setRotationX(int,float) -> setRotationX
    1599:1600:void setRotationY(int,float) -> setRotationY
    1609:1610:void setScaleX(int,float) -> setScaleX
    1619:1620:void setScaleY(int,float) -> setScaleY
    1656:1659:void setTransformPivot(int,float,float) -> setTransformPivot
    1631:1632:void setTransformPivotX(int,float) -> setTransformPivotX
    1643:1644:void setTransformPivotY(int,float) -> setTransformPivotY
    1689:1692:void setTranslation(int,float,float) -> setTranslation
    1668:1669:void setTranslationX(int,float) -> setTranslationX
    1678:1679:void setTranslationY(int,float) -> setTranslationY
    1701:1702:void setTranslationZ(int,float) -> setTranslationZ
    1507:1508:void setVerticalBias(int,float) -> setVerticalBias
    1898:1899:void setVerticalChainStyle(int,int) -> setVerticalChainStyle
    1867:1868:void setVerticalWeight(int,float) -> setVerticalWeight
    1528:1529:void setVisibility(int,int) -> setVisibility
androidx.constraintlayout.widget.ConstraintSet$1 -> androidx.constraintlayout.widget.ConstraintSet$a:
androidx.constraintlayout.widget.ConstraintSet$Constraint -> androidx.constraintlayout.widget.ConstraintSet$b:
    float translationX -> e0
    int goneEndMargin -> O
    int topToTop -> l
    float translationZ -> g0
    float guidePercent -> g
    int goneLeftMargin -> K
    int leftToLeft -> h
    int bottomMargin -> G
    int mViewId -> d
    float heightPercent -> q0
    int orientation -> C
    float rotationY -> Z
    java.lang.String mReferenceIdString -> v0
    int circleRadius -> y
    float horizontalWeight -> R
    int verticalChainStyle -> T
    float scaleX -> a0
    int goneStartMargin -> P
    float transformPivotX -> c0
    int startToEnd -> q
    int goneTopMargin -> L
    int topToBottom -> m
    int endMargin -> H
    int leftToRight -> i
    int widthMax -> l0
    int leftMargin -> D
    int widthDefault -> j0
    int guideBegin -> e
    int widthMin -> n0
    int mHelperType -> t0
    float elevation -> W
    boolean mBarrierAllowsGoneWidgets -> r0
    boolean mIsGuideline -> a
    int startToStart -> r
    boolean constrainedWidth -> h0
    int bottomToTop -> n
    float transformPivotY -> d0
    int goneRightMargin -> M
    float translationY -> f0
    int rightToLeft -> j
    int startMargin -> I
    int guideEnd -> f
    boolean applyElevation -> V
    int rightMargin -> E
    int mWidth -> b
    float widthPercent -> p0
    int editorAbsoluteX -> A
    float rotation -> X
    float horizontalBias -> u
    int endToStart -> s
    float scaleY -> b0
    int goneBottomMargin -> N
    int bottomToBottom -> o
    int visibility -> J
    int rightToRight -> k
    int topMargin -> F
    int heightDefault -> k0
    int[] mReferenceIds -> u0
    int editorAbsoluteY -> B
    int mHeight -> c
    int heightMin -> o0
    int heightMax -> m0
    java.lang.String dimensionRatio -> w
    int mBarrierDirection -> s0
    float circleAngle -> z
    float rotationX -> Y
    float verticalBias -> v
    int circleConstraint -> x
    float alpha -> U
    int endToEnd -> t
    float verticalWeight -> Q
    int horizontalChainStyle -> S
    boolean constrainedHeight -> i0
    int baselineToBaseline -> p
    358:437:void <init>() -> <init>
    358:358:void <init>(androidx.constraintlayout.widget.ConstraintSet$1) -> <init>
    358:358:void access$100(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    358:358:void access$200(androidx.constraintlayout.widget.ConstraintSet$Constraint,androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    358:358:void access$300(androidx.constraintlayout.widget.ConstraintSet$Constraint,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    526:533:void fillFromConstraints(androidx.constraintlayout.widget.ConstraintHelper,int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    536:550:void fillFromConstraints(int,androidx.constraintlayout.widget.Constraints$LayoutParams) -> a
    553:609:void fillFrom(int,androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    612:674:void applyTo(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams) -> a
    358:358:java.lang.Object clone() -> clone
    442:522:androidx.constraintlayout.widget.ConstraintSet$Constraint clone() -> clone
androidx.constraintlayout.widget.Constraints -> androidx.constraintlayout.widget.Constraints:
    androidx.constraintlayout.widget.ConstraintSet myConstraintSet -> a
    41:43:void <init>(android.content.Context) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    52:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    135:136:void init(android.util.AttributeSet) -> a
    35:35:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    131:131:androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    35:35:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    62:62:androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    143:143:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    147:152:androidx.constraintlayout.widget.ConstraintSet getConstraintSet() -> getConstraintSet
    159:159:void onLayout(boolean,int,int,int,int) -> onLayout
androidx.constraintlayout.widget.Constraints$LayoutParams -> androidx.constraintlayout.widget.Constraints$LayoutParams:
    82:83:void <init>(int,int) -> <init>
    86:87:void <init>(androidx.constraintlayout.widget.Constraints$LayoutParams) -> <init>
    90:122:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.constraintlayout.widget.Group -> androidx.constraintlayout.widget.Group:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:57:void init(android.util.AttributeSet) -> init
    88:91:void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostLayout
    65:80:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.constraintlayout.widget.Guideline -> androidx.constraintlayout.widget.Guideline:
    55:57:void <init>(android.content.Context) -> <init>
    60:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    86:86:void draw(android.graphics.Canvas) -> draw
    93:94:void onMeasure(int,int) -> onMeasure
    102:105:void setGuidelineBegin(int) -> setGuidelineBegin
    113:116:void setGuidelineEnd(int) -> setGuidelineEnd
    123:126:void setGuidelinePercent(float) -> setGuidelinePercent
    79:79:void setVisibility(int) -> setVisibility
androidx.constraintlayout.widget.Placeholder -> androidx.constraintlayout.widget.Placeholder:
    android.view.View mContent -> b
    int mEmptyVisibility -> c
    int mContentId -> a
    49:51:void <init>(android.content.Context) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:66:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    69:85:void init(android.util.AttributeSet) -> a
    113:113:android.view.View getContent() -> getContent
    104:104:int getEmptyVisibility() -> getEmptyVisibility
    121:140:void onDraw(android.graphics.Canvas) -> onDraw
    169:187:void setContentId(int) -> setContentId
    95:96:void setEmptyVisibility(int) -> setEmptyVisibility
    194:204:void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout) -> updatePostMeasure
    147:161:void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout) -> updatePreLayout
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    boolean mNeedsPreDrawListener -> m
    androidx.core.view.WindowInsetsCompat mLastInsets -> n
    java.lang.Class[] CONSTRUCTOR_PARAMS -> u
    boolean mDrawStatusBarBackground -> o
    androidx.core.view.OnApplyWindowInsetsListener mApplyWindowInsetsListener -> r
    java.lang.String WIDGET_PACKAGE_NAME -> t
    java.util.List mDependencySortedChildren -> a
    android.view.View mNestedScrollingTarget -> k
    androidx.core.util.Pools$Pool sRectPool -> x
    int[] mKeylines -> i
    android.view.View mBehaviorTouchView -> j
    androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> s
    android.graphics.Paint mScrimPaint -> f
    java.util.Comparator TOP_SORTED_CHILDREN_COMPARATOR -> w
    android.view.ViewGroup$OnHierarchyChangeListener mOnHierarchyChangeListener -> q
    java.util.List mTempDependenciesList -> d
    java.util.List mTempList1 -> c
    int[] mTempIntPair -> e
    java.lang.ThreadLocal sConstructors -> v
    boolean mDisallowInterceptReset -> g
    boolean mIsAttachedToWindow -> h
    androidx.coordinatorlayout.widget.DirectedAcyclicGraph mChildDag -> b
    android.graphics.drawable.Drawable mStatusBarBackground -> p
    androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener mOnPreDrawListener -> l
    116:150:void <clinit>() -> <clinit>
    197:198:void <init>(android.content.Context) -> <init>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    206:228:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    162:164:void releaseTempRect(android.graphics.Rect) -> a
    384:409:void resetTouchBehaviors(boolean) -> a
    416:429:void getTopSortedChildren(java.util.List) -> a
    432:498:boolean performIntercept(android.view.MotionEvent,int) -> a
    574:581:int getKeyline(int) -> a
    588:622:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> a
    627:658:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> a
    705:706:void getDescendantRect(android.view.View,android.graphics.Rect) -> a
    825:846:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> a
    949:951:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> a
    962:1033:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> a
    1036:1048:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> a
    1060:1066:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> a
    1076:1084:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> a
    1100:1153:void layoutChildWithKeyline(android.view.View,int,int) -> a
    1163:1187:void layoutChild(android.view.View,int) -> a
    1250:1255:int clamp(int,int,int) -> a
    1380:1387:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> a
    1580:1592:void addPreDrawListener() -> a
    357:366:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> b
    935:937:void getLastChildRect(android.view.View,android.graphics.Rect) -> b
    1275:1377:void onChildViewsChanged(int) -> b
    1549:1566:void ensurePreDrawListener() -> b
    1572:1572:boolean hasDependencies(android.view.View) -> b
    1617:1656:void offsetChildToAnchor(android.view.View,int) -> b
    662:695:void prepareChildren() -> c
    923:925:void recordLastChildRect(android.view.View,android.graphics.Rect) -> c
    1217:1217:int resolveAnchoredChildGravity(int) -> c
    1461:1467:void setInsetOffsetX(android.view.View,int) -> c
    1724:1724:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1195:1201:int resolveGravity(int) -> d
    1470:1476:void setInsetOffsetY(android.view.View,int) -> d
    1599:1606:void removePreDrawListener() -> d
    1489:1501:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1686:1699:boolean doViewsOverlap(android.view.View,android.view.View) -> doViewsOverlap
    1222:1246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    305:318:void drawableStateChanged() -> drawableStateChanged
    1209:1209:int resolveKeylineGravity(int) -> e
    3209:3233:void setupForInsets() -> e
    154:158:android.graphics.Rect acquireTempRect() -> f
    111:111:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1719:1719:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1704:1704:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1709:1714:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1513:1518:java.util.List getDependencies(android.view.View) -> getDependencies
    1541:1542:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1531:1536:java.util.List getDependents(android.view.View) -> getDependents
    374:374:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1950:1950:int getNestedScrollAxes() -> getNestedScrollAxes
    300:300:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    715:715:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    710:710:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    1668:1673:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    237:252:void onAttachedToWindow() -> onAttachedToWindow
    256:266:void onDetachedFromWindow() -> onDetachedFromWindow
    896:904:void onDraw(android.graphics.Canvas) -> onDraw
    503:516:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    876:892:void onLayout(boolean,int,int,int,int) -> onLayout
    860:862:void onLayoutChild(android.view.View,int) -> onLayoutChild
    739:822:void onMeasure(int,int) -> onMeasure
    733:735:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1896:1920:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1925:1945:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1850:1851:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1855:1892:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1813:1815:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1820:1846:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1759:1760:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1764:1781:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3147:3170:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3174:3192:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1729:1729:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1734:1754:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1785:1786:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1790:1808:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    521:561:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3197:3205:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    566:571:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    908:910:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    232:233:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    275:291:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    353:354:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    342:343:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    327:333:void setVisibility(int) -> setVisibility
    322:322:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$a:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> a
    3216:3216:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3220:3220:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2024:2025:void <init>() -> <init>
    2035:2036:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2162:2162:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2705:2705:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2128:2128:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2146:2146:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2318:2319:java.lang.Object getTag(android.view.View) -> getTag
    2189:2189:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2625:2625:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2047:2047:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2219:2219:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2238:2238:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2057:2057:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2084:2084:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2292:2292:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2263:2263:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2577:2577:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2605:2605:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2508:2508:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2542:2545:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2458:2458:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2492:2496:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2376:2376:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2402:2406:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2647:2647:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2665:2665:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2687:2687:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2331:2331:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2359:2363:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2417:2417:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2442:2445:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2108:2108:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2305:2307:void setTag(android.view.View,java.lang.Object) -> setTag
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$b:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> a
    3125:3126:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3130:3133:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3137:3142:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    boolean mDidAcceptNestedScrollTouch -> i
    boolean mDidAcceptNestedScrollNonTouch -> j
    androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior mBehavior -> a
    boolean mDidChangeAfterNestedScroll -> k
    int mInsetOffsetX -> d
    int mInsetOffsetY -> e
    int mAnchorId -> c
    java.lang.Object mBehaviorTag -> m
    android.graphics.Rect mLastChildRect -> l
    boolean mDidBlockInteraction -> h
    boolean mBehaviorResolved -> b
    android.view.View mAnchorDirectChild -> g
    android.view.View mAnchorView -> f
    2778:2779:void <init>(int,int) -> <init>
    2782:2814:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2817:2818:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2821:2822:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2825:2826:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2896:2897:void setLastChildRect(android.graphics.Rect) -> a
    2912:2912:boolean checkAnchorChanged() -> a
    2966:2974:void setNestedScrollAccepted(int,boolean) -> a
    2977:2979:boolean isNestedScrollAccepted(int) -> a
    2991:2992:void setChangedAfterNestedScroll(boolean) -> a
    3007:3009:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> a
    3032:3040:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> a
    3048:3082:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> a
    3117:3120:boolean shouldDodge(android.view.View,int) -> a
    2923:2926:boolean didBlockInteraction() -> b
    2941:2946:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> b
    2962:2963:void resetNestedScroll(int) -> b
    3093:3110:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> b
    2987:2987:boolean getChangedAfterNestedScroll() -> c
    2904:2904:android.graphics.Rect getLastChildRect() -> d
    3019:3020:void invalidateAnchor() -> e
    2995:2996:void resetChangedAfterNestedScroll() -> f
    2958:2959:void resetTouchBehaviorTracking() -> g
    2835:2835:int getAnchorId() -> getAnchorId
    2861:2861:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    2849:2851:void setAnchorId(int) -> setAnchorId
    2874:2889:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$c:
    androidx.coordinatorlayout.widget.CoordinatorLayout this$0 -> a
    1953:1953:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    1956:1957:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    android.util.SparseArray behaviorStates -> b
    3277:3277:void <clinit>() -> <clinit>
    3239:3252:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3255:3256:void <init>(android.os.Parcelable) -> <init>
    3260:3275:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$a:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$d:
    1964:1964:void <init>() -> <init>
    1967:1974:int compare(android.view.View,android.view.View) -> a
    1964:1964:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    androidx.collection.SimpleArrayMap mGraph -> b
    java.util.HashSet mSortTmpMarked -> d
    androidx.core.util.Pools$Pool mListPool -> a
    java.util.ArrayList mSortResult -> c
    39:44:void <init>() -> <init>
    174:179:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> a
    205:209:java.util.ArrayList getEmptyList() -> a
    213:215:void poolList(java.util.ArrayList) -> a
    76:77:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    java.lang.ThreadLocal sMatrix -> a
    java.lang.ThreadLocal sRectF -> b
    35:36:void <clinit>() -> <clinit>
    96:97:void <init>() -> <init>
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> a
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> a
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> androidx.core.accessibilityservice.AccessibilityServiceInfoCompat:
    181:181:void <init>() -> <init>
    307:309:java.lang.String capabilityToString(int) -> capabilityToString
    215:242:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    255:257:java.lang.String flagToString(int) -> flagToString
    286:287:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    197:198:java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate -> b
    149:151:void <init>() -> <init>
    287:292:void finishAffinity(android.app.Activity) -> finishAffinity
    304:309:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    329:341:android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    207:208:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    411:414:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    577:585:void recreate(android.app.Activity) -> recreate
    565:565:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> requestDragAndDropPermissions
    491:524:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    362:368:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    383:389:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    402:408:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    161:162:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> setPermissionCompatDelegate
    548:551:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    233:238:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    270:277:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    417:420:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$a:
    java.lang.String[] val$permissions -> a
    int val$requestCode -> c
    android.app.Activity val$activity -> b
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:521:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$b:
    androidx.core.app.SharedElementCallback mCallback -> a
    591:593:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    622:622:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    628:628:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    616:617:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    611:612:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    605:607:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    598:600:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    635:642:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$b$a:
    android.app.SharedElementCallback$OnSharedElementsReadyListener val$listener -> a
    636:636:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    639:640:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityManagerCompat -> androidx.core.app.ActivityManagerCompat:
    30:30:void <init>() -> <init>
    40:41:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    299:300:void <init>() -> <init>
    324:324:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    246:249:androidx.core.app.ActivityOptionsCompat makeBasic() -> makeBasic
    122:126:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    68:69:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    98:99:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    179:180:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    207:216:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> makeSceneTransitionAnimation
    234:235:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    151:152:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    374:374:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    314:314:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    336:336:android.os.Bundle toBundle() -> toBundle
    346:346:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> androidx.core.app.ActivityOptionsCompat$a:
    android.app.ActivityOptions mActivityOptions -> a
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    292:295:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    283:286:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    262:262:android.os.Bundle toBundle() -> toBundle
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityRecreator -> s3:
    android.os.Handler mainHandler -> g
    java.lang.reflect.Method performStopActivity3ParamsMethod -> d
    java.lang.reflect.Field mainThreadField -> b
    java.lang.reflect.Method performStopActivity2ParamsMethod -> e
    java.lang.reflect.Field tokenField -> c
    java.lang.reflect.Method requestRelaunchActivityMethod -> f
    java.lang.Class activityThreadClass -> a
    90:99:void <clinit>() -> <clinit>
    108:170:boolean recreate(android.app.Activity) -> a
    244:280:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> a
    299:308:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> a
    361:363:java.lang.Class getActivityThreadClass() -> a
    285:294:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> b
    341:345:java.lang.reflect.Field getMainThreadField() -> b
    317:318:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> c
    351:355:java.lang.reflect.Field getTokenField() -> c
    313:313:boolean needsRelaunchCall() -> d
androidx.core.app.ActivityRecreator$1 -> s3$a:
    java.lang.Object val$token -> b
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> a
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> s3$b:
    android.app.Application val$application -> a
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> b
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> s3$c:
    java.lang.Object val$token -> b
    java.lang.Object val$activityThread -> a
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:275:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> s3$d:
    boolean mStopQueued -> e
    java.lang.Object currentlyRecreatingToken -> a
    boolean mStarted -> c
    android.app.Activity mActivity -> b
    boolean mDestroyed -> d
    182:184:void <init>(android.app.Activity) -> <init>
    188:188:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    228:235:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:215:void onActivityPaused(android.app.Activity) -> onActivityPaused
    202:202:void onActivityResumed(android.app.Activity) -> onActivityResumed
    219:219:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    195:198:void onActivityStarted(android.app.Activity) -> onActivityStarted
    224:224:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AlarmManagerCompat -> androidx.core.app.AlarmManagerCompat:
    229:230:void <init>() -> <init>
    59:66:void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> setAlarmClock
    117:122:void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setAndAllowWhileIdle
    162:167:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExact
    222:227:void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExactAndAllowWhileIdle
androidx.core.app.AppComponentFactory -> androidx.core.app.AppComponentFactory:
    40:40:void <init>() -> <init>
    48:48:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    128:131:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivityCompat
    57:57:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    104:107:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> instantiateApplicationCompat
    76:76:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    195:198:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> instantiateProviderCompat
    67:67:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    148:151:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiverCompat
    85:85:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
    172:175:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateServiceCompat
androidx.core.app.AppLaunchChecker -> androidx.core.app.AppLaunchChecker:
    87:88:void <init>() -> <init>
    51:51:boolean hasStartedFromLauncher(android.content.Context) -> hasStartedFromLauncher
    67:82:void onActivityCreate(android.app.Activity) -> onActivityCreate
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    60:60:void <init>() -> <init>
    104:107:int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    124:127:int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String) -> noteOpNoThrow
    156:160:int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:78:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    94:94:void <init>() -> <init>
    105:106:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    androidx.collection.SimpleArrayMap mExtraDataMap -> a
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    48:62:void <init>() -> <init>
    129:133:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    120:124:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    100:100:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    106:106:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    81:83:void onCreate(android.os.Bundle) -> onCreate
    88:90:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    75:76:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    115:115:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    140:140:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:37:void <init>() -> <init>
    70:76:java.lang.Object checkCompatWrapper(java.lang.Object) -> a
    41:41:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    47:47:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    60:60:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    54:54:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    66:66:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.DialogCompat -> androidx.core.app.DialogCompat:
    32:33:void <init>() -> <init>
    55:60:android.view.View requireViewById(android.app.Dialog,int) -> requireViewById
androidx.core.app.FrameMetricsAggregator -> androidx.core.app.FrameMetricsAggregator:
    androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl mInstance -> a
    199:200:void <init>() -> <init>
    212:218:void <init>(int) -> <init>
    226:227:void add(android.app.Activity) -> add
    301:301:android.util.SparseIntArray[] getMetrics() -> getMetrics
    243:243:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    273:273:android.util.SparseIntArray[] reset() -> reset
    260:260:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> androidx.core.app.FrameMetricsAggregator$a:
    android.os.Handler sHandler -> f
    android.os.HandlerThread sHandlerThread -> e
    android.util.SparseIntArray[] mMetrics -> b
    java.util.ArrayList mActivities -> c
    android.view.Window$OnFrameMetricsAvailableListener mListener -> d
    int mTrackingFlags -> a
    341:342:void <clinit>() -> <clinit>
    344:346:void <init>(int) -> <init>
    399:407:void addDurationItem(android.util.SparseIntArray,long) -> a
    411:423:void add(android.app.Activity) -> a
    453:453:android.util.SparseIntArray[] getMetrics() -> a
    427:434:android.util.SparseIntArray[] remove(android.app.Activity) -> b
    458:460:android.util.SparseIntArray[] reset() -> b
    439:448:android.util.SparseIntArray[] stop() -> c
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> androidx.core.app.FrameMetricsAggregator$a$a:
    androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl this$0 -> a
    349:349:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    353:395:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> androidx.core.app.FrameMetricsAggregator$b:
    309:310:void <init>() -> <init>
    313:313:void add(android.app.Activity) -> a
    324:324:android.util.SparseIntArray[] getMetrics() -> a
    316:316:android.util.SparseIntArray[] remove(android.app.Activity) -> b
    328:328:android.util.SparseIntArray[] reset() -> b
    320:320:android.util.SparseIntArray[] stop() -> c
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    java.util.HashMap sClassWorkEnqueuer -> i
    java.lang.Object sLock -> h
    boolean mStopped -> e
    java.util.ArrayList mCompatQueue -> g
    androidx.core.app.JobIntentService$CompatJobEngine mJobImpl -> a
    androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer -> b
    boolean mDestroyed -> f
    androidx.core.app.JobIntentService$CommandProcessor mCurProcessor -> c
    boolean mInterruptIfStopped -> d
    105:106:void <clinit>() -> <clinit>
    416:422:void <init>() -> <init>
    529:541:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> a
    607:615:void ensureProcessorRunningLocked(boolean) -> a
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> a
    599:603:boolean doStopCurrentWork() -> b
    618:636:void processorFinished() -> c
    501:502:void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> enqueueWork
    517:518:void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> enqueueWork
    580:580:boolean isStopped() -> isStopped
    465:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:436:void onCreate() -> onCreate
    476:483:void onDestroy() -> onDestroy
    444:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    595:595:boolean onStopCurrentWork() -> onStopCurrentWork
    572:573:void setInterruptIfStopped(boolean) -> setInterruptIfStopped
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$a:
    androidx.core.app.JobIntentService this$0 -> a
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    390:399:java.lang.Void doInBackground(java.lang.Void[]) -> a
    404:405:void onCancelled(java.lang.Void) -> b
    409:410:void onPostExecute(java.lang.Void) -> c
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
androidx.core.app.JobIntentService$CompatJobEngine -> androidx.core.app.JobIntentService$b:
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$c:
    android.os.PowerManager$WakeLock mRunWakeLock -> f
    android.os.PowerManager$WakeLock mLaunchWakeLock -> e
    boolean mLaunchingService -> g
    boolean mServiceProcessing -> h
    android.content.Context mContext -> d
    163:175:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    179:197:void enqueueWork(android.content.Intent) -> a
    224:234:void serviceProcessingFinished() -> a
    210:219:void serviceProcessingStarted() -> b
    201:205:void serviceStartReceived() -> c
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$d:
    android.content.Intent mIntent -> a
    androidx.core.app.JobIntentService this$0 -> c
    int mStartId -> b
    363:366:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:377:void complete() -> a
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$GenericWorkItem -> androidx.core.app.JobIntentService$e:
    void complete() -> a
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$f:
    android.app.job.JobParameters mParams -> c
    androidx.core.app.JobIntentService mService -> a
    java.lang.Object mLock -> b
    275:277:void <init>(androidx.core.app.JobIntentService) -> <init>
    281:281:android.os.IBinder compatGetBinder() -> a
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> b
    287:290:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$f$a:
    android.app.job.JobWorkItem mJobWork -> a
    androidx.core.app.JobIntentService$JobServiceEngineImpl this$0 -> b
    255:257:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> a
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$g:
    android.app.job.JobScheduler mJobScheduler -> e
    android.app.job.JobInfo mJobInfo -> d
    332:338:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    343:344:void enqueueWork(android.content.Intent) -> a
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$h:
    android.content.ComponentName mComponentName -> a
    boolean mHasJobId -> b
    int mJobId -> c
    118:120:void <init>(android.content.ComponentName) -> <init>
    void enqueueWork(android.content.Intent) -> a
    123:127:void ensureJobId(int) -> a
    141:141:void serviceProcessingFinished() -> a
    138:138:void serviceProcessingStarted() -> b
    135:135:void serviceStartReceived() -> c
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    270:271:void <init>() -> <init>
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    168:178:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:266:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    81:85:void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:61:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    5403:5404:void <init>() -> <init>
    5110:5112:android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> a
    5181:5214:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> a
    5159:5160:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    5143:5144:int getActionCount(android.app.Notification) -> getActionCount
    5367:5370:int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    5251:5252:java.lang.String getCategory(android.app.Notification) -> getCategory
    5342:5345:java.lang.String getChannelId(android.app.Notification) -> getChannelId
    5242:5242:java.lang.CharSequence getContentTitle(android.app.Notification) -> getContentTitle
    5129:5130:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    5282:5283:java.lang.String getGroup(android.app.Notification) -> getGroup
    5393:5396:int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    5222:5236:java.util.List getInvisibleActions(android.app.Notification) -> getInvisibleActions
    5265:5266:boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    5379:5382:java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    5326:5327:java.lang.String getSortKey(android.app.Notification) -> getSortKey
    5354:5357:long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    5301:5302:boolean isGroupSummary(android.app.Notification) -> isGroupSummary
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> a
    androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs -> c
    androidx.core.app.RemoteInput[] mRemoteInputs -> b
    boolean mShowsUserInterface -> e
    int mSemanticAction -> f
    boolean mAllowGeneratedReplies -> d
    3162:3163:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3168:3178:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3189:3189:android.app.PendingIntent getActionIntent() -> getActionIntent
    3204:3204:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3238:3238:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3196:3196:android.os.Bundle getExtras() -> getExtras
    3181:3181:int getIcon() -> getIcon
    3213:3213:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3224:3224:int getSemanticAction() -> getSemanticAction
    3246:3246:boolean getShowsUserInterface() -> getShowsUserInterface
    3185:3185:java.lang.CharSequence getTitle() -> getTitle
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
    java.lang.CharSequence mTitle -> b
    android.os.Bundle mExtras -> e
    android.app.PendingIntent mIntent -> c
    java.util.ArrayList mRemoteInputs -> f
    int mSemanticAction -> g
    boolean mShowsUserInterface -> h
    int mIcon -> a
    boolean mAllowGeneratedReplies -> d
    3269:3270:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3278:3281:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3285:3295:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3305:3308:androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    3328:3332:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> addRemoteInput
    3390:3405:androidx.core.app.NotificationCompat$Action build() -> build
    3380:3381:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender) -> extend
    3317:3317:android.os.Bundle getExtras() -> getExtras
    3345:3346:androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> setAllowGeneratedReplies
    3358:3359:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> setSemanticAction
    3371:3372:androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean) -> setShowsUserInterface
androidx.core.app.NotificationCompat$Action$WearableExtender -> androidx.core.app.NotificationCompat$Action$WearableExtender:
    java.lang.CharSequence mInProgressLabel -> b
    java.lang.CharSequence mConfirmLabel -> c
    java.lang.CharSequence mCancelLabel -> d
    int mFlags -> a
    3467:3468:void <init>() -> <init>
    3475:3483:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3543:3548:void setFlag(int,boolean) -> a
    3439:3439:java.lang.Object clone() -> clone
    3513:3518:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
    3492:3508:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> extend
    3631:3631:java.lang.CharSequence getCancelLabel() -> getCancelLabel
    3603:3603:java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    3682:3682:boolean getHintDisplayActionInline() -> getHintDisplayActionInline
    3655:3655:boolean getHintLaunchesActivity() -> getHintLaunchesActivity
    3575:3575:java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    3539:3539:boolean isAvailableOffline() -> isAvailableOffline
    3528:3529:androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    3617:3618:androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    3589:3590:androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    3669:3670:androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> setHintDisplayActionInline
    3643:3644:androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> setHintLaunchesActivity
    3561:3562:androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    boolean mBigLargeIconSet -> f
    android.graphics.Bitmap mPicture -> d
    android.graphics.Bitmap mBigLargeIcon -> e
    1994:1995:void <init>() -> <init>
    1997:1999:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2042:2054:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2031:2033:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    2023:2024:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    2006:2007:androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2014:2016:androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> d
    2081:2082:void <init>() -> <init>
    2084:2086:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2121:2130:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2111:2112:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    2093:2094:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2101:2103:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    java.lang.String mChannelId -> G
    long mTimeout -> J
    java.lang.String mShortcutId -> I
    int mPriority -> j
    android.widget.RemoteViews mBigContentView -> E
    int mGroupAlertBehavior -> K
    java.lang.CharSequence mContentTitle -> b
    boolean mShowWhen -> k
    android.widget.RemoteViews mTickerView -> f
    boolean mColorized -> w
    java.lang.CharSequence mContentInfo -> h
    java.util.ArrayList mInvisibleActions -> a
    android.app.PendingIntent mFullScreenIntent -> e
    java.lang.CharSequence[] mRemoteInputHistory -> o
    int mColor -> A
    android.app.Notification mPublicVersion -> C
    android.os.Bundle mExtras -> z
    int mProgress -> q
    android.widget.RemoteViews mContentView -> D
    android.app.Notification mNotification -> L
    int mBadgeIcon -> H
    java.lang.CharSequence mContentText -> c
    int mNumber -> i
    boolean mUseChronometer -> l
    android.graphics.Bitmap mLargeIcon -> g
    boolean mLocalOnly -> v
    android.widget.RemoteViews mHeadsUpContentView -> F
    boolean mColorizedSet -> x
    java.lang.String mGroupKey -> s
    int mVisibility -> B
    boolean mProgressIndeterminate -> r
    java.lang.String mSortKey -> u
    android.app.PendingIntent mContentIntent -> d
    boolean mGroupSummary -> t
    java.lang.CharSequence mSubText -> n
    java.lang.String mCategory -> y
    int mProgressMax -> p
    androidx.core.app.NotificationCompat$Style mStyle -> m
    739:748:void <init>(android.content.Context,java.lang.String) -> <init>
    756:757:void <init>(android.content.Context) -> <init>
    991:992:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> a
    1190:1195:void setFlag(int,boolean) -> a
    1360:1361:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1379:1380:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1299:1306:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1395:1395:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1408:1409:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1242:1243:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1590:1590:android.app.Notification build() -> build
    1573:1574:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    1614:1614:android.widget.RemoteViews getBigContentView() -> getBigContentView
    1652:1652:int getColor() -> getColor
    1606:1606:android.widget.RemoteViews getContentView() -> getContentView
    1337:1340:android.os.Bundle getExtras() -> getExtras
    1622:1622:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    1582:1582:android.app.Notification getNotification() -> getNotification
    1642:1642:int getPriority() -> getPriority
    1632:1632:long getWhenIfShowing() -> getWhenIfShowing
    1594:1598:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1144:1145:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    1549:1550:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    1167:1168:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    1510:1511:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1438:1439:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1123:1125:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    903:904:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    884:885:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    916:917:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    833:834:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    825:826:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1487:1488:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    1474:1475:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    1500:1501:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1182:1186:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    928:929:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1322:1323:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    951:953:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1258:1259:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1564:1565:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1270:1271:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    982:983:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1079:1085:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1155:1156:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    876:877:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1100:1101:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1133:1134:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1215:1216:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    893:896:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1463:1464:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    866:867:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1535:1536:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    773:774:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    801:802:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    816:818:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1287:1288:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1023:1031:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1046:1054:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    1421:1427:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    847:848:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    962:963:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    973:975:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    1519:1520:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    789:790:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1069:1070:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    1450:1451:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    764:765:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
androidx.core.app.NotificationCompat$CarExtender -> androidx.core.app.NotificationCompat$CarExtender:
    android.graphics.Bitmap mLargeIcon -> a
    int mColor -> c
    androidx.core.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> b
    4731:4732:void <init>() -> <init>
    4739:4753:void <init>(android.app.Notification) -> <init>
    4757:4790:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle) -> a
    4808:4836:android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> a
    4846:4865:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    4888:4888:int getColor() -> getColor
    4912:4912:android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    4931:4931:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
    4877:4878:androidx.core.app.NotificationCompat$CarExtender setColor(int) -> setColor
    4901:4902:androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    4922:4923:androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation:
    androidx.core.app.RemoteInput mRemoteInput -> b
    long mLatestTimestamp -> f
    android.app.PendingIntent mReplyPendingIntent -> c
    java.lang.String[] mParticipants -> e
    java.lang.String[] mMessages -> a
    android.app.PendingIntent mReadPendingIntent -> d
    4947:4954:void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    5005:5005:long getLatestTimestamp() -> getLatestTimestamp
    4960:4960:java.lang.String[] getMessages() -> getMessages
    4998:4998:java.lang.String getParticipant() -> getParticipant
    4991:4991:java.lang.String[] getParticipants() -> getParticipants
    4984:4984:android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    4968:4968:androidx.core.app.RemoteInput getRemoteInput() -> getRemoteInput
    4976:4976:android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> a
    long mLatestTimestamp -> f
    androidx.core.app.RemoteInput mRemoteInput -> c
    java.lang.String mParticipant -> b
    android.app.PendingIntent mReplyPendingIntent -> e
    android.app.PendingIntent mReadPendingIntent -> d
    5024:5026:void <init>(java.lang.String) -> <init>
    5037:5038:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    5094:5096:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    5084:5085:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    5068:5069:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    5054:5057:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput) -> setReplyAction
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    2940:2941:void <init>() -> <init>
    3012:3030:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> a
    3034:3048:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> a
    2949:2952:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2977:2989:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    2960:2968:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    2998:3008:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> d
    2855:2856:void <init>() -> <init>
    2858:2860:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2884:2885:androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    2894:2905:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2867:2868:androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2875:2877:androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    java.lang.Boolean mIsGroupConversation -> g
    java.util.List mMessages -> d
    java.lang.CharSequence mConversationTitle -> f
    androidx.core.app.Person mUser -> e
    2179:2179:void <init>() -> <init>
    2189:2191:void <init>(java.lang.CharSequence) -> <init>
    2201:2203:void <init>(androidx.core.app.Person) -> <init>
    2512:2532:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> a
    2537:2537:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> a
    2542:2557:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2269:2274:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> addMessage
    2286:2287:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person) -> addMessage
    2298:2302:androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    2390:2482:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2486:2498:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> b
    2502:2508:boolean hasMessagesWithoutSender() -> c
    2364:2376:androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> extractMessagingStyleFromNotification
    2246:2246:java.lang.CharSequence getConversationTitle() -> getConversationTitle
    2309:2309:java.util.List getMessages() -> getMessages
    2220:2220:androidx.core.app.Person getUser() -> getUser
    2215:2215:java.lang.CharSequence getUserDisplayName() -> getUserDisplayName
    2341:2349:boolean isGroupConversation() -> isGroupConversation
    2565:2588:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    2237:2238:androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    2319:2320:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
androidx.core.app.NotificationCompat$MessagingStyle$Message -> androidx.core.app.NotificationCompat$MessagingStyle$Message:
    android.net.Uri mDataUri -> f
    java.lang.CharSequence mText -> a
    androidx.core.app.Person mPerson -> c
    android.os.Bundle mExtras -> d
    long mTimestamp -> b
    java.lang.String mDataMimeType -> e
    2619:2623:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    2640:2641:void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    2731:2757:android.os.Bundle toBundle() -> a
    2762:2767:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> a
    2772:2781:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> a
    2787:2822:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> a
    2718:2718:java.lang.String getDataMimeType() -> getDataMimeType
    2727:2727:android.net.Uri getDataUri() -> getDataUri
    2695:2695:android.os.Bundle getExtras() -> getExtras
    2712:2712:androidx.core.app.Person getPerson() -> getPerson
    2706:2706:java.lang.CharSequence getSender() -> getSender
    2684:2684:java.lang.CharSequence getText() -> getText
    2689:2689:long getTimestamp() -> getTimestamp
    2673:2675:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    java.lang.CharSequence mBigContentTitle -> a
    java.lang.CharSequence mSummaryText -> b
    boolean mSummaryTextSet -> c
    1663:1671:void <init>() -> <init>
    1898:1909:android.graphics.Bitmap createColoredBitmap(int,int,int) -> a
    1914:1923:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> a
    1946:1949:void hideNormalContent(android.widget.RemoteViews) -> a
    1952:1961:int calculateTopPadding() -> a
    1965:1965:float constrain(float,float,float) -> a
    1731:1731:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    1699:1699:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    1747:1886:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    1683:1687:android.app.Notification build() -> build
    1934:1943:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    1894:1894:android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    1714:1714:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    1706:1706:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    1722:1722:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    1739:1739:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    1674:1680:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    int mHintScreenTimeout -> l
    int mCustomContentHeight -> j
    int mGravity -> k
    int mContentActionIndex -> h
    java.lang.String mDismissalId -> m
    int mCustomSizePreset -> i
    android.app.PendingIntent mDisplayIntent -> c
    int mContentIcon -> f
    int mContentIconGravity -> g
    java.lang.String mBridgeTag -> n
    java.util.ArrayList mPages -> d
    android.graphics.Bitmap mBackground -> e
    int mFlags -> b
    java.util.ArrayList mActions -> a
    3906:3907:void <init>() -> <init>
    3909:3953:void <init>(android.app.Notification) -> <init>
    4028:4050:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> a
    4667:4672:void setFlag(int,boolean) -> a
    4086:4087:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    4103:4104:androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    4185:4186:androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    4202:4203:androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    4113:4114:androidx.core.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    4214:4215:androidx.core.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    3762:3762:java.lang.Object clone() -> clone
    4055:4070:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    3962:4023:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    4121:4121:java.util.List getActions() -> getActions
    4258:4258:android.graphics.Bitmap getBackground() -> getBackground
    4663:4663:java.lang.String getBridgeTag() -> getBridgeTag
    4334:4334:int getContentAction() -> getContentAction
    4279:4279:int getContentIcon() -> getContentIcon
    4306:4306:int getContentIconGravity() -> getContentIconGravity
    4462:4462:boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    4421:4421:int getCustomContentHeight() -> getCustomContentHeight
    4393:4393:int getCustomSizePreset() -> getCustomSizePreset
    4642:4642:java.lang.String getDismissalId() -> getDismissalId
    4169:4169:android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    4361:4361:int getGravity() -> getGravity
    4597:4597:boolean getHintAmbientBigPicture() -> getHintAmbientBigPicture
    4542:4542:boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    4620:4620:boolean getHintContentIntentLaunchesActivity() -> getHintContentIntentLaunchesActivity
    4487:4487:boolean getHintHideIcon() -> getHintHideIcon
    4570:4570:int getHintScreenTimeout() -> getHintScreenTimeout
    4512:4512:boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    4228:4228:java.util.List getPages() -> getPages
    4440:4440:boolean getStartScrollBottom() -> getStartScrollBottom
    4243:4244:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    4654:4655:androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> setBridgeTag
    4320:4321:androidx.core.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    4268:4269:androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    4292:4293:androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    4451:4452:androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    4407:4408:androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    4377:4378:androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    4633:4634:androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> setDismissalId
    4157:4158:androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    4347:4348:androidx.core.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    4583:4584:androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> setHintAmbientBigPicture
    4527:4528:androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    4609:4610:androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> setHintContentIntentLaunchesActivity
    4474:4475:androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    4556:4557:androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    4499:4500:androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    4430:4431:androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
androidx.core.app.NotificationCompatBuilder -> t3:
    androidx.core.app.NotificationCompat$Builder mBuilderCompat -> b
    android.widget.RemoteViews mBigContentView -> d
    java.util.List mActionExtrasList -> e
    android.widget.RemoteViews mContentView -> c
    android.widget.RemoteViews mHeadsUpContentView -> h
    android.os.Bundle mExtras -> f
    int mGroupAlertBehavior -> g
    android.app.Notification$Builder mBuilder -> a
    62:208:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    216:251:android.app.Notification build() -> a
    255:290:void addAction(androidx.core.app.NotificationCompat$Action) -> a
    418:422:void removeSoundAndVibration(android.app.Notification) -> a
    293:341:android.app.Notification buildInternal() -> b
    212:212:android.app.Notification$Builder getBuilder() -> getBuilder
androidx.core.app.NotificationCompatExtras -> androidx.core.app.NotificationCompatExtras:
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> u3:
    java.lang.Object sActionsLock -> b
    java.lang.Object sExtrasLock -> a
    58:62:void <clinit>() -> <clinit>
    248:264:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> a
    269:276:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> a
    285:300:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> a
    304:311:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> a
    315:322:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> a
    331:333:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> a
    230:235:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> b
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    48:56:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    android.content.Context mContext -> a
    java.lang.Object sLock -> f
    java.util.Set sEnabledNotificationListenerPackages -> e
    android.app.NotificationManager mNotificationManager -> b
    java.lang.Object sEnabledNotificationListenersLock -> c
    androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> g
    java.lang.String sEnabledNotificationListeners -> d
    100:109:void <clinit>() -> <clinit>
    159:163:void <init>(android.content.Context) -> <init>
    446:447:boolean useSideChannelForNotification(android.app.Notification) -> a
    454:459:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> a
    223:241:boolean areNotificationsEnabled() -> areNotificationsEnabled
    170:171:void cancel(int) -> cancel
    179:183:void cancel(java.lang.String,int) -> cancel
    187:191:void cancelAll() -> cancelAll
    282:285:void createNotificationChannel(android.app.NotificationChannel) -> createNotificationChannel
    297:300:void createNotificationChannelGroup(android.app.NotificationChannelGroup) -> createNotificationChannelGroup
    325:328:void createNotificationChannelGroups(java.util.List) -> createNotificationChannelGroups
    311:314:void createNotificationChannels(java.util.List) -> createNotificationChannels
    340:343:void deleteNotificationChannel(java.lang.String) -> deleteNotificationChannel
    352:355:void deleteNotificationChannelGroup(java.lang.String) -> deleteNotificationChannelGroup
    156:156:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
    420:439:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    254:257:int getImportance() -> getImportance
    364:367:android.app.NotificationChannel getNotificationChannel(java.lang.String) -> getNotificationChannel
    377:387:android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String) -> getNotificationChannelGroup
    409:412:java.util.List getNotificationChannelGroups() -> getNotificationChannelGroups
    397:400:java.util.List getNotificationChannels() -> getNotificationChannels
    199:200:void notify(int,android.app.Notification) -> notify
    209:217:void notify(java.lang.String,int,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$a:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    android.app.Notification notif -> d
    753:758:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    762:763:void send(android.support.v4.app.INotificationSideChannel) -> a
    767:772:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$b:
    android.os.IBinder iBinder -> b
    android.content.ComponentName componentName -> a
    737:740:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$c:
    android.content.Context mContext -> a
    java.util.Map mRecordMap -> d
    android.os.Handler mHandler -> c
    java.util.Set mCachedEnabledPackages -> e
    android.os.HandlerThread mHandlerThread -> b
    479:484:void <init>(android.content.Context) -> <init>
    515:520:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> a
    523:529:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> a
    539:543:void handleRetryListenerQueue(android.content.ComponentName) -> a
    568:612:void updateListenerMap() -> a
    619:631:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> a
    491:492:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> b
    532:536:void handleServiceDisconnected(android.content.ComponentName) -> b
    638:643:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> b
    674:684:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> c
    651:667:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> d
    496:499:boolean handleMessage(android.os.Message) -> handleMessage
    547:553:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    557:561:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$c$a:
    android.content.ComponentName componentName -> a
    android.support.v4.app.INotificationSideChannel service -> c
    java.util.ArrayDeque taskQueue -> d
    int retryCount -> e
    boolean bound -> b
    726:728:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.NotificationManagerCompat$Task -> androidx.core.app.NotificationManagerCompat$d:
    void send(android.support.v4.app.INotificationSideChannel) -> a
androidx.core.app.Person -> androidx.core.app.Person:
    java.lang.CharSequence mName -> a
    androidx.core.graphics.drawable.IconCompat mIcon -> b
    boolean mIsBot -> e
    boolean mIsImportant -> f
    java.lang.String mUri -> c
    java.lang.String mKey -> d
    115:122:void <init>(androidx.core.app.Person$Builder) -> <init>
    88:88:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    48:49:androidx.core.app.Person fromBundle(android.os.Bundle) -> fromBundle
    70:70:androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle) -> fromPersistableBundle
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    224:224:java.lang.String getKey() -> getKey
    191:191:java.lang.CharSequence getName() -> getName
    215:215:java.lang.String getUri() -> getUri
    232:232:boolean isBot() -> isBot
    240:240:boolean isImportant() -> isImportant
    175:175:android.app.Person toAndroidPerson() -> toAndroidPerson
    163:163:androidx.core.app.Person$Builder toBuilder() -> toBuilder
    130:137:android.os.Bundle toBundle() -> toBundle
    151:157:android.os.PersistableBundle toPersistableBundle() -> toPersistableBundle
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    java.lang.CharSequence mName -> a
    androidx.core.graphics.drawable.IconCompat mIcon -> b
    boolean mIsBot -> e
    boolean mIsImportant -> f
    java.lang.String mUri -> c
    java.lang.String mKey -> d
    253:253:void <init>() -> <init>
    255:262:void <init>(androidx.core.app.Person) -> <init>
    340:340:androidx.core.app.Person build() -> build
    321:322:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    282:283:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    333:334:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    311:312:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    270:271:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    300:301:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    80:87:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    94:94:void <init>() -> <init>
    99:107:void <init>(androidx.core.app.RemoteActionCompat) -> <init>
    115:123:androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction) -> createFromRemoteAction
    179:179:android.app.PendingIntent getActionIntent() -> getActionIntent
    172:172:java.lang.CharSequence getContentDescription() -> getContentDescription
    158:158:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    165:165:java.lang.CharSequence getTitle() -> getTitle
    137:137:boolean isEnabled() -> isEnabled
    130:131:void setEnabled(boolean) -> setEnabled
    144:145:void setShouldShowIcon(boolean) -> setShouldShowIcon
    151:151:boolean shouldShowIcon() -> shouldShowIcon
    190:196:android.app.RemoteAction toRemoteAction() -> toRemoteAction
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    java.lang.CharSequence mLabel -> b
    android.os.Bundle mExtras -> e
    java.util.Set mAllowedDataTypes -> f
    java.lang.String mResultKey -> a
    java.lang.CharSequence[] mChoices -> c
    boolean mAllowFreeFormTextInput -> d
    78:85:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> <init>
    496:496:java.lang.String getExtraResultsKeyForData(java.lang.String) -> a
    501:508:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> a
    513:513:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> a
    523:534:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> a
    418:441:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    354:406:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    132:132:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    110:110:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    106:106:java.lang.CharSequence[] getChoices() -> getChoices
    290:313:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    139:139:android.os.Bundle getExtras() -> getExtras
    99:99:java.lang.CharSequence getLabel() -> getLabel
    92:92:java.lang.String getResultKey() -> getResultKey
    328:329:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    482:489:int getResultsSource(android.content.Intent) -> getResultsSource
    119:119:boolean isDataOnly() -> isDataOnly
    457:467:void setResultsSource(android.content.Intent,int) -> setResultsSource
androidx.core.app.RemoteInput$Builder -> androidx.core.app.RemoteInput$Builder:
    android.os.Bundle mExtras -> c
    java.lang.CharSequence mLabel -> d
    java.lang.CharSequence[] mChoices -> e
    boolean mAllowFreeFormTextInput -> f
    java.lang.String mResultKey -> a
    java.util.Set mAllowedDataTypes -> b
    158:160:void <init>(java.lang.String) -> <init>
    240:243:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    262:262:androidx.core.app.RemoteInput build() -> build
    253:253:android.os.Bundle getExtras() -> getExtras
    207:212:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    227:228:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    191:192:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    173:174:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
androidx.core.app.ServiceCompat -> androidx.core.app.ServiceCompat:
    37:39:void <init>() -> <init>
    98:103:void stopForeground(android.app.Service,int) -> stopForeground
androidx.core.app.ShareCompat -> androidx.core.app.ShareCompat:
    109:109:void <init>() -> <init>
    185:202:void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    213:215:void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    147:155:android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    124:131:java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
androidx.core.app.ShareCompat$IntentBuilder -> androidx.core.app.ShareCompat$IntentBuilder:
    android.content.Intent mIntent -> b
    java.lang.CharSequence mChooserTitle -> c
    java.util.ArrayList mStreams -> g
    java.util.ArrayList mBccAddresses -> f
    java.util.ArrayList mCcAddresses -> e
    java.util.ArrayList mToAddresses -> d
    android.app.Activity mActivity -> a
    247:255:void <init>(android.app.Activity) -> <init>
    311:311:android.app.Activity getActivity() -> a
    315:323:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> a
    327:334:void combineArrayExtra(java.lang.String,java.lang.String[]) -> a
    576:580:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    591:592:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    536:540:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    551:552:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    496:500:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    511:512:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    457:469:androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    344:344:android.content.Intent createChooserIntent() -> createChooserIntent
    244:244:androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    267:307:android.content.Intent getIntent() -> getIntent
    367:368:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    378:378:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    564:565:androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    524:525:androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    481:485:androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    418:423:androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    437:442:androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    603:604:androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
    402:403:androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    389:390:androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    357:358:void startChooser() -> startChooser
androidx.core.app.ShareCompat$IntentReader -> androidx.core.app.ShareCompat$IntentReader:
    android.content.ComponentName mCallingActivity -> d
    android.content.Intent mIntent -> b
    java.util.ArrayList mStreams -> e
    android.app.Activity mActivity -> a
    java.lang.String mCallingPackage -> c
    646:651:void <init>(android.app.Activity) -> <init>
    643:643:androidx.core.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    892:892:android.content.ComponentName getCallingActivity() -> getCallingActivity
    906:914:android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    928:936:android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    950:958:java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
    874:874:java.lang.String getCallingPackage() -> getCallingPackage
    846:846:java.lang.String[] getEmailBcc() -> getEmailBcc
    836:836:java.lang.String[] getEmailCc() -> getEmailCc
    826:826:java.lang.String[] getEmailTo() -> getEmailTo
    720:735:java.lang.String getHtmlText() -> getHtmlText
    776:776:android.net.Uri getStream() -> getStream
    789:798:android.net.Uri getStream(int) -> getStream
    810:816:int getStreamCount() -> getStreamCount
    856:856:java.lang.String getSubject() -> getSubject
    706:706:java.lang.CharSequence getText() -> getText
    696:696:java.lang.String getType() -> getType
    686:686:boolean isMultipleShare() -> isMultipleShare
    662:663:boolean isShareIntent() -> isShareIntent
    675:675:boolean isSingleShare() -> isSingleShare
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> a
    42:42:void <init>() -> <init>
    214:217:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> a
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    133:133:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    android.content.Context mSourceContext -> b
    java.util.ArrayList mIntents -> a
    82:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    247:247:android.content.Intent editIntentAt(int) -> editIntentAt
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> from
    234:234:android.content.Intent getIntent(int) -> getIntent
    219:219:int getIntentCount() -> getIntentCount
    357:365:android.content.Intent[] getIntents() -> getIntents
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:332:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    33:35:void <init>() -> <init>
    74:90:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    java.lang.Object sLock -> a
    153:153:void <clinit>() -> <clinit>
    161:163:void <init>() -> <init>
    531:532:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    633:636:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    578:579:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    513:516:int getColor(android.content.Context,int) -> getColor
    491:494:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    274:278:java.io.File getDataDir(android.content.Context) -> getDataDir
    453:454:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    433:434:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    380:381:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    660:663:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    554:555:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    327:328:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    712:717:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    732:735:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    647:650:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    191:191:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    223:228:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    250:255:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    692:698:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$a:
    java.util.HashMap SERVICES -> a
    740:806:void <clinit>() -> <clinit>
androidx.core.content.ContextCompat$MainHandlerExecutor -> androidx.core.content.ContextCompat$b:
    android.os.Handler mHandler -> a
    669:671:void <init>(android.os.Handler) -> <init>
    675:676:void execute(java.lang.Runnable) -> execute
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    java.io.File DEVICE_ROOT -> c
    androidx.core.content.FileProvider$PathStrategy mStrategy -> a
    java.util.HashMap sCache -> d
    java.lang.String[] COLUMNS -> b
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    795:815:int modeToMode(java.lang.String) -> a
    819:825:java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    829:831:java.lang.String[] copyOf(java.lang.String[],int) -> a
    835:837:java.lang.Object[] copyOf(java.lang.Object[],int) -> a
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    493:504:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.FileProvider$a:
    java.io.File getFileForUri(android.net.Uri) -> a
    android.net.Uri getUriForFile(java.io.File) -> a
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$b:
    java.util.HashMap mRoots -> b
    java.lang.String mAuthority -> a
    700:702:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> a
    728:730:android.net.Uri getUriForFile(java.io.File) -> a
    764:772:java.io.File getFileForUri(android.net.Uri) -> a
androidx.core.content.IntentCompat -> androidx.core.content.IntentCompat:
    28:30:void <init>() -> <init>
    77:78:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
androidx.core.content.MimeTypeFilter -> androidx.core.content.MimeTypeFilter:
    43:44:void <init>() -> <init>
    48:49:boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> a
    76:83:boolean matches(java.lang.String,java.lang.String) -> matches
    93:105:java.lang.String matches(java.lang.String,java.lang.String[]) -> matches
    115:127:java.lang.String matches(java.lang.String[],java.lang.String) -> matches
    137:150:java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> matchesMany
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    77:79:void <init>() -> <init>
    171:173:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    152:155:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.SharedPreferencesCompat -> androidx.core.content.SharedPreferencesCompat:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> androidx.core.content.SharedPreferencesCompat$EditorCompat:
    androidx.core.content.SharedPreferencesCompat$EditorCompat sInstance -> b
    androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> a
    57:59:void <init>() -> <init>
    80:81:void apply(android.content.SharedPreferences$Editor) -> apply
    66:69:androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> androidx.core.content.SharedPreferencesCompat$EditorCompat$a:
    40:41:void <init>() -> <init>
    45:52:void apply(android.content.SharedPreferences$Editor) -> a
androidx.core.content.pm.ActivityInfoCompat -> androidx.core.content.pm.ActivityInfoCompat:
    27:29:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    41:42:void <init>() -> <init>
    34:38:long getLongVersionCode(android.content.pm.PackageInfo) -> getLongVersionCode
androidx.core.content.pm.PermissionInfoCompat -> androidx.core.content.pm.PermissionInfoCompat:
    34:35:void <init>() -> <init>
    73:77:int getProtection(android.content.pm.PermissionInfo) -> getProtection
    87:91:int getProtectionFlags(android.content.pm.PermissionInfo) -> getProtectionFlags
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    android.content.Context mContext -> a
    android.content.Intent[] mIntents -> c
    android.content.ComponentName mActivity -> d
    boolean mIsAlwaysBadged -> i
    androidx.core.app.Person[] mPersons -> j
    boolean mIsLongLived -> l
    java.lang.CharSequence mLabel -> e
    java.lang.CharSequence mLongLabel -> f
    java.lang.CharSequence mDisabledMessage -> g
    java.util.Set mCategories -> k
    java.lang.String mId -> b
    androidx.core.graphics.drawable.IconCompat mIcon -> h
    69:69:void <init>() -> <init>
    104:113:android.os.PersistableBundle buildExtrasBundle() -> a
    117:136:android.content.Intent addToIntent(android.content.Intent) -> a
    243:244:androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle) -> a
    162:162:android.content.ComponentName getActivity() -> getActivity
    224:224:java.util.Set getCategories() -> getCategories
    193:193:java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    232:232:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    148:148:java.lang.String getId() -> getId
    204:204:android.content.Intent getIntent() -> getIntent
    214:214:android.content.Intent[] getIntents() -> getIntents
    182:182:java.lang.CharSequence getLongLabel() -> getLongLabel
    172:172:java.lang.CharSequence getShortLabel() -> getShortLabel
    76:95:android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
androidx.core.content.pm.ShortcutInfoCompat$Builder -> androidx.core.content.pm.ShortcutInfoCompat$Builder:
    androidx.core.content.pm.ShortcutInfoCompat mInfo -> a
    277:281:void <init>(android.content.Context,java.lang.String) -> <init>
    287:305:void <init>(androidx.core.content.pm.ShortcutInfoCompat) -> <init>
    312:324:void <init>(android.content.Context,android.content.pm.ShortcutInfo) -> <init>
    484:485:androidx.core.content.pm.ShortcutInfoCompat build() -> build
    411:412:androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> setActivity
    429:430:androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged() -> setAlwaysBadged
    463:464:androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set) -> setCategories
    363:364:androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> setDisabledMessage
    398:399:androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    378:378:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> setIntent
    389:390:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> setIntents
    351:352:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
    474:475:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived() -> setLongLived
    443:443:androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person) -> setPerson
    451:452:androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[]) -> setPersons
    337:338:androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
androidx.core.content.pm.ShortcutInfoCompatSaver -> androidx.core.content.pm.ShortcutInfoCompatSaver:
    36:36:void <init>() -> <init>
    48:48:java.util.List getShortcuts() -> getShortcuts
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl -> androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl:
    57:57:void <init>() -> <init>
    56:56:java.lang.Object addShortcuts(java.util.List) -> addShortcuts
    60:60:java.lang.Void addShortcuts(java.util.List) -> addShortcuts
    56:56:java.lang.Object removeAllShortcuts() -> removeAllShortcuts
    70:70:java.lang.Void removeAllShortcuts() -> removeAllShortcuts
    56:56:java.lang.Object removeShortcuts(java.util.List) -> removeShortcuts
    65:65:java.lang.Void removeShortcuts(java.util.List) -> removeShortcuts
androidx.core.content.pm.ShortcutManagerCompat -> androidx.core.content.pm.ShortcutManagerCompat:
    androidx.core.content.pm.ShortcutInfoCompatSaver sShortcutInfoCompatSaver -> a
    65:65:void <clinit>() -> <clinit>
    67:69:void <init>() -> <init>
    287:304:androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context) -> a
    181:192:boolean addDynamicShortcuts(android.content.Context,java.util.List) -> addDynamicShortcuts
    156:164:android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> createShortcutResultIntent
    217:233:java.util.List getDynamicShortcuts(android.content.Context) -> getDynamicShortcuts
    200:205:int getMaxShortcutCountPerActivity(android.content.Context) -> getMaxShortcutCountPerActivity
    76:91:boolean isRequestPinShortcutSupported(android.content.Context) -> isRequestPinShortcutSupported
    279:284:void removeAllDynamicShortcuts(android.content.Context) -> removeAllDynamicShortcuts
    268:273:void removeDynamicShortcuts(android.content.Context,java.util.List) -> removeDynamicShortcuts
    113:140:boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> requestPinShortcut
    249:260:boolean updateShortcuts(android.content.Context,java.util.List) -> updateShortcuts
androidx.core.content.pm.ShortcutManagerCompat$1 -> androidx.core.content.pm.ShortcutManagerCompat$a:
    android.content.IntentSender val$callback -> a
    130:130:void <init>(android.content.IntentSender) -> <init>
    134:138:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    49:50:void <init>() -> <init>
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    191:191:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> a
    198:199:int modulateColorAlpha(int,float) -> a
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    65:70:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    android.content.res.ColorStateList mColorStateList -> b
    android.graphics.Shader mShader -> a
    int mColor -> c
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> a
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> a
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> a
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> a
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.ConfigurationHelper -> androidx.core.content.res.ConfigurationHelper:
    31:32:void <init>() -> <init>
    41:42:int getDensityDpi(android.content.res.Resources) -> getDensityDpi
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    331:332:void <init>() -> <init>
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> a
    230:231:int getType(android.content.res.TypedArray,int) -> a
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> a
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> a
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> b
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> c
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    androidx.core.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> v3:
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> a
    202:204:android.graphics.Shader$TileMode parseTileMode(int) -> a
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> b
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> v3$a:
    int[] mColors -> a
    float[] mOffsets -> b
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> w3:
    41:50:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> a
    57:65:int[] append(int[],int,int) -> a
    189:189:int growSize(int) -> a
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    441:441:void <init>() -> <init>
    359:367:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    379:381:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> a
    145:148:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    175:178:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    82:83:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    115:116:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    195:201:float getFloat(android.content.res.Resources,int) -> getFloat
    227:230:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    318:326:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    336:339:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    237:237:void <init>() -> <init>
    286:295:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    267:276:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$a:
    android.graphics.Typeface val$typeface -> a
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
    270:270:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    273:274:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$b:
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> b
    int val$reason -> a
    289:289:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    292:293:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    362:363:void <init>() -> <init>
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> a
    354:359:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.database.CursorWindowCompat -> androidx.core.database.CursorWindowCompat:
    30:32:void <init>() -> <init>
    41:44:android.database.CursorWindow create(java.lang.String,long) -> create
androidx.core.database.DatabaseUtilsCompat -> androidx.core.database.DatabaseUtilsCompat:
    29:31:void <init>() -> <init>
    60:61:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
    41:48:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
androidx.core.database.sqlite.SQLiteCursorCompat -> androidx.core.database.sqlite.SQLiteCursorCompat:
    29:31:void <init>() -> <init>
    45:48:void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean) -> setFillWindowForwardOnly
androidx.core.graphics.BitmapCompat -> androidx.core.graphics.BitmapCompat:
    54:54:void <init>() -> <init>
    48:49:int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    28:29:boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    35:38:void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    java.lang.ThreadLocal TEMP_ARRAY -> a
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    306:356:int HSLToColor(float[]) -> HSLToColor
    570:572:int LABToColor(double,double,double) -> LABToColor
    513:527:void LABToXYZ(double,double,double,double[]) -> LABToXYZ
    241:275:void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    399:403:void RGBToLAB(int,int,int,double[]) -> RGBToLAB
    444:445:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    544:552:int XYZToColor(double,double,double) -> XYZToColor
    481:482:void XYZToLAB(double,double,double,double[]) -> XYZToLAB
    131:131:int compositeAlpha(int,int) -> a
    135:136:int compositeComponent(int,int,int,int,int) -> a
    589:589:int constrain(int,int,int) -> a
    593:593:double pivotXyzComponent(double) -> a
    667:674:float circularInterpolate(float,float,float) -> a
    678:683:double[] getTempDouble3Array() -> a
    585:585:float constrain(float,float,float) -> b
    611:616:int blendARGB(int,int,float) -> blendARGB
    633:634:void blendHSL(float[],float[],float,float[]) -> blendHSL
    656:657:void blendLAB(double[],double[],double,double[]) -> blendLAB
    159:161:double calculateContrast(int,int) -> calculateContrast
    145:148:double calculateLuminance(int) -> calculateLuminance
    187:189:int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    289:290:void colorToHSL(int,float[]) -> colorToHSL
    378:379:void colorToLAB(int,double[]) -> colorToLAB
    421:422:void colorToXYZ(int,double[]) -> colorToXYZ
    53:64:int compositeColors(int,int) -> compositeColors
    92:95:android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color) -> compositeColors
    579:579:double distanceEuclidean(double[],double[]) -> distanceEuclidean
    365:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    java.lang.ThreadLocal sRectThreadLocal -> a
    34:34:void <clinit>() -> <clinit>
    119:119:void <init>() -> <init>
    108:116:androidx.core.util.Pair obtainEmptyRects() -> a
    45:104:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    795:796:void <init>() -> <init>
    54:55:float[] copyOfRange(float[],int,int) -> a
    174:186:int nextStart(java.lang.String,int) -> a
    190:191:void addNode(java.util.ArrayList,char,float[]) -> a
    211:212:float[] getFloats(java.lang.String) -> a
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> a
    137:138:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    315:316:boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float) -> interpolatePathDataNodes
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$a:
    boolean mEndWithNegOrDot -> b
    int mEndPosition -> a
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> a
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> a
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> a
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.PathSegment -> androidx.core.graphics.PathSegment:
    android.graphics.PointF mStart -> a
    float mEndFraction -> d
    float mStartFraction -> b
    android.graphics.PointF mEnd -> c
    37:42:void <init>(android.graphics.PointF,float,android.graphics.PointF,float) -> <init>
    72:75:boolean equals(java.lang.Object) -> equals
    60:60:android.graphics.PointF getEnd() -> getEnd
    67:67:float getEndFraction() -> getEndFraction
    47:47:android.graphics.PointF getStart() -> getStart
    54:54:float getStartFraction() -> getStartFraction
    83:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> androidx.core.graphics.PathUtils:
    82:83:void <init>() -> <init>
    43:43:java.util.Collection flatten(android.graphics.Path) -> flatten
    60:79:java.util.Collection flatten(android.graphics.Path,float) -> flatten
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    androidx.collection.LruCache sTypefaceCache -> b
    46:63:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    88:88:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> a
    190:191:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    160:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    105:131:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    143:149:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    76:76:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
androidx.core.graphics.TypefaceCompatApi21Impl -> x3:
    java.lang.reflect.Method sAddFontWeightStyle -> d
    boolean sHasInitBeenCalled -> f
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    java.lang.Class sFontFamily -> b
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    68:97:void init() -> a
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> a
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> a
    114:118:java.lang.Object newFamily() -> b
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
androidx.core.graphics.TypefaceCompatApi24Impl -> y3:
    java.lang.reflect.Method sAddFontWeightStyle -> d
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    java.lang.Class sFontFamily -> b
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    94:98:boolean isUsable() -> a
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> a
    103:105:java.lang.Object newFamily() -> b
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> a
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> a
    194:197:void abortCreation(java.lang.Object) -> a
    127:129:java.lang.Object newFamily() -> b
    183:185:boolean freeze(java.lang.Object) -> b
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> c
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    204:222:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    230:282:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    292:308:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    342:342:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    332:332:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    347:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    317:317:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    338:338:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatBaseImpl -> z3:
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    45:52:void <init>() -> <init>
    61:76:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> a
    114:127:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    187:200:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> z3$a:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> a
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> a
    99:99:boolean isItalic(java.lang.Object) -> b
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> b
androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor -> z3$b:
    int getWeight(java.lang.Object) -> a
    boolean isItalic(java.lang.Object) -> b
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    52:52:void <init>() -> <init>
    88:93:java.nio.ByteBuffer mmap(java.io.File) -> a
    175:181:void closeQuietly(java.io.Closeable) -> closeQuietly
    124:134:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    142:157:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    165:170:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:79:java.io.File getTempFile(android.content.Context) -> getTempFile
    103:114:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    java.lang.reflect.Method sGetLayoutDirectionMethod -> c
    boolean sSetLayoutDirectionMethodFetched -> b
    java.lang.reflect.Method sSetLayoutDirectionMethod -> a
    boolean sGetLayoutDirectionMethodFetched -> d
    419:419:void <init>() -> <init>
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:198:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:211:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:413:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:377:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:313:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode mTintMode -> b
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> c
    java.lang.Object mObj1 -> a
    177:177:void <clinit>() -> <clinit>
    308:309:void <init>() -> <init>
    311:313:void <init>(int) -> <init>
    535:537:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> a
    590:605:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> a
    817:818:java.lang.String typeToString(int) -> a
    973:980:int getResId(android.graphics.drawable.Icon) -> a
    1027:1062:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> a
    618:667:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    944:951:java.lang.String getResPackage(android.graphics.drawable.Icon) -> b
    916:923:int getType(android.graphics.drawable.Icon) -> c
    489:506:void checkResource(android.content.Context) -> checkResource
    831:859:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> createFromBundle
    868:876:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> createFromIcon
    894:897:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    247:248:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    232:233:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    282:283:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    297:298:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    265:266:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    195:196:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    206:207:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    1001:1008:android.net.Uri getUri(android.graphics.drawable.Icon) -> d
    378:389:android.graphics.Bitmap getBitmap() -> getBitmap
    357:361:int getResId() -> getResId
    339:343:java.lang.String getResPackage() -> getResPackage
    324:327:int getType() -> getType
    402:405:android.net.Uri getUri() -> getUri
    517:527:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> loadDrawable
    785:791:void onPostParceling() -> onPostParceling
    749:754:void onPreParceling(boolean) -> onPreParceling
    415:415:androidx.core.graphics.drawable.IconCompat setTint(int) -> setTint
    425:426:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> setTintList
    436:437:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    674:703:android.os.Bundle toBundle() -> toBundle
    448:451:android.graphics.drawable.Icon toIcon() -> toIcon
    708:744:java.lang.String toString() -> toString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mCornerRadius -> g
    boolean mApplyGravity -> j
    android.graphics.Matrix mShaderMatrix -> f
    boolean mIsCircular -> k
    android.graphics.Rect mDstRect -> h
    android.graphics.BitmapShader mBitmapShader -> e
    android.graphics.RectF mDstRectF -> i
    int mTargetDensity -> b
    int mGravity -> c
    android.graphics.Paint mPaint -> d
    android.graphics.Bitmap mBitmap -> a
    382:395:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:86:void computeBitmapSize() -> a
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> a
    398:398:boolean isGreaterThanZero(float) -> a
    315:317:void updateCircularCornerRadius() -> b
    227:256:void updateDstRect() -> c
    260:271:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    80:80:android.graphics.Bitmap getBitmap() -> getBitmap
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    140:140:int getGravity() -> getGravity
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:372:int getOpacity() -> getOpacity
    72:72:android.graphics.Paint getPaint() -> getPaint
    206:206:boolean hasAntiAlias() -> hasAntiAlias
    182:182:boolean hasMipMap() -> hasMipMap
    323:323:boolean isCircular() -> isCircular
    345:350:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:280:void setAlpha(int) -> setAlpha
    194:196:void setAntiAlias(boolean) -> setAntiAlias
    303:312:void setCircular(boolean) -> setCircular
    289:291:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:341:void setCornerRadius(float) -> setCornerRadius
    217:219:void setDither(boolean) -> setDither
    211:213:void setFilterBitmap(boolean) -> setFilterBitmap
    151:156:void setGravity(int) -> setGravity
    170:170:void setMipMap(boolean) -> setMipMap
    99:100:void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    111:112:void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    123:130:void setTargetDensity(int) -> setTargetDensity
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> a4:
    31:32:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    56:58:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> a
    36:38:void getOutline(android.graphics.Outline) -> getOutline
    50:50:boolean hasMipMap() -> hasMipMap
    42:46:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    104:104:void <init>() -> <init>
    73:74:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    84:88:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    97:101:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
androidx.core.graphics.drawable.WrappedDrawableApi14 -> b4:
    android.graphics.drawable.Drawable mDrawable -> f
    androidx.core.graphics.drawable.WrappedDrawableState mState -> d
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> g
    android.graphics.PorterDuff$Mode mCurrentMode -> b
    boolean mMutated -> e
    boolean mColorFilterSet -> c
    int mCurrentColor -> a
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    boolean isCompatTintEnabled() -> a
    74:77:void updateLocalState(android.content.res.Resources) -> a
    293:314:boolean updateTint(int[]) -> a
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> b
    86:87:void draw(android.graphics.Canvas) -> draw
    103:103:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> c4:
    java.lang.reflect.Method sIsProjectedDrawableMethod -> h
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    113:120:boolean isCompatTintEnabled() -> a
    140:147:void findAndCacheIsProjectedDrawableMethod() -> c
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    128:136:boolean isProjected() -> isProjected
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> d4:
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mChangingConfigurations -> a
    35:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> a
    61:61:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:54:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> androidx.core.hardware.display.DisplayManagerCompat:
    android.content.Context mContext -> a
    java.util.WeakHashMap sInstances -> b
    34:34:void <clinit>() -> <clinit>
    53:55:void <init>(android.content.Context) -> <init>
    83:84:android.view.Display getDisplay(int) -> getDisplay
    103:104:android.view.Display[] getDisplays() -> getDisplays
    131:132:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    62:69:androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    android.content.Context mContext -> a
    55:57:void <init>(android.content.Context) -> <init>
    126:132:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> a
    138:147:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> a
    153:162:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> a
    169:169:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> a
    107:121:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    52:52:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    66:70:boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    81:85:boolean isHardwareDetected() -> isHardwareDetected
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$a:
    androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback -> a
    169:169:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    172:173:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:189:void onAuthenticationFailed() -> onAuthenticationFailed
    177:178:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:184:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    270:270:void <init>() -> <init>
    277:277:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    297:297:void onAuthenticationFailed() -> onAuthenticationFailed
    286:286:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    292:292:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject -> a
    251:253:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    260:260:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    javax.crypto.Cipher mCipher -> b
    javax.crypto.Mac mMac -> c
    java.security.Signature mSignature -> a
    203:208:void <init>(java.security.Signature) -> <init>
    210:214:void <init>(javax.crypto.Cipher) -> <init>
    216:220:void <init>(javax.crypto.Mac) -> <init>
    234:234:javax.crypto.Cipher getCipher() -> getCipher
    241:241:javax.crypto.Mac getMac() -> getMac
    227:227:java.security.Signature getSignature() -> getSignature
androidx.core.location.LocationManagerCompat -> androidx.core.location.LocationManagerCompat:
    50:50:void <init>() -> <init>
    36:45:boolean isLocationEnabled(android.location.LocationManager) -> isLocationEnabled
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    24:24:void <init>() -> <init>
    39:44:float clamp(float,float,float) -> clamp
    60:65:double clamp(double,double,double) -> clamp
    81:86:int clamp(int,int,int) -> clamp
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    164:164:void <init>() -> <init>
    139:143:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    157:160:int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
    99:100:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.net.DatagramSocketWrapper -> e4:
    32:33:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> e4$a:
    40:43:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.TrafficStatsCompat -> androidx.core.net.TrafficStatsCompat:
    167:167:void <init>() -> <init>
    41:42:void clearThreadStatsTag() -> clearThreadStatsTag
    53:53:int getThreadStatsTag() -> getThreadStatsTag
    67:68:void incrementOperationCount(int) -> incrementOperationCount
    81:82:void incrementOperationCount(int,int) -> incrementOperationCount
    99:100:void setThreadStatsTag(int) -> setThreadStatsTag
    137:148:void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    114:115:void tagSocket(java.net.Socket) -> tagSocket
    154:165:void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
    124:125:void untagSocket(java.net.Socket) -> untagSocket
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    26:27:void <init>() -> <init>
    39:39:boolean isAtLeastN() -> isAtLeastN
    52:52:boolean isAtLeastNMR1() -> isAtLeastNMR1
    65:65:boolean isAtLeastO() -> isAtLeastO
    78:78:boolean isAtLeastOMR1() -> isAtLeastOMR1
    91:91:boolean isAtLeastP() -> isAtLeastP
    105:105:boolean isAtLeastQ() -> isAtLeastQ
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    java.lang.Object mCancellationSignalObj -> c
    boolean mIsCanceled -> a
    androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener -> b
    boolean mCancelInProgress -> d
    37:38:void <init>() -> <init>
    153:159:void waitForCancelFinishedLocked() -> a
    69:77:void cancel() -> cancel
    138:149:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    46:48:boolean isCanceled() -> isCanceled
    111:121:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    57:58:void throwIfCanceled() -> throwIfCanceled
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    30:31:void <init>() -> <init>
    40:43:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    76:76:void <init>() -> <init>
    57:58:java.lang.String getStorageState(java.io.File) -> getStorageState
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    153:154:void <init>() -> <init>
    52:75:android.os.Handler createAsync(android.os.Looper) -> createAsync
    93:116:android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback) -> createAsync
    144:150:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> postDelayed
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    androidx.core.os.LocaleListCompat sEmptyLocaleList -> b
    androidx.core.os.LocaleListInterface mImpl -> a
    34:34:void <clinit>() -> <clinit>
    38:40:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    174:193:java.util.Locale forLanguageTagCompat(java.lang.String) -> a
    73:76:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    234:234:boolean equals(java.lang.Object) -> equals
    158:159:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    86:86:java.util.Locale get(int) -> get
    205:208:androidx.core.os.LocaleListCompat getAdjustedDefault() -> getAdjustedDefault
    225:228:androidx.core.os.LocaleListCompat getDefault() -> getDefault
    145:145:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    137:137:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    239:239:int hashCode() -> hashCode
    117:117:int indexOf(java.util.Locale) -> indexOf
    96:96:boolean isEmpty() -> isEmpty
    104:104:int size() -> size
    125:125:java.lang.String toLanguageTags() -> toLanguageTags
    244:244:java.lang.String toString() -> toString
    65:65:java.lang.Object unwrap() -> unwrap
    46:46:androidx.core.os.LocaleListCompat wrap(java.lang.Object) -> wrap
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompatWrapper -> f4:
    java.util.Locale[] mList -> a
    java.util.Locale[] sEmptyList -> c
    java.util.Locale EN_LATN -> f
    java.util.Locale LOCALE_AR_XB -> e
    java.util.Locale LOCALE_EN_XA -> d
    java.lang.String mStringRepresentation -> b
    39:217:void <clinit>() -> <clinit>
    120:147:void <init>(java.util.Locale[]) -> <init>
    44:44:java.lang.Object getLocaleList() -> a
    64:69:int indexOf(java.util.Locale) -> a
    151:157:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> a
    180:189:int matchScore(java.util.Locale,java.util.Locale) -> a
    259:260:java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> a
    265:265:java.util.Locale getFirstMatch(java.lang.String[]) -> a
    117:117:java.lang.String toLanguageTags() -> b
    208:214:int findFirstMatchIndex(java.util.Locale) -> b
    221:253:int computeFirstMatchIndex(java.util.Collection,boolean) -> b
    160:165:java.lang.String getLikelyScript(java.util.Locale) -> c
    175:175:boolean isPseudoLocale(java.util.Locale) -> d
    74:89:boolean equals(java.lang.Object) -> equals
    49:49:java.util.Locale get(int) -> get
    94:98:int hashCode() -> hashCode
    54:54:boolean isEmpty() -> isEmpty
    59:59:int size() -> size
    103:112:java.lang.String toString() -> toString
androidx.core.os.LocaleListInterface -> g4:
    java.util.Locale getFirstMatch(java.lang.String[]) -> a
    java.lang.Object getLocaleList() -> a
    int indexOf(java.util.Locale) -> a
    java.lang.String toLanguageTags() -> b
androidx.core.os.LocaleListPlatformWrapper -> h4:
    android.os.LocaleList mLocaleList -> a
    31:33:void <init>(android.os.LocaleList) -> <init>
    37:37:java.lang.Object getLocaleList() -> a
    57:57:int indexOf(java.util.Locale) -> a
    83:83:java.util.Locale getFirstMatch(java.lang.String[]) -> a
    77:77:java.lang.String toLanguageTags() -> b
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    67:67:int hashCode() -> hashCode
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    72:72:java.lang.String toString() -> toString
androidx.core.os.MessageCompat -> androidx.core.os.MessageCompat:
    boolean sTrySetAsynchronous -> a
    boolean sTryIsAsynchronous -> b
    34:39:void <clinit>() -> <clinit>
    112:113:void <init>() -> <init>
    97:109:boolean isAsynchronous(android.os.Message) -> isAsynchronous
    71:84:void setAsynchronous(android.os.Message,boolean) -> setAsynchronous
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> androidx.core.os.ParcelCompat:
    46:46:void <init>() -> <init>
    32:32:boolean readBoolean(android.os.Parcel) -> readBoolean
    43:44:void writeBoolean(android.os.Parcel,boolean) -> writeBoolean
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    68:68:void <init>() -> <init>
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> newCreator
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$a:
    androidx.core.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    48:50:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    64:64:void <init>() -> <init>
    46:49:void beginSection(java.lang.String) -> beginSection
    59:62:void endSection() -> endSection
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    31:32:void <init>() -> <init>
    41:44:boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    java.lang.String mIdentifier -> f
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    int mCertificatesArray -> e
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    78:87:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    androidx.collection.SimpleArrayMap sPendingReplies -> d
    androidx.collection.LruCache sTypefaceCache -> a
    java.lang.Object sLock -> c
    java.util.Comparator sByteArrayComparator -> e
    androidx.core.provider.SelfDestructiveThread sBackgroundThread -> b
    172:784:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> a
    540:653:void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> a
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> a
    801:809:boolean equalsByteArrayList(java.util.List,java.util.List) -> a
    813:817:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> a
    824:878:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> a
    670:670:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    727:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    531:532:void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFont
    223:224:void resetCache() -> resetCache
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$a:
    android.content.Context val$context -> a
    androidx.core.provider.FontRequest val$request -> b
    int val$style -> c
    java.lang.String val$id -> d
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$b:
    android.os.Handler val$handler -> b
    androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback -> a
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    276:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
    273:273:void onReply(java.lang.Object) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$c:
    java.lang.String val$id -> a
    303:303:void <init>(java.lang.String) -> <init>
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
    303:303:void onReply(java.lang.Object) -> onReply
androidx.core.provider.FontsContractCompat$4 -> androidx.core.provider.FontsContractCompat$d:
    android.content.Context val$appContext -> a
    android.os.Handler val$callerThreadHandler -> c
    androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback -> d
    androidx.core.provider.FontRequest val$request -> b
    541:541:void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> <init>
    547:556:void run() -> run
androidx.core.provider.FontsContractCompat$4$1 -> androidx.core.provider.FontsContractCompat$d$a:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    549:549:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    552:554:void run() -> run
androidx.core.provider.FontsContractCompat$4$2 -> androidx.core.provider.FontsContractCompat$d$b:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    562:562:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    565:567:void run() -> run
androidx.core.provider.FontsContractCompat$4$3 -> androidx.core.provider.FontsContractCompat$d$c:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    571:571:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    574:576:void run() -> run
androidx.core.provider.FontsContractCompat$4$4 -> androidx.core.provider.FontsContractCompat$d$d:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    581:581:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    584:586:void run() -> run
androidx.core.provider.FontsContractCompat$4$5 -> androidx.core.provider.FontsContractCompat$d$e:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    594:594:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    597:599:void run() -> run
androidx.core.provider.FontsContractCompat$4$6 -> androidx.core.provider.FontsContractCompat$d$f:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    611:611:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    614:616:void run() -> run
androidx.core.provider.FontsContractCompat$4$7 -> androidx.core.provider.FontsContractCompat$d$g:
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    int val$resultCode -> a
    619:619:void <init>(androidx.core.provider.FontsContractCompat$4,int) -> <init>
    622:623:void run() -> run
androidx.core.provider.FontsContractCompat$4$8 -> androidx.core.provider.FontsContractCompat$d$h:
    androidx.core.provider.FontsContractCompat$4 this$0 -> a
    635:635:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    638:640:void run() -> run
androidx.core.provider.FontsContractCompat$4$9 -> androidx.core.provider.FontsContractCompat$d$i:
    android.graphics.Typeface val$typeface -> a
    androidx.core.provider.FontsContractCompat$4 this$0 -> b
    645:645:void <init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    648:649:void run() -> run
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$e:
    784:784:void <init>() -> <init>
    787:795:int compare(byte[],byte[]) -> a
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.core.provider.FontsContractCompat$Columns -> androidx.core.provider.FontsContractCompat$Columns:
    82:82:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
    427:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    433:433:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    346:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> getResultCode
    365:365:int getTtcIndex() -> getTtcIndex
    358:358:android.net.Uri getUri() -> getUri
    372:372:int getWeight() -> getWeight
    379:379:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    493:493:void <init>() -> <init>
    514:514:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    501:501:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$f:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
    211:214:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    java.lang.String mThreadName -> h
    android.os.Handler mHandler -> c
    android.os.Handler$Callback mCallback -> e
    int mDestructAfterMillisec -> f
    int mPriority -> g
    int mGeneration -> d
    java.lang.Object mLock -> a
    android.os.HandlerThread mThread -> b
    79:84:void <init>(java.lang.String,int,int) -> <init>
    214:219:void onInvokeRunnable(java.lang.Runnable) -> a
    223:232:void onDestruction() -> a
    107:116:void post(java.lang.Runnable) -> b
    101:103:int getGeneration() -> getGeneration
    91:93:boolean isRunning() -> isRunning
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$a:
    androidx.core.provider.SelfDestructiveThread this$0 -> a
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:67:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$b:
    android.os.Handler val$callingHandler -> b
    java.util.concurrent.Callable val$callable -> a
    androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply -> c
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$b$a:
    androidx.core.provider.SelfDestructiveThread$2 this$1 -> b
    java.lang.Object val$result -> a
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$c:
    java.util.concurrent.atomic.AtomicBoolean val$running -> d
    java.util.concurrent.locks.Condition val$cond -> e
    java.util.concurrent.locks.ReentrantLock val$lock -> c
    java.util.concurrent.Callable val$callable -> b
    java.util.concurrent.atomic.AtomicReference val$holder -> a
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:184:void run() -> run
androidx.core.telephony.mbms.MbmsHelper -> androidx.core.telephony.mbms.MbmsHelper:
    36:36:void <init>() -> <init>
    57:75:java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo) -> getBestNameForService
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    java.lang.String RLM_STRING -> f
    androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE -> g
    androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> d
    androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> c
    boolean mIsRtlContext -> a
    int mFlags -> b
    androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE -> h
    java.lang.String LRM_STRING -> e
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> a
    516:516:boolean isRtlLocale(java.util.Locale) -> a
    558:558:int getEntryDir(java.lang.CharSequence) -> a
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> b
    541:541:int getExitDir(java.lang.CharSequence) -> b
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    245:245:androidx.core.text.BidiFormatter getInstance(boolean) -> getInstance
    254:254:androidx.core.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    347:347:boolean isRtl(java.lang.String) -> isRtl
    358:358:boolean isRtl(java.lang.CharSequence) -> isRtl
    272:272:boolean isRtlContext() -> isRtlContext
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    441:441:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    469:469:java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    483:483:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    androidx.core.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    boolean mIsRtlContext -> a
    int mFlags -> b
    139:141:void <init>() -> <init>
    148:150:void <init>(boolean) -> <init>
    157:159:void <init>(java.util.Locale) -> <init>
    167:170:void initialize(boolean) -> a
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> b
    205:209:androidx.core.text.BidiFormatter build() -> build
    193:194:androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    177:182:androidx.core.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$a:
    java.lang.CharSequence text -> a
    int charIndex -> d
    boolean isHtml -> b
    int length -> c
    byte[] DIR_TYPE_CACHE -> f
    char lastChar -> e
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    803:803:byte getCachedDirectionality(char) -> a
    846:862:byte dirTypeBackward() -> a
    816:832:byte dirTypeForward() -> b
    646:728:int getEntryDir() -> c
    744:792:int getExitDir() -> d
    944:956:byte skipEntityBackward() -> e
    929:930:byte skipEntityForward() -> f
    901:920:byte skipTagBackward() -> g
    872:888:byte skipTagForward() -> h
androidx.core.text.HtmlCompat -> androidx.core.text.HtmlCompat:
    181:182:void <init>() -> <init>
    146:150:android.text.Spanned fromHtml(java.lang.String,int) -> fromHtml
    161:165:android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> fromHtml
    174:178:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    java.lang.reflect.Method sAddLikelySubtagsMethod -> a
    36:62:void <clinit>() -> <clinit>
    146:146:void <init>() -> <init>
    89:101:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    android.text.Spannable mText -> a
    int[] mParagraphEnds -> c
    java.lang.Object sLock -> d
    java.util.concurrent.Executor sExecutor -> e
    androidx.core.text.PrecomputedTextCompat$Params mParams -> b
    72:73:void <clinit>() -> <clinit>
    479:484:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    712:712:char charAt(int) -> charAt
    426:473:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    519:519:int getParagraphCount() -> getParagraphCount
    534:535:int getParagraphEnd(int) -> getParagraphEnd
    526:527:int getParagraphStart(int) -> getParagraphStart
    512:512:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    501:504:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    687:687:int getSpanEnd(java.lang.Object) -> getSpanEnd
    692:692:int getSpanFlags(java.lang.Object) -> getSpanFlags
    682:682:int getSpanStart(java.lang.Object) -> getSpanStart
    677:677:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    627:637:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> getTextFuture
    707:707:int length() -> length
    697:697:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    663:664:void removeSpan(java.lang.Object) -> removeSpan
    651:652:void setSpan(java.lang.Object,int,int,int) -> setSpan
    717:717:java.lang.CharSequence subSequence(int,int) -> subSequence
    722:722:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    android.text.TextPaint mPaint -> a
    android.text.PrecomputedText$Params mWrapped -> e
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    195:201:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    204:210:void <init>(android.text.PrecomputedText$Params) -> <init>
    327:342:boolean equals(java.lang.Object) -> equals
    266:317:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    243:243:int getBreakStrategy() -> getBreakStrategy
    255:255:int getHyphenationFrequency() -> getHyphenationFrequency
    231:231:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    218:218:android.text.TextPaint getTextPaint() -> getTextPaint
    347:353:int hashCode() -> hashCode
    374:395:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    android.text.TextPaint mPaint -> a
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    115:128:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> androidx.core.text.PrecomputedTextCompat$a:
    560:561:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$a$a:
    java.lang.CharSequence mText -> b
    androidx.core.text.PrecomputedTextCompat$Params mParams -> a
    547:550:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    542:542:java.lang.Object call() -> call
    554:554:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    257:257:void <init>() -> <init>
    79:81:int isRtlText(int) -> a
    91:95:int isRtlTextOrFormat(int) -> b
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$a:
    boolean mLookForRtl -> a
    androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> b
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$b:
    androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> androidx.core.text.TextDirectionHeuristicsCompat$c:
    int checkRtl(java.lang.CharSequence,int,int) -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$d:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    boolean defaultIsRtl() -> a
    140:142:boolean doCheck(java.lang.CharSequence,int,int) -> a
    125:125:boolean isRtl(char[],int,int) -> isRtl
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$e:
    boolean mDefaultIsRtl -> b
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> a
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$f:
    androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> b
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> a
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    java.util.Locale ROOT -> a
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    90:91:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    45:46:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.util.FindAddress -> i4:
    java.util.regex.Pattern sZipCodeRe -> g
    java.util.regex.Pattern sSuffixedNumberRe -> f
    java.util.regex.Pattern sHouseNumberRe -> c
    java.util.regex.Pattern sWordRe -> b
    java.util.regex.Pattern sLocationNameRe -> e
    java.util.regex.Pattern sStateRe -> d
    androidx.core.text.util.FindAddress$ZipRange[] sStateZipCodeRanges -> a
    72:267:void <clinit>() -> <clinit>
    272:297:boolean checkHouseNumber(java.lang.String) -> a
    310:316:java.util.regex.MatchResult matchHouseNumber(java.lang.String,int) -> a
    401:490:int attemptMatch(java.lang.String,java.util.regex.MatchResult) -> a
    330:332:java.util.regex.MatchResult matchState(java.lang.String,int) -> b
    345:351:boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult) -> b
    500:514:java.lang.String findAddress(java.lang.String) -> b
    388:388:boolean isValidLocationName(java.lang.String) -> c
androidx.core.text.util.FindAddress$ZipRange -> i4$a:
    int mException2 -> d
    int mHigh -> b
    int mException1 -> c
    int mLow -> a
    43:48:void <init>(int,int,int,int) -> <init>
    51:52:boolean matches(java.lang.String) -> a
androidx.core.text.util.LinkifyCompat -> androidx.core.text.util.LinkifyCompat:
    java.lang.String[] EMPTY_STRING -> a
    java.util.Comparator COMPARATOR -> b
    57:59:void <clinit>() -> <clinit>
    542:542:void <init>() -> <init>
    376:376:boolean shouldAddLinksFallbackToFramework() -> a
    380:387:void addLinkMovementMethod(android.widget.TextView) -> a
    391:414:java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> a
    420:437:void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> a
    440:443:void applyLink(java.lang.String,int,int,android.text.Spannable) -> a
    446:482:void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> a
    487:490:java.lang.String findAddress(java.lang.String) -> a
    102:149:boolean addLinks(android.text.Spannable,int) -> addLinks
    164:190:boolean addLinks(android.widget.TextView,int) -> addLinks
    207:212:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> addLinks
    231:236:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    259:271:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    284:287:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> addLinks
    308:311:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    335:372:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    495:537:void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> b
androidx.core.text.util.LinkifyCompat$1 -> androidx.core.text.util.LinkifyCompat$a:
    59:59:void <init>() -> <init>
    62:78:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> a
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> androidx.core.text.util.LinkifyCompat$b:
    android.text.style.URLSpan frameworkAddedSpan -> a
    int end -> d
    java.lang.String url -> b
    int start -> c
    550:551:void <init>() -> <init>
androidx.core.util.AtomicFile -> androidx.core.util.AtomicFile:
    java.io.File mBackupName -> b
    java.io.File mBaseName -> a
    54:57:void <init>(java.io.File) -> <init>
    212:216:boolean sync(java.io.FileOutputStream) -> a
    72:74:void delete() -> delete
    144:154:void failWrite(java.io.FileOutputStream) -> failWrite
    127:136:void finishWrite(java.io.FileOutputStream) -> finishWrite
    65:65:java.io.File getBaseFile() -> getBaseFile
    170:174:java.io.FileInputStream openRead() -> openRead
    183:206:byte[] readFully() -> readFully
    93:109:java.io.FileOutputStream startWrite() -> startWrite
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    49:50:void <init>() -> <init>
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    java.lang.StringBuilder mBuilder -> b
    java.lang.String mTag -> a
    43:45:void <init>(java.lang.String) -> <init>
    68:72:void flushBuilder() -> a
    48:49:void close() -> close
    52:53:void flush() -> flush
    56:65:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    29:31:void <init>() -> <init>
    50:51:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:93:int hash(java.lang.Object[]) -> hash
    65:65:int hashCode(java.lang.Object) -> hashCode
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    82:82:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.PatternsCompat -> androidx.core.util.PatternsCompat:
    java.util.regex.Pattern STRICT_DOMAIN_NAME -> a
    java.lang.String WEB_URL_WITHOUT_PROTOCOL -> c
    java.lang.String RELAXED_DOMAIN_NAME -> b
    java.lang.String WEB_URL_WITH_PROTOCOL -> d
    153:337:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> androidx.core.util.Pools:
    73:75:void <init>() -> <init>
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    java.lang.Object[] mPool -> a
    int mPoolSize -> b
    94:96:void <init>(int) -> <init>
    128:133:boolean isInPool(java.lang.Object) -> a
    104:111:java.lang.Object acquire() -> acquire
    116:117:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> c
    153:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    171:172:void <init>() -> <init>
    35:36:void checkArgument(boolean) -> checkArgument
    49:50:void checkArgument(boolean,java.lang.Object) -> checkArgument
    158:160:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    121:122:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    137:138:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    63:64:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    80:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    95:96:void checkState(boolean,java.lang.String) -> checkState
    108:109:void checkState(boolean) -> checkState
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    char[] sFormatStr -> b
    java.lang.Object sFormatSync -> a
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    44:45:int accumField(int,int,boolean,int) -> a
    58:77:int printField(char[],int,char,int,boolean,int) -> a
    81:148:int formatDurationLocked(long,int) -> a
    154:157:void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    163:166:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:173:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    178:183:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    130:130:void <clinit>() -> <clinit>
    139:140:void <init>() -> <init>
    146:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    155:155:android.view.View$AccessibilityDelegate getBridge() -> a
    364:377:boolean performClickableSpanAction(int,android.view.View) -> a
    381:390:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> a
    394:396:java.util.List getActionList(android.view.View) -> a
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:324:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    256:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    344:360:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    173:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$a:
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:120:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:92:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    android.content.Context mContext -> a
    androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    139:141:void <init>(android.content.Context) -> <init>
    147:147:android.content.Context getContext() -> getContext
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    206:209:void refreshVisibility() -> refreshVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    279:282:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    java.lang.Object mDisplayCutout -> a
    46:47:void <init>(android.graphics.Rect,java.util.List) -> <init>
    49:51:void <init>(java.lang.Object) -> <init>
    130:130:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> a
    108:112:boolean equals(java.lang.Object) -> equals
    99:102:java.util.List getBoundingRects() -> getBoundingRects
    64:67:int getSafeInsetBottom() -> getSafeInsetBottom
    73:76:int getSafeInsetLeft() -> getSafeInsetLeft
    82:85:int getSafeInsetRight() -> getSafeInsetRight
    55:58:int getSafeInsetTop() -> getSafeInsetTop
    121:121:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
androidx.core.view.DragAndDropPermissionsCompat -> androidx.core.view.DragAndDropPermissionsCompat:
    java.lang.Object mDragAndDropPermissions -> a
    36:38:void <init>(java.lang.Object) -> <init>
    58:61:void release() -> release
    44:51:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> request
androidx.core.view.DragStartHelper -> androidx.core.view.DragStartHelper:
    android.view.View mView -> a
    boolean mDragging -> e
    int mLastTouchY -> d
    android.view.View$OnLongClickListener mLongClickListener -> f
    android.view.View$OnTouchListener mTouchListener -> g
    int mLastTouchX -> c
    androidx.core.view.DragStartHelper$OnDragStartListener mListener -> b
    96:99:void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener) -> <init>
    107:109:void attach() -> attach
    117:119:void detach() -> detach
    178:179:void getTouchPosition(android.graphics.Point) -> getTouchPosition
    170:170:boolean onLongClick(android.view.View) -> onLongClick
    129:161:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$1 -> androidx.core.view.DragStartHelper$a:
    androidx.core.view.DragStartHelper this$0 -> a
    181:181:void <init>(androidx.core.view.DragStartHelper) -> <init>
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> androidx.core.view.DragStartHelper$b:
    androidx.core.view.DragStartHelper this$0 -> a
    188:188:void <init>(androidx.core.view.DragStartHelper) -> <init>
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    531:531:boolean isLongpressEnabled() -> isLongpressEnabled
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    556:557:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    567:568:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl -> androidx.core.view.GestureDetectorCompat$a:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$b:
    android.view.GestureDetector mDetector -> a
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    475:475:boolean isLongpressEnabled() -> a
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> a
    485:486:void setIsLongpressEnabled(boolean) -> a
    490:491:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    153:153:void <init>() -> <init>
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    98:103:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    126:131:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.InputDeviceCompat -> androidx.core.view.InputDeviceCompat:
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    java.lang.reflect.Field sDialogKeyListenerField -> d
    boolean sActionBarFieldsFetched -> a
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> a
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> a
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> a
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> a
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:91:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    95:96:void <init>() -> <init>
    169:173:androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
    111:128:void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory) -> setFactory
    139:152:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> androidx.core.view.LayoutInflaterCompat$a:
    androidx.core.view.LayoutInflaterFactory mDelegateFactory -> a
    43:45:void <init>(androidx.core.view.LayoutInflaterFactory) -> <init>
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    60:60:java.lang.String toString() -> toString
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    166:166:void <init>() -> <init>
    127:139:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    61:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    112:113:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    161:164:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    150:153:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuCompat -> androidx.core.view.MenuCompat:
    55:55:void <init>() -> <init>
    48:53:void setGroupDividerEnabled(android.view.Menu,boolean) -> setGroupDividerEnabled
    37:38:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    268:268:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    249:249:boolean expandActionView(android.view.MenuItem) -> expandActionView
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    188:188:android.view.View getActionView(android.view.MenuItem) -> getActionView
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    436:442:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    135:136:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$a:
    androidx.core.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    602:602:void <init>() -> <init>
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    477:477:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    465:465:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    570:570:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    590:590:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    599:599:int getButtonState(android.view.MotionEvent) -> getButtonState
    532:532:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    499:499:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    544:544:int getSource(android.view.MotionEvent) -> getSource
    510:510:float getX(android.view.MotionEvent,int) -> getX
    521:521:float getY(android.view.MotionEvent,int) -> getY
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    56:58:void <init>(android.view.View) -> <init>
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> a
    404:406:android.view.ViewParent getNestedScrollingParentForType(int) -> a
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> a
    425:428:int[] getTempNestedScrollConsumed() -> a
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    387:388:void onDetachedFromWindow() -> onDetachedFromWindow
    400:401:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    int mNestedScrollAxesNonTouch -> b
    int mNestedScrollAxesTouch -> a
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:104:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    java.lang.Runnable mRunnable -> c
    android.view.View mView -> a
    android.view.ViewTreeObserver mViewTreeObserver -> b
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    java.lang.Object mPointerIcon -> a
    107:109:void <init>(java.lang.Object) -> <init>
    151:154:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    180:183:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    78:79:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
androidx.core.view.VelocityTrackerCompat -> androidx.core.view.VelocityTrackerCompat:
    52:52:void <init>() -> <init>
    37:37:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    49:49:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> a
    java.lang.reflect.Field sAccessibilityDelegateField -> g
    java.lang.reflect.Method sDispatchFinishTemporaryDetach -> c
    java.util.WeakHashMap sViewPropertyAnimatorMap -> e
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> f
    boolean sAccessibilityDelegateCheckFailed -> h
    java.lang.ThreadLocal sThreadLocalRect -> i
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> j
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> k
    java.lang.reflect.Method sDispatchStartTemporaryDetach -> b
    boolean sTempDetachBound -> d
    458:4051:void <clinit>() -> <clinit>
    3730:3730:void <init>() -> <init>
    907:928:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> a
    1263:1270:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> a
    1288:1295:void removeActionWithId(int,android.view.View) -> a
    3255:3264:void compatOffsetLeftAndRight(android.view.View,int) -> a
    3758:3761:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> a
    3935:3935:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> a
    1180:1186:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    3590:3593:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    3662:3694:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    1972:1980:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1298:1304:java.util.List getActionList(android.view.View) -> b
    1790:1798:void bindTempDetach() -> b
    3207:3216:void compatOffsetTopAndBottom(android.view.View,int) -> b
    3750:3753:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> b
    479:488:android.graphics.Rect getEmptyTempRect() -> c
    1224:1237:int getAvailableActionIdFromResources(android.view.View) -> c
    4026:4049:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> c
    502:502:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    516:516:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3461:3464:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1680:1680:int combineMeasuredStates(int,int) -> combineMeasuredStates
    896:901:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> d
    3878:3878:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> d
    2477:2483:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1827:1844:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    3039:3040:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    3082:3083:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    2815:2816:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    3009:3015:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    2784:2785:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    2941:2948:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    2977:2984:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1804:1821:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    3267:3270:void tickleInvalidationFlag(android.view.View) -> e
    3806:3806:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> e
    1318:1321:void enableAccessibleClickableSpanSupport(android.view.View) -> enableAccessibleClickableSpanSupport
    3639:3640:int generateViewId() -> generateViewId
    884:891:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    1693:1694:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1347:1353:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    3874:3874:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1367:1367:float getAlpha(android.view.View) -> getAlpha
    2573:2574:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2618:2619:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3299:3300:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3420:3421:android.view.Display getDisplay(android.view.View) -> getDisplay
    2256:2257:float getElevation(android.view.View) -> getElevation
    2382:2383:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1054:1055:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    744:747:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1442:1443:int getLabelFor(android.view.View) -> getLabelFor
    1431:1431:int getLayerType(android.view.View) -> getLayerType
    1515:1516:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1893:1893:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1651:1651:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1665:1665:int getMeasuredState(android.view.View) -> getMeasuredState
    1634:1634:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1938:1939:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1904:1905:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3482:3485:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    534:534:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1760:1761:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1744:1745:int getPaddingStart(android.view.View) -> getPaddingStart
    1553:1554:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2137:2137:float getPivotX(android.view.View) -> getPivotX
    2166:2166:float getPivotY(android.view.View) -> getPivotY
    2190:2190:float getRotation(android.view.View) -> getRotation
    2198:2198:float getRotationX(android.view.View) -> getRotationX
    2206:2206:float getRotationY(android.view.View) -> getRotationY
    2214:2214:float getScaleX(android.view.View) -> getScaleX
    2222:2222:float getScaleY(android.view.View) -> getScaleY
    3391:3394:int getScrollIndicators(android.view.View) -> getScrollIndicators
    2313:2314:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1857:1857:float getTranslationX(android.view.View) -> getTranslationX
    1871:1871:float getTranslationY(android.view.View) -> getTranslationY
    2277:2278:float getTranslationZ(android.view.View) -> getTranslationZ
    2326:2327:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2230:2230:float getX(android.view.View) -> getX
    2238:2238:float getY(android.view.View) -> getY
    3146:3147:float getZ(android.view.View) -> getZ
    870:870:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3626:3629:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    2755:2756:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    2900:2905:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3321:3322:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2533:2534:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    941:942:boolean hasTransientState(android.view.View) -> hasTransientState
    3914:3915:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3309:3310:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3537:3540:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1132:1133:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    857:860:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    3104:3105:boolean isInLayout(android.view.View) -> isInLayout
    3508:3511:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    3115:3116:boolean isLaidOut(android.view.View) -> isLaidOut
    3132:3133:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    2697:2698:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1597:1597:boolean isOpaque(android.view.View) -> isOpaque
    2546:2547:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    3801:3802:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2412:2413:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    3574:3577:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    3224:3252:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3176:3204:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2452:2458:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    625:626:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    656:657:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    593:594:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1154:1155:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    970:975:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    992:997:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1010:1015:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1032:1037:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1280:1285:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    3705:3728:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    1258:1259:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2337:2342:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1576:1582:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1617:1617:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    3604:3607:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    686:691:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    3931:3932:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1729:1732:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    3848:3856:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2515:2516:void setActivated(android.view.View,boolean) -> setActivated
    2029:2030:void setAlpha(android.view.View,float) -> setAlpha
    723:726:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2559:2564:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2589:2608:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2636:2655:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2357:2375:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3284:3287:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2245:2248:void setElevation(android.view.View,float) -> setElevation
    2398:2399:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    3556:3559:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    955:958:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1081:1093:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    788:791:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3522:3525:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1456:1459:void setLabelFor(android.view.View,int) -> setLabelFor
    1492:1501:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1406:1407:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1539:1542:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    2674:2681:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3496:3499:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2421:2436:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    553:554:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1781:1786:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    2153:2154:void setPivotX(android.view.View,float) -> setPivotX
    2182:2183:void setPivotY(android.view.View,float) -> setPivotY
    3402:3406:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    2072:2073:void setRotation(android.view.View,float) -> setRotation
    2086:2087:void setRotationX(android.view.View,float) -> setRotationX
    2100:2101:void setRotationY(android.view.View,float) -> setRotationY
    2499:2500:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    2113:2114:void setScaleX(android.view.View,float) -> setScaleX
    2126:2127:void setScaleY(android.view.View,float) -> setScaleY
    3782:3783:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3339:3342:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3373:3376:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    3440:3443:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2291:2299:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    1995:1996:void setTranslationX(android.view.View,float) -> setTranslationX
    2012:2013:void setTranslationY(android.view.View,float) -> setTranslationY
    2266:2269:void setTranslationZ(android.view.View,float) -> setTranslationZ
    2044:2045:void setX(android.view.View,float) -> setX
    2059:2060:void setY(android.view.View,float) -> setY
    3165:3168:void setZ(android.view.View,float) -> setZ
    3450:3453:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    2719:2720:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    2866:2871:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    2738:2743:void stopNestedScroll(android.view.View) -> stopNestedScroll
    2883:2888:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3470:3473:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$a:
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> a
    2427:2427:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2430:2432:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$b:
    androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat val$listener -> a
    3672:3672:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
    3675:3675:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$c:
    3807:3807:void <init>(int,java.lang.Class,int) -> <init>
    3807:3807:java.lang.Object frameworkGet(android.view.View) -> a
    3807:3807:void frameworkSet(android.view.View,java.lang.Object) -> a
    3807:3807:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3812:3812:java.lang.Boolean frameworkGet(android.view.View) -> a
    3818:3819:void frameworkSet(android.view.View,java.lang.Boolean) -> a
    3823:3823:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> b
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$d:
    3879:3879:void <init>(int,java.lang.Class,int,int) -> <init>
    3879:3879:java.lang.Object frameworkGet(android.view.View) -> a
    3879:3879:void frameworkSet(android.view.View,java.lang.Object) -> a
    3879:3879:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3884:3884:java.lang.CharSequence frameworkGet(android.view.View) -> a
    3890:3891:void frameworkSet(android.view.View,java.lang.CharSequence) -> a
    3895:3895:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> a
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$e:
    3936:3936:void <init>(int,java.lang.Class,int) -> <init>
    3936:3936:java.lang.Object frameworkGet(android.view.View) -> a
    3936:3936:void frameworkSet(android.view.View,java.lang.Object) -> a
    3936:3936:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    3941:3941:java.lang.Boolean frameworkGet(android.view.View) -> a
    3947:3948:void frameworkSet(android.view.View,java.lang.Boolean) -> a
    3952:3952:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> b
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$f:
    java.util.WeakHashMap mPanesToVisible -> a
    4054:4056:void <init>() -> <init>
    4080:4085:void addAccessibilityPane(android.view.View) -> a
    4096:4104:void checkPaneVisibility(android.view.View,boolean) -> a
    4108:4109:void registerForLayoutCallback(android.view.View) -> b
    4089:4092:void removeAccessibilityPane(android.view.View) -> c
    4113:4114:void unregisterForLayoutCallback(android.view.View) -> d
    4061:4064:void onGlobalLayout() -> onGlobalLayout
    4070:4071:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4076:4076:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$g:
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mTagKey -> a
    3965:3967:void <init>(int,java.lang.Class,int) -> <init>
    3970:3975:void <init>(int,java.lang.Class,int,int) -> <init>
    java.lang.Object frameworkGet(android.view.View) -> a
    void frameworkSet(android.view.View,java.lang.Object) -> a
    boolean shouldUpdate(java.lang.Object,java.lang.Object) -> a
    4007:4007:boolean extrasAvailable() -> a
    4018:4020:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> a
    3978:3989:void set(android.view.View,java.lang.Object) -> b
    3992:4000:java.lang.Object get(android.view.View) -> b
    4003:4003:boolean frameworkAvailable() -> b
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$h:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    4121:4121:void <clinit>() -> <clinit>
    4117:4136:void <init>() -> <init>
    4139:4142:android.util.SparseArray getCapturedKeys() -> a
    4146:4152:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> a
    4156:4170:boolean dispatch(android.view.View,android.view.KeyEvent) -> a
    4201:4229:boolean preDispatch(android.view.KeyEvent) -> a
    4175:4176:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> b
    4252:4259:void registerListeningView(android.view.View) -> b
    4274:4298:void recalcViewsWithUnhandled() -> b
    4234:4244:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> c
    4263:4270:void unregisterListeningView(android.view.View) -> c
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    java.lang.reflect.Method sGetScaledScrollFactorMethod -> a
    39:47:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> a
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    68:68:boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    52:52:void <init>() -> <init>
    114:115:int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    181:182:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    157:158:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    75:75:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    130:133:void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    98:99:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    144:149:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    int[] sTempNestedScrollConsumed -> a
    41:41:void <init>() -> <init>
    498:504:int[] getTempNestedScrollConsumed() -> a
    492:495:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    178:179:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    132:134:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    160:162:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    102:103:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    85:85:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    114:115:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    java.lang.Runnable mEndAction -> c
    java.lang.Runnable mStartAction -> b
    int mOldLayerType -> d
    java.lang.ref.WeakReference mView -> a
    36:38:void <init>(android.view.View) -> <init>
    738:758:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> a
    136:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    151:154:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    462:465:void cancel() -> cancel
    235:238:long getDuration() -> getDuration
    265:270:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    300:303:long getStartDelay() -> getStartDelay
    316:319:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    331:334:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    346:349:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    361:364:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    376:379:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    391:394:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    406:409:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    421:424:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    436:439:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    451:454:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    121:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    252:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    726:734:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    284:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    773:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    642:645:void start() -> start
    166:169:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    536:539:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    181:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    551:554:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    587:592:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    568:573:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    214:222:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    677:685:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    705:713:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    476:479:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    491:494:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    506:509:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    521:524:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    606:611:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    625:630:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$a:
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
    739:739:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    742:743:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    747:748:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    752:753:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$b:
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    777:777:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    780:781:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    41:41:void onAnimationEnd(android.view.View) -> onAnimationEnd
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    65:65:void <init>() -> <init>
    85:91:android.view.View requireViewById(android.view.Window,int) -> requireViewById
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    java.lang.Object mInsets -> a
    35:37:void <init>(java.lang.Object) -> <init>
    44:50:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> a
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> a
    368:371:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    340:341:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    195:196:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    377:381:boolean equals(java.lang.Object) -> equals
    355:358:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    308:309:int getStableInsetBottom() -> getStableInsetBottom
    269:270:int getStableInsetLeft() -> getStableInsetLeft
    288:289:int getStableInsetRight() -> getStableInsetRight
    250:251:int getStableInsetTop() -> getStableInsetTop
    113:114:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:63:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:97:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:80:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    143:144:boolean hasInsets() -> hasInsets
    327:328:boolean hasStableInsets() -> hasStableInsets
    130:131:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    389:389:int hashCode() -> hashCode
    164:165:boolean isConsumed() -> isConsumed
    182:183:boolean isRound() -> isRound
    213:214:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    230:231:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> b
    int mClickableSpanActionId -> c
    int mOriginalClickableSpanId -> a
    54:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    68:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    215:217:void <init>() -> <init>
    243:244:void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    276:276:androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    369:370:int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
    307:308:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    333:334:int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    256:256:androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    228:228:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    358:361:void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    288:291:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    322:325:void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    274:274:void <init>() -> <init>
    46:49:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> addAccessibilityStateChangeListener
    165:169:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    140:140:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    117:117:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    153:153:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    66:69:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> removeAccessibilityStateChangeListener
    184:188:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    236:236:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$a:
    androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener mListener -> a
    78:80:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    89:93:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    102:103:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$b:
    androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener mListener -> a
    201:203:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    212:216:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:226:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int mVirtualDescendantId -> b
    int sClickableSpanId -> c
    1453:1453:void <clinit>() -> <clinit>
    1477:1479:void <init>(java.lang.Object) -> <init>
    1481:1483:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1462:1465:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    1795:1804:java.util.List extrasIntList(java.lang.String) -> a
    2501:2506:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> a
    2528:2536:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> a
    2544:2550:void clearExtrasSpans() -> a
    2553:2557:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> a
    3840:3847:void setBooleanProperty(int,boolean) -> a
    3850:3852:boolean getBooleanProperty(int) -> a
    1778:1779:void addAction(int) -> addAction
    1824:1827:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1690:1691:void addChild(android.view.View) -> addChild
    1708:1711:void addChild(android.view.View,int) -> addChild
    2483:2498:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    2510:2510:android.util.SparseArray getSpansFromViewTags(android.view.View) -> b
    2540:2540:boolean hasSpans() -> b
    3856:3858:java.lang.String getActionSymbolicName(int) -> b
    2560:2572:void removeCollectedSpans(android.view.View) -> c
    3076:3077:boolean canOpenPopup() -> canOpenPopup
    3769:3792:boolean equals(java.lang.Object) -> equals
    1938:1945:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    3122:3128:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1614:1615:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1636:1637:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    2818:2831:java.util.List getActionList() -> getActionList
    1763:1763:int getActions() -> getActions
    2014:2015:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2038:2039:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1675:1675:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1658:1658:int getChildCount() -> getChildCount
    2421:2421:java.lang.CharSequence getClassName() -> getClassName
    2519:2523:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2733:2739:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    2766:2772:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2580:2580:java.lang.CharSequence getContentDescription() -> getContentDescription
    2702:2705:int getDrawingOrder() -> getDrawingOrder
    2956:2957:java.lang.CharSequence getError() -> getError
    3148:3149:android.os.Bundle getExtras() -> getExtras
    2902:2905:java.lang.CharSequence getHintText() -> getHintText
    1509:1509:java.lang.Object getInfo() -> getInfo
    3161:3162:int getInputType() -> getInputType
    3007:3008:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    3063:3064:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2665:2666:int getLiveRegion() -> getLiveRegion
    3215:3216:int getMaxTextLength() -> getMaxTextLength
    1917:1918:int getMovementGranularities() -> getMovementGranularities
    2397:2397:java.lang.CharSequence getPackageName() -> getPackageName
    3562:3565:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    1959:1959:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    2781:2787:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    3725:3726:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2445:2459:java.lang.CharSequence getText() -> getText
    3260:3261:int getTextSelectionEnd() -> getTextSelectionEnd
    3247:3248:int getTextSelectionStart() -> getTextSelectionStart
    3506:3509:java.lang.CharSequence getTooltipText() -> getTooltipText
    3342:3345:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    3277:3280:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2639:2640:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3403:3404:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1649:1649:int getWindowId() -> getWindowId
    3764:3764:int hashCode() -> hashCode
    2189:2190:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2062:2062:boolean isCheckable() -> isCheckable
    2086:2086:boolean isChecked() -> isChecked
    2244:2244:boolean isClickable() -> isClickable
    2859:2860:boolean isContentInvalid() -> isContentInvalid
    2872:2875:boolean isContextClickable() -> isContextClickable
    3416:3417:boolean isDismissable() -> isDismissable
    3445:3446:boolean isEditable() -> isEditable
    2292:2292:boolean isEnabled() -> isEnabled
    2110:2110:boolean isFocusable() -> isFocusable
    2134:2134:boolean isFocused() -> isFocused
    3651:3656:boolean isHeading() -> isHeading
    2367:2370:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2268:2268:boolean isLongClickable() -> isLongClickable
    3476:3477:boolean isMultiLine() -> isMultiLine
    2316:2316:boolean isPassword() -> isPassword
    3581:3584:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2340:2340:boolean isScrollable() -> isScrollable
    2220:2220:boolean isSelected() -> isSelected
    3615:3618:boolean isShowingHintText() -> isShowingHintText
    3685:3685:boolean isTextEntryKey() -> isTextEntryKey
    2158:2159:boolean isVisibleToUser() -> isVisibleToUser
    1520:1520:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1534:1535:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1548:1548:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1559:1559:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1869:1869:boolean performAction(int) -> performAction
    1886:1887:boolean performAction(int,android.os.Bundle) -> performAction
    2606:2607:void recycle() -> recycle
    3713:3714:boolean refresh() -> refresh
    1849:1850:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1728:1729:boolean removeChild(android.view.View) -> removeChild
    1746:1747:boolean removeChild(android.view.View,int) -> removeChild
    2209:2212:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    2029:2030:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2053:2054:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3094:3097:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2077:2078:void setCheckable(boolean) -> setCheckable
    2101:2102:void setChecked(boolean) -> setChecked
    2436:2437:void setClassName(java.lang.CharSequence) -> setClassName
    2259:2260:void setClickable(boolean) -> setClickable
    2743:2749:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2752:2757:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2595:2596:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2847:2850:void setContentInvalid(boolean) -> setContentInvalid
    2891:2894:void setContextClickable(boolean) -> setContextClickable
    3434:3437:void setDismissable(boolean) -> setDismissable
    2721:2724:void setDrawingOrder(int) -> setDrawingOrder
    3465:3468:void setEditable(boolean) -> setEditable
    2307:2308:void setEnabled(boolean) -> setEnabled
    2945:2948:void setError(java.lang.CharSequence) -> setError
    2125:2126:void setFocusable(boolean) -> setFocusable
    2149:2150:void setFocused(boolean) -> setFocused
    3671:3676:void setHeading(boolean) -> setHeading
    2924:2929:void setHintText(java.lang.CharSequence) -> setHintText
    2386:2389:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    3182:3185:void setInputType(int) -> setInputType
    2970:2973:void setLabelFor(android.view.View) -> setLabelFor
    2990:2993:void setLabelFor(android.view.View,int) -> setLabelFor
    3021:3024:void setLabeledBy(android.view.View) -> setLabeledBy
    3046:3049:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2685:2688:void setLiveRegion(int) -> setLiveRegion
    2283:2284:void setLongClickable(boolean) -> setLongClickable
    3203:3206:void setMaxTextLength(int) -> setMaxTextLength
    1906:1909:void setMovementGranularities(int) -> setMovementGranularities
    3494:3497:void setMultiLine(boolean) -> setMultiLine
    2412:2413:void setPackageName(java.lang.CharSequence) -> setPackageName
    3548:3553:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    1974:1977:void setParent(android.view.View) -> setParent
    2001:2006:void setParent(android.view.View,int) -> setParent
    2331:2332:void setPassword(boolean) -> setPassword
    2801:2804:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    3757:3760:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3600:3605:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2355:2356:void setScrollable(boolean) -> setScrollable
    2235:2236:void setSelected(boolean) -> setSelected
    3635:3640:void setShowingHintText(boolean) -> setShowingHintText
    1568:1571:void setSource(android.view.View) -> setSource
    1595:1600:void setSource(android.view.View,int) -> setSource
    2475:2476:void setText(java.lang.CharSequence) -> setText
    3700:3701:void setTextEntryKey(boolean) -> setTextEntryKey
    3236:3239:void setTextSelection(int,int) -> setTextSelection
    3528:3533:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    3364:3367:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3390:3393:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    3299:3302:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3326:3329:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2621:2624:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    2178:2181:void setVisibleToUser(boolean) -> setVisibleToUser
    3797:3836:java.lang.String toString() -> toString
    1499:1499:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1492:1492:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    java.lang.Object mAction -> a
    int mId -> b
    java.lang.Class mViewCommandArgumentClass -> c
    99:502:void <clinit>() -> <clinit>
    525:526:void <init>(int,java.lang.CharSequence) -> <init>
    539:540:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    543:544:void <init>(java.lang.Object) -> <init>
    548:549:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    553:563:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    626:626:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    571:572:int getId() -> getId
    585:586:java.lang.CharSequence getLabel() -> getLabel
    601:617:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    java.lang.Object mInfo -> a
    701:703:void <init>(java.lang.Object) -> <init>
    711:712:int getColumnCount() -> getColumnCount
    724:725:int getRowCount() -> getRowCount
    755:756:int getSelectionMode() -> getSelectionMode
    737:738:boolean isHierarchical() -> isHierarchical
    671:672:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    693:694:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> a
    825:827:void <init>(java.lang.Object) -> <init>
    835:836:int getColumnIndex() -> getColumnIndex
    848:849:int getColumnSpan() -> getColumnSpan
    861:862:int getRowIndex() -> getRowIndex
    874:875:int getRowSpan() -> getRowSpan
    890:891:boolean isHeading() -> isHeading
    903:904:boolean isSelected() -> isSelected
    792:793:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    817:818:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    java.lang.Object mInfo -> a
    942:944:void <init>(java.lang.Object) -> <init>
    952:953:float getCurrent() -> getCurrent
    965:966:float getMax() -> getMax
    978:979:float getMin() -> getMin
    995:996:int getType() -> getType
    932:933:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    java.lang.Object mProvider -> a
    104:112:void <init>() -> <init>
    120:122:void <init>(java.lang.Object) -> <init>
    155:155:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    192:192:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    208:208:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    128:128:java.lang.Object getProvider() -> getProvider
    172:172:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$a:
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat mCompat -> a
    38:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:67:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$b:
    80:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    android.view.accessibility.AccessibilityRecord mRecord -> a
    43:45:void <init>(java.lang.Object) -> <init>
    761:778:boolean equals(java.lang.Object) -> equals
    570:570:int getAddedCount() -> getAddedCount
    661:661:java.lang.CharSequence getBeforeText() -> getBeforeText
    622:622:java.lang.CharSequence getClassName() -> getClassName
    687:687:java.lang.CharSequence getContentDescription() -> getContentDescription
    338:338:int getCurrentItemIndex() -> getCurrentItemIndex
    367:367:int getFromIndex() -> getFromIndex
    55:55:java.lang.Object getImpl() -> getImpl
    312:312:int getItemCount() -> getItemCount
    470:470:int getMaxScrollX() -> getMaxScrollX
    480:481:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    520:520:int getMaxScrollY() -> getMaxScrollY
    530:531:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    713:713:android.os.Parcelable getParcelableData() -> getParcelableData
    596:596:int getRemovedCount() -> getRemovedCount
    422:422:int getScrollX() -> getScrollX
    446:446:int getScrollY() -> getScrollY
    158:158:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    649:649:java.util.List getText() -> getText
    397:397:int getToIndex() -> getToIndex
    170:170:int getWindowId() -> getWindowId
    752:752:int hashCode() -> hashCode
    182:182:boolean isChecked() -> isChecked
    208:208:boolean isEnabled() -> isEnabled
    260:260:boolean isFullScreen() -> isFullScreen
    234:234:boolean isPassword() -> isPassword
    286:286:boolean isScrollable() -> isScrollable
    69:69:androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat) -> obtain
    82:82:androidx.core.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    743:744:void recycle() -> recycle
    584:585:void setAddedCount(int) -> setAddedCount
    675:676:void setBeforeText(java.lang.CharSequence) -> setBeforeText
    196:197:void setChecked(boolean) -> setChecked
    636:637:void setClassName(java.lang.CharSequence) -> setClassName
    701:702:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    352:353:void setCurrentItemIndex(int) -> setCurrentItemIndex
    222:223:void setEnabled(boolean) -> setEnabled
    384:385:void setFromIndex(int) -> setFromIndex
    274:275:void setFullScreen(boolean) -> setFullScreen
    326:327:void setItemCount(int) -> setItemCount
    496:497:void setMaxScrollX(int) -> setMaxScrollX
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    546:547:void setMaxScrollY(int) -> setMaxScrollY
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    727:728:void setParcelableData(android.os.Parcelable) -> setParcelableData
    248:249:void setPassword(boolean) -> setPassword
    610:611:void setRemovedCount(int) -> setRemovedCount
    434:435:void setScrollX(int) -> setScrollX
    458:459:void setScrollY(int) -> setScrollY
    300:301:void setScrollable(boolean) -> setScrollable
    96:97:void setSource(android.view.View) -> setSource
    117:118:void setSource(android.view.View,int) -> setSource
    137:140:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
    410:411:void setToIndex(int) -> setToIndex
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    android.os.Bundle mBundle -> a
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    56:57:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    66:66:void <init>() -> <init>
    90:90:boolean getExtendSelection() -> getExtendSelection
    82:82:int getGranularity() -> getGranularity
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    100:100:void <init>() -> <init>
    106:106:java.lang.String getHTMLElement() -> getHTMLElement
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    185:185:void <init>() -> <init>
    191:191:int getX() -> getX
    198:198:int getY() -> getY
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    150:150:void <init>() -> <init>
    163:163:int getColumn() -> getColumn
    156:156:int getRow() -> getRow
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    171:171:void <init>() -> <init>
    177:177:float getProgress() -> getProgress
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    115:115:void <init>() -> <init>
    128:128:int getEnd() -> getEnd
    121:121:int getStart() -> getStart
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    135:135:void <init>() -> <init>
    141:141:java.lang.CharSequence getText() -> getText
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    java.lang.Object mInfo -> a
    82:84:void <init>(java.lang.Object) -> <init>
    76:79:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    358:360:java.lang.String typeToString(int) -> a
    319:336:boolean equals(java.lang.Object) -> equals
    257:261:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    164:167:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    230:231:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    216:217:int getChildCount() -> getChildCount
    151:152:int getId() -> getId
    111:112:int getLayer() -> getLayer
    138:139:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    124:125:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    244:247:java.lang.CharSequence getTitle() -> getTitle
    97:98:int getType() -> getType
    314:314:int hashCode() -> hashCode
    203:204:boolean isAccessibilityFocused() -> isAccessibilityFocused
    177:178:boolean isActive() -> isActive
    190:191:boolean isFocused() -> isFocused
    272:273:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    288:289:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    307:310:void recycle() -> recycle
    341:354:java.lang.String toString() -> toString
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    31:33:void <init>() -> <init>
    48:49:android.view.animation.Interpolator create(android.graphics.Path) -> create
    63:64:android.view.animation.Interpolator create(float,float) -> create
    81:82:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    76:76:void <clinit>() -> <clinit>
    182:183:void <init>() -> <init>
    159:176:int getProtocol(android.view.inputmethod.EditorInfo) -> a
    135:146:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    112:121:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    303:304:void <init>() -> <init>
    72:82:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> a
    132:185:boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> commitContent
    260:261:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$a:
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$b:
    androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener -> a
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl -> a
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    256:257:void releasePermission() -> releasePermission
    247:248:void requestPermission() -> requestPermission
    238:238:java.lang.Object unwrap() -> unwrap
    219:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$a:
    android.view.inputmethod.InputContentInfo mObject -> a
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    144:145:void requestPermission() -> a
    149:150:void releasePermission() -> b
    133:133:android.net.Uri getLinkUri() -> c
    127:127:android.content.ClipDescription getDescription() -> d
    139:139:java.lang.Object getInputContentInfo() -> e
    121:121:android.net.Uri getContentUri() -> f
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$b:
    android.content.ClipDescription mDescription -> b
    android.net.Uri mLinkUri -> c
    android.net.Uri mContentUri -> a
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    94:94:void requestPermission() -> a
    99:99:void releasePermission() -> b
    83:83:android.net.Uri getLinkUri() -> c
    77:77:android.content.ClipDescription getDescription() -> d
    89:89:java.lang.Object getInputContentInfo() -> e
    71:71:android.net.Uri getContentUri() -> f
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$c:
    void requestPermission() -> a
    void releasePermission() -> b
    android.net.Uri getLinkUri() -> c
    android.content.ClipDescription getDescription() -> d
    java.lang.Object getInputContentInfo() -> e
    android.net.Uri getContentUri() -> f
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    boolean mNeedsReset -> m
    boolean mNeedsCancel -> n
    float[] mMaximumVelocity -> k
    boolean mAnimating -> o
    boolean mEnabled -> p
    float[] mRelativeVelocity -> i
    float[] mMinimumVelocity -> j
    int mActivationDelay -> h
    android.view.animation.Interpolator mEdgeInterpolator -> b
    boolean mAlreadyDelayed -> l
    float[] mRelativeEdges -> e
    float[] mMaximumEdges -> f
    int mEdgeType -> g
    boolean mExclusive -> q
    java.lang.Runnable mRunnable -> d
    android.view.View mTarget -> c
    int DEFAULT_ACTIVATION_DELAY -> r
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> a
    195:195:void <clinit>() -> <clinit>
    210:226:void <init>(android.view.View) -> <init>
    549:568:float computeTargetVelocity(int,float,float,float) -> a
    617:627:float getEdgeValue(float,float,float,float) -> a
    634:659:float constrainEdgeValue(float,float) -> a
    663:668:int constrain(int,int,int) -> a
    673:678:float constrain(float,float,float) -> a
    687:692:void cancelTargetTouch() -> a
    538:545:void requestStop() -> b
    502:506:boolean shouldAnimate() -> c
    514:530:void startAnimating() -> d
    248:248:boolean isEnabled() -> isEnabled
    277:277:boolean isExclusive() -> isExclusive
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    264:265:androidx.core.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    756:762:void <init>() -> <init>
    769:770:void setRampDownDuration(int) -> a
    800:804:float getValueAt(long) -> a
    820:820:float interpolateValue(float) -> a
    831:832:void computeScrollDelta() -> a
    852:854:void setTargetVelocity(float,float) -> a
    765:766:void setRampUpDuration(int) -> b
    869:869:int getDeltaX() -> b
    877:877:int getDeltaY() -> c
    857:857:int getHorizontalDirection() -> d
    861:861:int getVerticalDirection() -> e
    795:795:boolean isFinished() -> f
    788:792:void requestStop() -> g
    776:782:void start() -> h
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$b:
    androidx.core.widget.AutoScrollHelper this$0 -> a
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:712:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    java.lang.reflect.Field sButtonDrawableField -> a
    boolean sButtonDrawableFieldFetched -> b
    41:41:void <init>() -> <init>
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:72:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    107:108:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    68:69:void <init>(android.content.Context) -> <init>
    72:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    88:90:void removeCallbacks() -> a
    98:97:void hide() -> hide
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    83:85:void onDetachedFromWindow() -> onDetachedFromWindow
    124:123:void show() -> show
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$a:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> a
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:52:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$b:
    androidx.core.widget.ContentLoadingProgressBar this$0 -> a
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:64:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    android.widget.EdgeEffect mEdgeEffect -> a
    47:49:void <init>(android.content.Context) -> <init>
    208:208:boolean draw(android.graphics.Canvas) -> draw
    86:87:void finish() -> finish
    75:75:boolean isFinished() -> isFinished
    190:191:boolean onAbsorb(int) -> onAbsorb
    104:105:boolean onPull(float) -> onPull
    129:130:boolean onPull(float,float) -> onPull
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    171:172:boolean onRelease() -> onRelease
    61:62:void setSize(int,int) -> setSize
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    107:107:void <init>() -> <init>
    37:38:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:75:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListPopupWindowCompat -> androidx.core.widget.ListPopupWindowCompat:
    31:33:void <init>() -> <init>
    65:65:android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    97:98:android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> createDragToOpenListener
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> s
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:80:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    90:90:void <init>() -> <init>
    67:69:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    boolean mSmoothScrollingEnabled -> m
    int mTouchSlop -> n
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> z
    int[] mScrollConsumed -> s
    android.view.VelocityTracker mVelocityTracker -> k
    int mLastMotionY -> f
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> v
    long mLastScroll -> a
    android.view.View mChildToScrollTo -> i
    float mVerticalScrollFactor -> y
    android.widget.EdgeEffect mEdgeGlowBottom -> e
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> w
    boolean mIsLaidOut -> h
    int mLastScrollerY -> u
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> x
    int mActivePointerId -> q
    int mMinimumVelocity -> o
    int[] mScrollOffset -> r
    boolean mIsBeingDragged -> j
    boolean mFillViewport -> l
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> A
    android.graphics.Rect mTempRect -> b
    android.widget.OverScroller mScroller -> c
    int[] SCROLLVIEW_STYLEABLE -> B
    android.widget.EdgeEffect mEdgeGlowTop -> d
    boolean mIsLayoutDirty -> g
    int mNestedYOffset -> t
    int mMaximumVelocity -> p
    175:177:void <clinit>() -> <clinit>
    189:190:void <init>(android.content.Context) -> <init>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    198:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    314:324:void onNestedScrollInternal(int,int,int[]) -> a
    671:679:boolean inChild(int,int) -> a
    988:1001:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    1058:1108:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    1140:1201:android.view.View findFocusableViewInBounds(boolean,int,int) -> a
    1287:1308:boolean scrollAndFocus(int,int,int) -> a
    1373:1373:boolean isOffScreen(android.view.View) -> a
    1381:1384:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    1394:1401:void doScrollY(int) -> a
    1596:1603:void runAnimatedScroll(boolean) -> a
    1606:1608:void abortAnimatedScroll() -> a
    1637:1646:boolean scrollToChildRect(android.graphics.Rect,boolean) -> a
    1854:1859:boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    468:469:void addView(android.view.View) -> addView
    477:478:void addView(android.view.View,int) -> addView
    486:487:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    495:496:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1319:1365:boolean arrowScroll(int) -> arrowScroll
    519:526:boolean canScroll() -> b
    1616:1626:void scrollToChild(android.view.View) -> b
    1981:1997:int clamp(int,int,int) -> b
    1882:1891:void endDrag() -> c
    1504:1504:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1497:1497:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1490:1490:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1540:1593:void computeScroll() -> computeScroll
    1658:1719:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1483:1483:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1476:1476:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1452:1469:int computeVerticalScrollRange() -> computeVerticalScrollRange
    1917:1927:void ensureGlows() -> d
    617:617:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    297:297:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    302:302:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    253:253:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    292:292:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    222:224:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    246:246:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    286:286:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1931:1978:void draw(android.graphics.Canvas) -> draw
    683:688:void initOrResetVelocityTracker() -> e
    629:667:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    456:464:void initScrollView() -> f
    1870:1879:void fling(int) -> fling
    1255:1271:boolean fullScroll(int) -> fullScroll
    691:694:void initVelocityTrackerIfNotExists() -> g
    431:444:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    452:452:int getMaxScrollAmount() -> getMaxScrollAmount
    404:404:int getNestedScrollAxes() -> getNestedScrollAxes
    1112:1120:int getScrollRange() -> getScrollRange
    416:426:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1033:1044:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    697:701:void recycleVelocityTracker() -> h
    240:240:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    280:280:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    537:537:boolean isFillViewport() -> isFillViewport
    265:265:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    559:559:boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    1510:1521:void measureChild(android.view.View,int,int) -> measureChild
    1526:1535:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1825:1828:void onAttachedToWindow() -> onAttachedToWindow
    1005:1029:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    724:819:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1787:1821:void onLayout(boolean,int,int,int,int) -> onLayout
    581:612:void onMeasure(int,int) -> onMeasure
    389:394:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    399:399:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    356:357:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    384:385:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    310:311:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    350:351:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    379:380:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    337:339:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    368:369:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1050:1051:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1747:1766:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2012:2021:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2025:2028:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    572:577:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1832:1836:void onSizeChanged(int,int,int,int) -> onSizeChanged
    331:331:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    363:363:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    343:345:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    373:374:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    824:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1217:1239:boolean pageScroll(int) -> pageScroll
    1724:1731:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1773:1776:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    705:709:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1781:1783:void requestLayout() -> requestLayout
    1901:1914:void scrollTo(int,int) -> scrollTo
    549:553:void setFillViewport(boolean) -> setFillViewport
    260:261:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    512:513:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    567:568:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    411:411:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1410:1432:void smoothScrollBy(int,int) -> smoothScrollBy
    1441:1442:void smoothScrollTo(int,int) -> smoothScrollTo
    230:230:boolean startNestedScroll(int,int) -> startNestedScroll
    270:270:boolean startNestedScroll(int) -> startNestedScroll
    235:236:void stopNestedScroll(int) -> stopNestedScroll
    275:276:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
    2070:2070:void <init>() -> <init>
    2127:2136:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2108:2123:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2073:2091:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$b:
    int scrollPosition -> a
    2056:2056:void <clinit>() -> <clinit>
    2035:2036:void <init>(android.os.Parcelable) -> <init>
    2039:2041:void <init>(android.os.Parcel) -> <init>
    2051:2051:java.lang.String toString() -> toString
    2045:2047:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$b$a:
    2057:2057:void <init>() -> <init>
    2057:2057:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2060:2060:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2057:2057:java.lang.Object[] newArray(int) -> newArray
    2065:2065:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> androidx.core.widget.PopupMenuCompat:
    30:32:void <init>() -> <init>
    55:56:android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    java.lang.reflect.Method sGetWindowLayoutTypeMethod -> c
    java.lang.reflect.Field sOverlapAnchorField -> e
    boolean sOverlapAnchorFieldAttempted -> f
    boolean sSetWindowLayoutTypeMethodAttempted -> b
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> a
    boolean sGetWindowLayoutTypeMethodAttempted -> d
    46:48:void <init>() -> <init>
    119:140:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    183:204:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.ScrollerCompat -> androidx.core.widget.ScrollerCompat:
    android.widget.OverScroller mScroller -> a
    56:59:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    273:274:void abortAnimation() -> abortAnimation
    142:142:boolean computeScrollOffset() -> computeScrollOffset
    41:41:androidx.core.widget.ScrollerCompat create(android.content.Context) -> create
    49:49:androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    210:211:void fling(int,int,int,int,int,int,int,int) -> fling
    242:244:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    130:130:float getCurrVelocity() -> getCurrVelocity
    82:82:int getCurrX() -> getCurrX
    94:94:int getCurrY() -> getCurrY
    104:104:int getFinalX() -> getFinalX
    114:114:int getFinalY() -> getFinalY
    70:70:boolean isFinished() -> isFinished
    334:334:boolean isOverScrolled() -> isOverScrolled
    294:295:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    314:315:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    262:262:boolean springBack(int,int,int,int,int,int) -> springBack
    163:164:void startScroll(int,int,int,int) -> startScroll
    183:184:void startScroll(int,int,int,int,int) -> startScroll
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    111:111:void <init>() -> <init>
    901:935:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> a
    957:974:int getTextDirection(android.text.TextDirectionHeuristic) -> a
    456:462:int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    439:445:int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    422:428:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    473:479:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    406:412:int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    1003:1009:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1038:1044:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    295:296:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    226:227:int getMaxLines(android.widget.TextView) -> getMaxLines
    252:253:int getMinLines(android.widget.TextView) -> getMinLines
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    361:368:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    387:393:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    326:331:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    987:993:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1021:1028:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    178:187:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    210:219:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    506:508:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    693:718:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    738:759:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    796:804:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    884:886:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:288:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    842:869:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:523:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$a:
    android.widget.TextView mTextView -> b
    boolean mCanUseMenuBuilderReferences -> e
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mInitializedMenuBuilderReferences -> f
    android.view.ActionMode$Callback mCallback -> a
    java.lang.Class mMenuBuilderClass -> c
    549:553:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    577:612:void recomputeProcessTextMenuItems(android.view.Menu) -> a
    630:642:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> a
    646:652:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> a
    659:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> a
    665:665:boolean isEditable(android.widget.TextView) -> a
    671:671:android.content.Intent createProcessTextIntent() -> a
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:574:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    177:200:void init(android.content.Context,android.database.Cursor,int) -> a
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:473:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$a:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$b:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> j4:
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> j4$a:
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    android.view.LayoutInflater mInflater -> c
    int mDropDownLayout -> b
    int mLayout -> a
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    135:136:void setDropDownViewResource(int) -> setDropDownViewResource
    126:127:void setViewResource(int) -> setViewResource
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    int mStringConversionColumn -> d
    java.lang.String[] mOriginalFrom -> g
    androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> f
    androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> e
    69:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    95:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> a
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    233:233:int getStringConversionColumn() -> getStringConversionColumn
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    251:252:void setStringConversionColumn(int) -> setStringConversionColumn
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    android.os.Parcelable mSuperState -> a
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    59:60:void <init>(android.os.Parcel) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$a:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$b:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    int mKeyboardFocusedVirtualViewId -> l
    int mHoveredVirtualViewId -> m
    int mAccessibilityFocusedVirtualViewId -> k
    android.graphics.Rect mTempParentRect -> e
    android.graphics.Rect mTempVisibleRect -> f
    android.graphics.Rect mTempScreenRect -> d
    android.view.View mHost -> i
    int[] mTempGlobalRect -> g
    android.graphics.Rect INVALID_PARENT_BOUNDS -> n
    androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider -> j
    androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER -> p
    androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER -> o
    android.view.accessibility.AccessibilityManager mManager -> h
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> a
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> a
    637:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> a
    895:897:boolean performAction(int,int,android.os.Bundle) -> a
    904:904:boolean performActionForHost(int,android.os.Bundle) -> a
    932:933:boolean isVisibleToUser(android.graphics.Rect) -> a
    998:1005:boolean clearAccessibilityFocus(int) -> a
    372:423:boolean moveFocus(int,android.graphics.Rect) -> b
    481:481:boolean clickKeyboardFocusedVirtualView() -> b
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> b
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> b
    908:914:boolean performActionForChild(int,int,android.os.Bundle) -> b
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> c
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> c
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> d
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> d
    182:183:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    968:969:boolean requestAccessibilityFocus(int) -> e
    612:624:void updateHoveredVirtualView(int) -> f
    309:313:int keyToDirection(int) -> g
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    526:527:void invalidateRoot() -> invalidateRoot
    542:544:void invalidateVirtualView(int) -> invalidateVirtualView
    566:576:void invalidateVirtualView(int,int) -> invalidateVirtualView
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:506:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$a:
    336:336:void <init>() -> <init>
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> a
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$b:
    349:349:void <init>() -> <init>
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> a
    358:358:int size(androidx.collection.SparseArrayCompat) -> a
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    349:349:int size(java.lang.Object) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$c:
    androidx.customview.widget.ExploreByTouchHelper this$0 -> b
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> a
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> a
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> a
    243:248:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> a
    283:283:int getWeightedDistanceFor(int,int) -> a
    297:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> a
    326:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> a
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> b
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> b
    343:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> b
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> c
    370:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> d
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> e
    398:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> f
    423:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> g
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$a:
    androidx.customview.widget.FocusStrategy$BoundsAdapter mAdapter -> d
    android.graphics.Rect mTemp1 -> a
    boolean mIsLayoutRtl -> c
    android.graphics.Rect mTemp2 -> b
    101:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    int mEdgeSize -> o
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    android.view.ViewGroup mParentView -> u
    float[] mLastMotionY -> g
    java.lang.Runnable mSetIdleRunnable -> v
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    android.view.View mCapturedView -> s
    float[] mInitialMotionX -> d
    int mTouchSlop -> b
    int mActivePointerId -> c
    androidx.customview.widget.ViewDragHelper$Callback mCallback -> r
    int mDragState -> a
    boolean mReleaseInProgress -> t
    android.widget.OverScroller mScroller -> q
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    android.view.animation.Interpolator sInterpolator -> w
    int[] mEdgeDragsLocked -> j
    float mMinVelocity -> n
    int mTrackingEdges -> p
    float mMaxVelocity -> m
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> a
    670:673:int clampMag(int,int,int) -> a
    687:690:float clampMag(float,float,float) -> a
    694:696:float distanceInfluenceForSnapDuration(float) -> a
    779:787:void dispatchViewReleased(float,float) -> a
    790:801:void clearMotionHistory() -> a
    804:805:void clearMotionHistory(int) -> a
    856:868:void saveLastMotion(android.view.MotionEvent) -> a
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> a
    1255:1273:void reportNewEdgeDrags(float,float,int) -> a
    1276:1283:boolean checkNewEdgeDrag(float,float,int,int) -> a
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> a
    1424:1443:void dragTo(int,int,int,int) -> a
    1499:1506:int getEdgesTouched(int,int) -> a
    525:535:void abort() -> abort
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> b
    638:656:int computeAxisDuration(int,int,int) -> b
    818:845:void ensureMotionHistorySizeForId(int) -> b
    848:853:void saveInitialMotion(float,float,int) -> b
    1413:1421:void releaseViewForPointerUp() -> b
    1510:1516:boolean isValidPointerForActionMove(int) -> c
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    511:518:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1334:1340:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1376:boolean checkTouchSlop(int,int) -> checkTouchSlop
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    888:896:void setDragState(int) -> d
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    710:711:void flingCapturedView(int,int,int,int) -> flingCapturedView
    495:495:int getActivePointerId() -> getActivePointerId
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    422:422:float getMinVelocity() -> getMinVelocity
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1389:1395:boolean isEdgeTouched(int) -> isEdgeTouched
    1409:1409:boolean isEdgeTouched(int,int) -> isEdgeTouched
    884:884:boolean isPointerDown(int) -> isPointerDown
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    447:448:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:412:void setMinVelocity(float) -> setMinVelocity
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$a:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$b:
    androidx.customview.widget.ViewDragHelper this$0 -> a
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    310:310:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    325:325:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
    163:163:void onViewDragStateChanged(int) -> onViewDragStateChanged
    176:176:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    207:207:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.documentfile.provider.DocumentFile -> androidx.documentfile.provider.DocumentFile:
    androidx.documentfile.provider.DocumentFile mParent -> a
    88:90:void <init>(androidx.documentfile.provider.DocumentFile) -> <init>
    338:343:androidx.documentfile.provider.DocumentFile findFile(java.lang.String) -> findFile
    102:102:androidx.documentfile.provider.DocumentFile fromFile(java.io.File) -> fromFile
    117:118:androidx.documentfile.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    135:137:androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    229:229:androidx.documentfile.provider.DocumentFile getParentFile() -> getParentFile
    149:150:boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
androidx.documentfile.provider.DocumentsContractApi19 -> k4:
    94:104:boolean canRead(android.content.Context,android.net.Uri) -> a
    159:173:java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> a
    179:179:int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> a
    184:198:long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> a
    203:211:void closeQuietly(java.lang.AutoCloseable) -> a
    109:137:boolean canWrite(android.content.Context,android.net.Uri) -> b
    141:152:boolean exists(android.content.Context,android.net.Uri) -> c
    68:68:long getFlags(android.content.Context,android.net.Uri) -> d
    49:49:java.lang.String getName(android.content.Context,android.net.Uri) -> e
    54:54:java.lang.String getRawType(android.content.Context,android.net.Uri) -> f
    59:63:java.lang.String getType(android.content.Context,android.net.Uri) -> g
    72:72:boolean isDirectory(android.content.Context,android.net.Uri) -> h
    76:78:boolean isFile(android.content.Context,android.net.Uri) -> i
    40:44:boolean isVirtual(android.content.Context,android.net.Uri) -> j
    85:85:long lastModified(android.content.Context,android.net.Uri) -> k
    89:89:long length(android.content.Context,android.net.Uri) -> l
androidx.documentfile.provider.RawDocumentFile -> l4:
    java.io.File mFile -> b
    33:35:void <init>(androidx.documentfile.provider.DocumentFile,java.io.File) -> <init>
    156:165:java.lang.String getTypeForName(java.lang.String) -> a
    169:182:boolean deleteContents(java.io.File) -> a
    113:113:boolean canRead() -> canRead
    118:118:boolean canWrite() -> canWrite
    58:60:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    41:51:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    123:124:boolean delete() -> delete
    129:129:boolean exists() -> exists
    73:73:java.lang.String getName() -> getName
    79:82:java.lang.String getType() -> getType
    68:68:android.net.Uri getUri() -> getUri
    88:88:boolean isDirectory() -> isDirectory
    93:93:boolean isFile() -> isFile
    98:98:boolean isVirtual() -> isVirtual
    103:103:long lastModified() -> lastModified
    108:108:long length() -> length
    134:141:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    146:151:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.SingleDocumentFile -> m4:
    android.content.Context mContext -> b
    android.net.Uri mUri -> c
    32:35:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    91:91:boolean canRead() -> canRead
    96:96:boolean canWrite() -> canWrite
    44:44:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    39:39:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    102:104:boolean delete() -> delete
    110:110:boolean exists() -> exists
    55:55:java.lang.String getName() -> getName
    61:61:java.lang.String getType() -> getType
    49:49:android.net.Uri getUri() -> getUri
    66:66:boolean isDirectory() -> isDirectory
    71:71:boolean isFile() -> isFile
    76:76:boolean isVirtual() -> isVirtual
    81:81:long lastModified() -> lastModified
    86:86:long length() -> length
    115:115:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    120:120:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.TreeDocumentFile -> n4:
    android.content.Context mContext -> b
    android.net.Uri mUri -> c
    37:40:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    53:56:android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> a
    166:174:void closeQuietly(java.lang.AutoCloseable) -> a
    112:112:boolean canRead() -> canRead
    117:117:boolean canWrite() -> canWrite
    63:65:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    45:46:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    123:125:boolean delete() -> delete
    131:131:boolean exists() -> exists
    76:76:java.lang.String getName() -> getName
    82:82:java.lang.String getType() -> getType
    70:70:android.net.Uri getUri() -> getUri
    87:87:boolean isDirectory() -> isDirectory
    92:92:boolean isFile() -> isFile
    97:97:boolean isVirtual() -> isVirtual
    102:102:long lastModified() -> lastModified
    107:107:long length() -> length
    136:154:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    179:188:boolean renameTo(java.lang.String) -> renameTo
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> N
    android.graphics.drawable.Drawable mShadowStart -> D
    android.graphics.drawable.Drawable mShadowLeft -> F
    java.lang.CharSequence mTitleRight -> A
    java.util.List mListeners -> t
    float mScrimOpacity -> e
    int mScrimColor -> d
    androidx.customview.widget.ViewDragHelper mLeftDragger -> g
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> a
    android.graphics.Paint mScrimPaint -> f
    android.graphics.drawable.Drawable mShadowLeftResolved -> x
    android.graphics.Rect mChildHitRect -> I
    float mInitialMotionX -> u
    java.util.ArrayList mNonDrawerViews -> H
    int[] THEME_ATTRS -> K
    boolean mDrawStatusBarBackground -> C
    int mLockModeEnd -> q
    boolean CAN_HIDE_DESCENDANTS -> M
    int mLockModeRight -> o
    android.graphics.drawable.Drawable mShadowEnd -> E
    android.graphics.Matrix mChildInvertedMatrix -> J
    androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener -> s
    android.graphics.drawable.Drawable mShadowRight -> G
    int mDrawerState -> k
    boolean mInLayout -> l
    float mDrawerElevation -> b
    androidx.customview.widget.ViewDragHelper mRightDragger -> h
    int mMinDrawerMargin -> c
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    boolean mChildrenCanceledTouch -> r
    android.graphics.drawable.Drawable mStatusBarBackground -> w
    float mInitialMotionY -> v
    android.graphics.drawable.Drawable mShadowRightResolved -> y
    java.lang.Object mLastInsets -> B
    int[] LAYOUT_ATTRS -> L
    int mLockModeStart -> p
    java.lang.CharSequence mTitleLeft -> z
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> a
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> a
    814:847:void updateDrawerState(int,int,android.view.View) -> a
    850:875:void dispatchOnDrawerClosed(android.view.View) -> a
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> a
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> a
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    985:995:android.view.View findDrawerWithGravity(int) -> a
    1208:1209:boolean mirror(android.graphics.drawable.Drawable,int) -> a
    1641:1670:void closeDrawers(boolean) -> a
    1961:1972:void cancelChildViewTouch() -> a
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> b
    878:897:void dispatchOnDrawerOpened(android.view.View) -> b
    955:963:android.view.View findOpenDrawer() -> b
    967:976:void moveDrawerToOffset(android.view.View,float) -> b
    1005:1011:java.lang.String gravityToString(int) -> b
    927:934:void setDrawerViewOffset(android.view.View,float) -> c
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> c
    1949:1956:android.view.View findVisibleDrawer() -> c
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1748:void closeDrawer(android.view.View) -> closeDrawer
    1757:1758:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1790:void closeDrawer(int) -> closeDrawer
    1800:1803:void closeDrawer(int,boolean) -> closeDrawer
    1637:1638:void closeDrawers() -> closeDrawers
    1309:1322:void computeScroll() -> computeScroll
    937:937:float getDrawerViewOffset(android.view.View) -> d
    1875:1882:boolean hasPeekingDrawer() -> d
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1464:1464:boolean isContentView(android.view.View) -> e
    1945:1945:boolean hasVisibleDrawer() -> e
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> f
    1468:1479:boolean isDrawerView(android.view.View) -> f
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> g
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> g
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    652:697:int getDrawerLockMode(int) -> getDrawerLockMode
    709:710:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    746:753:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    1158:1163:void resolveShadowDrawables() -> h
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> h
    1819:1820:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1836:1840:boolean isDrawerOpen(int) -> isDrawerOpen
    1852:1853:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1871:boolean isDrawerVisible(int) -> isDrawerVisible
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1679:void openDrawer(android.view.View) -> openDrawer
    1688:1689:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1723:void openDrawer(int) -> openDrawer
    1733:1736:void openDrawer(int,boolean) -> openDrawer
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    405:409:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    576:614:void setDrawerLockMode(int,int) -> setDrawerLockMode
    635:636:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    431:444:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    465:466:void setDrawerShadow(int,int) -> setDrawerShadow
    727:734:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$a:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$b:
    androidx.drawerlayout.widget.DrawerLayout this$0 -> e
    android.graphics.Rect mTmpRect -> d
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$c:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    float onScreen -> a
    boolean isPeeking -> b
    int openState -> c
    2319:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2328:void <init>(int,int) -> <init>
    2331:2333:void <init>(int,int,int) -> <init>
    2336:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    int lockModeEnd -> f
    int lockModeRight -> d
    int lockModeStart -> e
    int openDrawerGravity -> b
    int lockModeLeft -> c
    2124:2124:void <clinit>() -> <clinit>
    2102:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$a:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
    298:298:void onDrawerClosed(android.view.View) -> onDrawerClosed
    294:294:void onDrawerOpened(android.view.View) -> onDrawerOpened
    290:290:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    302:302:void onDrawerStateChanged(int) -> onDrawerStateChanged
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$d:
    androidx.customview.widget.ViewDragHelper mDragger -> b
    java.lang.Runnable mPeekRunnable -> c
    androidx.drawerlayout.widget.DrawerLayout this$0 -> d
    int mAbsGravity -> a
    2152:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> a
    2203:2208:void closeOtherDrawer() -> a
    2237:2259:void peekDrawer() -> b
    2161:2162:void removeCallbacks() -> c
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$d$a:
    androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback this$1 -> a
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.exifinterface.media.ExifInterface -> androidx.exifinterface.media.ExifInterface:
    java.util.List ROTATION_ORDER -> r
    int mOrfThumbnailOffset -> n
    java.nio.charset.Charset ASCII -> S
    java.util.regex.Pattern sGpsTimestampPattern -> V
    androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG -> N
    int mExifOffset -> l
    int[] IFD_FORMAT_BYTES_PER_FORMAT -> y
    java.lang.String[] IFD_FORMAT_NAMES -> x
    int mThumbnailOffset -> h
    byte[] IDENTIFIER_EXIF_APP1 -> T
    boolean mIsSupportedFile -> q
    byte[] ORF_MAKER_NOTE_HEADER_1 -> u
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS -> B
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS -> D
    java.util.HashMap[] mAttributes -> d
    java.util.Set mAttributesOffsets -> e
    android.content.res.AssetManager$AssetInputStream mAssetInputStream -> b
    androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS -> J
    java.util.HashMap[] sExifTagMapsForReading -> O
    androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE -> F
    androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS -> L
    java.lang.String mFilename -> a
    byte[] mThumbnailBytes -> j
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS -> H
    androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS -> K
    androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG -> M
    int mOrfThumbnailLength -> o
    int mOrfMakerNoteOffset -> m
    int mThumbnailCompression -> k
    java.util.regex.Pattern sNonZeroTimePattern -> U
    java.util.List FLIPPED_ROTATION_ORDER -> s
    java.util.HashSet sTagSetForCompatibility -> Q
    int mThumbnailLength -> i
    byte[] EXIF_ASCII_PREFIX -> z
    java.nio.ByteOrder mExifByteOrder -> f
    byte[] JPEG_SIGNATURE -> t
    int mMimeType -> c
    byte[] ORF_MAKER_NOTE_HEADER_2 -> v
    java.text.SimpleDateFormat sFormatter -> w
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS -> C
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS -> E
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS -> A
    java.util.HashMap sExifPointerTagMap -> R
    java.util.HashMap[] sExifTagMapsForWriting -> P
    boolean mHasThumbnail -> g
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS -> G
    int mRw2JpgFromRawOffset -> p
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS -> I
    2147:3711:void <clinit>() -> <clinit>
    3717:3719:void <init>(java.lang.String) -> <init>
    3738:3740:void <init>(java.io.InputStream) -> <init>
    3759:3774:androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String) -> a
    4207:4263:void loadAttributes(java.io.InputStream) -> a
    4657:4683:double convertRationalLatLonToDouble(java.lang.String,java.lang.String) -> a
    4688:4691:java.lang.String convertDecimalDegree(double) -> a
    4696:4710:int getMimeType(java.io.BufferedInputStream) -> a
    4751:4760:boolean isOrfFormat(byte[]) -> a
    4798:4806:void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int) -> a
    5043:5118:void getOrfAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> a
    5153:5157:void saveJpegAttributes(java.io.InputStream,java.io.OutputStream) -> a
    5245:5253:void readExifSegment(byte[],int) -> a
    5257:5280:void addDefaultValuesForCompatibility() -> a
    5305:5318:void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> a
    5608:5643:void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> a
    5709:5739:boolean isSupportedDataType(java.util.HashMap) -> a
    5873:6039:int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,int) -> a
    6433:6437:void swapBasedOnImageSize(int,int) -> a
    6476:6484:void closeQuietly(java.io.Closeable) -> a
    6506:6516:long[] convertToLongArray(java.lang.Object) -> a
    4194:4197:void removeAttribute(java.lang.String) -> b
    4733:4739:boolean isRafFormat(byte[]) -> b
    4984:5028:void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> b
    5332:5346:void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> b
    5648:5705:void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap) -> b
    5745:5755:boolean isThumbnail(java.util.HashMap) -> b
    5761:5790:void validateImages(java.io.InputStream) -> b
    6491:6498:int copy(java.io.InputStream,java.io.OutputStream) -> b
    4768:4777:boolean isRw2Format(byte[]) -> c
    4933:4971:void getRawAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> c
    5557:5574:void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> c
    6052:6121:android.util.Pair guessDataFormat(java.lang.String) -> c
    4718:4723:boolean isJpegFormat(byte[]) -> d
    5125:5143:void getRw2Attributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> d
    5805:5867:void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int) -> d
    5285:5291:java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> e
    5578:5602:void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream) -> f
    4086:4119:void flipHorizontally() -> flipHorizontally
    4047:4080:void flipVertically() -> flipVertically
    4559:4565:double getAltitude(double) -> getAltitude
    3785:3813:java.lang.String getAttribute(java.lang.String) -> getAttribute
    3846:3854:double getAttributeDouble(java.lang.String,double) -> getAttributeDouble
    3825:3833:int getAttributeInt(java.lang.String,int) -> getAttributeInt
    4598:4600:long getDateTime() -> getDateTime
    4635:4640:long getGpsDateTime() -> getGpsDateTime
    4469:4476:boolean getLatLong(float[]) -> getLatLong
    4488:4504:double[] getLatLong() -> getLatLong
    4151:4158:int getRotationDegrees() -> getRotationDegrees
    4342:4343:byte[] getThumbnail() -> getThumbnail
    4403:4410:android.graphics.Bitmap getThumbnailBitmap() -> getThumbnailBitmap
    4354:4392:byte[] getThumbnailBytes() -> getThumbnailBytes
    4450:4458:long[] getThumbnailRange() -> getThumbnailRange
    4331:4331:boolean hasThumbnail() -> hasThumbnail
    4127:4133:boolean isFlipped() -> isFlipped
    4438:4438:boolean isThumbnailCompressed() -> isThumbnailCompressed
    4009:4010:void resetOrientation() -> resetOrientation
    4019:4020:void rotate(int) -> rotate
    4293:4294:void saveAttributes() -> saveAttributes
    4573:4576:void setAltitude(double) -> setAltitude
    3865:4003:void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    4586:4589:void setDateTime(long) -> setDateTime
    4514:4527:void setGpsInfo(android.location.Location) -> setGpsInfo
    4540:4541:void setLatLong(double,double) -> setLatLong
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream -> androidx.exifinterface.media.ExifInterface$a:
    java.io.DataInputStream mDataInputStream -> a
    java.nio.ByteOrder LITTLE_ENDIAN -> e
    int mPosition -> d
    java.nio.ByteOrder BIG_ENDIAN -> f
    int mLength -> c
    java.nio.ByteOrder mByteOrder -> b
    6127:6128:void <clinit>() -> <clinit>
    6137:6142:void <init>(java.io.InputStream) -> <init>
    6145:6146:void <init>(byte[]) -> <init>
    6149:6150:void setByteOrder(java.nio.ByteOrder) -> a
    6153:6162:void seek(long) -> a
    6167:6167:int peek() -> a
    6172:6172:int available() -> available
    6324:6324:long readUnsignedInt() -> b
    6177:6178:int read() -> read
    6183:6185:int read(byte[],int,int) -> read
    6202:6203:boolean readBoolean() -> readBoolean
    6242:6244:byte readByte() -> readByte
    6208:6209:char readChar() -> readChar
    6363:6363:double readDouble() -> readDouble
    6358:6358:float readFloat() -> readFloat
    6220:6222:void readFully(byte[],int,int) -> readFully
    6231:6233:void readFully(byte[]) -> readFully
    6274:6276:int readInt() -> readInt
    6196:6197:java.lang.String readLine() -> readLine
    6329:6331:long readLong() -> readLong
    6255:6257:short readShort() -> readShort
    6214:6215:java.lang.String readUTF() -> readUTF
    6190:6191:int readUnsignedByte() -> readUnsignedByte
    6306:6308:int readUnsignedShort() -> readUnsignedShort
    6295:6301:int skipBytes(int) -> skipBytes
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream -> androidx.exifinterface.media.ExifInterface$b:
    java.io.OutputStream mOutputStream -> a
    java.nio.ByteOrder mByteOrder -> b
    6374:6377:void <init>(java.io.OutputStream,java.nio.ByteOrder) -> <init>
    6380:6381:void setByteOrder(java.nio.ByteOrder) -> a
    6398:6405:void writeShort(short) -> a
    6422:6423:void writeUnsignedShort(int) -> a
    6426:6427:void writeUnsignedInt(long) -> a
    6385:6386:void write(byte[]) -> write
    6390:6391:void write(byte[],int,int) -> write
    6394:6395:void writeByte(int) -> writeByte
    6408:6419:void writeInt(int) -> writeInt
androidx.exifinterface.media.ExifInterface$ExifAttribute -> androidx.exifinterface.media.ExifInterface$c:
    int numberOfComponents -> b
    byte[] bytes -> c
    int format -> a
    2943:2947:void <init>(int,int,byte[]) -> <init>
    2960:2960:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder) -> a
    2964:2970:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder) -> a
    2974:2974:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder) -> a
    2978:2984:androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder) -> a
    2993:2998:androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String) -> a
    3018:3018:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder) -> a
    3022:3029:androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder) -> a
    3037:3043:androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder) -> a
    3179:3181:double getDoubleValue(java.nio.ByteOrder) -> a
    3298:3298:int size() -> a
    2950:2956:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder) -> b
    3002:3003:androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String) -> b
    3007:3014:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder) -> b
    3218:3220:int getIntValue(java.nio.ByteOrder) -> b
    3243:3294:java.lang.String getStringValue(java.nio.ByteOrder) -> c
    3057:3173:java.lang.Object getValue(java.nio.ByteOrder) -> d
    3052:3052:java.lang.String toString() -> toString
androidx.exifinterface.media.ExifInterface$ExifTag -> androidx.exifinterface.media.ExifInterface$d:
    int secondaryFormat -> d
    java.lang.String name -> b
    int primaryFormat -> c
    int number -> a
    3310:3315:void <init>(java.lang.String,int,int) -> <init>
    3318:3323:void <init>(java.lang.String,int,int,int) -> <init>
    3327:3328:boolean isFormatCompatible(int) -> a
androidx.exifinterface.media.ExifInterface$Rational -> androidx.exifinterface.media.ExifInterface$e:
    long denominator -> b
    long numerator -> a
    2911:2912:void <init>(double) -> <init>
    2915:2924:void <init>(long,long) -> <init>
    2932:2932:double calculate() -> a
    2928:2928:java.lang.String toString() -> toString
androidx.fragment.app.BackStackRecord -> o4:
    androidx.fragment.app.FragmentManagerImpl mManager -> s
    int mIndex -> u
    boolean mCommitted -> t
    140:142:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    59:60:void dump(java.lang.String,java.io.PrintWriter) -> a
    63:138:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    179:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    255:269:void bumpBackStackNesting(int) -> a
    303:303:int commitInternal(boolean) -> a
    332:341:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
    357:381:boolean interactsWith(java.util.ArrayList,int,int) -> a
    389:441:void executeOps() -> a
    528:593:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> a
    643:649:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> a
    345:353:boolean interactsWith(int) -> b
    451:502:void executePopOps(boolean) -> b
    607:629:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> b
    633:639:boolean isPostponed() -> b
    652:653:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> b
    272:278:void runOnCommitRunnables() -> c
    282:282:int commit() -> commit
    287:287:int commitAllowingStateLoss() -> commitAllowingStateLoss
    292:294:void commitNow() -> commitNow
    298:300:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    219:224:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    171:174:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    156:156:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    162:165:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    151:151:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    146:146:int getId() -> getId
    660:660:java.lang.String getName() -> getName
    197:202:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    665:665:boolean isEmpty() -> isEmpty
    186:191:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    243:244:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    230:236:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    208:213:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    43:55:java.lang.String toString() -> toString
androidx.fragment.app.BackStackState -> p4:
    java.lang.String mName -> g
    boolean mReorderingAllowed -> o
    int mBreadCrumbShortTitleRes -> k
    int mIndex -> h
    int mBreadCrumbTitleRes -> i
    int mTransitionStyle -> f
    int[] mOps -> a
    int mTransition -> e
    java.util.ArrayList mFragmentWhos -> b
    java.lang.CharSequence mBreadCrumbTitleText -> j
    java.lang.CharSequence mBreadCrumbShortTitleText -> l
    java.util.ArrayList mSharedElementTargetNames -> n
    java.util.ArrayList mSharedElementSourceNames -> m
    int[] mOldMaxLifecycleStates -> c
    int[] mCurrentMaxLifecycleStates -> d
    170:170:void <clinit>() -> <clinit>
    47:52:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:99:void <init>(android.os.Parcel) -> <init>
    102:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> a
    148:148:int describeContents() -> describeContents
    153:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> p4$a:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    boolean mShowsDialog -> d0
    int mTheme -> b0
    int mStyle -> a0
    boolean mViewDestroyed -> g0
    android.app.Dialog mDialog -> f0
    boolean mCancelable -> c0
    int mBackStackId -> e0
    java.lang.Runnable mDismissRunnable -> Z
    boolean mDismissed -> h0
    boolean mShownByMe -> i0
    android.os.Handler mHandler -> Y
    112:113:void <init>() -> <init>
    216:253:void dismissInternal(boolean,boolean) -> a
    202:203:void dismiss() -> dismiss
    212:213:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    262:262:android.app.Dialog getDialog() -> getDialog
    332:332:boolean getShowsDialog() -> getShowsDialog
    283:283:int getTheme() -> getTheme
    304:304:boolean isCancelable() -> isCancelable
    451:478:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    337:343:void onAttach(android.content.Context) -> onAttach
    436:436:void onCancel(android.content.DialogInterface) -> onCancel
    358:371:void onCreate(android.os.Bundle) -> onCreate
    431:431:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    529:547:void onDestroyView() -> onDestroyView
    347:354:void onDetach() -> onDetach
    440:447:void onDismiss(android.content.DialogInterface) -> onDismiss
    376:388:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    492:514:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    482:488:void onStart() -> onStart
    518:522:void onStop() -> onStop
    274:276:android.app.Dialog requireDialog() -> requireDialog
    296:298:void setCancelable(boolean) -> setCancelable
    325:326:void setShowsDialog(boolean) -> setShowsDialog
    130:137:void setStyle(int,int) -> setStyle
    395:405:void setupDialog(android.app.Dialog,int) -> setupDialog
    151:156:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    168:173:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    188:193:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$a:
    androidx.fragment.app.DialogFragment this$0 -> a
    93:93:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    96:99:void run() -> run
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    boolean mFromLayout -> m
    androidx.fragment.app.Fragment mTarget -> g
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> U
    boolean mHidden -> y
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner -> T
    java.lang.String mWho -> e
    boolean mHasMenu -> C
    int mBackStackNesting -> q
    boolean mIsNewlyAdded -> M
    boolean mInLayout -> n
    boolean mDeferStart -> I
    android.os.Bundle mSavedFragmentState -> b
    int mTargetRequestCode -> i
    java.lang.Boolean mIsPrimaryNavigationFragment -> j
    android.os.Bundle mArguments -> f
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo -> K
    boolean mIsCreated -> Q
    int mState -> a
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> r
    android.util.SparseArray mSavedViewState -> c
    android.view.ViewGroup mContainer -> F
    boolean mDetached -> z
    android.view.LayoutInflater mLayoutInflater -> P
    int mFragmentId -> v
    float mPostponedAlpha -> O
    boolean mMenuVisible -> D
    androidx.lifecycle.Lifecycle$State mMaxState -> R
    boolean mHiddenChanged -> N
    boolean mRestored -> o
    java.lang.String mTargetWho -> h
    boolean mUserVisibleHint -> J
    boolean mAdded -> k
    androidx.fragment.app.Fragment mParentFragment -> u
    android.view.View mInnerView -> H
    java.lang.Object USE_DEFAULT_TRANSITION -> X
    java.lang.String mTag -> x
    boolean mCalled -> E
    int mContainerId -> w
    java.lang.Runnable mPostponedDurationRunnable -> L
    boolean mRetainInstance -> A
    boolean mPerformedCreateView -> p
    boolean mRemoving -> l
    androidx.fragment.app.FragmentHostCallback mHost -> s
    androidx.fragment.app.FragmentManagerImpl mChildFragmentManager -> t
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> S
    int mContentLayoutId -> W
    java.lang.Boolean mSavedUserVisibleHint -> d
    boolean mRetainInstanceChangedWhileDetached -> B
    android.view.View mView -> G
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> V
    98:98:void <clinit>() -> <clinit>
    450:452:void <init>() -> <init>
    463:465:void <init>(int) -> <init>
    2451:2461:void callStartTransitionListener() -> a
    2551:2554:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    2597:2608:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    2616:2621:void performActivityCreated(android.os.Bundle) -> a
    2678:2680:void performMultiWindowModeChanged(boolean) -> a
    2688:2690:void performConfigurationChanged(android.content.res.Configuration) -> a
    2707:2715:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    2745:2753:boolean performContextItemSelected(android.view.MenuItem) -> a
    2757:2763:void performOptionsMenuClosed(android.view.Menu) -> a
    2856:2870:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> a
    2887:2891:void setNextAnim(int) -> a
    2901:2907:void setNextTransition(int,int) -> a
    2938:2939:void setAnimatingAway(android.view.View) -> a
    2942:2943:void setAnimator(android.animation.Animator) -> a
    2582:2589:void performCreate(android.os.Bundle) -> b
    2683:2685:void performPictureInPictureModeChanged(boolean) -> b
    2719:2727:boolean performPrepareOptionsMenu(android.view.Menu) -> b
    2731:2741:boolean performOptionsItemSelected(android.view.MenuItem) -> b
    2873:2876:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> b
    2960:2961:void setStateAfterAnimating(int) -> b
    1412:1414:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> c
    2931:2934:android.view.View getAnimatingAway() -> c
    2978:2979:void setHideReplaced(boolean) -> c
    2766:2772:void performSaveInstanceState(android.os.Bundle) -> d
    2946:2949:android.animation.Animator getAnimator() -> d
    2474:2547:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1623:1631:void restoreChildFragmentState(android.os.Bundle) -> e
    2917:2920:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> e
    570:570:boolean equals(java.lang.Object) -> equals
    547:554:void restoreViewState(android.os.Bundle) -> f
    2924:2927:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> f
    2880:2883:int getNextAnim() -> g
    788:788:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2315:2315:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2340:2340:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    636:636:android.os.Bundle getArguments() -> getArguments
    922:923:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    761:761:android.content.Context getContext() -> getContext
    2098:2101:java.lang.Object getEnterTransition() -> getEnterTransition
    2177:2180:java.lang.Object getExitTransition() -> getExitTransition
    890:890:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    815:815:java.lang.Object getHost() -> getHost
    605:605:int getId() -> getId
    1396:1399:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1430:1431:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    283:283:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1165:1165:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    934:934:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2215:2218:java.lang.Object getReenterTransition() -> getReenterTransition
    838:838:android.content.res.Resources getResources() -> getResources
    1073:1073:boolean getRetainInstance() -> getRetainInstance
    2137:2140:java.lang.Object getReturnTransition() -> getReturnTransition
    370:370:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2248:2251:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2286:2289:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    860:860:java.lang.String getString(int) -> getString
    873:873:java.lang.String getString(int,java.lang.Object[]) -> getString
    613:613:java.lang.String getTag() -> getTag
    736:744:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    751:751:int getTargetRequestCode() -> getTargetRequestCode
    849:849:java.lang.CharSequence getText(int) -> getText
    1153:1153:boolean getUserVisibleHint() -> getUserVisibleHint
    1686:1686:android.view.View getView() -> getView
    324:325:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    345:345:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    361:362:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    2894:2897:int getNextTransition() -> h
    1028:1028:boolean hasOptionsMenu() -> hasOptionsMenu
    577:577:int hashCode() -> hashCode
    2910:2913:int getNextTransitionStyle() -> i
    495:495:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    521:530:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    964:964:boolean isAdded() -> isAdded
    973:973:boolean isDetached() -> isDetached
    1022:1022:boolean isHidden() -> isHidden
    993:993:boolean isInLayout() -> isInLayout
    1034:1034:boolean isMenuVisible() -> isMenuVisible
    982:982:boolean isRemoving() -> isRemoving
    1001:1001:boolean isResumed() -> isResumed
    663:666:boolean isStateSaved() -> isStateSaved
    1010:1010:boolean isVisible() -> isVisible
    2953:2956:int getStateAfterAnimating() -> j
    468:483:void initLifecycle() -> k
    1877:1893:void initState() -> l
    2971:2974:boolean isHideReplaced() -> m
    563:563:boolean isInBackStack() -> n
    2964:2967:boolean isPostponed() -> o
    1720:1721:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1238:1238:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1523:1529:void onAttach(android.content.Context) -> onAttach
    1540:1541:void onAttach(android.app.Activity) -> onAttach
    1515:1515:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    1804:1805:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2045:2045:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1603:1608:void onCreate(android.os.Bundle) -> onCreate
    1560:1560:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1581:1581:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1999:2000:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1918:1918:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1659:1662:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1867:1868:void onDestroy() -> onDestroy
    1945:1945:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1858:1859:void onDestroyView() -> onDestroyView
    1901:1902:void onDetach() -> onDetach
    1380:1380:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1044:1044:void onHiddenChanged(boolean) -> onHiddenChanged
    1484:1490:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1502:1503:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1844:1845:void onLowMemory() -> onLowMemory
    1790:1790:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1966:1966:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1977:1977:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1828:1829:void onPause() -> onPause
    1799:1799:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1935:1935:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1819:1819:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1340:1340:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1757:1758:void onResume() -> onResume
    1780:1780:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1746:1747:void onStart() -> onStart
    1838:1839:void onStop() -> onStop
    1676:1676:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1736:1737:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2663:2664:void noteStateNotSaved() -> p
    2375:2376:void postponeEnterTransition() -> postponeEnterTransition
    2409:2418:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    2558:2576:void performAttach() -> q
    2825:2832:void performDestroy() -> r
    2013:2014:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1314:1315:void requestPermissions(java.lang.String[],int) -> requestPermissions
    800:802:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    647:649:android.os.Bundle requireArguments() -> requireArguments
    772:774:android.content.Context requireContext() -> requireContext
    908:910:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    826:828:java.lang.Object requireHost() -> requireHost
    946:957:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1697:1699:android.view.View requireView() -> requireView
    2805:2813:void performDestroyView() -> s
    2303:2304:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2328:2329:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    624:628:void setArguments(android.os.Bundle) -> setArguments
    2056:2057:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2084:2085:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2067:2068:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2160:2161:void setExitTransition(java.lang.Object) -> setExitTransition
    1084:1090:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    678:679:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1102:1108:void setMenuVisibility(boolean) -> setMenuVisibility
    2199:2200:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1060:1070:void setRetainInstance(boolean) -> setRetainInstance
    2120:2121:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2234:2235:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2269:2270:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    702:729:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1131:1142:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1363:1366:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1173:1174:void startActivity(android.content.Intent) -> startActivity
    1182:1183:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1194:1195:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1203:1204:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1216:1217:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2431:2443:void startPostponedEnterTransition() -> startPostponedEnterTransition
    2838:2842:void performDetach() -> t
    582:596:java.lang.String toString() -> toString
    2693:2695:void performLowMemory() -> u
    2024:2025:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    2775:2784:void performPause() -> v
    2667:2675:void performPrimaryNavigationFragmentChanged() -> w
    2645:2651:void performResume() -> x
    2628:2634:void performStart() -> y
    2790:2799:void performStop() -> z
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$a:
    androidx.fragment.app.Fragment this$0 -> a
    230:230:void <init>(androidx.fragment.app.Fragment) -> <init>
    233:234:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    androidx.fragment.app.Fragment this$0 -> a
    471:471:void <init>(androidx.fragment.app.Fragment) -> <init>
    475:480:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$b:
    androidx.fragment.app.Fragment this$0 -> a
    2434:2434:void <init>(androidx.fragment.app.Fragment) -> <init>
    2437:2438:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$c:
    androidx.fragment.app.Fragment this$0 -> a
    2558:2558:void <init>(androidx.fragment.app.Fragment) -> <init>
    2562:2563:android.view.View onFindViewById(int) -> onFindViewById
    2570:2570:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$d:
    java.lang.Object mReenterTransition -> j
    java.lang.Object mSharedElementEnterTransition -> k
    java.lang.Object mReturnTransition -> h
    java.lang.Object mExitTransition -> i
    androidx.core.app.SharedElementCallback mEnterTransitionCallback -> o
    java.lang.Object mEnterTransition -> g
    androidx.core.app.SharedElementCallback mExitTransitionCallback -> p
    int mNextTransitionStyle -> f
    int mNextAnim -> d
    java.lang.Boolean mAllowReturnTransitionOverlap -> m
    int mNextTransition -> e
    java.lang.Boolean mAllowEnterTransitionOverlap -> n
    boolean mEnterTransitionPostponed -> q
    int mStateAfterAnimating -> c
    java.lang.Object mSharedElementReturnTransition -> l
    boolean mIsHideReplaced -> s
    androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> r
    android.animation.Animator mAnimator -> b
    android.view.View mAnimatingAway -> a
    2995:3028:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    430:431:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$e:
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    404:404:void <clinit>() -> <clinit>
    382:384:void <init>(android.os.Bundle) -> <init>
    386:391:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    395:395:int describeContents() -> describeContents
    400:401:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$a:
    405:405:void <init>() -> <init>
    405:405:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    405:405:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    408:408:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    413:413:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    405:405:java.lang.Object[] newArray(int) -> newArray
    418:418:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    boolean mRequestedPermissionsFromFragment -> m
    androidx.fragment.app.FragmentController mFragments -> h
    boolean mStartedIntentSenderFromFragment -> n
    boolean mStartedActivityFromFragment -> o
    boolean mCreated -> j
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> i
    boolean mResumed -> k
    androidx.collection.SparseArrayCompat mPendingFragmentActivityResults -> q
    boolean mStopped -> l
    int mNextCandidateRequestIndex -> p
    127:128:void <init>() -> <init>
    142:143:void <init>(int) -> <init>
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> a
    714:715:void checkForValidRequestCode(int) -> a
    830:831:int allocateRequestIndex(androidx.fragment.app.Fragment) -> a
    853:865:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> a
    990:991:void markFragmentsCreated() -> a
    995:1011:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> a
    599:613:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    646:646:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    155:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    628:628:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    273:276:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:317:void onCreate(android.os.Bundle) -> onCreate
    324:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:340:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:351:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:368:void onDestroy() -> onDestroy
    375:377:void onLowMemory() -> onLowMemory
    384:390:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:251:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:439:void onNewIntent(android.content.Intent) -> onNewIntent
    405:411:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:422:void onPause() -> onPause
    265:266:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:469:void onPostResume() -> onPostResume
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    487:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:772:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:460:void onResume() -> onResume
    478:480:void onResumeFragments() -> onResumeFragments
    510:529:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:552:void onStart() -> onStart
    446:447:void onStateNotSaved() -> onStateNotSaved
    559:566:void onStop() -> onStop
    206:207:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    219:220:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    658:664:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:677:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    779:780:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    788:800:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    685:692:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:707:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    810:824:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    194:195:void supportFinishAfterTransition() -> supportFinishAfterTransition
    583:584:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    227:228:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    235:236:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    728:732:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$a:
    androidx.fragment.app.FragmentActivity this$0 -> f
    871:873:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    971:972:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    900:901:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    977:977:android.view.View onFindViewById(int) -> onFindViewById
    868:868:java.lang.Object onGetHost() -> onGetHost
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    965:966:int onGetWindowAnimations() -> onGetWindowAnimations
    982:983:boolean onHasView() -> onHasView
    960:960:boolean onHasWindowAnimations() -> onHasWindowAnimations
    948:950:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    954:954:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    927:928:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    933:934:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    941:943:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    921:922:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    246:247:void dispatchActivityCreated() -> dispatchActivityCreated
    362:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    235:236:void dispatchCreate() -> dispatchCreate
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    329:330:void dispatchDestroy() -> dispatchDestroy
    308:309:void dispatchDestroyView() -> dispatchDestroyView
    374:375:void dispatchLowMemory() -> dispatchLowMemory
    340:341:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    435:436:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    279:280:void dispatchPause() -> dispatchPause
    351:352:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    298:298:void dispatchReallyStop() -> dispatchReallyStop
    268:269:void dispatchResume() -> dispatchResume
    257:258:void dispatchStart() -> dispatchStart
    290:291:void dispatchStop() -> dispatchStop
    487:487:void doLoaderDestroy() -> doLoaderDestroy
    478:478:void doLoaderRetain() -> doLoaderRetain
    456:456:void doLoaderStart() -> doLoaderStart
    469:469:void doLoaderStop(boolean) -> doLoaderStop
    531:531:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    446:446:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    108:108:java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    99:99:int getActiveFragmentsCount() -> getActiveFragmentsCount
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    83:83:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    141:142:void noteStateNotSaved() -> noteStateNotSaved
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    496:496:void reportLoaderStart() -> reportLoaderStart
    165:167:void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    180:181:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    521:521:void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap) -> restoreLoaderNonConfig
    190:191:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    507:507:androidx.collection.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    224:224:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    208:209:java.util.List retainNonConfig() -> retainNonConfig
    151:151:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    androidx.collection.SimpleArrayMap sClassMap -> a
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    64:67:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> a
    44:50:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> b
    114:117:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    android.content.Context mContext -> b
    android.os.Handler mHandler -> c
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> e
    int mWindowAnimations -> d
    android.app.Activity mActivity -> a
    53:55:void <init>(android.content.Context,android.os.Handler,int) -> <init>
    58:59:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:67:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    195:195:android.app.Activity getActivity() -> a
    209:209:void onAttachFragment(androidx.fragment.app.Fragment) -> a
    200:200:android.content.Context getContext() -> b
    205:205:android.os.Handler getHandler() -> c
    80:80:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    185:185:android.view.View onFindViewById(int) -> onFindViewById
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    179:179:int onGetWindowAnimations() -> onGetWindowAnimations
    190:190:boolean onHasView() -> onHasView
    172:172:boolean onHasWindowAnimations() -> onHasWindowAnimations
    158:158:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    86:86:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    165:165:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    119:120:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    129:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    144:145:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    111:111:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    androidx.fragment.app.FragmentFactory mFragmentFactory -> a
    androidx.fragment.app.FragmentFactory DEFAULT_FACTORY -> b
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    434:435:void enableDebugLogging(boolean) -> enableDebugLogging
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    143:143:androidx.fragment.app.FragmentTransaction openTransaction() -> openTransaction
    401:402:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    454:454:void <init>() -> <init>
    512:512:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    476:476:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    500:500:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    589:589:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    598:598:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    551:551:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    465:465:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    488:488:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    542:542:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    571:571:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    533:533:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    560:560:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    524:524:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    580:580:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManagerImpl -> q4:
    java.util.HashMap mActive -> g
    java.util.ArrayList mTmpRecords -> z
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> o
    boolean mNeedMenuInvalidate -> u
    boolean mStopped -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> I
    java.util.ArrayList mPendingActions -> c
    androidx.fragment.app.Fragment mParent -> s
    java.util.ArrayList mTmpAddedFragments -> B
    java.util.ArrayList mAvailBackStackIndices -> m
    boolean mHavePendingDeferredStart -> y
    androidx.fragment.app.FragmentContainer mContainer -> r
    java.util.ArrayList mCreatedMenus -> i
    boolean mExecutingActions -> d
    android.os.Bundle mStateBundle -> C
    java.util.ArrayList mAdded -> f
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> k
    boolean mStateSaved -> v
    java.util.ArrayList mPostponedTransactions -> E
    int mNextFragmentIndex -> e
    boolean mDestroyed -> x
    androidx.fragment.app.Fragment mPrimaryNav -> t
    java.util.ArrayList mTmpIsPop -> A
    android.view.animation.Interpolator DECELERATE_CUBIC -> J
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> j
    java.util.ArrayList mBackStackChangeListeners -> n
    java.util.ArrayList mBackStackIndices -> l
    androidx.fragment.app.FragmentHostCallback mHost -> q
    android.util.SparseArray mStateArray -> D
    java.lang.Runnable mExecCommit -> G
    java.util.ArrayList mBackStack -> h
    boolean DEBUG -> H
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> F
    int mCurState -> p
    76:575:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    1584:1593:void scheduleCommit() -> A
    1323:1328:void startPendingDeferredFragments() -> B
    192:201:void updateOnBackPressedCallbackEnabled() -> C
    155:172:void throwException(java.lang.RuntimeException) -> a
    293:319:boolean popBackStackImmediate(java.lang.String,int,int) -> a
    393:403:void addRetainedFragment(androidx.fragment.app.Fragment) -> a
    581:591:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> a
    595:598:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> a
    603:702:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> a
    725:1064:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> a
    1076:1130:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> a
    1289:1320:void moveToState(int,boolean) -> a
    1375:1396:void addFragment(androidx.fragment.app.Fragment,boolean) -> a
    1526:1531:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    1557:1573:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> a
    1617:1638:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> a
    1747:1776:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> a
    1844:1899:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> a
    1935:1968:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> a
    1989:2021:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> a
    2091:2107:void addAddedFragments(androidx.collection.ArraySet) -> a
    2191:2195:void addBackStackState(androidx.fragment.app.BackStackRecord) -> a
    2200:2251:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> a
    2430:2431:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> a
    2440:2547:void restoreSaveState(android.os.Parcelable) -> a
    2555:2559:void burpActive() -> a
    2563:2563:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> a
    2658:2662:void dispatchStateChange(int) -> a
    2667:2673:void dispatchMultiWindowModeChanged(boolean) -> a
    2685:2691:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    2703:2732:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    2767:2778:boolean dispatchContextItemSelected(android.view.MenuItem) -> a
    2782:2791:void dispatchOptionsMenuClosed(android.view.Menu) -> a
    2825:2827:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> a
    2894:2906:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> a
    2942:2954:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> a
    2958:2970:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> a
    334:338:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    1464:1481:void attachFragment(androidx.fragment.app.Fragment) -> b
    1597:1613:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> b
    1642:1649:void freeBackStackIndex(int) -> b
    1688:1705:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> b
    1909:1918:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> b
    2068:2082:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> b
    2159:2171:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> b
    2676:2682:void dispatchPictureInPictureModeChanged(boolean) -> b
    2736:2748:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    2752:2763:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> b
    2878:2890:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> b
    2926:2938:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> b
    3064:3076:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> b
    3096:3105:boolean checkForMenus() -> b
    3137:3149:int transitToStyleIndex(int,boolean) -> b
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    718:718:boolean isStateAtLeast(int) -> c
    1163:1211:void completeShowHideFragment(androidx.fragment.app.Fragment) -> c
    1535:1536:void checkStateLoss() -> c
    1659:1660:void ensureExecReady(boolean) -> c
    1794:1795:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> c
    2910:2922:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> c
    3079:3091:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> c
    1446:1461:void detachFragment(androidx.fragment.app.Fragment) -> d
    1712:1715:void cleanupExec() -> d
    3003:3015:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> d
    3034:3046:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> d
    3113:3125:int reverseTransit(int) -> d
    475:544:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2611:2614:void dispatchActivityCreated() -> e
    2807:2810:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> e
    2988:3000:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> e
    183:185:boolean executePendingTransactions() -> executePendingTransactions
    1137:1150:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> f
    2605:2608:void dispatchCreate() -> f
    2973:2985:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> f
    1487:1499:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1505:1522:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    2040:2044:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> g
    2642:2654:void dispatchDestroy() -> g
    3018:3030:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> g
    329:329:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    324:324:int getBackStackEntryCount() -> getBackStackEntryCount
    359:365:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2836:2855:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    374:379:java.util.List getFragments() -> getFragments
    2821:2821:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    389:389:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> h
    2638:2639:void dispatchDestroyView() -> h
    3049:3061:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> h
    384:384:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> i
    2694:2700:void dispatchLowMemory() -> i
    454:454:boolean isDestroyed() -> isDestroyed
    1546:1546:boolean isStateSaved() -> isStateSaved
    1420:1427:void hideFragment(androidx.fragment.app.Fragment) -> j
    2629:2630:void dispatchPause() -> j
    2813:2816:void dispatchPrimaryNavigationFragmentChanged() -> k
    3109:3109:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> k
    211:220:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> l
    2623:2626:void dispatchResume() -> l
    1331:1345:void makeActive(androidx.fragment.app.Fragment) -> m
    2617:2620:void dispatchStart() -> m
    1348:1372:void makeInactive(androidx.fragment.app.Fragment) -> n
    2633:2635:void dispatchStop() -> n
    1220:1277:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> o
    2176:2180:void doPendingDeferredStart() -> o
    3156:3172:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3248:3248:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1133:1134:void moveToState(androidx.fragment.app.Fragment) -> p
    2125:2145:void endAnimatingAwayFragments() -> p
    247:248:void popBackStack() -> popBackStack
    258:259:void popBackStack(java.lang.String,int) -> popBackStack
    269:270:void popBackStack(int,int) -> popBackStack
    252:253:boolean popBackStackImmediate() -> popBackStackImmediate
    263:264:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    277:280:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    349:350:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    706:715:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> q
    1721:1738:boolean execPendingActions() -> q
    1399:1404:void removeFragment(androidx.fragment.app.Fragment) -> r
    2113:2118:void forcePostponedTransactions() -> r
    2861:2862:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    342:345:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    406:416:void removeRetainedFragment(androidx.fragment.app.Fragment) -> s
    435:435:int getActiveFragmentCount() -> s
    441:442:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    426:426:java.util.List getActiveFragments() -> t
    2284:2314:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> t
    459:469:java.lang.String toString() -> toString
    2268:2281:void saveFragmentViewState(androidx.fragment.app.Fragment) -> u
    3252:3252:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> u
    2866:2873:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    230:243:void handleOnBackPressed() -> v
    2795:2804:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> v
    1436:1443:void showFragment(androidx.fragment.app.Fragment) -> w
    2593:2602:void noteStateNotSaved() -> w
    2183:2188:void reportBackStackChanged() -> x
    2260:2261:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> y
    2320:2426:android.os.Parcelable saveAllState() -> z
androidx.fragment.app.FragmentManagerImpl$1 -> q4$a:
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:109:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManagerImpl$2 -> q4$b:
    androidx.fragment.app.FragmentManagerImpl this$0 -> a
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:151:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> q4$c:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    androidx.fragment.app.Fragment val$fragment -> b
    1084:1084:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1094:1104:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1108:1108:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1087:1087:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$3$1 -> q4$c$a:
    androidx.fragment.app.FragmentManagerImpl$3 this$1 -> a
    1094:1094:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1097:1102:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> q4$d:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    android.view.View val$viewToAnimate -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1114:1114:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1117:1125:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> q4$e:
    android.view.ViewGroup val$container -> a
    android.view.View val$animatingView -> b
    androidx.fragment.app.Fragment val$fragment -> c
    1177:1177:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1180:1185:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> q4$f:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
    2845:2845:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2851:2851:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> q4$g:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
    3401:3405:void <init>(android.view.animation.Animation) -> <init>
    3409:3413:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> q4$h:
    android.view.ViewGroup mParent -> a
    boolean mAnimating -> e
    android.view.View mChild -> b
    boolean mEnded -> c
    boolean mTransitionEnded -> d
    3433:3440:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3444:3453:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3459:3468:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3473:3481:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> q4$i:
    boolean mRecursive -> b
    androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback -> a
    88:91:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> q4$j:
    int[] Fragment -> a
    3256:3256:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentManagerImpl$OpGenerator -> q4$k:
    boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> q4$l:
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    java.lang.String mName -> a
    int mId -> b
    int mFlags -> c
    3295:3299:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3304:3314:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> a
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> q4$m:
    boolean mIsBack -> a
    int mNumPostponed -> c
    androidx.fragment.app.BackStackRecord mRecord -> b
    3329:3332:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3390:3391:void cancelTransaction() -> a
    3372:3383:void completeTransaction() -> b
    3362:3362:boolean isReady() -> c
    3341:3346:void onStartEnterTransition() -> d
    3355:3356:void startListening() -> e
androidx.fragment.app.FragmentManagerNonConfig -> androidx.fragment.app.FragmentManagerNonConfig:
    java.util.Map mChildNonConfigs -> b
    java.util.Map mViewModelStores -> c
    java.util.Collection mFragments -> a
    49:53:void <init>(java.util.Collection,java.util.Map,java.util.Map) -> <init>
    76:76:java.util.Map getChildNonConfigs() -> a
    68:68:java.util.Collection getFragments() -> b
    84:84:java.util.Map getViewModelStores() -> c
androidx.fragment.app.FragmentManagerState -> r4:
    int mNextFragmentIndex -> e
    androidx.fragment.app.BackStackState[] mBackStack -> c
    java.util.ArrayList mAdded -> b
    java.util.ArrayList mActive -> a
    java.lang.String mPrimaryNavActiveWho -> d
    58:58:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    36:42:void <init>(android.os.Parcel) -> <init>
    46:46:int describeContents() -> describeContents
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> r4$a:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> s4:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> h
    java.util.HashSet mRetainedFragments -> b
    boolean mStateAutomaticallySaved -> e
    boolean mHasBeenCleared -> f
    boolean mHasSavedSnapshot -> g
    java.util.HashMap mViewModelStores -> d
    java.util.HashMap mChildNonConfigs -> c
    40:40:void <clinit>() -> <clinit>
    82:84:void <init>(boolean) -> <init>
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> a
    172:196:void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig) -> a
    104:104:java.util.Collection getRetainedFragments() -> b
    148:163:void clearNonConfigState(androidx.fragment.app.Fragment) -> b
    129:134:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> c
    205:222:androidx.fragment.app.FragmentManagerNonConfig getSnapshot() -> c
    95:95:boolean isCleared() -> d
    139:144:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> d
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> e
    230:231:boolean equals(java.lang.Object) -> equals
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> f
    242:245:int hashCode() -> hashCode
    88:92:void onCleared() -> onCleared
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> s4$a:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    androidx.fragment.app.FragmentManager mFragmentManager -> c
    androidx.fragment.app.FragmentTransaction mCurTransaction -> e
    int mBehavior -> d
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> f
    118:119:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    134:137:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    269:269:java.lang.String makeFragmentName(int,long) -> a
    189:200:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    234:238:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    265:265:long getItemId(int) -> getItemId
    157:184:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    242:242:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    253:253:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    248:248:android.os.Parcelable saveState() -> saveState
    205:230:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    147:148:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> t4:
    java.lang.String mTag -> f
    int mMaxLifecycleState -> l
    boolean mDetached -> i
    boolean mHidden -> k
    androidx.fragment.app.Fragment mInstance -> n
    int mFragmentId -> d
    int mContainerId -> e
    android.os.Bundle mArguments -> j
    android.os.Bundle mSavedFragmentState -> m
    java.lang.String mClassName -> a
    boolean mRetainInstance -> g
    boolean mRemoving -> h
    java.lang.String mWho -> b
    boolean mFromLayout -> c
    173:173:void <clinit>() -> <clinit>
    47:60:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:76:void <init>(android.os.Parcel) -> <init>
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> a
    153:153:int describeContents() -> describeContents
    119:148:java.lang.String toString() -> toString
    158:171:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> t4$a:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    androidx.fragment.app.Fragment mCurrentPrimaryItem -> h
    androidx.fragment.app.FragmentManager mFragmentManager -> c
    androidx.fragment.app.FragmentTransaction mCurTransaction -> e
    java.util.ArrayList mFragments -> g
    java.util.ArrayList mSavedState -> f
    int mBehavior -> d
    124:125:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    140:143:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    206:224:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    258:262:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    167:201:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    266:266:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    294:322:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    272:289:android.os.Parcelable saveState() -> saveState
    229:254:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    153:154:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.content.Context mContext -> c
    androidx.fragment.app.FragmentManager mFragmentManager -> d
    androidx.fragment.app.FragmentTabHost$TabInfo mLastTab -> g
    int mContainerId -> e
    boolean mAttached -> h
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    137:139:void <init>(android.content.Context) -> <init>
    148:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    153:159:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    164:187:void ensureHierarchy(android.content.Context) -> a
    242:249:void ensureContent() -> a
    402:428:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> a
    433:439:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> a
    270:289:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    299:334:void onAttachedToWindow() -> onAttachedToWindow
    344:346:void onDetachedFromWindow() -> onDetachedFromWindow
    371:378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:360:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:397:void onTabChanged(java.lang.String) -> onTabChanged
    259:260:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
    209:214:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    226:239:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> androidx.fragment.app.FragmentTabHost$a:
    android.content.Context mContext -> a
    76:78:void <init>(android.content.Context) -> <init>
    82:85:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$b:
    java.lang.String curTab -> a
    114:114:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcelable) -> <init>
    97:99:void <init>(android.os.Parcel) -> <init>
    109:109:java.lang.String toString() -> toString
    103:105:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$b$a:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$c:
    android.os.Bundle args -> c
    java.lang.String tag -> a
    java.lang.Class clss -> b
    androidx.fragment.app.Fragment fragment -> d
    66:70:void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    int mBreadCrumbShortTitleRes -> m
    boolean mAllowAddToBackStack -> i
    java.lang.String mName -> j
    int mBreadCrumbTitleRes -> k
    int mTransition -> f
    int mTransitionStyle -> g
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mEnterAnim -> b
    boolean mReorderingAllowed -> q
    int mExitAnim -> c
    java.util.ArrayList mOps -> a
    java.lang.CharSequence mBreadCrumbTitleText -> l
    java.util.ArrayList mSharedElementSourceNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> n
    boolean mAddToBackStack -> h
    java.util.ArrayList mCommitRunnables -> r
    java.util.ArrayList mSharedElementTargetNames -> p
    48:108:void <init>() -> <init>
    113:118:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> a
    161:165:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> a
    125:126:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    134:135:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    156:157:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    448:468:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    505:506:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    306:308:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    289:291:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    532:533:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    255:257:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    522:522:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    359:359:boolean isEmpty() -> isEmpty
    239:241:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    200:200:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    222:223:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    656:661:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    630:630:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    573:575:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    585:587:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    548:550:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    560:562:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    403:403:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    427:431:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    350:351:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    329:331:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    620:621:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    478:479:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    488:489:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    271:273:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
    72:73:void <init>() -> <init>
    75:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    82:87:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> u4:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    45:63:void <clinit>() -> <clinit>
    68:74:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> a
    107:143:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> a
    163:193:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> a
    279:292:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> a
    312:369:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> a
    394:417:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    425:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> a
    471:476:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> a
    493:494:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> a
    507:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> a
    648:654:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> a
    691:695:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> a
    840:844:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> a
    891:897:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> a
    913:922:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> a
    937:949:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> a
    958:964:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> a
    980:997:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> a
    1003:1018:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> a
    1026:1033:void setViewVisibility(java.util.ArrayList,int) -> a
    1042:1063:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> a
    1077:1082:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> a
    1125:1212:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> a
    1222:1226:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> a
    214:269:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> b
    520:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> b
    562:568:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> b
    784:786:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> b
    1094:1102:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> b
    1105:1105:boolean supportsTransition() -> b
androidx.fragment.app.FragmentTransition$1 -> u4$a:
    java.util.ArrayList val$exitingViews -> a
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:289:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> u4$b:
    java.lang.Object val$exitTransition -> h
    androidx.fragment.app.FragmentTransitionImpl val$impl -> b
    java.util.ArrayList val$exitingViews -> g
    java.util.ArrayList val$enteringViews -> f
    android.view.View val$nonExistentView -> c
    java.util.ArrayList val$sharedElementsIn -> e
    java.lang.Object val$enterTransition -> a
    androidx.fragment.app.Fragment val$inFragment -> d
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:415:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> u4$c:
    androidx.fragment.app.FragmentTransitionImpl val$impl -> f
    android.graphics.Rect val$epicenter -> g
    androidx.fragment.app.Fragment val$outFragment -> b
    androidx.fragment.app.Fragment val$inFragment -> a
    androidx.collection.ArrayMap val$inSharedElements -> d
    android.view.View val$epicenterView -> e
    boolean val$inIsPop -> c
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:632:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> u4$d:
    androidx.fragment.app.Fragment val$outFragment -> h
    androidx.fragment.app.Fragment val$inFragment -> g
    java.lang.Object val$enterTransition -> k
    boolean val$inIsPop -> i
    java.util.ArrayList val$sharedElementsOut -> j
    android.graphics.Rect val$inEpicenter -> l
    androidx.fragment.app.FragmentTransitionImpl val$impl -> a
    java.lang.Object val$finalSharedElementTransition -> c
    java.util.ArrayList val$sharedElementsIn -> e
    androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments -> d
    androidx.collection.ArrayMap val$nameOverrides -> b
    android.view.View val$nonExistentView -> f
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:761:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> u4$e:
    androidx.fragment.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    androidx.fragment.app.Fragment lastIn -> a
    androidx.fragment.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
    androidx.fragment.app.BackStackRecord lastInTransaction -> c
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> v4:
    32:32:void <init>() -> <init>
    119:119:boolean hasSimpleTarget(android.transition.Transition) -> a
    288:292:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    296:300:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    262:284:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:246:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    304:316:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    251:257:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> v4$a:
    android.graphics.Rect val$epicenter -> a
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> v4$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> v4$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    236:236:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:232:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    240:240:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    244:244:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> v4$d:
    android.graphics.Rect val$epicenter -> a
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:310:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    42:42:void <init>() -> <init>
    134:141:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> a
    153:182:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> a
    193:209:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> a
    216:230:void findNamedViews(java.util.Map,android.view.View) -> a
    237:251:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> a
    296:308:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> a
    340:345:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    360:365:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> a
    315:333:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    79:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    352:352:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$a:
    java.util.ArrayList val$outNames -> e
    java.util.ArrayList val$sharedElementsOut -> d
    java.util.ArrayList val$inNames -> c
    java.util.ArrayList val$sharedElementsIn -> b
    int val$numSharedElements -> a
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:180:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$b:
    java.util.Map val$nameOverrides -> b
    java.util.ArrayList val$sharedElementsIn -> a
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:249:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$c:
    java.util.Map val$nameOverrides -> b
    java.util.ArrayList val$sharedElementsIn -> a
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:306:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> w4:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> a
    24:25:void <init>() -> <init>
    31:34:void initialize() -> a
    51:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    40:40:boolean isInitialized() -> b
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    android.view.View mListContainer -> g0
    android.view.View mProgressContainer -> f0
    java.lang.CharSequence mEmptyText -> h0
    android.view.View mEmptyView -> d0
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> a0
    android.widget.ListView mList -> c0
    java.lang.Runnable mRequestFocus -> Z
    android.widget.ListAdapter mAdapter -> b0
    android.widget.TextView mStandardEmptyView -> e0
    boolean mListShown -> i0
    android.os.Handler mHandler -> Y
    76:77:void <init>() -> <init>
    349:354:void ensureList() -> A
    287:289:void setListShown(boolean,boolean) -> a
    329:329:android.widget.ListAdapter getListAdapter() -> getListAdapter
    229:230:android.widget.ListView getListView() -> getListView
    220:221:long getSelectedItemId() -> getSelectedItemId
    212:213:int getSelectedItemPosition() -> getSelectedItemPosition
    97:142:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    159:165:void onDestroyView() -> onDestroyView
    179:179:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    150:152:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    340:342:android.widget.ListAdapter requireListAdapter() -> requireListAdapter
    239:241:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    185:195:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    265:266:void setListShown(boolean) -> setListShown
    273:274:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    204:206:void setSelection(int) -> setSelection
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$a:
    androidx.fragment.app.ListFragment this$0 -> a
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:56:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$b:
    androidx.fragment.app.ListFragment this$0 -> a
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:64:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.SuperNotCalledException -> x4:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> c
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> y4:
    float mStepSize -> b
    float[] mValues -> a
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.app.ActionBarDrawerToggle -> androidx.legacy.app.ActionBarDrawerToggle:
    androidx.legacy.app.ActionBarDrawerToggle$Delegate mActivityImpl -> b
    androidx.drawerlayout.widget.DrawerLayout mDrawerLayout -> c
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    int mDrawerImageResource -> i
    boolean mHasCustomUpIndicator -> e
    android.app.Activity mActivity -> a
    int[] THEME_ATTRS -> l
    boolean mDrawerIndicatorEnabled -> d
    120:120:void <clinit>() -> <clinit>
    167:169:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int) -> <init>
    199:218:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int) -> <init>
    172:172:boolean assumeMaterial(android.content.Context) -> a
    415:431:android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    441:470:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    473:499:void setActionBarDescription(int) -> a
    314:314:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    326:331:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    397:401:void onDrawerClosed(android.view.View) -> onDrawerClosed
    382:386:void onDrawerOpened(android.view.View) -> onDrawerOpened
    364:371:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    412:412:void onDrawerStateChanged(int) -> onDrawerStateChanged
    343:351:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    298:307:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    254:265:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    279:285:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    230:240:void syncState() -> syncState
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable -> androidx.legacy.app.ActionBarDrawerToggle$a:
    androidx.legacy.app.ActionBarDrawerToggle this$0 -> e
    float mOffset -> d
    float mPosition -> c
    boolean mHasMirroring -> a
    android.graphics.Rect mTmpRect -> b
    550:552:void <init>(androidx.legacy.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    565:565:float getPosition() -> a
    576:578:void setOffset(float) -> a
    560:562:void setPosition(float) -> b
    582:600:void draw(android.graphics.Canvas) -> draw
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
    android.util.SparseArray sActiveWakeLocks -> a
    int mNextId -> b
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    126:145:boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    94:114:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
androidx.legacy.widget.Space -> androidx.legacy.widget.Space:
    42:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:62:void <init>(android.content.Context) -> <init>
    83:98:int getDefaultSize2(int,int) -> a
    75:75:void draw(android.graphics.Canvas) -> draw
    107:110:void onMeasure(int,int) -> onMeasure
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
    android.app.Application mApplication -> b
    34:36:void <init>(android.app.Application) -> <init>
    45:45:android.app.Application getApplication() -> getApplication
androidx.lifecycle.ClassesInfoCache -> z4:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> a
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> a
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> a
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> b
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> c
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> z4$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> z4$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
    234:238:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    24:26:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    java.lang.Runnable mRefreshRunnable -> e
    androidx.lifecycle.LiveData mLiveData -> b
    java.util.concurrent.atomic.AtomicBoolean mComputing -> d
    java.util.concurrent.Executor mExecutor -> a
    java.util.concurrent.atomic.AtomicBoolean mInvalid -> c
    java.lang.Runnable mInvalidationRunnable -> f
    56:57:void <init>() -> <init>
    65:73:void <init>(java.util.concurrent.Executor) -> <init>
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    143:144:void invalidate() -> invalidate
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$a:
    androidx.lifecycle.ComputableLiveData this$0 -> k
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$b:
    androidx.lifecycle.ComputableLiveData this$0 -> a
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$c:
    androidx.lifecycle.ComputableLiveData this$0 -> a
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.FullLifecycleObserver -> a5:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onCreate(androidx.lifecycle.LifecycleOwner) -> b
    void onPause(androidx.lifecycle.LifecycleOwner) -> c
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    25:28:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    78:85:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    androidx.lifecycle.Lifecycle$State[] $VALUES -> a
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    94:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    135:142:void moveToState(androidx.lifecycle.Lifecycle$State) -> a
    150:155:boolean isSynced() -> a
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> a
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> a
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> a
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> a
    169:199:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    202:203:void popParentState() -> b
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> b
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> b
    261:271:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> c
    325:327:void sync() -> c
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> d
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    233:233:int getObserverCount() -> getObserverCount
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    108:109:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    118:119:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$a:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    353:356:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    42:43:void <clinit>() -> <clinit>
    208:209:void <init>() -> <init>
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> a
    104:106:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    117:133:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> a
    141:147:int getObserverConstructorType(java.lang.Class) -> b
    198:198:boolean isLifecycleParent(java.lang.Class) -> c
    152:194:int resolveObserverCallbackType(java.lang.Class) -> d
    205:205:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    60:60:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> j
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> f
    boolean mDispatchingValue -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchInvalidated -> h
    int mActiveCount -> c
    64:64:void <clinit>() -> <clinit>
    100:103:void <init>(java.lang.Object) -> <init>
    108:111:void <init>() -> <init>
    114:132:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> a
    328:328:int getVersion() -> a
    460:461:void assertMainThread(java.lang.String) -> a
    136:155:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> b
    319:324:java.lang.Object getValue() -> getValue
    371:371:boolean hasActiveObservers() -> hasActiveObservers
    361:361:boolean hasObservers() -> hasObservers
    189:204:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    222:226:void observeForever(androidx.lifecycle.Observer) -> observeForever
    339:339:void onActive() -> onActive
    352:352:void onInactive() -> onInactive
    284:287:void postValue(java.lang.Object) -> postValue
    242:249:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    259:265:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    304:308:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.LiveData this$0 -> a
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$b:
    449:451:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    455:455:boolean shouldBeActive() -> b
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    378:381:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    404:405:void detachObserver() -> a
    385:385:boolean shouldBeActive() -> b
    399:399:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> d
    390:395:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$c:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    413:415:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    424:424:void detachObserver() -> a
    427:444:void activeStateChanged(boolean) -> a
    boolean shouldBeActive() -> b
    420:420:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> d
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    androidx.arch.core.internal.SafeIterableMap mSources -> k
    69:70:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:120:void onActive() -> onActive
    125:128:void onInactive() -> onInactive
    108:112:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$a:
    androidx.lifecycle.LiveData mLiveData -> a
    androidx.lifecycle.Observer mObserver -> b
    int mVersion -> c
    135:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    141:142:void plug() -> a
    145:146:void unplug() -> b
    150:154:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    java.util.Map mCalledMethods -> a
    28:29:void <init>() -> <init>
    36:40:boolean approveCall(java.lang.String,int) -> approveCall
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    33:34:void <init>(java.lang.Object) -> <init>
    40:41:void <init>() -> <init>
    45:46:void postValue(java.lang.Object) -> postValue
    50:51:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener -> a
    32:32:void <init>() -> <init>
    55:58:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> a
    114:126:void dispatch(androidx.lifecycle.Lifecycle$Event) -> a
    67:70:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> b
    61:64:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> c
    39:45:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    74:77:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:111:void onDestroy() -> onDestroy
    95:97:void onPause() -> onPause
    88:91:void onResume() -> onResume
    81:84:void onStart() -> onStart
    101:103:void onStop() -> onStop
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.ReportFragment$a:
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    23:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:36:void <init>() -> <init>
    176:192:androidx.lifecycle.LiveData distinctUntilChanged(androidx.lifecycle.LiveData) -> distinctUntilChanged
    72:79:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
    137:161:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> switchMap
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$a:
    androidx.arch.core.util.Function val$mapFunction -> b
    androidx.lifecycle.MediatorLiveData val$result -> a
    73:73:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    76:77:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$b:
    androidx.lifecycle.LiveData mSource -> a
    androidx.lifecycle.MediatorLiveData val$result -> c
    androidx.arch.core.util.Function val$switchMapFunction -> b
    138:138:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    143:159:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$b$a:
    androidx.lifecycle.Transformations$2 this$0 -> a
    152:152:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    155:156:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$3 -> androidx.lifecycle.Transformations$c:
    boolean mFirstTime -> a
    androidx.lifecycle.MediatorLiveData val$outputLiveData -> b
    177:179:void <init>(androidx.lifecycle.MediatorLiveData) -> <init>
    183:190:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    java.util.Map mBagOfTags -> a
    108:112:void <init>() -> <init>
    126:140:void clear() -> a
    185:192:void closeWithRuntimeException(java.lang.Object) -> a
    122:122:void onCleared() -> onCleared
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    androidx.lifecycle.ViewModelStore mViewModelStore -> b
    androidx.lifecycle.ViewModelProvider$Factory mFactory -> a
    94:95:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    105:108:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:128:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    150:168:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    android.app.Application mApplication -> a
    androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory sInstance -> b
    220:222:void <init>(android.app.Application) -> <init>
    227:241:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    207:210:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$a:
    60:60:void <init>() -> <init>
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> a
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    174:174:void <init>() -> <init>
    182:184:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    java.util.HashMap mMap -> a
    38:40:void <init>() -> <init>
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> a
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> a
    61:65:void clear() -> clear
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    235:236:void enableDebugLogging(boolean) -> enableDebugLogging
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
    242:242:boolean hasRunningLoaders() -> hasRunningLoaders
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    boolean DEBUG -> c
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:398:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> a
    453:454:void destroyLoader(int) -> destroyLoader
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    471:472:androidx.loader.content.Loader getLoader(int) -> getLoader
    503:503:boolean hasRunningLoaders() -> hasRunningLoaders
    408:409:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    481:482:void markForRedelivery() -> markForRedelivery
    433:434:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> restartLoader
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    androidx.loader.content.Loader mLoader -> m
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> n
    int mId -> k
    androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver -> o
    androidx.loader.content.Loader mPriorLoader -> p
    android.os.Bundle mArgs -> l
    61:67:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> a
    149:167:androidx.loader.content.Loader destroy(boolean) -> a
    71:71:androidx.loader.content.Loader getLoader() -> b
    125:129:boolean isCallbackWaitingForData() -> c
    111:121:void markForRedelivery() -> d
    212:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    172:185:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$a:
    androidx.loader.app.LoaderManager$LoaderCallbacks mCallback -> b
    boolean mDeliveredData -> c
    androidx.loader.content.Loader mLoader -> a
    239:242:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    255:255:boolean hasDeliveredData() -> a
    272:274:void dump(java.lang.String,java.io.PrintWriter) -> a
    260:264:void reset() -> b
    246:252:void onChanged(java.lang.Object) -> onChanged
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$b:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> d
    androidx.collection.SparseArrayCompat mLoaders -> b
    boolean mCreatingLoader -> c
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> a
    311:312:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> a
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> a
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    307:308:void finishCreatingLoader() -> b
    320:321:void removeLoader(int) -> b
    324:331:boolean hasRunningLoaders() -> c
    303:303:boolean isCreatingLoader() -> d
    335:340:void markForRedelivery() -> e
    299:300:void startCreatingLoader() -> f
    344:351:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$b$a:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    androidx.loader.content.AsyncTaskLoader$LoadTask mTask -> k
    androidx.loader.content.AsyncTaskLoader$LoadTask mCancellingTask -> l
    android.os.Handler mHandler -> o
    long mLastLoadCompleteTime -> n
    long mUpdateThrottle -> m
    java.util.concurrent.Executor mExecutor -> j
    128:129:void <init>(android.content.Context) -> <init>
    132:134:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    210:230:void executePendingTask() -> a
    233:243:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    246:261:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    322:322:void cancelLoadInBackground() -> cancelLoadInBackground
    356:373:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:196:boolean onCancelLoad() -> onCancelLoad
    207:207:void onCanceled(java.lang.Object) -> onCanceled
    152:157:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
    144:148:void setUpdateThrottle(long) -> setUpdateThrottle
    347:351:void waitForLoader() -> waitForLoader
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$a:
    androidx.loader.content.AsyncTaskLoader this$0 -> l
    boolean waiting -> k
    java.util.concurrent.CountDownLatch mDone -> j
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> a
    94:96:void onCancelled(java.lang.Object) -> b
    83:85:void onPostExecute(java.lang.Object) -> c
    60:71:java.lang.Object doInBackground(java.lang.Void[]) -> f
    111:115:void waitForLoader() -> g
    104:106:void run() -> run
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    android.database.Cursor mCursor -> v
    androidx.core.os.CancellationSignal mCancellationSignal -> w
    java.lang.String[] mSelectionArgs -> t
    androidx.loader.content.Loader$ForceLoadContentObserver mObserver -> p
    java.lang.String mSelection -> s
    java.lang.String mSortOrder -> u
    android.net.Uri mUri -> q
    java.lang.String[] mProjection -> r
    123:125:void <init>(android.content.Context) -> <init>
    136:143:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    86:92:void cancelLoadInBackground() -> cancelLoadInBackground
    41:41:void deliverResult(java.lang.Object) -> deliverResult
    98:115:void deliverResult(android.database.Cursor) -> deliverResult
    239:249:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    202:202:java.lang.String[] getProjection() -> getProjection
    211:211:java.lang.String getSelection() -> getSelection
    220:220:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    229:229:java.lang.String getSortOrder() -> getSortOrder
    193:193:android.net.Uri getUri() -> getUri
    41:41:java.lang.Object loadInBackground() -> loadInBackground
    56:61:android.database.Cursor loadInBackground() -> loadInBackground
    41:41:void onCanceled(java.lang.Object) -> onCanceled
    173:176:void onCanceled(android.database.Cursor) -> onCanceled
    180:189:void onReset() -> onReset
    154:160:void onStartLoading() -> onStartLoading
    168:169:void onStopLoading() -> onStopLoading
    206:207:void setProjection(java.lang.String[]) -> setProjection
    215:216:void setSelection(java.lang.String) -> setSelection
    224:225:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    233:234:void setSortOrder(java.lang.String) -> setSortOrder
    197:198:void setUri(android.net.Uri) -> setUri
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    androidx.loader.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mProcessingChange -> i
    boolean mStarted -> e
    androidx.loader.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> c
    boolean mAbandoned -> f
    boolean mReset -> g
    boolean mContentChanged -> h
    android.content.Context mContext -> d
    int mId -> a
    118:120:void <init>(android.content.Context) -> <init>
    409:411:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:486:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:147:void deliverCancellation() -> deliverCancellation
    131:134:void deliverResult(java.lang.Object) -> deliverResult
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:348:void forceLoad() -> forceLoad
    154:154:android.content.Context getContext() -> getContext
    161:161:int getId() -> getId
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    425:425:void onAbandon() -> onAbandon
    334:334:boolean onCancelLoad() -> onCancelLoad
    511:519:void onContentChanged() -> onContentChanged
    356:356:void onForceLoad() -> onForceLoad
    463:463:void onReset() -> onReset
    296:296:void onStartLoading() -> onStartLoading
    392:392:void onStopLoading() -> onStopLoading
    173:174:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
    207:208:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    447:453:void reset() -> reset
    496:499:void rollbackContentChanged() -> rollbackContentChanged
    282:286:void startLoading() -> startLoading
    380:382:void stopLoading() -> stopLoading
    471:474:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    223:224:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    androidx.loader.content.Loader this$0 -> a
    58:60:void <init>(androidx.loader.content.Loader) -> <init>
    64:64:boolean deliverSelfNotifications() -> deliverSelfNotifications
    69:70:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> g
    androidx.loader.content.ModernAsyncTask$WorkerRunnable mWorker -> a
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> e
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> d
    java.util.concurrent.ThreadFactory sThreadFactory -> f
    androidx.loader.content.ModernAsyncTask$InternalHandler sHandler -> i
    androidx.loader.content.ModernAsyncTask$Status mStatus -> c
    java.util.concurrent.FutureTask mFuture -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> h
    60:84:void <clinit>() -> <clinit>
    132:173:void <init>() -> <init>
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    299:299:boolean isCancelled() -> a
    332:333:boolean cancel(boolean) -> a
    433:454:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    487:493:void finish(java.lang.Object) -> a
    270:271:void onCancelled(java.lang.Object) -> b
    286:286:void onCancelled() -> b
    223:223:void onPreExecute() -> c
    239:239:void onPostExecute(java.lang.Object) -> c
    183:186:java.lang.Object postResult(java.lang.Object) -> d
    252:252:void onProgressUpdate(java.lang.Object[]) -> d
    115:120:android.os.Handler getHandler() -> e
    176:180:void postResultIfNotInvoked(java.lang.Object) -> e
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$a:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$b:
    androidx.loader.content.ModernAsyncTask this$0 -> b
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:147:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$c:
    androidx.loader.content.ModernAsyncTask this$0 -> a
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:171:void done() -> done
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$d:
    java.lang.Object[] mData -> b
    androidx.loader.content.ModernAsyncTask mTask -> a
    528:531:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$e:
    497:498:void <init>() -> <init>
    503:513:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    androidx.loader.content.ModernAsyncTask$Status[] $VALUES -> a
    103:99:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$f:
    java.lang.Object[] mParams -> a
    519:520:void <init>() -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    android.os.Handler mHandler -> e
    androidx.localbroadcastmanager.content.LocalBroadcastManager mInstance -> g
    java.lang.Object mLock -> f
    java.util.HashMap mReceivers -> b
    java.util.ArrayList mPendingBroadcasts -> d
    java.util.HashMap mActions -> c
    100:100:void <clinit>() -> <clinit>
    113:128:void <init>(android.content.Context) -> <init>
    298:306:void executePendingBroadcasts() -> a
    105:110:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    140:157:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    213:279:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    289:292:void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    170:195:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$a:
    androidx.localbroadcastmanager.content.LocalBroadcastManager this$0 -> a
    115:115:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    119:126:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$b:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
    79:82:void <init>(android.content.Intent,java.util.ArrayList) -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$c:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    boolean dead -> d
    55:58:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    62:71:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    android.util.SparseIntArray SUPPRESSIBLE_USAGES -> b
    androidx.media.AudioAttributesImpl mImpl -> a
    boolean sForceLegacyBehavior -> c
    175:186:void <clinit>() -> <clinit>
    252:253:void <init>() -> <init>
    255:257:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    665:667:int usageForStreamType(int) -> a
    706:706:int getRawLegacyStreamType() -> a
    712:756:int toVolumeStreamType(boolean,int,int) -> a
    615:617:java.lang.String usageToString(int) -> b
    766:773:boolean equals(java.lang.Object) -> equals
    360:365:androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle) -> fromBundle
    325:325:int getContentType() -> getContentType
    343:343:int getFlags() -> getFlags
    296:296:int getLegacyStreamType() -> getLegacyStreamType
    334:334:int getUsage() -> getUsage
    273:273:int getVolumeControlStream() -> getVolumeControlStream
    606:606:int hashCode() -> hashCode
    698:699:void setForceLegacyBehavior(boolean) -> setForceLegacyBehavior
    351:351:android.os.Bundle toBundle() -> toBundle
    611:611:java.lang.String toString() -> toString
    286:286:java.lang.Object unwrap() -> unwrap
    307:314:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    int mLegacyStream -> d
    int mContentType -> b
    int mFlags -> c
    int mUsage -> a
    400:401:void <init>() -> <init>
    408:413:void <init>(androidx.media.AudioAttributesCompat) -> <init>
    561:600:androidx.media.AudioAttributesCompat$Builder setInternalLegacyStreamType(int) -> a
    423:438:androidx.media.AudioAttributesCompat build() -> build
    509:520:androidx.media.AudioAttributesCompat$Builder setContentType(int) -> setContentType
    533:535:androidx.media.AudioAttributesCompat$Builder setFlags(int) -> setFlags
    546:547:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
    464:493:androidx.media.AudioAttributesCompat$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:19:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImpl -> b5:
    int getRawLegacyStreamType() -> a
    java.lang.Object getAudioAttributes() -> b
androidx.media.AudioAttributesImplApi21 -> c5:
    java.lang.reflect.Method sAudioAttributesToLegacyStreamType -> c
    int mLegacyStreamType -> b
    android.media.AudioAttributes mAudioAttributes -> a
    49:50:void <init>() -> <init>
    53:54:void <init>(android.media.AudioAttributes) -> <init>
    55:58:void <init>(android.media.AudioAttributes,int) -> <init>
    112:112:int getRawLegacyStreamType() -> a
    166:176:androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle) -> a
    78:78:java.lang.Object getAudioAttributes() -> b
    64:69:java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod() -> c
    150:154:boolean equals(java.lang.Object) -> equals
    117:117:int getContentType() -> getContentType
    127:127:int getFlags() -> getFlags
    91:106:int getLegacyStreamType() -> getLegacyStreamType
    122:122:int getUsage() -> getUsage
    83:86:int getVolumeControlStream() -> getVolumeControlStream
    145:145:int hashCode() -> hashCode
    132:137:android.os.Bundle toBundle() -> toBundle
    159:159:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:14:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:21:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> d5:
    int mLegacyStream -> d
    int mContentType -> b
    int mFlags -> c
    int mUsage -> a
    50:50:void <init>() -> <init>
    52:57:void <init>(int,int,int,int) -> <init>
    81:81:int getRawLegacyStreamType() -> a
    63:63:java.lang.Object getAudioAttributes() -> b
    128:134:boolean equals(java.lang.Object) -> equals
    86:86:int getContentType() -> getContentType
    96:103:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    91:91:int getUsage() -> getUsage
    68:68:int getVolumeControlStream() -> getVolumeControlStream
    123:123:int hashCode() -> hashCode
    108:115:android.os.Bundle toBundle() -> toBundle
    140:151:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:16:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:25:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.MediaBrowserCompatUtils -> androidx.media.MediaBrowserCompatUtils:
    77:78:void <init>() -> <init>
    32:44:boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> areSameOptions
    49:74:boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle) -> hasDuplicatedItems
androidx.media.MediaBrowserProtocol -> androidx.media.MediaBrowserProtocol:
    211:212:void <init>() -> <init>
androidx.media.MediaBrowserServiceCompat -> androidx.media.MediaBrowserServiceCompat:
    boolean DEBUG -> f
    android.support.v4.media.session.MediaSessionCompat$Token mSession -> e
    androidx.media.MediaBrowserServiceCompat$ConnectionRecord mCurConnection -> c
    androidx.collection.ArrayMap mConnections -> b
    androidx.media.MediaBrowserServiceCompat$ServiceHandler mHandler -> d
    androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl mImpl -> a
    124:124:void <clinit>() -> <clinit>
    122:1721:void <init>() -> <init>
    1495:1506:boolean isValidPackage(java.lang.String,int) -> a
    1515:1533:void addSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder,android.os.Bundle) -> a
    1540:1561:boolean removeSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder) -> a
    1572:1607:void performLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle,android.os.Bundle) -> a
    1614:1625:java.util.List applyOptions(java.util.List,android.os.Bundle) -> a
    1635:1654:void performLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> a
    1689:1711:void performCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> a
    1165:1166:void attachToBaseContext(android.content.Context) -> attachToBaseContext
    1661:1682:void performSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> b
    1192:1192:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1412:1412:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    1423:1423:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    1393:1393:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1435:1436:void notifyChildrenChanged(java.lang.String) -> notifyChildrenChanged
    1453:1454:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1478:1479:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1187:1187:android.os.IBinder onBind(android.content.Intent) -> onBind
    1170:1183:void onCreate() -> onCreate
    1366:1367:void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onCustomAction
    1270:1272:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> onLoadChildren
    1314:1316:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result) -> onLoadItem
    1341:1343:void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onSearch
    1283:1283:void onSubscribe(java.lang.String,android.os.Bundle) -> onSubscribe
    1293:1293:void onUnsubscribe(java.lang.String) -> onUnsubscribe
    1378:1379:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$1 -> androidx.media.MediaBrowserServiceCompat$a:
    java.lang.String val$parentId -> g
    androidx.media.MediaBrowserServiceCompat this$0 -> j
    android.os.Bundle val$notifyChildrenChangedOptions -> i
    android.os.Bundle val$subscribeOptions -> h
    androidx.media.MediaBrowserServiceCompat$ConnectionRecord val$connection -> f
    1573:1573:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle,android.os.Bundle) -> <init>
    1573:1573:void onResultSent(java.lang.Object) -> a
    1576:1595:void onResultSent(java.util.List) -> a
androidx.media.MediaBrowserServiceCompat$2 -> androidx.media.MediaBrowserServiceCompat$b:
    android.support.v4.os.ResultReceiver val$receiver -> f
    1636:1636:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1636:1636:void onResultSent(java.lang.Object) -> a
    1639:1646:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> a
androidx.media.MediaBrowserServiceCompat$3 -> androidx.media.MediaBrowserServiceCompat$c:
    android.support.v4.os.ResultReceiver val$receiver -> f
    1662:1662:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1662:1662:void onResultSent(java.lang.Object) -> a
    1665:1668:void onResultSent(java.util.List) -> a
androidx.media.MediaBrowserServiceCompat$4 -> androidx.media.MediaBrowserServiceCompat$d:
    android.support.v4.os.ResultReceiver val$receiver -> f
    1689:1689:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1689:1689:void onResultSent(java.lang.Object) -> a
    1702:1703:void onErrorSent(android.os.Bundle) -> b
    1697:1698:void onProgressUpdateSent(android.os.Bundle) -> c
    1692:1693:void onResultSent(android.os.Bundle) -> d
androidx.media.MediaBrowserServiceCompat$BrowserRoot -> androidx.media.MediaBrowserServiceCompat$BrowserRoot:
    android.os.Bundle mExtras -> b
    java.lang.String mRootId -> a
    1806:1808:void <init>(java.lang.String,android.os.Bundle) -> <init>
    1826:1826:android.os.Bundle getExtras() -> getExtras
    1819:1819:java.lang.String getRootId() -> getRootId
androidx.media.MediaBrowserServiceCompat$ConnectionRecord -> androidx.media.MediaBrowserServiceCompat$e:
    androidx.media.MediaSessionManager$RemoteUserInfo browserInfo -> b
    android.os.Bundle rootHints -> c
    androidx.media.MediaBrowserServiceCompat$BrowserRoot root -> f
    androidx.media.MediaBrowserServiceCompat this$0 -> g
    java.lang.String pkg -> a
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks callbacks -> d
    java.util.HashMap subscriptions -> e
    712:719:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    723:729:void binderDied() -> binderDied
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1 -> androidx.media.MediaBrowserServiceCompat$e$a:
    androidx.media.MediaBrowserServiceCompat$ConnectionRecord this$1 -> a
    723:723:void <init>(androidx.media.MediaBrowserServiceCompat$ConnectionRecord) -> <init>
    726:727:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImpl -> androidx.media.MediaBrowserServiceCompat$f:
    void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> a
    void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> a
    android.os.IBinder onBind(android.content.Intent) -> a
    void onCreate() -> a
    void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> a
    androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> b
    android.os.Bundle getBrowserRootHints() -> c
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 -> androidx.media.MediaBrowserServiceCompat$g:
    java.util.List mRootExtrasList -> a
    android.os.Messenger mMessenger -> c
    java.lang.Object mServiceObj -> b
    androidx.media.MediaBrowserServiceCompat this$0 -> d
    296:298:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    304:307:void onCreate() -> a
    311:311:android.os.IBinder onBind(android.content.Intent) -> a
    316:332:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> a
    336:338:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> a
    344:345:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> a
    445:453:void notifyChildrenChangedForCompatOnHandler(androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> a
    416:425:void notifyChildrenChangedForCompat(java.lang.String,android.os.Bundle) -> b
    429:440:void notifyChildrenChangedForCompat(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> b
    470:471:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> b
    412:413:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> c
    457:462:android.os.Bundle getBrowserRootHints() -> c
    350:381:androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    387:409:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1 -> androidx.media.MediaBrowserServiceCompat$g$a:
    androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> b
    android.support.v4.media.session.MediaSessionCompat$Token val$token -> a
    316:316:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    319:330:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2 -> androidx.media.MediaBrowserServiceCompat$g$b:
    androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper val$resultWrapper -> f
    388:388:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    388:388:void onResultSent(java.lang.Object) -> a
    391:401:void onResultSent(java.util.List) -> a
    405:406:void detach() -> detach
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3 -> androidx.media.MediaBrowserServiceCompat$g$c:
    androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> c
    android.os.Bundle val$options -> b
    java.lang.String val$parentId -> a
    416:416:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.String,android.os.Bundle) -> <init>
    419:423:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4 -> androidx.media.MediaBrowserServiceCompat$g$d:
    androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 this$1 -> d
    android.os.Bundle val$options -> c
    androidx.media.MediaSessionManager$RemoteUserInfo val$remoteUserInfo -> a
    java.lang.String val$parentId -> b
    429:429:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> <init>
    432:438:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 -> androidx.media.MediaBrowserServiceCompat$h:
    androidx.media.MediaBrowserServiceCompat this$0 -> e
    479:479:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    483:486:void onCreate() -> a
    491:510:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadItem
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1 -> androidx.media.MediaBrowserServiceCompat$h$a:
    androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper val$resultWrapper -> f
    492:492:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    492:492:void onResultSent(java.lang.Object) -> a
    495:502:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> a
    506:507:void detach() -> detach
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26 -> androidx.media.MediaBrowserServiceCompat$i:
    androidx.media.MediaBrowserServiceCompat this$0 -> f
    514:514:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    518:521:void onCreate() -> a
    553:557:android.os.Bundle getBrowserRootHints() -> c
    562:568:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> c
    526:548:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1 -> androidx.media.MediaBrowserServiceCompat$i$a:
    androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper val$resultWrapper -> f
    527:527:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper) -> <init>
    527:527:void onResultSent(java.lang.Object) -> a
    530:540:void onResultSent(java.util.List) -> a
    544:545:void detach() -> detach
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28 -> androidx.media.MediaBrowserServiceCompat$j:
    androidx.media.MediaBrowserServiceCompat this$0 -> g
    572:572:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    576:581:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> b
androidx.media.MediaBrowserServiceCompat$Result -> androidx.media.MediaBrowserServiceCompat$Result:
    java.lang.Object mDebug -> a
    int mFlags -> e
    boolean mDetachCalled -> b
    boolean mSendResultCalled -> c
    boolean mSendErrorCalled -> d
    760:762:void <init>(java.lang.Object) -> <init>
    832:833:void setFlags(int) -> a
    836:836:int getFlags() -> a
    844:844:void onResultSent(java.lang.Object) -> a
    864:874:void checkExtraFields(android.os.Bundle) -> a
    828:828:boolean isDone() -> b
    859:859:void onErrorSent(android.os.Bundle) -> b
    850:850:void onProgressUpdateSent(android.os.Bundle) -> c
    812:813:void detach() -> detach
    799:800:void sendError(android.os.Bundle) -> sendError
    783:784:void sendProgressUpdate(android.os.Bundle) -> sendProgressUpdate
    768:769:void sendResult(java.lang.Object) -> sendResult
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl -> androidx.media.MediaBrowserServiceCompat$k:
    androidx.media.MediaBrowserServiceCompat this$0 -> a
    878:879:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    884:885:void connect(java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    932:945:void disconnect(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    949:965:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    969:987:void removeSubscription(java.lang.String,android.os.IBinder,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    991:992:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    1013:1030:void registerCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> a
    1048:1049:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> a
    1034:1044:void unregisterCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> b
    1069:1070:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> b
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1 -> androidx.media.MediaBrowserServiceCompat$k$a:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.Bundle val$rootHints -> e
    int val$uid -> d
    java.lang.String val$pkg -> b
    int val$pid -> c
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> f
    889:889:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    892:927:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2 -> androidx.media.MediaBrowserServiceCompat$k$b:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> b
    932:932:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    935:943:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3 -> androidx.media.MediaBrowserServiceCompat$k$c:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.IBinder val$token -> c
    android.os.Bundle val$options -> d
    java.lang.String val$id -> b
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> e
    949:949:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder,android.os.Bundle) -> <init>
    952:963:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4 -> androidx.media.MediaBrowserServiceCompat$k$d:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.IBinder val$token -> c
    java.lang.String val$id -> b
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> d
    969:969:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder) -> <init>
    972:985:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5 -> androidx.media.MediaBrowserServiceCompat$k$e:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    java.lang.String val$mediaId -> b
    android.support.v4.os.ResultReceiver val$receiver -> c
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> d
    995:995:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    998:1006:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6 -> androidx.media.MediaBrowserServiceCompat$k$f:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.Bundle val$rootHints -> e
    int val$uid -> d
    java.lang.String val$pkg -> b
    int val$pid -> c
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> f
    1013:1013:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    1016:1028:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7 -> androidx.media.MediaBrowserServiceCompat$k$g:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> b
    1034:1034:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    1037:1042:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8 -> androidx.media.MediaBrowserServiceCompat$k$h:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.Bundle val$extras -> c
    java.lang.String val$query -> b
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> e
    android.support.v4.os.ResultReceiver val$receiver -> d
    1052:1052:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1055:1063:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9 -> androidx.media.MediaBrowserServiceCompat$k$i:
    androidx.media.MediaBrowserServiceCompat$ServiceCallbacks val$callbacks -> a
    android.os.Bundle val$extras -> c
    java.lang.String val$action -> b
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl this$1 -> e
    android.support.v4.os.ResultReceiver val$receiver -> d
    1073:1073:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1076:1085:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceCallbacks -> androidx.media.MediaBrowserServiceCompat$l:
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> androidx.media.MediaBrowserServiceCompat$m:
    android.os.Messenger mCallbacks -> a
    1102:1104:void <init>(android.os.Messenger) -> <init>
    1108:1108:android.os.IBinder asBinder() -> a
    1114:1123:void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> a
    1133:1142:void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> a
    1145:1150:void sendRequest(int,android.os.Bundle) -> a
    1127:1128:void onConnectFailed() -> b
androidx.media.MediaBrowserServiceCompat$ServiceHandler -> androidx.media.MediaBrowserServiceCompat$n:
    androidx.media.MediaBrowserServiceCompat this$0 -> b
    androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl mServiceBinderImpl -> a
    588:589:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    690:695:void postOrRun(java.lang.Runnable) -> a
    593:676:void handleMessage(android.os.Message) -> handleMessage
    682:686:boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
androidx.media.MediaBrowserServiceCompatApi21 -> androidx.media.MediaBrowserServiceCompatApi21:
    38:38:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> a
    42:43:void onCreate(java.lang.Object) -> a
    46:46:android.os.IBinder onBind(java.lang.Object,android.content.Intent) -> a
    50:51:void setSessionToken(java.lang.Object,java.lang.Object) -> a
    54:55:void notifyChildrenChanged(java.lang.Object,java.lang.String) -> a
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot -> androidx.media.MediaBrowserServiceCompatApi21$a:
    android.os.Bundle mExtras -> b
    java.lang.String mRootId -> a
    105:108:void <init>(java.lang.String,android.os.Bundle) -> <init>
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi21$b:
    androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy mServiceProxy -> a
    114:117:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> <init>
    122:125:android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    131:132:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi21$c:
    android.service.media.MediaBrowserService$Result mResultObj -> a
    65:67:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    70:81:void sendResult(java.lang.Object) -> a
    84:85:void detach() -> a
    88:97:java.util.List parcelListToItemList(java.util.List) -> a
androidx.media.MediaBrowserServiceCompatApi23 -> androidx.media.MediaBrowserServiceCompatApi23:
    29:29:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> a
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi23$a:
    39:40:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> <init>
    44:46:void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadItem
androidx.media.MediaBrowserServiceCompatApi26 -> androidx.media.MediaBrowserServiceCompatApi26:
    java.lang.reflect.Field sResultFlags -> a
    41:46:void <clinit>() -> <clinit>
    49:49:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> a
    53:54:void notifyChildrenChanged(java.lang.Object,java.lang.String,android.os.Bundle) -> a
    57:57:android.os.Bundle getBrowserRootHints(java.lang.Object) -> a
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi26$a:
    101:102:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> <init>
    107:110:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi26$b:
    android.service.media.MediaBrowserService$Result mResultObj -> a
    67:69:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    73:78:void sendResult(java.util.List,int) -> a
    81:82:void detach() -> a
    85:94:java.util.List parcelListToItemList(java.util.List) -> a
androidx.media.MediaSessionManager -> androidx.media.MediaSessionManager:
    androidx.media.MediaSessionManager$MediaSessionManagerImpl mImpl -> a
    java.lang.Object sLock -> c
    boolean DEBUG -> b
    androidx.media.MediaSessionManager sSessionManager -> d
    42:44:void <clinit>() -> <clinit>
    68:76:void <init>(android.content.Context) -> <init>
    55:65:androidx.media.MediaSessionManager getSessionManager(android.content.Context) -> getSessionManager
    91:92:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo) -> isTrustedForMediaControl
androidx.media.MediaSessionManager$MediaSessionManagerImpl -> androidx.media.MediaSessionManager$a:
    boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> a
androidx.media.MediaSessionManager$RemoteUserInfo -> androidx.media.MediaSessionManager$RemoteUserInfo:
    androidx.media.MediaSessionManager$RemoteUserInfoImpl mImpl -> a
    140:149:void <init>(java.lang.String,int,int) -> <init>
    163:165:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    208:214:boolean equals(java.lang.Object) -> equals
    172:172:java.lang.String getPackageName() -> getPackageName
    179:179:int getPid() -> getPid
    186:186:int getUid() -> getUid
    219:219:int hashCode() -> hashCode
androidx.media.MediaSessionManager$RemoteUserInfoImpl -> androidx.media.MediaSessionManager$b:
    int getUid() -> a
    int getPid() -> b
androidx.media.MediaSessionManagerImplApi21 -> e5:
    28:30:void <init>(android.content.Context) -> <init>
    36:36:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> a
    44:44:boolean hasMediaControlPermission(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> c
androidx.media.MediaSessionManagerImplApi28 -> f5:
    android.media.session.MediaSessionManager mObject -> d
    29:32:void <init>(android.content.Context) -> <init>
    36:39:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> a
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28 -> f5$a:
    android.media.session.MediaSessionManager$RemoteUserInfo mObject -> a
    45:48:void <init>(java.lang.String,int,int) -> <init>
    51:53:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    67:67:int getUid() -> a
    62:62:int getPid() -> b
    77:84:boolean equals(java.lang.Object) -> equals
    57:57:java.lang.String getPackageName() -> getPackageName
    72:72:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplBase -> g5:
    android.content.Context mContext -> a
    android.content.ContentResolver mContentResolver -> b
    boolean DEBUG -> c
    34:34:void <clinit>() -> <clinit>
    45:48:void <init>(android.content.Context) -> <init>
    52:52:android.content.Context getContext() -> a
    60:66:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> a
    84:89:boolean isPermissionGranted(androidx.media.MediaSessionManager$RemoteUserInfoImpl,java.lang.String) -> a
    103:117:boolean isEnabledNotificationListener(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> b
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase -> g5$a:
    java.lang.String mPackageName -> a
    int mPid -> b
    int mUid -> c
    125:129:void <init>(java.lang.String,int,int) -> <init>
    143:143:int getUid() -> a
    138:138:int getPid() -> b
    148:155:boolean equals(java.lang.Object) -> equals
    133:133:java.lang.String getPackageName() -> getPackageName
    162:162:int hashCode() -> hashCode
androidx.media.VolumeProviderCompat -> androidx.media.VolumeProviderCompat:
    java.lang.Object mVolumeProviderObj -> e
    androidx.media.VolumeProviderCompat$Callback mCallback -> d
    int mMaxVolume -> b
    int mCurrentVolume -> c
    int mControlType -> a
    82:86:void <init>(int,int,int) -> <init>
    94:94:int getCurrentVolume() -> getCurrentVolume
    113:113:int getMaxVolume() -> getMaxVolume
    104:104:int getVolumeControl() -> getVolumeControl
    168:184:java.lang.Object getVolumeProvider() -> getVolumeProvider
    147:147:void onAdjustVolume(int) -> onAdjustVolume
    139:139:void onSetVolumeTo(int) -> onSetVolumeTo
    156:157:void setCallback(androidx.media.VolumeProviderCompat$Callback) -> setCallback
    123:131:void setCurrentVolume(int) -> setCurrentVolume
androidx.media.VolumeProviderCompat$1 -> androidx.media.VolumeProviderCompat$a:
    androidx.media.VolumeProviderCompat this$0 -> a
    171:171:void <init>(androidx.media.VolumeProviderCompat) -> <init>
    180:181:void onAdjustVolume(int) -> onAdjustVolume
    175:176:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.VolumeProviderCompat$Callback -> androidx.media.VolumeProviderCompat$Callback:
    190:190:void <init>() -> <init>
androidx.media.VolumeProviderCompatApi21 -> androidx.media.VolumeProviderCompatApi21:
    27:27:java.lang.Object createVolumeProvider(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate) -> a
    41:42:void setCurrentVolume(java.lang.Object,int) -> a
androidx.media.VolumeProviderCompatApi21$1 -> androidx.media.VolumeProviderCompatApi21$a:
    androidx.media.VolumeProviderCompatApi21$Delegate val$delegate -> a
    27:27:void <init>(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate) -> <init>
    35:36:void onAdjustVolume(int) -> onAdjustVolume
    30:31:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.app.NotificationCompat -> androidx.media.app.NotificationCompat:
    45:46:void <init>() -> <init>
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle -> androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle:
    379:380:void <init>() -> <init>
    465:465:int getBigContentViewLayoutResource(int) -> a
    388:394:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    496:501:void setBackgroundColor(android.widget.RemoteViews) -> b
    433:435:int getContentViewLayoutResource() -> d
    444:460:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    402:428:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    476:492:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.media.app.NotificationCompat$MediaStyle -> androidx.media.app.NotificationCompat$MediaStyle:
    int[] mActionsToShowInCompact -> d
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> e
    boolean mShowCancelButton -> f
    android.app.PendingIntent mCancelButtonIntent -> g
    135:136:void <init>() -> <init>
    138:140:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    220:226:android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle) -> a
    280:290:android.widget.RemoteViews generateMediaActionButton(androidx.core.app.NotificationCompat$Action) -> a
    334:334:int getBigContentViewLayoutResource(int) -> a
    210:216:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    311:330:android.widget.RemoteViews generateBigContentView() -> b
    243:275:android.widget.RemoteViews generateContentView() -> c
    294:294:int getContentViewLayoutResource() -> d
    102:124:android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification) -> getMediaSession
    303:305:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    235:237:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    200:201:androidx.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    158:159:androidx.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    149:150:androidx.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    187:190:androidx.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
androidx.media.session.MediaButtonReceiver -> androidx.media.session.MediaButtonReceiver:
    100:135:void <init>() -> <init>
    298:303:void startForegroundService(android.content.Context,android.content.Intent) -> a
    306:318:android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String) -> a
    228:234:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long) -> buildMediaButtonPendingIntent
    261:274:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long) -> buildMediaButtonPendingIntent
    282:294:android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context) -> getMediaButtonReceiverComponent
    194:197:android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent) -> handleIntent
    105:109:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback -> androidx.media.session.MediaButtonReceiver$a:
    android.content.Context mContext -> c
    android.content.Intent mIntent -> d
    android.support.v4.media.MediaBrowserCompat mMediaBrowser -> f
    android.content.BroadcastReceiver$PendingResult mPendingResult -> e
    143:147:void <init>(android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult) -> <init>
    150:151:void setMediaBrowser(android.support.v4.media.MediaBrowserCompat) -> a
    177:179:void finish() -> a
    156:164:void onConnected() -> onConnected
    173:174:void onConnectionFailed() -> onConnectionFailed
    168:169:void onConnectionSuspended() -> onConnectionSuspended
androidx.print.PrintHelper -> androidx.print.PrintHelper:
    android.content.Context mContext -> a
    android.graphics.BitmapFactory$Options mDecodeOptions -> b
    int mOrientation -> f
    java.lang.Object mLock -> c
    boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION -> g
    int mScaleMode -> d
    boolean IS_MIN_MARGINS_HANDLING_CORRECT -> h
    int mColorMode -> e
    70:78:void <clinit>() -> <clinit>
    162:164:void <init>(android.content.Context) -> <init>
    546:546:boolean isPortrait(android.graphics.Bitmap) -> a
    558:573:android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes) -> a
    589:606:android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> a
    626:735:void writeBitmap(android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> a
    746:747:android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri) -> a
    796:797:android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> a
    816:831:android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> a
    210:210:int getColorMode() -> getColorMode
    232:235:int getOrientation() -> getOrientation
    187:187:int getScaleMode() -> getScaleMode
    246:247:void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    258:277:void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    340:341:void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    356:376:void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    199:200:void setColorMode(int) -> setColorMode
    221:222:void setOrientation(int) -> setOrientation
    176:177:void setScaleMode(int) -> setScaleMode
    154:154:boolean systemSupportsPrint() -> systemSupportsPrint
androidx.print.PrintHelper$1 -> androidx.print.PrintHelper$a:
    androidx.print.PrintHelper this$0 -> h
    android.graphics.Bitmap val$bitmap -> c
    android.os.ParcelFileDescriptor val$fileDescriptor -> f
    android.print.PrintDocumentAdapter$WriteResultCallback val$writeResultCallback -> g
    android.print.PrintAttributes val$attributes -> d
    android.os.CancellationSignal val$cancellationSignal -> a
    android.print.PrintAttributes val$pdfAttributes -> b
    int val$fittingMode -> e
    635:635:void <init>(androidx.print.PrintHelper,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback) -> <init>
    639:715:java.lang.Throwable doInBackground(java.lang.Void[]) -> a
    721:733:void onPostExecute(java.lang.Throwable) -> a
    635:635:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    635:635:void onPostExecute(java.lang.Object) -> onPostExecute
androidx.print.PrintHelper$PrintBitmapAdapter -> androidx.print.PrintHelper$b:
    androidx.print.PrintHelper this$0 -> f
    android.graphics.Bitmap mBitmap -> c
    android.print.PrintAttributes mAttributes -> e
    androidx.print.PrintHelper$OnPrintFinishCallback mCallback -> d
    java.lang.String mJobName -> a
    int mFittingMode -> b
    288:293:void <init>(androidx.print.PrintHelper,java.lang.String,int,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> <init>
    323:326:void onFinish() -> onFinish
    302:310:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    317:319:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter -> androidx.print.PrintHelper$c:
    androidx.print.PrintHelper$OnPrintFinishCallback mCallback -> c
    androidx.print.PrintHelper this$0 -> h
    android.os.AsyncTask mLoadBitmap -> f
    android.print.PrintAttributes mAttributes -> e
    android.graphics.Bitmap mBitmap -> g
    java.lang.String mJobName -> a
    int mFittingMode -> d
    android.net.Uri mImageFile -> b
    389:395:void <init>(androidx.print.PrintHelper,java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback,int) -> <init>
    502:510:void cancelLoad() -> a
    515:527:void onFinish() -> onFinish
    404:406:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    533:535:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter$1 -> androidx.print.PrintHelper$c$a:
    android.print.PrintAttributes val$oldPrintAttributes -> c
    androidx.print.PrintHelper$PrintUriAdapter this$1 -> e
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> d
    android.os.CancellationSignal val$cancellationSignal -> a
    android.print.PrintAttributes val$newPrintAttributes -> b
    424:424:void <init>(androidx.print.PrintHelper$PrintUriAdapter,android.os.CancellationSignal,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    441:445:android.graphics.Bitmap doInBackground(android.net.Uri[]) -> a
    450:489:void onPostExecute(android.graphics.Bitmap) -> a
    494:496:void onCancelled(android.graphics.Bitmap) -> b
    424:424:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    424:424:void onCancelled(java.lang.Object) -> onCancelled
    424:424:void onPostExecute(java.lang.Object) -> onPostExecute
    428:436:void onPreExecute() -> onPreExecute
androidx.print.PrintHelper$PrintUriAdapter$1$1 -> androidx.print.PrintHelper$c$a$a:
    androidx.print.PrintHelper$PrintUriAdapter$1 this$2 -> a
    429:429:void <init>(androidx.print.PrintHelper$PrintUriAdapter$1) -> <init>
    432:434:void onCancel() -> onCancel
androidx.recyclerview.selection.AutoScroller -> androidx.recyclerview.selection.AutoScroller:
    35:35:void <init>() -> <init>
androidx.recyclerview.selection.BandPredicate -> androidx.recyclerview.selection.BandPredicate:
    38:38:void <init>() -> <init>
    47:48:boolean hasSupportedLayoutManager(androidx.recyclerview.widget.RecyclerView) -> a
androidx.recyclerview.selection.BandPredicate$EmptyArea -> androidx.recyclerview.selection.BandPredicate$EmptyArea:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    69:73:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    77:79:boolean canInitiate(android.view.MotionEvent) -> canInitiate
androidx.recyclerview.selection.BandPredicate$NonDraggableArea -> androidx.recyclerview.selection.BandPredicate$NonDraggableArea:
    androidx.recyclerview.selection.ItemDetailsLookup mDetailsLookup -> b
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    119:126:void <init>(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.ItemDetailsLookup) -> <init>
    130:132:boolean canInitiate(android.view.MotionEvent) -> canInitiate
androidx.recyclerview.selection.BandSelectionHelper -> h5:
    androidx.recyclerview.selection.BandPredicate mBandPredicate -> d
    androidx.recyclerview.selection.SelectionTracker mSelectionTracker -> c
    android.graphics.Point mCurrentPosition -> i
    android.graphics.Point mOrigin -> j
    androidx.recyclerview.selection.BandSelectionHelper$BandHost mHost -> a
    androidx.recyclerview.selection.AutoScroller mScroller -> g
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> b
    androidx.recyclerview.selection.FocusDelegate mFocusDelegate -> e
    androidx.recyclerview.selection.GridModel$SelectionObserver mGridObserver -> h
    androidx.recyclerview.selection.GridModel mModel -> k
    androidx.recyclerview.selection.OperationMonitor mLock -> f
    81:114:void <init>(androidx.recyclerview.selection.BandSelectionHelper$BandHost,androidx.recyclerview.selection.AutoScroller,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.BandPredicate,androidx.recyclerview.selection.FocusDelegate,androidx.recyclerview.selection.OperationMonitor) -> <init>
    132:132:androidx.recyclerview.selection.BandSelectionHelper create(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.AutoScroller,int,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,androidx.recyclerview.selection.BandPredicate,androidx.recyclerview.selection.FocusDelegate,androidx.recyclerview.selection.OperationMonitor) -> a
    181:181:boolean shouldStart(android.view.MotionEvent) -> a
    293:315:void endBandSelect() -> a
    322:330:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    143:145:boolean isActive() -> b
    188:188:boolean shouldStop(android.view.MotionEvent) -> b
    244:261:void startBandSelect(android.view.MotionEvent) -> c
    268:275:void resizeBand() -> c
    174:174:boolean isResetRequired() -> isResetRequired
    193:199:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    234:234:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    207:230:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    154:170:void reset() -> reset
androidx.recyclerview.selection.BandSelectionHelper$1 -> h5$a:
    androidx.recyclerview.selection.BandSelectionHelper this$0 -> a
    99:99:void <init>(androidx.recyclerview.selection.BandSelectionHelper) -> <init>
    102:103:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.selection.BandSelectionHelper$2 -> h5$b:
    androidx.recyclerview.selection.BandSelectionHelper this$0 -> a
    108:108:void <init>(androidx.recyclerview.selection.BandSelectionHelper) -> <init>
    111:112:void onSelectionChanged(java.util.Set) -> a
androidx.recyclerview.selection.BandSelectionHelper$BandHost -> h5$c:
    338:338:void <init>() -> <init>
    void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> a
    androidx.recyclerview.selection.GridModel createGridModel() -> a
    void showBand(android.graphics.Rect) -> a
    void hideBand() -> b
androidx.recyclerview.selection.DefaultBandHost -> i5:
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> d
    android.graphics.Rect NILL_RECT -> e
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> c
    android.graphics.drawable.Drawable mBand -> b
    41:41:void <clinit>() -> <clinit>
    52:76:void <init>(androidx.recyclerview.widget.RecyclerView,int,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate) -> <init>
    80:80:androidx.recyclerview.selection.GridModel createGridModel() -> a
    90:91:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> a
    100:100:android.graphics.Point createAbsolutePoint(android.graphics.Point) -> a
    106:113:android.graphics.Rect getAbsoluteRectForChildViewAt(int) -> a
    134:139:void showBand(android.graphics.Rect) -> a
    150:151:void onDrawBand(android.graphics.Canvas) -> a
    85:85:int getAdapterPositionAt(int) -> b
    95:96:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> b
    143:146:void hideBand() -> b
    123:129:int getColumnCount() -> c
    155:155:boolean hasView(int) -> c
    118:118:int getVisibleChildCount() -> d
androidx.recyclerview.selection.DefaultBandHost$1 -> i5$a:
    androidx.recyclerview.selection.DefaultBandHost this$0 -> a
    67:67:void <init>(androidx.recyclerview.selection.DefaultBandHost) -> <init>
    73:74:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.selection.DefaultSelectionTracker -> androidx.recyclerview.selection.DefaultSelectionTracker:
    java.util.List mObservers -> b
    androidx.recyclerview.selection.StorageStrategy mStorage -> e
    androidx.recyclerview.selection.DefaultSelectionTracker$RangeCallbacks mRangeCallbacks -> f
    java.lang.String mSelectionId -> i
    androidx.recyclerview.selection.Selection mSelection -> a
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> d
    androidx.recyclerview.selection.Range mRange -> j
    androidx.recyclerview.selection.DefaultSelectionTracker$AdapterObserver mAdapterObserver -> g
    boolean mSingleSelect -> h
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> c
    83:101:void <init>(java.lang.String,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,androidx.recyclerview.selection.StorageStrategy) -> <init>
    148:158:boolean setItemsSelectedQuietly(java.lang.Iterable,boolean) -> a
    177:184:void clearPrimarySelection() -> a
    318:341:void extendRange(int,int) -> a
    383:383:boolean canSetState(java.lang.Object,boolean) -> a
    446:452:void notifySelectionCleared(androidx.recyclerview.selection.Selection) -> a
    501:529:void updateForProvisionalRange(int,int,boolean) -> a
    105:107:void addObserver(androidx.recyclerview.selection.SelectionTracker$SelectionObserver) -> addObserver
    287:291:void anchorRange(int) -> anchorRange
    192:200:androidx.recyclerview.selection.Selection clearSelectionQuietly() -> b
    431:437:void notifyItemStateChanged(java.lang.Object,boolean) -> b
    483:497:void updateForRegularRange(int,int,boolean) -> b
    533:533:java.lang.String getInstanceStateKey() -> c
    371:375:void clearProvisionalSelection() -> clearProvisionalSelection
    163:173:boolean clearSelection() -> clearSelection
    124:125:void copySelection(androidx.recyclerview.selection.MutableSelection) -> copySelection
    461:465:void notifySelectionChanged() -> d
    243:262:boolean deselect(java.lang.Object) -> deselect
    440:443:void notifySelectionCleared() -> e
    280:283:void endRange() -> endRange
    295:304:void extendProvisionalRange(int) -> extendProvisionalRange
    275:276:void extendRange(int) -> extendRange
    475:479:void notifySelectionRefresh() -> f
    468:472:void notifySelectionRestored() -> g
    388:388:androidx.recyclerview.widget.RecyclerView$AdapterDataObserver getAdapterDataObserver() -> getAdapterDataObserver
    119:119:androidx.recyclerview.selection.Selection getSelection() -> getSelection
    393:424:void onDataSetChanged() -> h
    114:114:boolean hasSelection() -> hasSelection
    379:379:boolean isRangeActive() -> isRangeActive
    212:212:boolean isResetRequired() -> isResetRequired
    129:129:boolean isSelected(java.lang.Object) -> isSelected
    359:367:void mergeProvisionalSelection() -> mergeProvisionalSelection
    547:560:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    538:543:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    206:208:void reset() -> reset
    134:138:void restoreSelection(androidx.recyclerview.selection.Selection) -> restoreSelection
    217:238:boolean select(java.lang.Object) -> select
    142:144:boolean setItemsSelected(java.lang.Iterable,boolean) -> setItemsSelected
    345:355:void setProvisionalSelection(java.util.Set) -> setProvisionalSelection
    267:271:void startRange(int) -> startRange
androidx.recyclerview.selection.DefaultSelectionTracker$AdapterObserver -> androidx.recyclerview.selection.DefaultSelectionTracker$a:
    androidx.recyclerview.selection.DefaultSelectionTracker mSelectionTracker -> a
    585:588:void <init>(androidx.recyclerview.selection.DefaultSelectionTracker) -> <init>
    592:593:void onChanged() -> onChanged
    597:600:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    604:605:void onItemRangeInserted(int,int) -> onItemRangeInserted
    614:615:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    609:610:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.selection.DefaultSelectionTracker$RangeCallbacks -> androidx.recyclerview.selection.DefaultSelectionTracker$b:
    androidx.recyclerview.selection.DefaultSelectionTracker this$0 -> a
    563:564:void <init>(androidx.recyclerview.selection.DefaultSelectionTracker) -> <init>
    568:578:void updateForRange(int,int,boolean,int) -> a
androidx.recyclerview.selection.DummyOnItemTouchListener -> j5:
    28:28:void <init>() -> <init>
    32:32:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    42:42:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    38:38:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.selection.EventBridge -> androidx.recyclerview.selection.EventBridge:
    103:104:void <init>() -> <init>
    62:64:void install(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider) -> install
androidx.recyclerview.selection.EventBridge$TrackerToAdapterBridge -> androidx.recyclerview.selection.EventBridge$a:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> b
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> a
    75:84:void <init>(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    91:100:void onItemStateChanged(java.lang.Object,boolean) -> onItemStateChanged
androidx.recyclerview.selection.EventRouter -> k5:
    androidx.recyclerview.selection.ToolHandlerRegistry mDelegates -> a
    40:42:void <init>() -> <init>
    50:53:void set(int,androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> a
    57:57:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    68:68:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    62:63:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.selection.FocusDelegate -> androidx.recyclerview.selection.FocusDelegate:
    29:29:void <init>() -> <init>
    32:32:androidx.recyclerview.selection.FocusDelegate dummy() -> a
androidx.recyclerview.selection.FocusDelegate$1 -> androidx.recyclerview.selection.FocusDelegate$a:
    32:32:void <init>() -> <init>
    49:49:void clearFocus() -> clearFocus
    35:35:void focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> focusItem
    44:44:int getFocusedPosition() -> getFocusedPosition
    39:39:boolean hasFocusedItem() -> hasFocusedItem
androidx.recyclerview.selection.GestureDetectorOnItemTouchListenerAdapter -> l5:
    android.view.GestureDetector mDetector -> a
    34:38:void <init>(android.view.GestureDetector) -> <init>
    47:47:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    56:56:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    52:52:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.selection.GestureRouter -> m5:
    androidx.recyclerview.selection.ToolHandlerRegistry mDelegates -> a
    41:44:void <init>(android.view.GestureDetector$OnGestureListener) -> <init>
    48:49:void <init>() -> <init>
    56:57:void register(int,android.view.GestureDetector$OnGestureListener) -> a
    66:66:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    71:71:boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    76:76:boolean onDown(android.view.MotionEvent) -> onDown
    103:103:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    97:98:void onLongPress(android.view.MotionEvent) -> onLongPress
    92:92:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    81:82:void onShowPress(android.view.MotionEvent) -> onShowPress
    61:61:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    86:86:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
androidx.recyclerview.selection.GestureSelectionHelper -> n5:
    androidx.recyclerview.selection.SelectionTracker mSelectionMgr -> a
    boolean mStarted -> f
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> b
    androidx.recyclerview.selection.GestureSelectionHelper$ViewDelegate mView -> d
    androidx.recyclerview.selection.AutoScroller mScroller -> c
    androidx.recyclerview.selection.OperationMonitor mLock -> e
    61:74:void <init>(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,androidx.recyclerview.selection.GestureSelectionHelper$ViewDelegate,androidx.recyclerview.selection.AutoScroller,androidx.recyclerview.selection.OperationMonitor) -> <init>
    178:181:void endSelection() -> a
    186:197:void handleMoveEvent(android.view.MotionEvent) -> a
    204:209:float getInboundY(float,float) -> a
    216:217:void extendSelection(int) -> a
    229:229:androidx.recyclerview.selection.GestureSelectionHelper create(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.AutoScroller,androidx.recyclerview.selection.OperationMonitor) -> a
    158:160:void handleUpEvent() -> b
    85:96:void start() -> c
    174:174:boolean isResetRequired() -> isResetRequired
    107:116:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    152:152:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    125:147:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    168:170:void reset() -> reset
androidx.recyclerview.selection.GestureSelectionHelper$RecyclerViewDelegate -> n5$a:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    251:254:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    273:288:int getLastGlidedItemPosition(android.view.MotionEvent) -> a
    301:304:boolean isPastLastItem(int,int,int,android.view.MotionEvent,int) -> a
androidx.recyclerview.selection.GestureSelectionHelper$ViewDelegate -> n5$b:
    238:238:void <init>() -> <init>
    int getLastGlidedItemPosition(android.view.MotionEvent) -> a
androidx.recyclerview.selection.GridModel -> androidx.recyclerview.selection.GridModel:
    boolean mIsActive -> m
    int mPositionNearestOrigin -> n
    android.graphics.Point mPointer -> j
    androidx.recyclerview.selection.GridModel$GridHost mHost -> a
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> b
    java.util.Set mSelection -> i
    java.util.List mColumnBounds -> f
    java.util.List mOnSelectionChangedListeners -> d
    androidx.recyclerview.selection.GridModel$RelativePoint mRelPointer -> l
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> c
    androidx.recyclerview.selection.GridModel$RelativePoint mRelOrigin -> k
    android.util.SparseArray mColumns -> e
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> o
    java.util.List mRowBounds -> g
    android.util.SparseBooleanArray mKnownPositions -> h
    108:126:void <init>(androidx.recyclerview.selection.GridModel$GridHost,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate) -> <init>
    187:195:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    229:243:void recordItemData(android.graphics.Rect,int) -> a
    250:254:void recordLimits(java.util.List,androidx.recyclerview.selection.GridModel$Limits) -> a
    299:324:void updateSelection(android.graphics.Rect) -> a
    339:366:void updateSelection(int,int,int,int) -> a
    369:369:boolean canSelect(java.lang.Object) -> a
    379:382:boolean isPossiblePositionNearestOrigin(int,int,int,int,int,int) -> a
    407:408:void addOnSelectionChangedListener(androidx.recyclerview.selection.GridModel$SelectionObserver) -> a
    593:593:androidx.recyclerview.selection.GridModel$RelativePoint createRelativePoint(android.graphics.Point) -> a
    642:659:android.graphics.Rect computeBounds() -> a
    702:706:int getCoordinateValue(androidx.recyclerview.selection.GridModel$RelativeCoordinate,java.util.List,boolean) -> a
    723:723:boolean areItemsCoveredByBand(androidx.recyclerview.selection.GridModel$RelativePoint,androidx.recyclerview.selection.GridModel$RelativePoint) -> a
    731:750:boolean doesCoordinateLocationCoverItems(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate) -> a
    173:175:void resizeSelection(android.graphics.Point) -> b
    666:680:int computeCornerNearestOrigin() -> b
    690:690:androidx.recyclerview.selection.GridModel$RelativeCoordinate max(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate) -> b
    140:152:void startCapturing(android.graphics.Point) -> c
    275:281:void computeCurrentSelection() -> c
    685:685:androidx.recyclerview.selection.GridModel$RelativeCoordinate min(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate) -> c
    182:182:int getPositionNearestOrigin() -> d
    219:219:boolean isEmpty() -> e
    290:293:void notifySelectionChanged() -> f
    414:417:void onDestroy() -> g
    201:213:void recordVisibleChildren() -> h
    158:159:void stopCapturing() -> i
    261:269:void updateModel() -> j
androidx.recyclerview.selection.GridModel$1 -> androidx.recyclerview.selection.GridModel$a:
    androidx.recyclerview.selection.GridModel this$0 -> a
    118:118:void <init>(androidx.recyclerview.selection.GridModel) -> <init>
    121:122:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.selection.GridModel$GridHost -> androidx.recyclerview.selection.GridModel$b:
    759:759:void <init>() -> <init>
    android.graphics.Point createAbsolutePoint(android.graphics.Point) -> a
    android.graphics.Rect getAbsoluteRectForChildViewAt(int) -> a
    int getAdapterPositionAt(int) -> b
    void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> b
    int getColumnCount() -> c
    boolean hasView(int) -> c
    int getVisibleChildCount() -> d
androidx.recyclerview.selection.GridModel$Limits -> androidx.recyclerview.selection.GridModel$c:
    int upperLimit -> b
    int lowerLimit -> a
    429:432:void <init>(int,int) -> <init>
    436:436:int compareTo(androidx.recyclerview.selection.GridModel$Limits) -> a
    425:425:int compareTo(java.lang.Object) -> compareTo
    446:450:boolean equals(java.lang.Object) -> equals
    441:441:int hashCode() -> hashCode
    456:456:java.lang.String toString() -> toString
androidx.recyclerview.selection.GridModel$RelativeCoordinate -> androidx.recyclerview.selection.GridModel$d:
    androidx.recyclerview.selection.GridModel$Limits mFirstKnownItem -> d
    androidx.recyclerview.selection.GridModel$Limits limitsAfterCoordinate -> c
    androidx.recyclerview.selection.GridModel$Limits limitsBeforeCoordinate -> b
    androidx.recyclerview.selection.GridModel$Limits mLastKnownItem -> e
    int type -> a
    524:554:void <init>(java.util.List,int) -> <init>
    557:564:int toComparisonValue() -> a
    588:588:int compareTo(androidx.recyclerview.selection.GridModel$RelativeCoordinate) -> a
    473:473:int compareTo(java.lang.Object) -> compareTo
    578:583:boolean equals(java.lang.Object) -> equals
    570:570:int hashCode() -> hashCode
androidx.recyclerview.selection.GridModel$RelativePoint -> androidx.recyclerview.selection.GridModel$e:
    androidx.recyclerview.selection.GridModel$RelativeCoordinate mX -> a
    androidx.recyclerview.selection.GridModel$RelativeCoordinate mY -> b
    615:618:void <init>(androidx.recyclerview.selection.GridModel$RelativeCoordinate,androidx.recyclerview.selection.GridModel$RelativeCoordinate) -> <init>
    627:632:boolean equals(java.lang.Object) -> equals
    622:622:int hashCode() -> hashCode
androidx.recyclerview.selection.GridModel$SelectionObserver -> androidx.recyclerview.selection.GridModel$SelectionObserver:
    402:402:void <init>() -> <init>
    void onSelectionChanged(java.util.Set) -> a
androidx.recyclerview.selection.ItemDetailsLookup -> androidx.recyclerview.selection.ItemDetailsLookup:
    62:62:void <init>() -> <init>
    103:104:int getItemPosition(android.view.MotionEvent) -> a
    110:110:boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> a
    87:87:boolean inItemDragRegion(android.view.MotionEvent) -> b
    68:68:boolean overItem(android.view.MotionEvent) -> c
    77:77:boolean overItemWithSelectionKey(android.view.MotionEvent) -> overItemWithSelectionKey
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails -> androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails:
    171:171:void <init>() -> <init>
    244:251:boolean isEqualTo(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> a
    239:239:boolean equals(java.lang.Object) -> equals
    185:185:boolean hasSelectionKey() -> hasSelectionKey
    256:256:int hashCode() -> hashCode
    234:234:boolean inDragRegion(android.view.MotionEvent) -> inDragRegion
    206:206:boolean inSelectionHotspot(android.view.MotionEvent) -> inSelectionHotspot
androidx.recyclerview.selection.ItemKeyProvider -> androidx.recyclerview.selection.ItemKeyProvider:
    int mScope -> a
    66:70:void <init>(int) -> <init>
    73:73:boolean hasAccess(int) -> a
androidx.recyclerview.selection.MotionEvents -> o5:
    66:66:android.graphics.Point getOrigin(android.view.MotionEvent) -> a
    83:86:boolean isButtonPressed(android.view.MotionEvent,int) -> a
    118:118:boolean hasBit(int,int) -> a
    62:62:boolean isActionCancel(android.view.MotionEvent) -> b
    45:45:boolean isActionMove(android.view.MotionEvent) -> c
    49:49:boolean isActionUp(android.view.MotionEvent) -> d
    98:98:boolean isAltKeyPressed(android.view.MotionEvent) -> e
    94:94:boolean isCtrlKeyPressed(android.view.MotionEvent) -> f
    33:33:boolean isMouseEvent(android.view.MotionEvent) -> g
    113:113:boolean isPointerDragEvent(android.view.MotionEvent) -> h
    70:70:boolean isPrimaryMouseButtonPressed(android.view.MotionEvent) -> i
    74:74:boolean isSecondaryMouseButtonPressed(android.view.MotionEvent) -> j
    90:90:boolean isShiftKeyPressed(android.view.MotionEvent) -> k
    78:78:boolean isTertiaryMouseButtonPressed(android.view.MotionEvent) -> l
    104:104:boolean isTouchpadScroll(android.view.MotionEvent) -> m
androidx.recyclerview.selection.MotionInputHandler -> p5:
    androidx.recyclerview.selection.SelectionTracker mSelectionTracker -> a
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> b
    androidx.recyclerview.selection.FocusDelegate mFocusDelegate -> c
    43:52:void <init>(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.FocusDelegate) -> <init>
    83:89:void extendSelectionRange(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> a
    92:92:boolean shouldExtendRange(android.view.MotionEvent) -> a
    100:100:boolean shouldClearSelection(android.view.MotionEvent,androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> a
    74:79:boolean focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> b
    55:70:boolean selectItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> c
    110:110:boolean hasPosition(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> d
    106:106:boolean hasSelectionKey(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> e
androidx.recyclerview.selection.MouseInputHandler -> q5:
    androidx.recyclerview.selection.OnContextClickListener mOnContextClickListener -> e
    androidx.recyclerview.selection.FocusDelegate mFocusDelegate -> g
    boolean mHandledOnDown -> i
    boolean mHandledTapUp -> h
    androidx.recyclerview.selection.OnItemActivatedListener mOnItemActivatedListener -> f
    androidx.recyclerview.selection.ItemDetailsLookup mDetailsLookup -> d
    58:68:void <init>(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.ItemDetailsLookup,androidx.recyclerview.selection.OnContextClickListener,androidx.recyclerview.selection.OnItemActivatedListener,androidx.recyclerview.selection.FocusDelegate) -> <init>
    221:226:void selectOrFocusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails,android.view.MotionEvent) -> a
    125:146:void onItemClick(android.view.MotionEvent,androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails) -> b
    206:217:boolean onRightClick(android.view.MotionEvent) -> b
    189:202:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    73:79:boolean onDown(android.view.MotionEvent) -> onDown
    87:87:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    150:175:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    95:119:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
androidx.recyclerview.selection.MutableSelection -> androidx.recyclerview.selection.MutableSelection:
    55:55:void <init>() -> <init>
    59:59:boolean add(java.lang.Object) -> add
    74:75:void clear() -> clear
    69:70:void copyFrom(androidx.recyclerview.selection.Selection) -> copyFrom
    64:64:boolean remove(java.lang.Object) -> remove
androidx.recyclerview.selection.OperationMonitor -> androidx.recyclerview.selection.OperationMonitor:
    java.util.List mListeners -> a
    androidx.recyclerview.selection.Resettable mResettable -> b
    int mNumOps -> c
    46:69:void <init>() -> <init>
    161:161:androidx.recyclerview.selection.Resettable asResettable() -> a
    126:128:void addListener(androidx.recyclerview.selection.OperationMonitor$OnChangeListener) -> addListener
    112:112:boolean isResetRequired() -> b
    150:153:void notifyStateChanged() -> c
    102:101:void reset() -> d
    73:72:void start() -> e
    84:83:void stop() -> f
    119:119:boolean isStarted() -> isStarted
    134:136:void removeListener(androidx.recyclerview.selection.OperationMonitor$OnChangeListener) -> removeListener
androidx.recyclerview.selection.OperationMonitor$1 -> androidx.recyclerview.selection.OperationMonitor$a:
    androidx.recyclerview.selection.OperationMonitor this$0 -> a
    56:56:void <init>(androidx.recyclerview.selection.OperationMonitor) -> <init>
    60:60:boolean isResetRequired() -> isResetRequired
    65:66:void reset() -> reset
androidx.recyclerview.selection.PointerDragEventInterceptor -> r5:
    androidx.recyclerview.selection.ItemDetailsLookup mEventDetailsLookup -> a
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mDelegate -> c
    androidx.recyclerview.selection.OnDragInitiatedListener mDragListener -> b
    42:55:void <init>(androidx.recyclerview.selection.ItemDetailsLookup,androidx.recyclerview.selection.OnDragInitiatedListener,androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> <init>
    59:62:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    72:73:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    67:68:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.selection.Range -> s5:
    androidx.recyclerview.selection.Range$Callbacks mCallbacks -> a
    int mBegin -> b
    int mEnd -> c
    75:79:void <init>(int,androidx.recyclerview.selection.Range$Callbacks) -> <init>
    94:105:void establishRange(int,int) -> a
    169:170:void updateRange(int,int,boolean,int) -> a
    82:91:void extendRange(int,int) -> b
    131:141:void reviseAscending(int,int) -> c
    146:156:void reviseDescending(int,int) -> d
    108:123:void reviseRange(int,int) -> e
    174:174:java.lang.String toString() -> toString
androidx.recyclerview.selection.Range$Callbacks -> s5$a:
    185:185:void <init>() -> <init>
    void updateForRange(int,int,boolean,int) -> a
androidx.recyclerview.selection.ResetManager -> t5:
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInputListener -> b
    java.util.List mResetHandlers -> a
    androidx.recyclerview.selection.SelectionTracker$SelectionObserver mSelectionObserver -> c
    39:71:void <init>() -> <init>
    91:92:void addResetHandler(androidx.recyclerview.selection.Resettable) -> a
    95:100:void callResetHandlers() -> a
    84:84:androidx.recyclerview.widget.RecyclerView$OnItemTouchListener getInputListener() -> b
    80:80:androidx.recyclerview.selection.SelectionTracker$SelectionObserver getSelectionObserver() -> c
androidx.recyclerview.selection.ResetManager$1 -> t5$a:
    androidx.recyclerview.selection.ResetManager this$0 -> a
    45:45:void <init>(androidx.recyclerview.selection.ResetManager) -> <init>
    49:53:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    62:62:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    58:58:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.selection.ResetManager$2 -> t5$b:
    androidx.recyclerview.selection.ResetManager this$0 -> a
    71:71:void <init>(androidx.recyclerview.selection.ResetManager) -> <init>
    75:76:void onSelectionCleared() -> onSelectionCleared
androidx.recyclerview.selection.Selection -> androidx.recyclerview.selection.Selection:
    java.util.Set mSelection -> a
    java.util.Set mProvisionalSelection -> b
    66:69:void <init>() -> <init>
    119:157:java.util.Map setProvisionalSelection(java.util.Set) -> a
    175:176:void clearProvisionalSelection() -> a
    243:243:boolean isEqualTo(androidx.recyclerview.selection.Selection) -> a
    184:184:boolean add(java.lang.Object) -> add
    166:168:void mergeProvisionalSelection() -> b
    200:201:void clear() -> clear
    83:83:boolean contains(java.lang.Object) -> contains
    208:213:void copyFrom(androidx.recyclerview.selection.Selection) -> copyFrom
    238:238:boolean equals(java.lang.Object) -> equals
    233:233:int hashCode() -> hashCode
    108:108:boolean isEmpty() -> isEmpty
    94:94:java.util.Iterator iterator() -> iterator
    193:193:boolean remove(java.lang.Object) -> remove
    101:101:int size() -> size
    217:228:java.lang.String toString() -> toString
androidx.recyclerview.selection.SelectionPredicates -> androidx.recyclerview.selection.SelectionPredicates:
    28:28:void <init>() -> <init>
    38:38:androidx.recyclerview.selection.SelectionTracker$SelectionPredicate createSelectAnything() -> createSelectAnything
    64:64:androidx.recyclerview.selection.SelectionTracker$SelectionPredicate createSelectSingleAnything() -> createSelectSingleAnything
androidx.recyclerview.selection.SelectionPredicates$1 -> androidx.recyclerview.selection.SelectionPredicates$a:
    38:38:void <init>() -> <init>
    51:51:boolean canSelectMultiple() -> canSelectMultiple
    46:46:boolean canSetStateAtPosition(int,boolean) -> canSetStateAtPosition
    41:41:boolean canSetStateForKey(java.lang.Object,boolean) -> canSetStateForKey
androidx.recyclerview.selection.SelectionPredicates$2 -> androidx.recyclerview.selection.SelectionPredicates$b:
    64:64:void <init>() -> <init>
    77:77:boolean canSelectMultiple() -> canSelectMultiple
    72:72:boolean canSetStateAtPosition(int,boolean) -> canSetStateAtPosition
    67:67:boolean canSetStateForKey(java.lang.Object,boolean) -> canSetStateForKey
androidx.recyclerview.selection.SelectionTracker -> androidx.recyclerview.selection.SelectionTracker:
    91:91:void <init>() -> <init>
androidx.recyclerview.selection.SelectionTracker$Builder -> androidx.recyclerview.selection.SelectionTracker$Builder:
    androidx.recyclerview.selection.FocusDelegate mFocusDelegate -> j
    int mBandOverlayId -> o
    android.content.Context mContext -> c
    androidx.recyclerview.selection.OnDragInitiatedListener mOnDragInitiatedListener -> l
    androidx.recyclerview.selection.OnContextClickListener mOnContextClickListener -> m
    androidx.recyclerview.selection.BandPredicate mBandPredicate -> n
    androidx.recyclerview.selection.OnItemActivatedListener mOnItemActivatedListener -> k
    androidx.recyclerview.selection.ItemKeyProvider mKeyProvider -> h
    androidx.recyclerview.selection.StorageStrategy mStorage -> e
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> b
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> f
    androidx.recyclerview.selection.OperationMonitor mMonitor -> g
    androidx.recyclerview.selection.ItemDetailsLookup mDetailsLookup -> i
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    int[] mGestureToolTypes -> p
    int[] mPointerToolTypes -> q
    java.lang.String mSelectionId -> d
    534:555:void <init>(java.lang.String,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.ItemDetailsLookup,androidx.recyclerview.selection.StorageStrategy) -> <init>
    706:881:androidx.recyclerview.selection.SelectionTracker build() -> build
    666:667:androidx.recyclerview.selection.SelectionTracker$Builder withBandOverlay(int) -> withBandOverlay
    676:677:androidx.recyclerview.selection.SelectionTracker$Builder withBandPredicate(androidx.recyclerview.selection.BandPredicate) -> withBandPredicate
    593:595:androidx.recyclerview.selection.SelectionTracker$Builder withFocusDelegate(androidx.recyclerview.selection.FocusDelegate) -> withFocusDelegate
    655:657:androidx.recyclerview.selection.SelectionTracker$Builder withGestureTooltypes(int[]) -> withGestureTooltypes
    622:625:androidx.recyclerview.selection.SelectionTracker$Builder withOnContextClickListener(androidx.recyclerview.selection.OnContextClickListener) -> withOnContextClickListener
    637:640:androidx.recyclerview.selection.SelectionTracker$Builder withOnDragInitiatedListener(androidx.recyclerview.selection.OnDragInitiatedListener) -> withOnDragInitiatedListener
    607:610:androidx.recyclerview.selection.SelectionTracker$Builder withOnItemActivatedListener(androidx.recyclerview.selection.OnItemActivatedListener) -> withOnItemActivatedListener
    581:583:androidx.recyclerview.selection.SelectionTracker$Builder withOperationMonitor(androidx.recyclerview.selection.OperationMonitor) -> withOperationMonitor
    694:696:androidx.recyclerview.selection.SelectionTracker$Builder withPointerTooltypes(int[]) -> withPointerTooltypes
    566:568:androidx.recyclerview.selection.SelectionTracker$Builder withSelectionPredicate(androidx.recyclerview.selection.SelectionTracker$SelectionPredicate) -> withSelectionPredicate
androidx.recyclerview.selection.SelectionTracker$Builder$1 -> androidx.recyclerview.selection.SelectionTracker$Builder$a:
    780:780:void <init>(androidx.recyclerview.selection.SelectionTracker$Builder) -> <init>
    783:783:boolean onDragInitiated(android.view.MotionEvent) -> onDragInitiated
androidx.recyclerview.selection.SelectionTracker$Builder$2 -> androidx.recyclerview.selection.SelectionTracker$Builder$b:
    789:789:void <init>(androidx.recyclerview.selection.SelectionTracker$Builder) -> <init>
    794:794:boolean onItemActivated(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails,android.view.MotionEvent) -> onItemActivated
androidx.recyclerview.selection.SelectionTracker$Builder$3 -> androidx.recyclerview.selection.SelectionTracker$Builder$c:
    800:800:void <init>(androidx.recyclerview.selection.SelectionTracker$Builder) -> <init>
    803:803:boolean onContextClick(android.view.MotionEvent) -> onContextClick
androidx.recyclerview.selection.SelectionTracker$Builder$4 -> androidx.recyclerview.selection.SelectionTracker$Builder$d:
    androidx.recyclerview.selection.GestureSelectionHelper val$gestureHelper -> a
    androidx.recyclerview.selection.SelectionTracker$Builder this$0 -> b
    814:814:void <init>(androidx.recyclerview.selection.SelectionTracker$Builder,androidx.recyclerview.selection.GestureSelectionHelper) -> <init>
    817:820:void run() -> run
androidx.recyclerview.selection.SelectionTracker$Builder$5 -> androidx.recyclerview.selection.SelectionTracker$Builder$e:
    androidx.recyclerview.selection.SelectionTracker$Builder this$0 -> a
    825:825:void <init>(androidx.recyclerview.selection.SelectionTracker$Builder) -> <init>
    828:829:void run() -> run
androidx.recyclerview.selection.SelectionTracker$SelectionObserver -> androidx.recyclerview.selection.SelectionTracker$SelectionObserver:
    300:300:void <init>() -> <init>
    306:306:void onItemStateChanged(java.lang.Object,boolean) -> onItemStateChanged
    334:334:void onSelectionChanged() -> onSelectionChanged
    316:316:void onSelectionCleared() -> onSelectionCleared
    326:326:void onSelectionRefresh() -> onSelectionRefresh
    342:342:void onSelectionRestored() -> onSelectionRestored
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate -> androidx.recyclerview.selection.SelectionTracker$SelectionPredicate:
    351:351:void <init>() -> <init>
androidx.recyclerview.selection.StableIdKeyProvider -> androidx.recyclerview.selection.StableIdKeyProvider:
    android.util.SparseArray mPositionToKey -> b
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> d
    androidx.collection.LongSparseArray mKeyToPosition -> c
    59:77:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    81:94:void onAttached(android.view.View) -> a
    98:111:void onDetached(android.view.View) -> b
    41:41:java.lang.Object getKey(int) -> getKey
    115:115:java.lang.Long getKey(int) -> getKey
    41:41:int getPosition(java.lang.Object) -> getPosition
    120:120:int getPosition(java.lang.Long) -> getPosition
androidx.recyclerview.selection.StableIdKeyProvider$1 -> androidx.recyclerview.selection.StableIdKeyProvider$a:
    androidx.recyclerview.selection.StableIdKeyProvider this$0 -> a
    64:64:void <init>(androidx.recyclerview.selection.StableIdKeyProvider) -> <init>
    67:68:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    72:73:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
androidx.recyclerview.selection.StorageStrategy -> androidx.recyclerview.selection.StorageStrategy:
    java.lang.Class mType -> a
    63:66:void <init>(java.lang.Class) -> <init>
    83:83:java.lang.String getKeyTypeName() -> a
    106:106:androidx.recyclerview.selection.StorageStrategy createLongStorage() -> createLongStorage
    92:92:androidx.recyclerview.selection.StorageStrategy createParcelableStorage(java.lang.Class) -> createParcelableStorage
    99:99:androidx.recyclerview.selection.StorageStrategy createStringStorage() -> createStringStorage
androidx.recyclerview.selection.StorageStrategy$LongStorageStrategy -> androidx.recyclerview.selection.StorageStrategy$a:
    151:152:void <init>() -> <init>
    176:186:android.os.Bundle asBundle(androidx.recyclerview.selection.Selection) -> asBundle
    156:158:androidx.recyclerview.selection.Selection asSelection(android.os.Bundle) -> asSelection
androidx.recyclerview.selection.StorageStrategy$ParcelableStorageStrategy -> androidx.recyclerview.selection.StorageStrategy$b:
    194:196:void <init>(java.lang.Class) -> <init>
    219:226:android.os.Bundle asBundle(androidx.recyclerview.selection.Selection) -> asBundle
    201:203:androidx.recyclerview.selection.Selection asSelection(android.os.Bundle) -> asSelection
androidx.recyclerview.selection.StorageStrategy$StringStorageStrategy -> androidx.recyclerview.selection.StorageStrategy$c:
    112:113:void <init>() -> <init>
    136:144:android.os.Bundle asBundle(androidx.recyclerview.selection.Selection) -> asBundle
    118:120:androidx.recyclerview.selection.Selection asSelection(android.os.Bundle) -> asSelection
androidx.recyclerview.selection.ToolHandlerRegistry -> u5:
    java.util.List mHandlers -> a
    java.lang.Object mDefault -> b
    51:54:void <init>(java.lang.Object) -> <init>
    62:66:void set(int,java.lang.Object) -> a
    69:70:java.lang.Object get(android.view.MotionEvent) -> a
androidx.recyclerview.selection.TouchInputHandler -> v5:
    java.lang.Runnable mHapticPerformer -> i
    androidx.recyclerview.selection.OnDragInitiatedListener mOnDragInitiatedListener -> g
    java.lang.Runnable mGestureStarter -> h
    androidx.recyclerview.selection.SelectionTracker$SelectionPredicate mSelectionPredicate -> e
    androidx.recyclerview.selection.OnItemActivatedListener mOnItemActivatedListener -> f
    androidx.recyclerview.selection.ItemDetailsLookup mDetailsLookup -> d
    59:74:void <init>(androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.ItemDetailsLookup,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,java.lang.Runnable,androidx.recyclerview.selection.OnDragInitiatedListener,androidx.recyclerview.selection.OnItemActivatedListener,androidx.recyclerview.selection.FocusDelegate,java.lang.Runnable) -> <init>
    121:153:void onLongPress(android.view.MotionEvent) -> onLongPress
    83:109:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
androidx.recyclerview.selection.ViewAutoScroller -> w5:
    android.graphics.Point mLastLocation -> e
    java.lang.Runnable mRunner -> c
    boolean mPassedInitialMotionThreshold -> f
    float mScrollThresholdRatio -> a
    androidx.recyclerview.selection.ViewAutoScroller$ScrollHost mHost -> b
    android.graphics.Point mOrigin -> d
    57:58:void <init>(androidx.recyclerview.selection.ViewAutoScroller$ScrollHost) -> <init>
    61:74:void <init>(androidx.recyclerview.selection.ViewAutoScroller$ScrollHost,float) -> <init>
    115:156:void runScroll() -> a
    161:164:boolean aboveMotionThreshold(android.graphics.Point) -> a
    175:192:int computeScrollDistance(int) -> a
    206:206:float smoothOutOfBoundsRatio(float) -> a
    239:239:androidx.recyclerview.selection.ViewAutoScroller$ScrollHost createScrollHost(androidx.recyclerview.widget.RecyclerView) -> a
    78:82:void reset() -> reset
    86:97:void scroll(android.graphics.Point) -> scroll
androidx.recyclerview.selection.ViewAutoScroller$1 -> w5$a:
    androidx.recyclerview.selection.ViewAutoScroller this$0 -> a
    68:68:void <init>(androidx.recyclerview.selection.ViewAutoScroller) -> <init>
    71:72:void run() -> run
androidx.recyclerview.selection.ViewAutoScroller$RuntimeHost -> w5$b:
    androidx.recyclerview.widget.RecyclerView mView -> a
    249:251:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    260:261:void removeCallback(java.lang.Runnable) -> a
    266:267:void scrollBy(int) -> a
    271:273:int getViewHeight() -> a
    255:256:void runAtNextFrame(java.lang.Runnable) -> b
androidx.recyclerview.selection.ViewAutoScroller$ScrollHost -> w5$c:
    216:216:void <init>() -> <init>
    int getViewHeight() -> a
    void removeCallback(java.lang.Runnable) -> a
    void scrollBy(int) -> a
    void runAtNextFrame(java.lang.Runnable) -> b
androidx.recyclerview.widget.AdapterHelper -> x5:
    androidx.recyclerview.widget.AdapterHelper$Callback mCallback -> d
    boolean mDisableRecycler -> e
    int mExistingUpdateTypes -> g
    androidx.core.util.Pools$Pool mUpdateOpPool -> a
    java.util.ArrayList mPostponedList -> c
    androidx.recyclerview.widget.OpReorderer mOpReorderer -> f
    java.util.ArrayList mPendingUpdates -> b
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    119:125:void consumePostponedUpdates() -> a
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> a
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    472:497:int findPositionOffset(int,int) -> a
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> a
    540:544:boolean onItemRangeMoved(int,int,int) -> a
    588:620:int applyPendingUpdatesToPosition(int) -> a
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> a
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> a
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    411:428:boolean canFindInPreLayout(int) -> b
    516:521:boolean onItemRangeInserted(int,int) -> b
    557:585:void consumeUpdatesInOnePass() -> b
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    460:460:boolean hasPendingUpdates() -> c
    468:468:int findPositionOffset(int) -> c
    528:533:boolean onItemRangeRemoved(int,int) -> c
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> d
    330:407:int updatePositionWithPostponed(int,int) -> d
    464:464:boolean hasAnyUpdateTypes(int) -> d
    624:624:boolean hasUpdates() -> d
    93:116:void preProcess() -> e
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> e
    87:90:void reset() -> f
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> f
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> g
androidx.recyclerview.widget.AdapterHelper$Callback -> x5$a:
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> x5$b:
    java.lang.Object payload -> c
    int itemCount -> d
    int positionStart -> b
    int cmd -> a
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:661:java.lang.String cmdToString() -> a
    681:685:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:674:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    47:51:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    java.lang.Object sExecutorLock -> d
    java.util.concurrent.Executor mMainThreadExecutor -> a
    java.util.concurrent.Executor mBackgroundThreadExecutor -> b
    java.util.concurrent.Executor sDiffExecutor -> e
    androidx.recyclerview.widget.DiffUtil$ItemCallback mDiffCallback -> c
    144:145:void <clinit>() -> <clinit>
    84:86:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    129:137:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
    118:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> setBackgroundThreadExecutor
    102:103:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> setMainThreadExecutor
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    androidx.recyclerview.widget.AsyncDifferConfig mConfig -> b
    java.util.List mReadOnlyList -> f
    androidx.recyclerview.widget.ListUpdateCallback mUpdateCallback -> a
    java.util.List mList -> e
    java.util.List mListeners -> d
    java.util.concurrent.Executor mMainThreadExecutor -> c
    int mMaxScheduledGeneration -> g
    java.util.concurrent.Executor sMainThreadExecutor -> h
    131:131:void <clinit>() -> <clinit>
    162:164:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    178:186:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    364:370:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> a
    375:381:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> a
    392:393:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> addListListener
    216:216:java.util.List getCurrentList() -> getCurrentList
    403:404:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> removeListListener
    231:232:void submitList(java.util.List) -> submitList
    254:357:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$a:
    java.util.List val$newList -> b
    java.util.List val$oldList -> a
    java.lang.Runnable val$commitCallback -> d
    int val$runGeneration -> c
    androidx.recyclerview.widget.AsyncListDiffer this$0 -> e
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:355:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$a$a:
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> a
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    316:328:boolean areContentsTheSame(int,int) -> areContentsTheSame
    305:311:boolean areItemsTheSame(int,int) -> areItemsTheSame
    334:343:java.lang.Object getChangePayload(int,int) -> getChangePayload
    300:300:int getNewListSize() -> getNewListSize
    295:295:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$a$b:
    androidx.recyclerview.widget.DiffUtil$DiffResult val$result -> a
    androidx.recyclerview.widget.AsyncListDiffer$1 this$1 -> b
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:353:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$b:
    android.os.Handler mHandler -> a
    123:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.AsyncListUtil:
    int mDisplayedGeneration -> n
    int mRequestedGeneration -> o
    int mScrollHint -> l
    int mItemCount -> m
    androidx.recyclerview.widget.TileList mTileList -> e
    androidx.recyclerview.widget.AsyncListUtil$ViewCallback mViewCallback -> d
    androidx.recyclerview.widget.AsyncListUtil$DataCallback mDataCallback -> c
    boolean mAllowScrollHints -> k
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadProxy -> f
    int mTileSize -> b
    int[] mTmpRange -> h
    int[] mPrevRange -> i
    android.util.SparseIntArray mMissingPositions -> p
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundCallback -> r
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback mMainThreadCallback -> q
    int[] mTmpRangeExtended -> j
    java.lang.Class mTClass -> a
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback mBackgroundProxy -> g
    91:104:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    107:107:boolean isRefreshPending() -> a
    179:181:void updateRange() -> b
    155:156:java.lang.Object getItem(int) -> getItem
    175:175:int getItemCount() -> getItemCount
    119:124:void onRangeChanged() -> onRangeChanged
    133:135:void refresh() -> refresh
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.AsyncListUtil$a:
    androidx.recyclerview.widget.AsyncListUtil this$0 -> a
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    282:286:void recycleAllTiles() -> a
    289:289:boolean isRequestedGeneration(int) -> a
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    264:276:void removeTile(int,int) -> removeTile
    218:229:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.AsyncListUtil$b:
    android.util.SparseBooleanArray mLoadedTiles -> b
    int mLastRequiredTileStart -> f
    androidx.recyclerview.widget.TileList$Tile mRecycledRoot -> a
    int mItemCount -> d
    int mFirstRequiredTileStart -> e
    androidx.recyclerview.widget.AsyncListUtil this$0 -> g
    int mGeneration -> c
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    355:362:void requestTiles(int,int,int,boolean) -> a
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> a
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> a
    421:438:void flushTileCache(int) -> a
    350:350:int getTileStart(int) -> b
    401:401:boolean isTileLoaded(int) -> c
    413:418:void removeTile(int) -> d
    366:378:void loadTile(int,int) -> loadTile
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    308:312:void refresh(int) -> refresh
    322:347:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.AsyncListUtil$DataCallback:
    451:451:void <init>() -> <init>
    511:511:int getMaxCachedTiles() -> getMaxCachedTiles
    489:489:void recycleData(java.lang.Object[],int) -> recycleData
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.AsyncListUtil$ViewCallback:
    521:521:void <init>() -> <init>
    577:581:void extendRangeInto(int[],int[],int) -> extendRangeInto
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    androidx.recyclerview.widget.ListUpdateCallback mWrapped -> a
    java.lang.Object mLastEventPayload -> e
    int mLastEventCount -> d
    int mLastEventType -> b
    int mLastEventPosition -> c
    46:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> y5:
    androidx.recyclerview.widget.ChildHelper$Bucket mBucket -> b
    java.util.List mHiddenViews -> c
    androidx.recyclerview.widget.ChildHelper$Callback mCallback -> a
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> a
    98:111:void addView(android.view.View,int,boolean) -> a
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> a
    253:253:int getChildCount() -> a
    282:288:void detachViewFromParent(int) -> a
    328:330:void hide(android.view.View) -> a
    60:62:void hideViewInternal(android.view.View) -> b
    206:216:android.view.View findHiddenNonRemovedView(int) -> b
    263:263:int getUnfilteredChildCount() -> b
    180:181:android.view.View getChildAt(int) -> c
    188:197:void removeAllViewsUnfiltered() -> c
    297:309:int indexOfChild(android.view.View) -> c
    114:131:int getOffset(int) -> d
    319:319:boolean isHidden(android.view.View) -> d
    140:151:void removeView(android.view.View) -> e
    273:273:android.view.View getUnfilteredChildAt(int) -> e
    160:172:void removeViewAt(int) -> f
    373:389:boolean removeViewIfHidden(android.view.View) -> f
    350:352:void unhide(android.view.View) -> g
    70:74:boolean unhideViewInternal(android.view.View) -> h
    363:363:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Bucket -> y5$a:
    androidx.recyclerview.widget.ChildHelper$Bucket mNext -> b
    long mData -> a
    395:401:void <init>() -> <init>
    415:418:void ensureNext() -> a
    421:429:void clear(int) -> a
    448:467:void insert(int,boolean) -> a
    441:445:void reset() -> b
    493:502:int countOnesBefore(int) -> b
    432:436:boolean get(int) -> c
    470:488:boolean remove(int) -> d
    406:412:void set(int) -> e
    508:508:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper$Callback -> y5$b:
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    java.util.ArrayList mAddAnimations -> o
    java.util.ArrayList mChangesList -> n
    java.util.ArrayList mMovesList -> m
    java.util.ArrayList mAdditionsList -> l
    java.util.ArrayList mPendingChanges -> k
    android.animation.TimeInterpolator sDefaultInterpolator -> s
    java.util.ArrayList mPendingMoves -> j
    java.util.ArrayList mPendingAdditions -> i
    java.util.ArrayList mPendingRemovals -> h
    java.util.ArrayList mChangeAnimations -> r
    java.util.ArrayList mRemoveAnimations -> q
    java.util.ArrayList mMoveAnimations -> p
    38:55:void <init>() -> <init>
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> a
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> a
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    419:426:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    550:553:void dispatchFinishedWhenDone() -> a
    641:644:void cancelAll(java.util.List) -> a
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> b
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    531:531:boolean isRunning() -> isRunning
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$a:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$moves -> a
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$b:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$changes -> a
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$c:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> b
    java.util.ArrayList val$additions -> a
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$d:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> b
    android.view.View val$view -> c
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$e:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> c
    android.view.View val$view -> b
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$f:
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$holder -> a
    android.view.ViewPropertyAnimator val$animation -> e
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> f
    android.view.View val$view -> c
    int val$deltaY -> d
    int val$deltaX -> b
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$g:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$oldViewAnim -> b
    android.view.View val$view -> c
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$h:
    androidx.recyclerview.widget.DefaultItemAnimator this$0 -> d
    androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo val$changeInfo -> a
    android.view.ViewPropertyAnimator val$newViewAnimation -> b
    android.view.View val$newView -> c
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$i:
    androidx.recyclerview.widget.RecyclerView$ViewHolder oldHolder -> a
    androidx.recyclerview.widget.RecyclerView$ViewHolder newHolder -> b
    int toY -> f
    int fromY -> d
    int toX -> e
    int fromX -> c
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$j:
    androidx.recyclerview.widget.RecyclerView$ViewHolder holder -> a
    int toX -> d
    int toY -> e
    int fromX -> b
    int fromY -> c
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    java.util.Comparator SNAKE_COMPARATOR -> a
    84:84:void <clinit>() -> <clinit>
    80:82:void <init>() -> <init>
    204:208:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> a
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$a:
    84:84:void <init>() -> <init>
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> a
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    295:295:void <init>() -> <init>
    360:360:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    java.util.List mSnakes -> a
    int[] mOldItemStatuses -> b
    int[] mNewItemStatuses -> c
    androidx.recyclerview.widget.DiffUtil$Callback mCallback -> d
    int mNewListSize -> f
    boolean mDetectMoves -> g
    int mOldListSize -> e
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> a
    646:650:void findAddition(int,int,int) -> a
    723:766:boolean findMatchingItem(int,int,int,boolean) -> a
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> a
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> a
    610:643:void findMatchingItems() -> b
    653:657:void findRemoval(int,int,int) -> b
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> b
    695:696:int convertNewPositionToOld(int) -> convertNewPositionToOld
    671:672:int convertOldPositionToNew(int) -> convertOldPositionToNew
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    373:373:void <init>() -> <init>
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$b:
    int currentPos -> b
    boolean removal -> c
    int posInOwnerList -> a
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$c:
    int newListEnd -> d
    int oldListEnd -> b
    int newListStart -> c
    int oldListStart -> a
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$d:
    boolean reverse -> e
    int y -> b
    int size -> c
    int x -> a
    boolean removal -> d
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.DividerItemDecoration:
    int[] ATTRS -> d
    int mOrientation -> b
    android.graphics.Rect mBounds -> c
    android.graphics.drawable.Drawable mDivider -> a
    48:48:void <clinit>() -> <clinit>
    66:75:void <init>(android.content.Context,int) -> <init>
    151:175:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> a
    124:148:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> b
    108:108:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    180:189:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    113:114:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    97:98:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    84:89:void setOrientation(int) -> setOrientation
androidx.recyclerview.widget.FastScroller -> z5:
    int mHorizontalThumbWidth -> n
    int mVerticalThumbCenterY -> l
    int[] mHorizontalRange -> y
    int mHorizontalTrackHeight -> j
    int mVerticalTrackWidth -> f
    boolean mNeedHorizontalScrollbar -> u
    int mMargin -> b
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mOnScrollListener -> C
    int mAnimationState -> A
    java.lang.Runnable mHideRunnable -> B
    int[] EMPTY_STATE_SET -> E
    int mDragState -> w
    float mVerticalDragY -> m
    int mRecyclerViewWidth -> q
    android.graphics.drawable.Drawable mVerticalTrackDrawable -> d
    int mHorizontalThumbCenterX -> o
    int[] mVerticalRange -> x
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> s
    android.graphics.drawable.Drawable mHorizontalTrackDrawable -> h
    int mVerticalThumbHeight -> k
    android.animation.ValueAnimator mShowHideAnimator -> z
    int mHorizontalThumbHeight -> i
    android.graphics.drawable.StateListDrawable mVerticalThumbDrawable -> c
    int mVerticalThumbWidth -> e
    android.graphics.drawable.StateListDrawable mHorizontalThumbDrawable -> g
    int mScrollbarMinimumRange -> a
    boolean mNeedVerticalScrollbar -> t
    int[] PRESSED_STATE_SET -> D
    int mState -> v
    float mHorizontalDragX -> p
    int mRecyclerViewHeight -> r
    74:75:void <clinit>() -> <clinit>
    141:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    244:255:void hide(int) -> a
    258:259:void cancelHide() -> a
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> a
    339:375:void updateScrollPosition(int,int) -> a
    461:475:void horizontalScrollTo(float) -> a
    479:490:int scrollTo(float,float,int[],int,int,int) -> a
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> a
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    183:187:void destroyCallbacks() -> b
    262:264:void resetHideDelay(int) -> b
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> b
    446:458:void verticalScrollTo(float) -> b
    496:496:boolean isPointInsideVerticalThumb(float,float) -> b
    195:213:void setState(int) -> c
    542:544:int[] getHorizontalRange() -> c
    533:535:int[] getVerticalRange() -> d
    216:216:boolean isLayoutRTL() -> e
    191:192:void requestRedraw() -> f
    177:180:void setupCallbacks() -> g
    228:240:void show() -> h
    268:277:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.FastScroller$1 -> z5$a:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> z5$b:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> z5$c:
    androidx.recyclerview.widget.FastScroller this$0 -> b
    boolean mCanceled -> a
    551:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> z5$d:
    androidx.recyclerview.widget.FastScroller this$0 -> a
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> a6:
    java.lang.ThreadLocal sGapWorker -> e
    long mPostTimeNs -> b
    java.util.Comparator sTaskComparator -> f
    long mFrameIntervalNs -> c
    java.util.ArrayList mTasks -> d
    java.util.ArrayList mRecyclerViews -> a
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> a
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    217:262:void buildTaskList() -> a
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> a
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> a
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> a
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> a
    356:364:void flushTasksWithDeadline(long) -> a
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> b
    367:369:void prefetch(long) -> b
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> a6$a:
    190:190:void <init>() -> <init>
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> a
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> a6$b:
    int[] mPrefetchArray -> c
    int mCount -> d
    int mPrefetchDy -> b
    int mPrefetchDx -> a
    65:65:void <init>() -> <init>
    74:76:void setPrefetchVector(int,int) -> a
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> a
    139:145:boolean lastPrefetchIncludedPosition(int) -> a
    152:156:void clearPrefetchPositions() -> a
    112:113:void addPosition(int,int) -> addPosition
androidx.recyclerview.widget.GapWorker$Task -> a6$c:
    androidx.recyclerview.widget.RecyclerView view -> d
    int position -> e
    boolean immediate -> a
    int viewVelocity -> b
    int distanceToItem -> c
    38:38:void <init>() -> <init>
    46:51:void clear() -> a
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    android.graphics.Rect mDecorInsets -> P
    boolean mPendingSpanCountChange -> I
    int mSpanCount -> J
    android.util.SparseIntArray mPreLayoutSpanSizeCache -> M
    android.util.SparseIntArray mPreLayoutSpanIndexCache -> N
    android.view.View[] mSet -> L
    androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup -> O
    boolean mUsingSpansToEstimateScrollBarDimensions -> Q
    int[] mCachedBorders -> K
    73:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    85:87:void <init>(android.content.Context,int) -> <init>
    98:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    325:344:int[] calculateItemBorders(int[],int,int) -> a
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    421:450:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> a
    515:525:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    530:704:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    750:753:void guessMeasurement(float,int) -> a
    757:767:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    775:792:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> a
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> b
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> b
    716:737:void measureChild(android.view.View,int,boolean) -> b
    314:315:void calculateItemBorders(int) -> c
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> c
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1304:1305:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> d
    1271:1272:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> e
    348:352:int getSpaceForSpanRange(int,int) -> f
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    801:801:int getSpanCount() -> getSpanCount
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    1267:1267:boolean isUsingSpansToEstimateScrollbarDimensions() -> isUsingSpansToEstimateScrollbarDimensions
    189:196:void cachePreLayoutSpanMapping() -> n
    184:186:void clearPreLayoutSpanMappingCache() -> o
    1068:1185:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    368:371:void ensureViewSet() -> p
    280:286:void updateMeasurements() -> q
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    814:819:void setSpanCount(int) -> setSpanCount
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    108:109:void setStackFromEnd(boolean) -> setStackFromEnd
    1255:1256:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> setUsingSpansToEstimateScrollbarDimensions
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1348:1348:void <init>() -> <init>
    1357:1357:int getSpanIndex(int,int) -> getSpanIndex
    1352:1352:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    int mSpanSize -> f
    int mSpanIndex -> e
    1380:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1384:1385:void <init>(int,int) -> <init>
    1388:1389:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1392:1393:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1396:1397:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> getSpanIndex
    1424:1424:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    android.util.SparseIntArray mSpanIndexCache -> a
    android.util.SparseIntArray mSpanGroupIndexCache -> b
    boolean mCacheSpanIndices -> c
    boolean mCacheSpanGroupIndices -> d
    834:840:void <init>() -> <init>
    930:939:int getCachedSpanGroupIndex(int,int) -> a
    997:1015:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> a
    917:926:int getCachedSpanIndex(int,int) -> b
    1029:1061:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    966:993:int getSpanIndex(int,int) -> getSpanIndex
    895:896:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    887:888:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    913:913:boolean isSpanGroupIndexCacheEnabled() -> isSpanGroupIndexCacheEnabled
    904:904:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    876:880:void setSpanGroupIndexCacheEnabled(boolean) -> setSpanGroupIndexCacheEnabled
    859:863:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    int mActionState -> n
    float mSelectedStartY -> k
    android.view.View mOverdrawChild -> x
    int mActivePointerId -> l
    java.util.List mRecoverAnimations -> p
    float mDy -> i
    java.util.List mDistances -> v
    float mMaxSwipeVelocity -> g
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> r
    androidx.recyclerview.widget.ItemTouchHelper$Callback mCallback -> m
    float mInitialTouchY -> e
    long mDragScrollStartTimeInMs -> D
    androidx.core.view.GestureDetectorCompat mGestureDetector -> z
    float[] mTmpPosition -> b
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mOnItemTouchListener -> B
    androidx.recyclerview.widget.RecyclerView$ViewHolder mSelected -> c
    int mOverdrawChildPosition -> y
    android.view.VelocityTracker mVelocityTracker -> t
    int mSlop -> q
    int mSelectedFlags -> o
    float mSelectedStartX -> j
    java.lang.Runnable mScrollRunnable -> s
    float mDx -> h
    java.util.List mSwapTargets -> u
    float mSwipeEscapeVelocity -> f
    float mInitialTouchX -> d
    android.graphics.Rect mTmpRect -> C
    androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener mItemTouchHelperGestureListener -> A
    java.util.List mPendingCleanup -> a
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> w
    446:448:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    451:451:boolean hitTest(android.view.View,float,float,float,float) -> a
    527:537:void getSelectedDxDy(float[]) -> a
    700:719:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> a
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    914:926:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    980:982:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> a
    1155:1165:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> a
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> a
    1237:1260:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    1290:1291:void addChildDrawingOrderCallback() -> a
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> a
    467:482:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    494:508:void destroyCallbacks() -> b
    853:886:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> b
    1264:1286:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> b
    574:695:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> c
    723:729:boolean hasRunningRecoverAnim() -> c
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> c
    1191:1233:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    936:940:void obtainVelocityTracker() -> d
    943:947:void releaseVelocityTracker() -> e
    737:793:boolean scrollIfNecessary() -> f
    485:491:void setupCallbacks() -> g
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    511:514:void startGestureDetection() -> h
    517:524:void stopGestureDetection() -> i
    890:890:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    554:563:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    541:549:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    1092:1104:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    1139:1151:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$a:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:267:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$b:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> a
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    362:416:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$c:
    int val$swipeDir -> n
    androidx.recyclerview.widget.RecyclerView$ViewHolder val$prevSelected -> o
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> p
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$d:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> c
    int val$swipeDir -> b
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation val$anim -> a
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    android.view.animation.Interpolator sDragViewScrollCapInterpolator -> c
    android.view.animation.Interpolator sDragScrollInterpolator -> b
    int mCachedMaxScrollSpeed -> a
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> a
    1978:1992:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> a
    1598:1599:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    1997:2022:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> b
    1604:1605:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    1626:1626:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1802:1853:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2038:2039:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1573:1588:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1482:1497:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    2132:2137:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1690:1690:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1466:1466:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1720:1720:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1746:1746:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    1706:1706:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1770:1770:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    2166:2184:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1678:1678:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1663:1663:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1529:1529:int makeFlag(int,int) -> makeFlag
    1512:1512:int makeMovementFlags(int,int) -> makeMovementFlags
    2071:2073:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2105:2107:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1944:1973:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1895:1898:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$a:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$b:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$e:
    androidx.recyclerview.widget.ItemTouchHelper this$0 -> b
    boolean mShouldReactToLongPress -> a
    2316:2317:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> a
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$f:
    float mY -> j
    float mX -> i
    boolean mOverridden -> k
    boolean mEnded -> l
    float mTargetY -> d
    int mActionState -> f
    float mTargetX -> c
    float mStartDy -> b
    float mStartDx -> a
    android.animation.ValueAnimator mValueAnimator -> g
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> e
    boolean mIsPendingCleanup -> h
    float mFraction -> m
    2401:2420:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2423:2424:void setDuration(long) -> a
    2432:2433:void cancel() -> a
    2436:2437:void setFraction(float) -> a
    2427:2429:void start() -> b
    2444:2454:void update() -> c
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$f$a:
    androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation this$0 -> a
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    int mDefaultSwipeDirs -> d
    int mDefaultDragDirs -> e
    2233:2236:void <init>(int,int) -> <init>
    2287:2287:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2293:2293:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2272:2272:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    2257:2258:void setDefaultDragDirs(int) -> setDefaultDragDirs
    2246:2247:void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> b6:
    androidx.recyclerview.widget.ItemTouchUIUtil INSTANCE -> a
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> a
    75:85:void clearView(android.view.View) -> clearView
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> c6:
    boolean mInfinite -> i
    int mStartLine -> f
    int mEndLine -> g
    int mItemDirection -> d
    int mLayoutDirection -> e
    boolean mStopInFocusable -> h
    boolean mRecycle -> a
    int mAvailable -> b
    int mCurrentPosition -> c
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> u
    boolean mLastStackFromEnd -> v
    androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo -> E
    int mInitialPrefetchItemCount -> G
    boolean mReverseLayout -> w
    boolean mShouldReverseLayout -> x
    int mPendingScrollPositionOffset -> B
    androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult -> F
    int mPendingScrollPosition -> A
    int[] mReusableIntPair -> H
    boolean mStackFromEnd -> y
    boolean mSmoothScrollbarEnabled -> z
    androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState -> t
    androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState -> D
    int mOrientation -> s
    boolean mRecycleChildrenOnDetach -> C
    159:160:void <init>(android.content.Context) -> <init>
    169:172:void <init>(android.content.Context,int,boolean) -> <init>
    183:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> a
    755:757:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> a
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    875:876:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    961:966:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> a
    1173:1177:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> a
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> a
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> a
    1382:1383:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> a
    1546:1547:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> a
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> a
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> a
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> a
    1990:2004:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> a
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    986:992:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> b
    1162:1166:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> b
    1700:1700:boolean shouldMeasureTwice() -> b
    1716:1723:int convertFocusDirectionToLayoutDirection(int) -> b
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> b
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> b
    1184:1188:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> c
    1823:1823:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> c
    2012:2031:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> c
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1371:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> d
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> d
    1840:1840:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> d
    1025:1033:void updateLayoutStateToFillStart(int,int) -> e
    1040:1043:void ensureLayoutState() -> e
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> f
    1940:1941:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1980:1981:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> g
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1362:1362:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    330:330:int getOrientation() -> getOrientation
    212:212:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    376:376:boolean getReverseLayout() -> getReverseLayout
    319:319:boolean getStackFromEnd() -> getStackFromEnd
    1885:1885:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> h
    1892:1892:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> i
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1771:1771:android.view.View getChildClosestToEnd() -> j
    1761:1761:android.view.View getChildClosestToStart() -> k
    1271:1271:boolean resolveIsInfinite() -> l
    362:367:void resolveShouldLayoutReverse() -> m
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2160:2187:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1076:void scrollToPosition(int) -> scrollToPosition
    1098:1104:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1346:1347:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    340:353:void setOrientation(int) -> setOrientation
    229:230:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    394:400:void setReverseLayout(boolean) -> setReverseLayout
    1212:1213:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    310:316:void setStackFromEnd(boolean) -> setStackFromEnd
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$a:
    androidx.recyclerview.widget.OrientationHelper mOrientationHelper -> a
    boolean mValid -> e
    int mPosition -> b
    int mCoordinate -> c
    boolean mLayoutFromEnd -> d
    2453:2455:void <init>() -> <init>
    2469:2472:void assignCoordinateFromPadding() -> a
    2485:2486:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> a
    2538:2546:void assignFromView(android.view.View,int) -> a
    2458:2462:void reset() -> b
    2491:2535:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> b
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2549:2549:void <init>() -> <init>
    2556:2560:void resetInternal() -> a
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$b:
    boolean mInfinite -> m
    boolean mIsPreLayout -> j
    int mLastScrollDelta -> k
    int mExtraFillSpace -> h
    int mNoRecycleSpace -> i
    int mLayoutDirection -> f
    int mScrollingOffset -> g
    int mCurrentPosition -> d
    int mItemDirection -> e
    int mOffset -> b
    int mAvailable -> c
    boolean mRecycle -> a
    java.util.List mScrapList -> l
    2193:2279:void <init>() -> <init>
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> a
    2300:2305:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    2332:2333:void assignPositionFromScrapList() -> a
    2336:2343:void assignPositionFromScrapList(android.view.View) -> a
    2316:2328:android.view.View nextViewFromScrapList() -> b
    2346:2371:android.view.View nextViewInLimitedList(android.view.View) -> b
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    int mAnchorOffset -> b
    boolean mAnchorLayoutFromEnd -> c
    int mAnchorPosition -> a
    2429:2429:void <clinit>() -> <clinit>
    2393:2395:void <init>() -> <init>
    2397:2401:void <init>(android.os.Parcel) -> <init>
    2403:2407:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2410:2410:boolean hasValidAnchor() -> a
    2414:2415:void invalidateAnchor() -> b
    2419:2419:int describeContents() -> describeContents
    2424:2427:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$a:
    2430:2430:void <init>() -> <init>
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    float mMillisPerPixel -> k
    android.util.DisplayMetrics mDisplayMetrics -> i
    boolean mHasCalculatedMillisPerPixel -> j
    93:95:void <init>(android.content.Context) -> <init>
    170:174:float getSpeedPerPixel() -> a
    266:271:int clampApplyScroll(int,int) -> b
    280:282:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:341:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:316:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:249:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> e
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> d
    33:33:void <init>() -> <init>
    143:146:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    162:169:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> a
    223:248:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    272:275:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    184:205:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> b
    263:266:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    androidx.recyclerview.widget.AsyncListDiffer mDiffer -> c
    androidx.recyclerview.widget.AsyncListDiffer$ListListener mListener -> d
    107:111:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    114:117:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    173:173:java.util.List getCurrentList() -> getCurrentList
    150:150:java.lang.Object getItem(int) -> getItem
    155:155:int getItemCount() -> getItemCount
    189:189:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
    128:129:void submitList(java.util.List) -> submitList
    146:147:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.ListAdapter$a:
    androidx.recyclerview.widget.ListAdapter this$0 -> a
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:103:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
androidx.recyclerview.widget.MessageThreadUtil -> d6:
    27:27:void <init>() -> <init>
    31:31:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> a
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> a
androidx.recyclerview.widget.MessageThreadUtil$1 -> d6$a:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    java.lang.Runnable mMainThreadRunnable -> c
    android.os.Handler mMainThreadHandler -> b
    androidx.recyclerview.widget.ThreadUtil$MainThreadCallback val$callback -> d
    31:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    55:57:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    46:47:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    51:52:void removeTile(int,int) -> removeTile
    41:42:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> d6$a$a:
    androidx.recyclerview.widget.MessageThreadUtil$1 this$1 -> a
    59:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    62:81:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> d6$b:
    androidx.recyclerview.widget.MessageThreadUtil$MessageQueue mQueue -> a
    java.lang.Runnable mBackgroundRunnable -> d
    androidx.recyclerview.widget.ThreadUtil$BackgroundCallback val$callback -> e
    java.util.concurrent.atomic.AtomicBoolean mBackgroundRunning -> c
    java.util.concurrent.Executor mExecutor -> b
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    121:123:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    131:134:void maybeExecuteBackgroundRunnable() -> a
    126:128:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
    112:113:void loadTile(int,int) -> loadTile
    117:118:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    100:101:void refresh(int) -> refresh
    106:108:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> d6$b$a:
    androidx.recyclerview.widget.MessageThreadUtil$2 this$1 -> a
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:166:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> d6$c:
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem mRoot -> a
    233:233:void <init>() -> <init>
    238:237:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> a
    252:251:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> a
    264:263:void removeMessages(int) -> a
    247:246:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> b
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> d6$d:
    java.lang.Object sPoolLock -> j
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next -> a
    java.lang.Object data -> h
    androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem sPool -> i
    int arg4 -> f
    int arg5 -> g
    int arg2 -> d
    int arg3 -> e
    int what -> b
    int arg1 -> c
    180:180:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    191:199:void recycle() -> a
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> a
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> a
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> a
androidx.recyclerview.widget.OpReorderer -> e6:
    androidx.recyclerview.widget.OpReorderer$Callback mCallback -> a
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    39:52:void swapMoveOp(java.util.List,int,int) -> a
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    213:224:int getLastMoveOutOfOrder(java.util.List) -> a
    33:36:void reorderOps(java.util.List) -> b
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
androidx.recyclerview.widget.OpReorderer$Callback -> e6$a:
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    int mLastTotalSpace -> a
    android.graphics.Rect mTmpRect -> b
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$a:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:323:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:330:void offsetChild(android.view.View,int) -> offsetChild
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$b:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:421:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:428:void offsetChild(android.view.View,int) -> offsetChild
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    androidx.recyclerview.widget.OrientationHelper mHorizontalHelper -> e
    androidx.recyclerview.widget.OrientationHelper mVerticalHelper -> d
    38:38:void <init>() -> <init>
    199:202:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> a
    217:238:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> a
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> b
    243:248:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> b
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> c
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> d
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$a:
    androidx.recyclerview.widget.PagerSnapHelper this$0 -> l
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    192:192:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    boolean mPreserveFocusAfterLayout -> d0
    int mScrollPointerId -> O
    android.view.VelocityTracker mVelocityTracker -> P
    java.lang.Runnable mItemAnimatorRunner -> w0
    java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE -> F0
    boolean mFirstLayoutComplete -> u
    int mDispatchScrollCounter -> G
    android.widget.EdgeEffect mTopGlow -> J
    android.view.animation.Interpolator sQuinticInterpolator -> G0
    androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver -> a
    androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback -> x0
    boolean mIgnoreMotionEventTillDown -> y
    java.util.List mOnChildAttachStateListeners -> C
    androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback -> p0
    int mLastTouchY -> T
    androidx.recyclerview.widget.ViewInfoStore mViewInfoStore -> f
    float mScaledVerticalScrollFactor -> c0
    androidx.recyclerview.widget.RecyclerView$State mState -> h0
    boolean IGNORE_DETACHED_FOCUSED_CHILD -> E0
    androidx.recyclerview.widget.GapWorker mGapWorker -> f0
    boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC -> A0
    boolean ALLOW_THREAD_GAP_WORK -> C0
    int[] mNestedOffsets -> t0
    androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry -> g0
    android.graphics.RectF mTempRectF -> k
    boolean mIsAttached -> r
    boolean FORCE_INVALIDATE_DISPLAY_LIST -> z0
    android.widget.EdgeEffect mLeftGlow -> I
    int mEatenAccessibilityChangeFlags -> z
    android.graphics.Rect mTempRect -> i
    androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener -> n
    int mInterceptRequestLayoutDepth -> v
    androidx.recyclerview.widget.RecyclerView$Recycler mRecycler -> b
    boolean mItemsChanged -> l0
    int mTouchSlop -> U
    boolean mPostedAnimatorRunner -> n0
    androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator -> M
    boolean mDataSetHasChangedAfterLayout -> D
    int mInitialTouchX -> Q
    androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState -> c
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> l
    boolean mLayoutWasDefered -> w
    androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory -> H
    java.util.List mPendingAccessibilityImportanceChange -> v0
    boolean mHasFixedSize -> s
    android.widget.EdgeEffect mBottomGlow -> L
    java.util.ArrayList mItemDecorations -> o
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate -> o0
    android.graphics.Rect mTempRect2 -> j
    boolean mDispatchItemsChangedEvent -> E
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener -> m0
    boolean mAdapterUpdateDuringMeasure -> A
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> B
    int mInitialTouchY -> R
    androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper -> r0
    float mScaledHorizontalScrollFactor -> b0
    boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION -> D0
    int mScrollState -> N
    androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener -> V
    androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener -> q
    int mMaxFlingVelocity -> a0
    androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger -> e0
    boolean POST_UPDATES_ON_ANIMATION -> B0
    int[] NESTED_SCROLLING_ATTRS -> y0
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout -> m
    androidx.recyclerview.widget.AdapterHelper mAdapterHelper -> d
    int mLayoutOrScrollCounter -> F
    int[] mScrollOffset -> s0
    androidx.recyclerview.widget.ChildHelper mChildHelper -> e
    boolean mLayoutSuppressed -> x
    int[] mReusableIntPair -> u0
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> i0
    android.widget.EdgeEffect mRightGlow -> K
    boolean mEnableFastScroller -> t
    int[] mMinMaxLayoutPositions -> q0
    java.lang.Runnable mUpdateChildViewsRunnable -> h
    java.util.List mScrollListeners -> j0
    int mMinFlingVelocity -> W
    boolean mClipToPadding -> g
    int mLastTouchX -> S
    boolean mItemsAddedOrRemoved -> k0
    java.util.ArrayList mOnItemTouchListeners -> p
    219:598:void <clinit>() -> <clinit>
    646:647:void <init>(android.content.Context) -> <init>
    650:651:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    654:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    3771:3771:boolean predictiveItemAnimationsEnabled() -> A
    3781:3809:void processAdapterUpdatesAndSetAnimationFlags() -> B
    3929:3936:void recoverFocusFromState() -> C
    2557:2577:void releaseGlows() -> D
    1171:1184:void removeAndRecycleViews() -> E
    5513:5528:void repositionShadowingViews() -> F
    3887:3890:void resetFocusInfo() -> G
    3435:3440:void resetScroll() -> H
    3866:3884:void saveFocusInfo() -> I
    4540:4551:void saveOldPositions() -> J
    2137:2141:void startInterceptRequestLayout() -> K
    2501:2505:void stopScrollersInternal() -> L
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> a
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> a
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    782:832:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> a
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> a
    1197:1216:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> a
    1431:1442:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    1829:1854:void scrollStep(int,int,int[]) -> a
    1931:1976:boolean scrollByInternal(int,int,android.view.MotionEvent) -> a
    2390:2422:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> a
    2530:2554:void pullGlows(float,float,float,float) -> a
    2603:2630:void absorbGlows(int,int) -> a
    2834:2835:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> a
    2909:2934:void requestChildOnScreen(android.view.View,android.view.View) -> a
    3030:3038:void assertInLayoutOrScroll(java.lang.String) -> a
    3118:3129:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> a
    3443:3445:void cancelScroll() -> a
    3656:3668:void onExitLayoutOrScroll(boolean) -> a
    3717:3728:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> a
    4015:4023:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> a
    4255:4282:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    4291:4298:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4301:4324:void findMinMaxChildLayoutPositions(int[]) -> a
    4363:4367:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    4381:4399:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> a
    4617:4643:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    4652:4671:void viewRangeUpdate(int,int,java.lang.Object) -> a
    4946:4968:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> a
    5096:5102:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> a
    5196:5213:void dispatchOnScrollStateChanged(int) -> a
    7553:7564:void dispatchChildAttached(android.view.View) -> a
    11470:11476:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    11509:11513:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> a
    2943:2946:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1582:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1598:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1273:1277:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3079:3080:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1710:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    1755:1764:void jumpToPositionForSmoothScroller(int) -> b
    2580:2600:void considerReleasingGlowsOnScroll(int,int) -> b
    3048:3063:void assertNotInLayoutOrScroll(java.lang.String) -> b
    3147:3156:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> b
    4371:4376:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    4554:4562:void clearOldPositions() -> b
    4674:4674:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    4692:4695:void processDataSetCompletelyChanged(boolean) -> b
    7538:7549:void dispatchChildDetached(android.view.View) -> b
    1865:1869:void consumePendingUpdateOperations() -> c
    2154:2185:void stopInterceptRequestLayout(boolean) -> c
    3448:3456:void onPointerUp(android.view.MotionEvent) -> c
    3606:3614:void defaultOnMeasure(int,int) -> c
    4003:4011:int getDeepestFocusedViewWithId(android.view.View) -> c
    11497:11500:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1297:1300:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1727:1730:void clearOnScrollListeners() -> clearOnScrollListeners
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    3675:3683:void dispatchContentChangedIfNecessary() -> d
    4327:4328:boolean didChildRangeChange(int,int) -> d
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    5105:5126:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> d
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11576:11576:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11583:11585:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    3741:3742:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1420:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1412:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4429:4486:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1451:1463:boolean removeAnimatingView(android.view.View) -> e
    3837:3863:void dispatchLayout() -> e
    5154:5177:void dispatchOnScrolled(int,int) -> e
    5851:5867:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    4033:4118:void dispatchLayoutStep1() -> f
    4599:4613:void offsetPositionRecordsForInsert(int,int) -> f
    5829:5844:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> f
    5013:5025:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4792:4797:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4924:4941:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:4987:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4902:4902:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    4878:4878:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    2438:2485:boolean fling(int,int) -> fling
    2748:2821:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4125:4144:void dispatchLayoutStep2() -> g
    4565:4596:void offsetPositionRecordsForMove(int,int) -> g
    4816:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> g
    4505:4506:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4514:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4522:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    774:774:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    1253:1256:int getBaseline() -> getBaseline
    4838:4839:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4864:4865:long getChildItemId(android.view.View) -> getChildItemId
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4828:4828:int getChildPosition(android.view.View) -> getChildPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5092:5093:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    1609:1611:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5879:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4151:4235:void dispatchLayoutStep3() -> h
    1070:1070:boolean hasFixedSize() -> hasFixedSize
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11563:11563:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5229:5229:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    11480:11494:void dispatchPendingImportantForAccessibilityChanges() -> i
    4718:4727:void invalidateItemDecorations() -> invalidateItemDecorations
    4536:4536:boolean isAnimating() -> isAnimating
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2281:2281:boolean isLayoutFrozen() -> isLayoutFrozen
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2673:2683:void ensureBottomGlow() -> j
    2633:2643:void ensureLeftGlow() -> k
    2646:2656:void ensureRightGlow() -> l
    2659:2670:void ensureTopGlow() -> m
    733:733:java.lang.String exceptionLabel() -> n
    3902:3925:android.view.View findNextViewToFocus() -> o
    5078:5082:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5044:void offsetChildrenVertical(int) -> offsetChildrenVertical
    2960:2990:void onAttachedToWindow() -> onAttachedToWindow
    5057:5057:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5069:5069:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2994:3012:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4496:void onDraw(android.graphics.Canvas) -> onDraw
    3460:3505:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4407:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3597:void onMeasure(int,int) -> onMeasure
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1404:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1389:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5191:5191:void onScrollStateChanged(int) -> onScrollStateChanged
    5151:5151:void onScrolled(int,int) -> onScrolled
    3618:3623:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3281:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1906:1916:boolean hasUpdatedView() -> p
    968:1048:void initAdapterManager() -> q
    747:751:void initAutofill() -> r
    4334:4351:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1660:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1632:1634:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1286:1290:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3088:3092:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1721:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    2893:2897:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3276:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4416:void requestLayout() -> requestLayout
    845:965:void initChildrenHelper() -> s
    1801:1814:void scrollBy(int,int) -> scrollBy
    1795:1797:void scrollTo(int,int) -> scrollTo
    1741:1752:void scrollToPosition(int) -> scrollToPosition
    3733:3737:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1676:1681:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    1075:1083:void setClipToPadding(boolean) -> setClipToPadding
    2699:2702:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1063:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3645:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1526:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2272:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1354:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2290:2313:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11529:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1366:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1694:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4760:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1500:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1240:1241:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1551:void setScrollState(int) -> setScrollState
    1112:1126:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1511:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    2326:2327:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2339:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2357:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    1782:1791:void smoothScrollToPosition(int) -> smoothScrollToPosition
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    11548:11549:void stopNestedScroll() -> stopNestedScroll
    11553:11554:void stopNestedScroll(int) -> stopNestedScroll
    2493:2495:void stopScroll() -> stopScroll
    2214:2232:void suppressLayout(boolean) -> suppressLayout
    1144:1148:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    2686:2687:void invalidateGlows() -> t
    3671:3671:boolean isAccessibilityEnabled() -> u
    4419:4425:void markItemDecorInsetsDirty() -> v
    4702:4711:void markKnownViewsInvalid() -> w
    3648:3649:void onEnterLayoutOrScroll() -> x
    3652:3653:void onExitLayoutOrScroll() -> y
    3764:3768:void postAnimationRunner() -> z
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$a:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:403:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$b:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:595:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$c:
    598:598:void <init>() -> <init>
    601:602:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$d:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:621:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    641:642:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    614:616:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    626:638:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$e:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    848:848:int getChildCount() -> a
    856:861:void addView(android.view.View,int) -> a
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> a
    916:928:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    932:947:void detachViewFromParent(int) -> a
    865:865:int indexOfChild(android.view.View) -> b
    890:890:android.view.View getChildAt(int) -> b
    895:906:void removeAllViews() -> b
    870:886:void removeViewAt(int) -> c
    951:955:void onEnteredHiddenState(android.view.View) -> c
    959:963:void onLeftHiddenState(android.view.View) -> d
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$f:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    971:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> a
    1003:1005:void markViewHoldersUpdated(int,int,java.lang.Object) -> a
    1013:1028:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> a
    1037:1039:void offsetPositionsForAdd(int,int) -> a
    1009:1010:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> b
    1043:1046:void offsetPositionsForMove(int,int) -> b
    988:991:void offsetPositionsForRemovingInvisible(int,int) -> c
    1032:1033:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> c
    996:998:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> d
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable -> a
    boolean mHasStableIds -> b
    6984:6986:void <init>() -> <init>
    7099:7114:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7157:7157:long getItemId(int) -> getItemId
    7129:7129:int getItemViewType(int) -> getItemViewType
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7355:void notifyDataSetChanged() -> notifyDataSetChanged
    7370:7371:void notifyItemChanged(int) -> notifyItemChanged
    7398:7399:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7464:7465:void notifyItemInserted(int) -> notifyItemInserted
    7479:7480:void notifyItemMoved(int,int) -> notifyItemMoved
    7416:7417:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7447:7448:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7498:7499:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7532:7533:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7515:7516:void notifyItemRemoved(int) -> notifyItemRemoved
    7313:7313:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7065:7066:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7322:7322:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7233:7233:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7247:7247:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7259:7259:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7196:7196:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7287:7288:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7142:void setHasStableIds(boolean) -> setHasStableIds
    7301:7302:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$g:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> a
    12267:12270:void notifyItemRangeChanged(int,int,java.lang.Object) -> a
    12293:12296:void notifyItemMoved(int,int) -> a
    12252:12255:void notifyChanged() -> b
    12258:12259:void notifyItemRangeChanged(int,int) -> b
    12277:12280:void notifyItemRangeInserted(int,int) -> c
    12287:12290:void notifyItemRangeRemoved(int,int) -> d
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11721:11721:void <init>() -> <init>
    11724:11724:void onChanged() -> onChanged
    11728:11728:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11733:11734:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11738:11738:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11746:11746:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    11742:11742:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    long mChangeDuration -> f
    long mMoveDuration -> e
    long mRemoveDuration -> d
    long mAddDuration -> c
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mListener -> a
    java.util.ArrayList mFinishedListeners -> b
    12728:12791:void <init>() -> <init>
    12874:12875:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> a
    13113:13124:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    13302:13302:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13197:13201:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13238:13239:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    13340:13345:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12817:12817:long getAddDuration() -> getAddDuration
    12853:12853:long getChangeDuration() -> getChangeDuration
    12799:12799:long getMoveDuration() -> getMoveDuration
    12835:12835:long getRemoveDuration() -> getRemoveDuration
    13269:13277:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13212:13212:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13250:13250:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12826:12827:void setAddDuration(long) -> setAddDuration
    12862:12863:void setChangeDuration(long) -> setChangeDuration
    12808:12809:void setMoveDuration(long) -> setMoveDuration
    12844:12845:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$a:
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13425:13426:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13453:13458:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$h:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    12686:12687:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12703:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10705:10705:void <init>() -> <init>
    10757:10758:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10784:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10716:10717:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10725:10725:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10738:10739:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10747:10747:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback -> c
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback -> d
    boolean mPrefetchMaxObservedInInitialPrefetch -> n
    int mWidthMode -> o
    int mPrefetchMaxCountObserved -> m
    boolean mIsAttachedToWindow -> i
    boolean mAutoMeasure -> j
    androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller -> g
    boolean mMeasurementCacheEnabled -> k
    boolean mItemPrefetchEnabled -> l
    androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck -> e
    androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck -> f
    androidx.recyclerview.widget.ChildHelper mChildHelper -> a
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    boolean mRequestedSimpleAnimations -> h
    int mHeight -> r
    int mHeightMode -> p
    int mWidth -> q
    7582:7688:void <init>() -> <init>
    7757:7768:void setMeasureSpecs(int,int) -> a
    8113:8115:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> a
    8118:8120:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    8563:8614:void addViewInt(android.view.View,int,boolean) -> a
    8791:8792:void detachViewInternal(int,android.view.View) -> a
    9200:9216:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> a
    9228:9255:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> a
    9307:9307:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> a
    9340:9349:boolean isMeasurementUpToDate(int,int,int) -> a
    9834:9867:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> a
    9966:9979:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> a
    10312:10315:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> a
    10348:10349:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10428:10434:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> a
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> a
    10669:10677:boolean hasFlexibleChildInBothOrientations() -> a
    8518:8519:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8537:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8548:void addView(android.view.View) -> addView
    8559:8560:void addView(android.view.View,int) -> addView
    7860:7863:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    7897:7900:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8814:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8826:void attachView(android.view.View,int) -> attachView
    8836:8837:void attachView(android.view.View) -> attachView
    7784:7813:void setMeasuredDimensionFromChildren(int,int) -> b
    9293:9293:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> b
    10648:10652:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> b
    10665:10665:boolean shouldMeasureTwice() -> b
    7741:7754:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> c
    10306:10309:void stopSmoothScroller() -> c
    9707:9713:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8415:8415:boolean canScrollHorizontally() -> canScrollHorizontally
    8425:8425:boolean canScrollVertically() -> canScrollVertically
    8330:8330:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7876:7882:int chooseSize(int,int,int) -> chooseSize
    8082:8082:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8110:8110:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10153:10153:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10168:10168:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10183:10183:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10198:10198:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10213:10213:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10228:10228:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9192:9197:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8875:8877:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    8889:8891:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    8762:8766:void detachView(android.view.View) -> detachView
    8784:8785:void detachViewAt(int) -> detachViewAt
    8499:8502:void endAnimation(android.view.View) -> endAnimation
    8703:8713:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8743:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8662:8662:int getBaseline() -> getBaseline
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9403:9429:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10529:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9639:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9094:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8683:8683:int getItemViewType(android.view.View) -> getItemViewType
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9059:9059:int getPaddingEnd() -> getPaddingEnd
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9049:9049:int getPaddingStart() -> getPaddingStart
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10644:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10509:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10492:10492:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9605:9628:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    9079:9079:boolean hasFocus() -> hasFocus
    9157:9161:void ignoreView(android.view.View) -> ignoreView
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    7991:7991:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9069:9069:boolean isFocused() -> isFocused
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10545:10545:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9324:9324:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9944:9952:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9549:9552:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9585:9590:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9270:9284:void measureChild(android.view.View,int,int) -> measureChild
    9369:9386:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8859:void moveView(int,int) -> moveView
    9123:9126:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9138:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10031:10031:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10059:10059:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8185:8185:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8194:8194:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8221:8222:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9800:9800:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10397:10398:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10414:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10378:10393:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10453:10459:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9821:9821:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10083:10083:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10070:10070:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10138:10138:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10094:10094:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10107:10107:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10120:10121:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8285:8286:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8300:8300:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10256:10257:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10303:10303:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10297:10297:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10323:10323:void onScrollStateChanged(int) -> onScrollStateChanged
    10566:10592:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10619:10619:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8144:8147:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8649:8653:void removeAllViews() -> removeAllViews
    10338:10344:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8900:8902:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8914:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8167:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8846:8847:void removeDetachedView(android.view.View) -> removeDetachedView
    8625:8626:void removeView(android.view.View) -> removeView
    8637:8641:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9917:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7850:void requestLayout() -> requestLayout
    10472:10473:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8388:8388:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8438:8438:void scrollToPosition(int) -> scrollToPosition
    8405:8405:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    7918:7919:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    8040:8047:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    7836:7841:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10268:void setMeasuredDimension(int,int) -> setMeasuredDimension
    9336:9337:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    8451:8452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8465:8471:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    9178:9182:void stopIgnoringView(android.view.View) -> stopIgnoringView
    8017:8017:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$a:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> a
    7604:7604:int getParentEnd() -> a
    7616:7618:int getChildEnd(android.view.View) -> a
    7599:7599:int getParentStart() -> b
    7609:7611:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$b:
    androidx.recyclerview.widget.RecyclerView$LayoutManager this$0 -> a
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> a
    7640:7640:int getParentEnd() -> a
    7653:7655:int getChildEnd(android.view.View) -> a
    7635:7635:int getParentStart() -> b
    7646:7648:int getChildStart(android.view.View) -> b
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder -> a
    boolean mInsetsDirty -> c
    android.graphics.Rect mDecorInsets -> b
    boolean mPendingInvalidate -> d
    11625:11626:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11629:11630:void <init>(int,int) -> <init>
    11633:11634:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11637:11638:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11641:11642:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11713:11713:int getViewAdapterPosition() -> getViewAdapterPosition
    11701:11701:int getViewLayoutPosition() -> getViewLayoutPosition
    11691:11691:int getViewPosition() -> getViewPosition
    11683:11683:boolean isItemChanged() -> isItemChanged
    11672:11672:boolean isItemRemoved() -> isItemRemoved
    11661:11661:boolean isViewInvalid() -> isViewInvalid
    11651:11651:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    12663:12663:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10870:10870:void <init>() -> <init>
    10878:10878:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10891:10891:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    android.util.SparseArray mScrap -> a
    int mAttachCount -> b
    5635:5660:void <init>() -> <init>
    5753:5756:long runningAverage(long,long) -> a
    5766:5769:void factorInBindTime(int,long) -> a
    5777:5778:boolean willBindInTime(int,long,long) -> a
    5782:5783:void attach() -> a
    5803:5812:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    5815:5820:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> a
    5760:5763:void factorInCreateTime(int,long) -> b
    5772:5773:boolean willCreateInTime(int,long,long) -> b
    5786:5787:void detach() -> b
    5666:5670:void clear() -> clear
    5704:5713:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5691:5691:int getRecycledViewCount(int) -> getRecycledViewCount
    5740:5750:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5679:5685:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$a:
    long mBindRunningAverageNs -> d
    long mCreateRunningAverageNs -> c
    int mMaxScrap -> b
    java.util.ArrayList mScrapHeap -> a
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    androidx.recyclerview.widget.RecyclerView this$0 -> i
    java.util.List mUnmodifiableAttachedScrap -> d
    androidx.recyclerview.widget.RecyclerView$RecycledViewPool mRecyclerPool -> g
    int mViewCacheMax -> f
    int mRequestedCacheMax -> e
    java.util.ArrayList mCachedViews -> c
    androidx.recyclerview.widget.RecyclerView$ViewCacheExtension mViewCacheExtension -> h
    java.util.ArrayList mChangedScrap -> b
    java.util.ArrayList mAttachedScrap -> a
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6004:6019:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> a
    6142:6145:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> a
    6299:6318:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    6327:6345:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> a
    6524:6542:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> a
    6550:6555:void quickRecycleScrapView(android.view.View) -> a
    6621:6622:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> a
    6657:6707:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> a
    6712:6760:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> a
    6779:6781:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> a
    6813:6824:void offsetPositionRecordsForInsert(int,int) -> a
    6833:6852:void offsetPositionRecordsForRemove(int,int,boolean) -> a
    6855:6856:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> a
    6859:6866:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> a
    6911:6926:void clearOldPositions() -> a
    6118:6118:android.view.View getViewForPosition(int,boolean) -> b
    6567:6584:void scrapView(android.view.View) -> b
    6608:6608:android.view.View getScrapViewAt(int) -> b
    6612:6616:void clearScrap() -> b
    6765:6775:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    6785:6810:void offsetPositionRecordsForMove(int,int) -> b
    6038:6042:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    6321:6324:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    6415:6421:void recycleCachedViewAt(int) -> c
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> c
    6876:6892:void viewRangeUpdate(int,int) -> c
    5919:5921:void clear() -> clear
    6088:6090:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6429:6433:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    6604:6604:int getScrapCount() -> d
    6593:6601:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    6929:6937:void markItemDecorInsetsDirty() -> e
    5965:5974:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    6895:6908:void markKnownViewsInvalid() -> f
    6390:6398:void recycleAndClearCachedViews() -> g
    5951:5951:java.util.List getScrapList() -> getScrapList
    6114:6114:android.view.View getViewForPosition(int) -> getViewForPosition
    5934:5942:void updateViewCacheSize() -> h
    6360:6387:void recycleView(android.view.View) -> recycleView
    5929:5931:void setViewCacheSize(int) -> setViewCacheSize
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$i:
    androidx.recyclerview.widget.RecyclerView this$0 -> a
    5531:5532:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5578:5584:void triggerUpdateProcessor() -> a
    5536:5543:void onChanged() -> onChanged
    5547:5551:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5555:5559:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5571:5575:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5563:5567:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    android.os.Parcelable mLayoutState -> b
    12334:12334:void <clinit>() -> <clinit>
    12312:12315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12322:void <init>(android.os.Parcelable) -> <init>
    12331:12332:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> a
    12326:12328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$a:
    12334:12334:void <init>() -> <init>
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    10846:10846:void <init>() -> <init>
    10849:10849:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    10858:10858:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    10854:10854:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> b
    boolean mRunning -> e
    androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager -> c
    boolean mStarted -> h
    int mTargetPosition -> a
    boolean mPendingInitialRun -> d
    android.view.View mTargetView -> f
    androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action mRecyclingAction -> g
    11776:11778:void <init>() -> <init>
    11795:11807:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> a
    11907:11952:void onAnimation(int,int) -> a
    11835:11842:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11981:11982:void instantScrollToPosition(int) -> instantScrollToPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12002:void normalize(android.graphics.PointF) -> normalize
    11985:11991:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11821:void setTargetPosition(int) -> setTargetPosition
    11861:11875:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    android.view.animation.Interpolator mInterpolator -> e
    boolean mChanged -> f
    int mConsecutiveUpdates -> g
    int mJumpToPosition -> d
    int mDy -> b
    int mDuration -> c
    int mDx -> a
    12070:12071:void <init>(int,int) -> <init>
    12079:12080:void <init>(int,int,int) -> <init>
    12090:12095:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12117:12117:boolean hasJumpTarget() -> a
    12121:12142:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> a
    12145:12149:void validate() -> b
    12174:12174:int getDuration() -> getDuration
    12155:12155:int getDx() -> getDx
    12165:12165:int getDy() -> getDy
    12184:12184:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    12113:12114:void jumpTo(int) -> jumpTo
    12178:12180:void setDuration(int) -> setDuration
    12159:12161:void setDx(int) -> setDx
    12169:12171:void setDy(int) -> setDy
    12194:12196:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    12208:12213:void update(int,int,int,android.view.animation.Interpolator) -> update
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    int mFocusedSubChildId -> o
    int mFocusedItemPosition -> m
    boolean mTrackOldChangeHolders -> i
    boolean mIsMeasuring -> j
    boolean mRunSimpleAnimations -> k
    boolean mRunPredictiveAnimations -> l
    int mItemCount -> f
    int mDeletedInvisibleItemCountSincePreviousLayout -> d
    int mLayoutStep -> e
    int mPreviousLayoutItemCount -> c
    int mTargetPosition -> a
    android.util.SparseArray mData -> b
    boolean mStructureChanged -> g
    boolean mInPreLayout -> h
    long mFocusedItemId -> n
    int mRemainingScrollHorizontal -> p
    int mRemainingScrollVertical -> q
    12362:12433:void <init>() -> <init>
    12368:12371:void assertLayoutStep(int) -> a
    12459:12464:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> a
    12583:12583:boolean didStructureChange() -> didStructureChange
    12537:12540:java.lang.Object get(int) -> get
    12611:12611:int getItemCount() -> getItemCount
    12624:12624:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    12635:12635:int getRemainingScrollVertical() -> getRemainingScrollVertical
    12566:12566:int getTargetScrollPosition() -> getTargetScrollPosition
    12575:12575:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12481:12481:boolean isMeasuring() -> isMeasuring
    12490:12490:boolean isPreLayout() -> isPreLayout
    12552:12556:void put(int,java.lang.Object) -> put
    12521:12525:void remove(int) -> remove
    12640:12640:java.lang.String toString() -> toString
    12501:12501:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    12512:12512:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    6953:6953:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$j:
    androidx.recyclerview.widget.RecyclerView this$0 -> g
    boolean mEatRunOnAnimationRequest -> e
    android.view.animation.Interpolator mInterpolator -> d
    boolean mReSchedulePostAnimationCallback -> f
    int mLastFlingY -> b
    int mLastFlingX -> a
    android.widget.OverScroller mOverScroller -> c
    5246:5248:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5411:5413:void internalPostOnAnimation() -> a
    5416:5428:void fling(int,int) -> a
    5445:5474:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> a
    5477:5479:float distanceInfluenceForSnapDuration(float) -> a
    5483:5501:int computeScrollDuration(int,int,int,int) -> a
    5403:5408:void postOnAnimation() -> b
    5505:5507:void stop() -> c
    5252:5400:void run() -> run
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    java.util.List FULLUPDATE_PAYLOADS -> r
    boolean mInChangeScrap -> n
    int mWasImportantForAccessibilityBeforeHidden -> o
    int mIsRecyclableCount -> l
    int mFlags -> i
    int mPreLayoutPosition -> f
    long mItemId -> d
    androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView -> q
    int mItemViewType -> e
    int mPosition -> b
    androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer -> m
    int mOldPosition -> c
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder -> g
    java.util.List mPayloads -> j
    androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder -> h
    java.lang.ref.WeakReference mNestedRecyclerView -> a
    int mPendingAccessibilityState -> p
    java.util.List mUnmodifiedPayloads -> k
    11059:11059:void <clinit>() -> <clinit>
    11086:11088:void <init>(android.view.View) -> <init>
    11094:11097:void flagRemovedAndOffsetPosition(int,int,boolean) -> a
    11100:11113:void offsetPosition(int,boolean) -> a
    11116:11118:void clearOldPosition() -> a
    11255:11257:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> a
    11292:11293:void setFlags(int,int) -> a
    11296:11297:void addFlags(int) -> a
    11300:11306:void addChangePayload(java.lang.Object) -> a
    11356:11364:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> a
    11276:11276:boolean hasAnyOfTheFlags(int) -> b
    11316:11320:void clearPayload() -> b
    11370:11373:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> b
    11243:11244:void clearReturnedFromScrapFlag() -> c
    11247:11248:void clearTmpDetachFlag() -> d
    11309:11313:void createPayloadsIfNeeded() -> e
    11456:11456:boolean doesTransientStatePreventRecycling() -> f
    11323:11332:java.util.List getUnmodifiedPayloads() -> g
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11140:11140:int getPosition() -> getPosition
    11288:11288:boolean isAdapterPositionUnknown() -> h
    11284:11284:boolean isAttachedToTransitionOverlay() -> i
    11439:11439:boolean isRecyclable() -> isRecyclable
    11268:11268:boolean isBound() -> j
    11260:11260:boolean isInvalid() -> k
    11272:11272:boolean isRemoved() -> l
    11231:11231:boolean isScrap() -> m
    11280:11280:boolean isTmpDetached() -> n
    11460:11460:boolean isUpdated() -> o
    11264:11264:boolean needsUpdate() -> p
    11337:11349:void resetInternal() -> q
    11121:11124:void saveOldPosition() -> r
    11448:11448:boolean shouldBeKeptAsChild() -> s
    11414:11431:void setIsRecyclable(boolean) -> setIsRecyclable
    11127:11127:boolean shouldIgnore() -> t
    11377:11397:java.lang.String toString() -> toString
    11251:11252:void stopIgnoring() -> u
    11235:11236:void unScrap() -> v
    11239:11239:boolean wasReturnedFromScrap() -> w
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> d
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate mItemDelegate -> e
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    55:55:boolean shouldIgnore() -> b
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    java.util.Map mOriginalItemDelegates -> e
    androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mRecyclerViewDelegate -> d
    119:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> b
    128:132:void saveOriginalDelegate(android.view.View) -> c
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> f6:
    32:34:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> a
    63:65:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> a
    82:84:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> b
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    boolean mSupportsChangeAnimations -> g
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    50:50:boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    71:72:void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    android.widget.Scroller mGravityScroller -> b
    androidx.recyclerview.widget.RecyclerView mRecyclerView -> a
    androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener -> c
    34:42:void <init>() -> <init>
    123:125:void destroyCallbacks() -> a
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> a
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    112:113:void setupCallbacks() -> b
    182:197:void snapToTargetExistingView() -> c
    137:142:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    65:74:boolean onFling(int,int) -> onFling
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$a:
    boolean mScrolled -> a
    androidx.recyclerview.widget.SnapHelper this$0 -> b
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$b:
    androidx.recyclerview.widget.SnapHelper this$0 -> l
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    230:242:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.SortedList:
    java.lang.Object[] mOldData -> b
    java.lang.Object[] mData -> a
    java.lang.Class mTClass -> i
    androidx.recyclerview.widget.SortedList$BatchedCallback mBatchedCallback -> g
    int mSize -> h
    int mOldDataSize -> d
    int mNewDataStart -> e
    int mOldDataStart -> c
    androidx.recyclerview.widget.SortedList$Callback mCallback -> f
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    252:265:void addAllInternal(java.lang.Object[]) -> a
    334:338:void replaceAllInsert(java.lang.Object) -> a
    341:344:void replaceAllRemove() -> a
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> a
    408:465:void merge(java.lang.Object[],int) -> a
    542:563:int add(java.lang.Object,boolean) -> a
    602:608:void removeItemAtIndex(int,boolean) -> a
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> a
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> a
    793:794:void addToData(int,java.lang.Object) -> a
    143:144:int add(java.lang.Object) -> add
    162:172:void addAll(java.lang.Object[],boolean) -> addAll
    182:183:void addAll(java.lang.Object[]) -> addAll
    193:195:void addAll(java.util.Collection) -> addAll
    479:480:void throwIfInMutationOperation() -> b
    593:598:boolean remove(java.lang.Object,boolean) -> b
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> b
    518:526:void beginBatchedUpdates() -> beginBatchedUpdates
    268:324:void replaceAllInternal(java.lang.Object[]) -> c
    822:830:void clear() -> clear
    353:391:int sortAndDedup(java.lang.Object[]) -> d
    532:539:void endBatchedUpdates() -> endBatchedUpdates
    705:706:java.lang.Object get(int) -> get
    728:739:int indexOf(java.lang.Object) -> indexOf
    685:693:void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    574:575:boolean remove(java.lang.Object) -> remove
    586:589:java.lang.Object removeItemAt(int) -> removeItemAt
    217:224:void replaceAll(java.lang.Object[],boolean) -> replaceAll
    235:236:void replaceAll(java.lang.Object[]) -> replaceAll
    247:249:void replaceAll(java.util.Collection) -> replaceAll
    114:114:int size() -> size
    631:655:void updateItemAt(int,java.lang.Object) -> updateItemAt
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.SortedList$BatchedCallback:
    androidx.recyclerview.widget.SortedList$Callback mWrappedCallback -> a
    androidx.recyclerview.widget.BatchingListUpdateCallback mBatchingListUpdateCallback -> b
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    1007:1008:void dispatchLastEvent() -> dispatchLastEvent
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    978:979:void onChanged(int,int) -> onChanged
    983:984:void onChanged(int,int,java.lang.Object) -> onChanged
    963:964:void onInserted(int,int) -> onInserted
    973:974:void onMoved(int,int) -> onMoved
    968:969:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.SortedList$Callback:
    840:840:void <init>() -> <init>
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    866:867:void onChanged(int,int,java.lang.Object) -> onChanged
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.SortedListAdapterCallback:
    androidx.recyclerview.widget.RecyclerView$Adapter mAdapter -> a
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    54:55:void onChanged(int,int) -> onChanged
    59:60:void onChanged(int,int,java.lang.Object) -> onChanged
    39:40:void onInserted(int,int) -> onInserted
    49:50:void onMoved(int,int) -> onMoved
    44:45:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    boolean mLaidOutInvalidFullSpan -> M
    boolean mSmoothScrollbarEnabled -> N
    androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState -> I
    int mFullSizeSpec -> J
    androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation -> u
    int mGapStrategy -> F
    androidx.recyclerview.widget.LayoutState mLayoutState -> y
    int mPendingScrollPositionOffset -> D
    androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup -> E
    int mPendingScrollPosition -> C
    androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation -> v
    android.graphics.Rect mTmpRect -> K
    boolean mReverseLayout -> z
    int mSizePerSpan -> x
    int mOrientation -> w
    int[] mPrefetchDistances -> O
    boolean mLastLayoutFromEnd -> G
    boolean mLastLayoutRTL -> H
    androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo -> L
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans -> t
    boolean mShouldReverseLayout -> A
    int mSpanCount -> s
    java.util.BitSet mRemainingSpans -> B
    java.lang.Runnable mCheckForGapsRunnable -> P
    229:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    245:250:void <init>(int,int) -> <init>
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> a
    1092:1095:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> a
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> a
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> a
    1387:1406:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> a
    1411:1420:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> a
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> a
    1750:1763:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> a
    1766:1767:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> a
    1806:1809:void appendViewToAllSpans(android.view.View) -> a
    1828:1840:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> a
    1936:1964:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> a
    1980:2016:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> a
    2160:2172:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> a
    2175:2176:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> a
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    849:850:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> b
    1072:1075:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> b
    1357:1377:android.view.View findFirstVisibleItemClosestToStart(boolean) -> b
    1430:1439:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> b
    1448:1476:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> b
    1531:1571:void handleUpdate(int,int,int) -> b
    1813:1816:void prependViewToAllSpans(android.view.View) -> b
    1907:1933:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> b
    2043:2047:int calculateScrollDirectionForPosition(int) -> b
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> c
    822:826:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> c
    1112:1115:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> c
    1209:1214:int updateSpecWithExtra(int,int,int) -> c
    1819:1825:void updateAllRemainingSpans(int,int) -> c
    2392:2399:int convertFocusDirectionToLayoutDirection(int) -> c
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    2123:2126:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    2052:2064:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1732:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> d
    1865:1871:boolean areAllEndsEqual() -> d
    1741:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> e
    1875:1881:boolean areAllStartsEqual() -> e
    270:271:boolean checkForGaps() -> f
    2218:2226:int findFirstReferenceChildPosition(int) -> f
    990:993:int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    958:961:int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    1054:1057:int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    1022:1025:int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    258:261:void createOrientationHelpers() -> g
    2235:2242:int findLastReferenceChildPosition(int) -> g
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    500:500:int getGapStrategy() -> getGapStrategy
    2277:2277:int getOrientation() -> getOrientation
    580:580:boolean getReverseLayout() -> getReverseLayout
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    539:539:int getSpanCount() -> getSpanCount
    1327:1329:int findFirstVisibleItemPositionInt() -> h
    1885:1892:int getMaxEnd(int) -> h
    1843:1850:int getMaxStart(int) -> i
    2208:2209:int getFirstChildPosition() -> i
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1896:1903:int getMinEnd(int) -> j
    2203:2204:int getLastChildPosition() -> j
    339:399:android.view.View hasGapsToFix() -> k
    1854:1861:int getMinStart(int) -> k
    734:780:void repositionToWrapContentIfNecessary() -> l
    1970:1973:boolean preferLastSpan(int) -> l
    560:565:void resolveShouldLayoutReverse() -> m
    1479:1482:void setLayoutStateDirection(int) -> m
    927:931:void updateMeasureSpecs(int) -> n
    1486:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2378:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1319:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1298:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1508:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1514:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1519:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1503:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1525:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2083:void scrollToPosition(int) -> scrollToPosition
    2099:2105:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    513:524:void setGapStrategy(int) -> setGapStrategy
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2070:2073:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$a:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> a
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$b:
    int[] mSpanReferenceLines -> f
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> g
    boolean mValid -> e
    int mOffset -> b
    boolean mLayoutFromEnd -> c
    int mPosition -> a
    boolean mInvalidateOffsets -> d
    3267:3269:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3283:3291:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> a
    3294:3296:void assignCoordinateFromPadding() -> a
    3299:3304:void assignCoordinateFromPadding(int) -> a
    3272:3280:void reset() -> b
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan -> e
    boolean mFullSpan -> f
    2450:2451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2455:void <init>(int,int) -> <init>
    2458:2459:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2463:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2466:2467:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2498:2501:int getSpanIndex() -> getSpanIndex
    2488:2488:boolean isFullSpan() -> isFullSpan
    2478:2479:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c:
    java.util.List mFullSpanItems -> b
    int[] mData -> a
    2838:2838:void <init>() -> <init>
    2890:2892:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> a
    2903:2912:void ensureSize(int) -> a
    2915:2919:void clear() -> a
    2952:2953:void offsetForAddition(int,int) -> a
    3007:3027:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> a
    3051:3066:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> a
    2849:2857:int forceInvalidateAfter(int) -> b
    2922:2923:void offsetForRemoval(int,int) -> b
    2964:2974:void offsetFullSpansForAddition(int,int) -> c
    3030:3039:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> c
    2882:2883:int getSpan(int) -> d
    2934:2949:void offsetFullSpansForRemoval(int,int) -> d
    2864:2877:int invalidateAfter(int) -> e
    2981:3003:int invalidateFullSpansAfter(int) -> f
    2895:2899:int sizeForPosition(int) -> g
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c$a:
    int[] mGapPerSpan -> c
    int mGapDir -> b
    int mPosition -> a
    boolean mHasUnwantedGapAfter -> d
    3129:3129:void <clinit>() -> <clinit>
    3083:3092:void <init>(android.os.Parcel) -> <init>
    3094:3095:void <init>() -> <init>
    3098:3098:int getGapForSpan(int) -> a
    3103:3103:int describeContents() -> describeContents
    3121:3121:java.lang.String toString() -> toString
    3108:3117:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$c$a$a:
    3130:3130:void <init>() -> <init>
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    int[] mSpanLookup -> f
    boolean mAnchorLayoutFromEnd -> i
    boolean mLastLayoutRTL -> j
    int[] mSpanOffsets -> d
    int mSpanLookupSize -> e
    java.util.List mFullSpanItems -> g
    boolean mReverseLayout -> h
    int mVisibleAnchorPosition -> b
    int mSpanOffsetsSize -> c
    int mAnchorPosition -> a
    3239:3239:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3186:void <init>(android.os.Parcel) -> <init>
    3188:3199:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3210:3214:void invalidateAnchorPositionInfo() -> a
    3202:3207:void invalidateSpanInfo() -> b
    3218:3218:int describeContents() -> describeContents
    3223:3237:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$a:
    3240:3240:void <init>() -> <init>
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$d:
    androidx.recyclerview.widget.StaggeredGridLayoutManager this$0 -> f
    int mDeletedSize -> d
    int mIndex -> e
    int mCachedStart -> b
    int mCachedEnd -> c
    java.util.ArrayList mViews -> a
    2515:2517:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2553:2561:int getEndLine(int) -> a
    2565:2575:void calculateCachedEnd() -> a
    2600:2610:void appendToSpan(android.view.View) -> a
    2615:2632:void cacheReferenceLineAndClear(boolean,int) -> a
    2756:2783:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> a
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> a
    2801:2830:android.view.View getFocusableViewAfter(int,int) -> a
    2520:2527:int getStartLine(int) -> b
    2531:2541:void calculateCachedStart() -> b
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> b
    2787:2787:int findOneVisibleChild(int,int,boolean) -> b
    2587:2597:void prependToSpan(android.view.View) -> c
    2635:2638:void clear() -> c
    2685:2691:void onOffset(int) -> c
    2646:2647:void setLine(int) -> d
    2706:2706:int findFirstCompletelyVisibleItemPosition() -> d
    2700:2700:int findFirstPartiallyVisibleItemPosition() -> e
    2694:2694:int findFirstVisibleItemPosition() -> f
    2724:2724:int findLastCompletelyVisibleItemPosition() -> g
    2718:2718:int findLastPartiallyVisibleItemPosition() -> h
    2712:2712:int findLastVisibleItemPosition() -> i
    2677:2677:int getDeletedSize() -> j
    2579:2583:int getEndLine() -> k
    2545:2549:int getStartLine() -> l
    2641:2643:void invalidateCache() -> m
    2650:2661:void popEnd() -> n
    2664:2674:void popStart() -> o
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.TileList:
    androidx.recyclerview.widget.TileList$Tile mLastAccessedTile -> c
    android.util.SparseArray mTiles -> b
    int mTileSize -> a
    35:37:void <init>(int) -> <init>
    56:57:void clear() -> a
    60:60:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> a
    64:74:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> a
    40:48:java.lang.Object getItemAt(int) -> b
    52:52:int size() -> b
    78:83:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> c
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.TileList$Tile:
    androidx.recyclerview.widget.TileList$Tile mNext -> a
    92:96:void <init>(java.lang.Class,int) -> <init>
    99:99:boolean containsPosition(int) -> a
    103:103:java.lang.Object getByPosition(int) -> b
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback -> a
    androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags -> b
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> a
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> a
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$a:
    int mChildStart -> d
    int mChildEnd -> e
    int mRvStart -> b
    int mRvEnd -> c
    int mBoundFlags -> a
    136:137:void <init>() -> <init>
    141:145:void setBounds(int,int,int,int) -> a
    148:149:void addFlags(int) -> a
    156:162:int compare(int,int) -> a
    166:189:boolean boundsMatch() -> a
    152:153:void resetFlags() -> b
androidx.recyclerview.widget.ViewBoundsCheck$Callback -> androidx.recyclerview.widget.ViewBoundsCheck$b:
    android.view.View getChildAt(int) -> a
    int getChildEnd(android.view.View) -> a
    int getParentEnd() -> a
    int getChildStart(android.view.View) -> b
    int getParentStart() -> b
androidx.recyclerview.widget.ViewInfoStore -> g6:
    androidx.collection.SimpleArrayMap mLayoutHolderMap -> a
    androidx.collection.LongSparseArray mOldChangedHolders -> b
    36:47:void <init>() -> <init>
    54:56:void clear() -> a
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> a
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> a
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> a
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> a
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> a
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> b
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> b
    273:274:void onDetach() -> b
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> c
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> c
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> d
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> e
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> f
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> g
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> h
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> g6$a:
    androidx.core.util.Pools$Pool sPool -> d
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo preInfo -> b
    androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo postInfo -> c
    int flags -> a
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> a
    326:327:void drainCache() -> a
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> b
androidx.recyclerview.widget.ViewInfoStore$ProcessCallback -> g6$b:
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    71:74:void reflectiveNew(java.lang.String) -> a
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$a:
    java.util.Set mClasses -> a
    99:101:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:113:void add(java.lang.String) -> a
    106:108:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    android.os.Bundle mRestoredState -> b
    androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider -> d
    boolean mAllowingSavingState -> e
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    52:53:void <init>() -> <init>
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> a
    220:230:void performSave(android.os.Bundle) -> a
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    134:134:boolean isRestored() -> isRestored
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:168:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
    123:124:void unregisterSavedStateProvider(java.lang.String) -> unregisterSavedStateProvider
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:58:void performRestore(android.os.Bundle) -> performRestore
    74:75:void performSave(android.os.Bundle) -> performSave
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
    android.graphics.drawable.Drawable mShadowDrawableLeft -> c
    android.graphics.drawable.Drawable mShadowDrawableRight -> d
    int mParallaxBy -> l
    float mParallaxOffset -> i
    float mSlideOffset -> h
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mOverhangSize -> e
    int mCoveredFadeColor -> b
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    int mSliderFadeColor -> a
    androidx.customview.widget.ViewDragHelper mDragHelper -> p
    boolean mCanSlide -> f
    java.util.ArrayList mPostedRunnables -> t
    androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.graphics.Rect mTmpRect -> s
    android.view.View mSlideableView -> g
    float mInitialMotionY -> n
    float mInitialMotionX -> m
    241:242:void <init>(android.content.Context) -> <init>
    245:246:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:261:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    338:342:void dispatchOnPanelClosed(android.view.View) -> a
    853:855:boolean closePane(android.view.View,int) -> a
    962:984:void dimChildView(android.view.View,float,int) -> a
    1209:1230:void parallaxOtherViews(float) -> a
    1617:1617:boolean isLayoutRtlSupport() -> a
    331:335:void dispatchOnPanelOpened(android.view.View) -> b
    391:397:void setAllChildrenVisible() -> b
    934:959:void onPanelDragged(int) -> b
    1069:1092:boolean smoothSlideTo(float,int) -> b
    325:328:void dispatchOnPanelSlide(android.view.View) -> c
    861:863:boolean openPane(android.view.View,int) -> c
    1244:1263:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    920:920:boolean canSlide() -> canSlide
    1288:1288:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    901:901:boolean closePane() -> closePane
    1097:1105:void computeScroll() -> computeScroll
    1015:1017:void invalidateChildRegion(android.view.View) -> d
    1175:1187:void draw(android.graphics.Canvas) -> draw
    988:1007:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1267:1271:boolean isDimmed(android.view.View) -> e
    345:388:void updateObscuredViewsVisibility(android.view.View) -> f
    400:408:boolean viewIsOpaque(android.view.View) -> g
    1276:1276:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1281:1281:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1293:1293:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    317:317:int getCoveredFadeColor() -> getCoveredFadeColor
    282:282:int getParallaxDistance() -> getParallaxDistance
    299:299:int getSliderFadeColor() -> getSliderFadeColor
    911:911:boolean isOpen() -> isOpen
    930:930:boolean isSlideable() -> isSlideable
    420:422:void onAttachedToWindow() -> onAttachedToWindow
    426:434:void onDetachedFromWindow() -> onDetachedFromWindow
    754:768:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    650:733:void onLayout(boolean,int,int,int,int) -> onLayout
    438:646:void onMeasure(int,int) -> onMeasure
    1308:1322:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1298:1303:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    737:742:void onSizeChanged(int,int,int,int) -> onSizeChanged
    814:849:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    883:883:boolean openPane() -> openPane
    746:750:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    309:310:void setCoveredFadeColor(int) -> setCoveredFadeColor
    321:322:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    271:273:void setParallaxDistance(int) -> setParallaxDistance
    1116:1117:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1126:1127:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1136:1137:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1150:1151:void setShadowResource(int) -> setShadowResource
    1160:1161:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1170:1171:void setShadowResourceRight(int) -> setShadowResourceRight
    291:292:void setSliderFadeColor(int) -> setSliderFadeColor
    891:892:void smoothSlideClosed() -> smoothSlideClosed
    873:874:void smoothSlideOpen() -> smoothSlideOpen
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$a:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> e
    android.graphics.Rect mTmpRect -> d
    1513:1514:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1572:1596:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> a
    1562:1562:boolean filter(android.view.View) -> b
    1547:1550:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1518:1543:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1555:1558:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable -> androidx.slidingpanelayout.widget.SlidingPaneLayout$b:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> b
    android.view.View mChildView -> a
    1602:1604:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout,android.view.View) -> <init>
    1608:1613:void run() -> run
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$c:
    androidx.slidingpanelayout.widget.SlidingPaneLayout this$0 -> a
    1326:1327:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1393:1406:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1413:1413:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1388:1388:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1418:1419:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1355:1356:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1340:1350:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1360:1362:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1366:1384:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1331:1335:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> d
    android.graphics.Paint dimPaint -> c
    boolean slideable -> a
    boolean dimWhenOffset -> b
    1423:1423:void <clinit>() -> <clinit>
    1447:1448:void <init>() -> <init>
    1451:1452:void <init>(int,int) -> <init>
    1455:1456:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1459:1460:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1463:1465:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams) -> <init>
    1468:1473:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$d:
    boolean isOpen -> b
    1495:1495:void <clinit>() -> <clinit>
    1481:1482:void <init>(android.os.Parcelable) -> <init>
    1485:1487:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1491:1493:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$d$a:
    1495:1495:void <init>() -> <init>
    1498:1498:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1503:1503:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object[] newArray(int) -> newArray
    1508:1508:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener:
    228:228:void <init>() -> <init>
    237:237:void onPanelClosed(android.view.View) -> onPanelClosed
    234:234:void onPanelOpened(android.view.View) -> onPanelOpened
    231:231:void onPanelSlide(android.view.View,float) -> onPanelSlide
androidx.swiperefreshlayout.widget.CircleImageView -> h6:
    android.view.animation.Animation$AnimationListener mListener -> a
    int mShadowRadius -> b
    53:76:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> a
    92:93:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> a
    105:109:void onAnimationEnd() -> onAnimationEnd
    97:101:void onAnimationStart() -> onAnimationStart
    84:89:void onMeasure(int,int) -> onMeasure
    122:125:void setBackgroundColor(int) -> setBackgroundColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring mRing -> a
    int[] COLORS -> i
    android.animation.Animator mAnimator -> d
    float mRotationCount -> e
    boolean mFinishing -> f
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> g
    float mRotation -> b
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> h
    android.content.res.Resources mResources -> c
    67:97:void <clinit>() -> <clinit>
    138:146:void <init>(android.content.Context) -> <init>
    151:159:void setSizeParameters(float,float,float,float) -> a
    424:425:void setRotation(float) -> a
    476:486:int evaluateColorChange(float,int,int) -> a
    516:527:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> a
    534:563:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> a
    566:616:void setupAnimators() -> a
    499:506:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> b
    399:404:void draw(android.graphics.Canvas) -> draw
    414:414:int getAlpha() -> getAlpha
    271:271:boolean getArrowEnabled() -> getArrowEnabled
    251:251:float getArrowHeight() -> getArrowHeight
    290:290:float getArrowScale() -> getArrowScale
    242:242:float getArrowWidth() -> getArrowWidth
    360:360:int getBackgroundColor() -> getBackgroundColor
    202:202:float getCenterRadius() -> getCenterRadius
    382:382:int[] getColorSchemeColors() -> getColorSchemeColors
    318:318:float getEndTrim() -> getEndTrim
    433:433:int getOpacity() -> getOpacity
    341:341:float getProgressRotation() -> getProgressRotation
    309:309:float getStartTrim() -> getStartTrim
    233:233:android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    183:183:float getStrokeWidth() -> getStrokeWidth
    438:438:boolean isRunning() -> isRunning
    408:410:void setAlpha(int) -> setAlpha
    261:263:void setArrowDimensions(float,float) -> setArrowDimensions
    280:282:void setArrowEnabled(boolean) -> setArrowEnabled
    299:301:void setArrowScale(float) -> setArrowScale
    371:373:void setBackgroundColor(int) -> setBackgroundColor
    212:214:void setCenterRadius(float) -> setCenterRadius
    419:421:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:395:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:352:void setProgressRotation(float) -> setProgressRotation
    330:333:void setStartEndTrim(float,float) -> setStartEndTrim
    222:224:void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    192:194:void setStrokeWidth(float) -> setStrokeWidth
    168:175:void setStyle(int) -> setStyle
    446:459:void start() -> start
    466:472:void stop() -> stop
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$a:
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring -> a
    androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0 -> b
    568:568:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    571:575:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$b:
    androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring val$ring -> a
    androidx.swiperefreshlayout.widget.CircularProgressDrawable this$0 -> b
    580:580:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    595:595:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    599:613:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:585:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$c:
    float mStartingEndTrim -> l
    float mStartingStartTrim -> k
    boolean mShowArrow -> n
    android.graphics.RectF mTempBounds -> a
    float mStrokeWidth -> h
    int mColorIndex -> j
    float mRotation -> g
    float mEndTrim -> f
    float mStartTrim -> e
    android.graphics.Path mArrow -> o
    int[] mColors -> i
    android.graphics.Paint mCirclePaint -> d
    android.graphics.Paint mArrowPaint -> c
    android.graphics.Paint mPaint -> b
    int mAlpha -> t
    float mRingCenterRadius -> q
    int mCurrentColor -> u
    float mArrowScale -> p
    int mArrowWidth -> r
    int mArrowHeight -> s
    float mStartingRotation -> m
    650:659:void <init>() -> <init>
    668:670:void setArrowDimensions(float,float) -> a
    673:674:void setStrokeCap(android.graphics.Paint$Cap) -> a
    692:721:void draw(android.graphics.Canvas,android.graphics.Rect) -> a
    724:753:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> a
    761:764:void setColors(int[]) -> a
    821:822:void setColorFilter(android.graphics.ColorFilter) -> a
    828:829:void setAlpha(int) -> a
    835:835:int getAlpha() -> a
    901:904:void setShowArrow(boolean) -> a
    914:917:void setArrowScale(float) -> a
    685:685:float getArrowHeight() -> b
    785:786:void setBackgroundColor(int) -> b
    890:891:void setCenterRadius(float) -> b
    778:779:void setColor(int) -> c
    871:872:void setEndTrim(float) -> c
    920:920:float getArrowScale() -> c
    681:681:float getArrowWidth() -> d
    797:799:void setColorIndex(int) -> d
    879:880:void setRotation(float) -> d
    789:789:int getBackgroundColor() -> e
    851:852:void setStartTrim(float) -> e
    842:844:void setStrokeWidth(float) -> f
    894:894:float getCenterRadius() -> f
    767:767:int[] getColors() -> g
    875:875:float getEndTrim() -> h
    805:805:int getNextColor() -> i
    809:809:int getNextColorIndex() -> j
    883:883:float getRotation() -> k
    907:907:boolean getShowArrow() -> l
    855:855:float getStartTrim() -> m
    867:867:int getStartingColor() -> n
    863:863:float getStartingEndTrim() -> o
    927:927:float getStartingRotation() -> p
    859:859:float getStartingStartTrim() -> q
    677:677:android.graphics.Paint$Cap getStrokeCap() -> r
    847:847:float getStrokeWidth() -> s
    817:818:void goToNextColor() -> t
    944:950:void resetOriginals() -> u
    935:938:void storeOriginals() -> v
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    int mMediumAnimationDuration -> l
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener -> b
    android.view.animation.Animation mScaleDownAnimation -> B
    java.lang.String LOG_TAG -> M
    boolean mNestedScrollInProgress -> k
    float mTotalDragDistance -> e
    androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> g
    android.view.animation.Animation mAlphaMaxAnimation -> D
    int mCircleDiameter -> G
    int mTouchSlop -> d
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> t
    boolean mReturningToStart -> s
    androidx.swiperefreshlayout.widget.CircleImageView mCircleView -> u
    android.view.animation.Animation mAnimateToStartPosition -> L
    android.view.animation.Animation$AnimationListener mRefreshListener -> J
    float mStartingScale -> w
    int mCustomSlingshotDistance -> y
    android.view.View mTarget -> a
    int[] mParentOffsetInWindow -> j
    float mInitialDownY -> o
    int mActivePointerId -> q
    android.view.animation.Animation mScaleDownToStartAnimation -> E
    int mCurrentTargetOffsetTop -> m
    boolean mIsBeingDragged -> p
    android.view.animation.Animation mScaleAnimation -> A
    float mTotalUnconsumed -> f
    android.view.animation.Animation mAlphaStartAnimation -> C
    androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> h
    boolean mScale -> r
    android.view.animation.Animation mAnimateToCorrectPosition -> K
    int[] mParentScrollConsumed -> i
    int mSpinnerOffsetEnd -> x
    int[] LAYOUT_ATTRS -> N
    int mCircleViewIndex -> v
    boolean mNotify -> F
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback -> I
    androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress -> z
    boolean mUsingCustomStart -> H
    boolean mRefreshing -> c
    float mInitialMotionY -> n
    84:140:void <clinit>() -> <clinit>
    340:341:void <init>(android.content.Context) -> <init>
    350:379:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    398:404:void createProgressView() -> a
    465:475:void setRefreshing(boolean,boolean) -> a
    478:488:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> a
    499:511:android.view.animation.Animation startAlphaAnimation(int,int) -> a
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> a
    968:998:void finishSpinner(float) -> a
    1089:1098:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> a
    1175:1183:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    439:453:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> b
    587:596:void ensureTarget() -> b
    916:965:void moveSpinner(float) -> b
    1101:1115:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> b
    206:217:void reset() -> c
    1135:1139:void moveToStart(float) -> c
    1150:1166:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> c
    672:678:boolean canChildScrollUp() -> canChildScrollUp
    495:496:void startProgressAlphaMaxAnimation() -> d
    1080:1086:void startDragging(float) -> d
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    491:492:void startProgressAlphaStartAnimation() -> e
    383:393:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    581:581:boolean isRefreshing() -> isRefreshing
    229:231:void onDetachedFromWindow() -> onDetachedFromWindow
    692:704:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:630:void onLayout(boolean,int,int,int,int) -> onLayout
    634:655:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:809:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:847:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:777:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:828:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1012:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:759:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    460:462:void setAnimationProgress(float) -> setAnimationProgress
    545:546:void setColorScheme(int[]) -> setColorScheme
    572:574:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:562:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:236:void setColorViewAlpha(int) -> setColorViewAlpha
    604:605:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:225:void setEnabled(boolean) -> setEnabled
    853:854:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:688:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:412:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:520:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:538:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:529:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    296:299:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    258:264:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    421:436:void setRefreshing(boolean) -> setRefreshing
    317:332:void setSize(int) -> setSize
    310:311:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1172:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    868:869:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$a:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    178:178:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    189:202:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    185:185:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    181:181:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$b:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    441:441:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    444:445:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$c:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    478:478:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    481:482:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$d:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> c
    int val$endingAlpha -> b
    int val$startingAlpha -> a
    499:499:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    502:504:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$e:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    976:976:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    984:987:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    980:980:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$f:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    1117:1117:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1120:1131:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$g:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    1141:1141:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1144:1145:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$h:
    androidx.swiperefreshlayout.widget.SwipeRefreshLayout this$0 -> a
    1152:1152:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1155:1158:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.vectordrawable.graphics.drawable.AndroidResources -> i6:
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET -> f
    int[] STYLEABLE_ANIMATOR -> g
    int[] STYLEABLE_ANIMATOR_SET -> h
    int[] STYLEABLE_PROPERTY_VALUES_HOLDER -> i
    int[] STYLEABLE_VECTOR_DRAWABLE_GROUP -> b
    int[] STYLEABLE_VECTOR_DRAWABLE_PATH -> c
    int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH -> d
    int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE -> e
    int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY -> a
    int[] STYLEABLE_KEYFRAME -> j
    int[] STYLEABLE_PROPERTY_ANIMATOR -> k
    int[] STYLEABLE_PATH_INTERPOLATOR -> l
    22:134:void <clinit>() -> <clinit>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    android.graphics.drawable.Animatable2$AnimationCallback mPlatformCallback -> a
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> a
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$a:
    androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback this$0 -> a
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    android.graphics.drawable.Drawable$Callback mCallback -> g
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState -> b
    android.content.Context mContext -> c
    android.animation.ArgbEvaluator mArgbEvaluator -> d
    java.util.ArrayList mAnimationCallbacks -> f
    android.animation.Animator$AnimatorListener mAnimatorListener -> e
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    177:185:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> a
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> a
    827:831:void removeAnimatorSetListener() -> a
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> b
    532:536:boolean canApplyTheme() -> canApplyTheme
    856:867:void clearAnimationCallbacks() -> clearAnimationCallbacks
    920:929:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    143:143:void clearColorFilter() -> clearColorFilter
    212:241:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    877:878:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:843:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    899:900:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$a:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> a
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$b:
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0 -> a
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$c:
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable -> b
    android.animation.AnimatorSet mAnimatorSet -> c
    androidx.collection.ArrayMap mTargetNameMap -> e
    java.util.ArrayList mAnimators -> d
    int mChangingConfigurations -> a
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    648:652:void setupAnimatorSet() -> a
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$d:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:150:void <init>() -> <init>
    67:68:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:922:void <init>() -> <init>
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> a
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> a
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> a
    436:447:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> a
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> a
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> a
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> a
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> a
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> a
    779:779:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> a
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> a
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> a
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> a
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> a
    917:917:boolean isColorType(int) -> a
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$a:
    androidx.core.graphics.PathParser$PathDataNode[] mNodeArray -> a
    166:167:void <init>() -> <init>
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> a
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance -> a
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    float[] mX -> a
    float[] mY -> b
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    123:127:void initQuad(float,float) -> a
    130:134:void initCubic(float,float,float,float) -> a
    137:143:void initPath(android.graphics.Path) -> a
    195:223:float getInterpolation(float) -> getInterpolation
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> j6:
    android.graphics.drawable.Drawable mDelegateDrawable -> a
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    android.graphics.PorterDuffColorFilter mTintFilter -> c
    android.graphics.ColorFilter mColorFilter -> d
    android.graphics.Matrix mTmpMatrix -> h
    float[] mTmpFloats -> g
    android.graphics.Rect mTmpBounds -> i
    boolean mMutated -> e
    boolean mAllowCaching -> f
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState -> b
    280:280:void <clinit>() -> <clinit>
    321:323:void <init>() -> <init>
    325:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    345:345:java.lang.Object getTargetByName(java.lang.String) -> a
    477:478:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> a
    687:690:int applyAlpha(int,float) -> a
    734:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> a
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
    902:903:void setAllowCaching(boolean) -> a
    907:908:boolean needMirroring() -> a
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:670:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:369:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    618:623:float getPixelSize() -> getPixelSize
    277:277:int[] getState() -> getState
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:532:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$a:
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$b:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1810:1810:boolean isClipPath() -> b
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$c:
    float mTrimPathEnd -> l
    float mTrimPathStart -> k
    float mFillAlpha -> j
    float mStrokeAlpha -> i
    android.graphics.Paint$Cap mStrokeLineCap -> n
    android.graphics.Paint$Join mStrokeLineJoin -> o
    float mStrokeWidth -> g
    int[] mThemeAttrs -> e
    androidx.core.content.res.ComplexColorCompat mFillColor -> h
    float mStrokeMiterlimit -> p
    androidx.core.content.res.ComplexColorCompat mStrokeColor -> f
    float mTrimPathOffset -> m
    1835:1837:void <init>() -> <init>
    1840:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1859:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> a
    1872:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> a
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> a
    1960:1960:boolean isStateful() -> a
    1965:1967:boolean onStateChanged(int[]) -> a
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$d:
    android.graphics.Matrix mLocalMatrix -> j
    float mTranslateY -> i
    float mTranslateX -> h
    float mScaleY -> g
    int mChangingConfigurations -> k
    float mScaleX -> f
    java.lang.String mGroupName -> m
    float mPivotY -> e
    float mPivotX -> d
    float mRotate -> c
    java.util.ArrayList mChildren -> b
    android.graphics.Matrix mStackedMatrix -> a
    int[] mThemeAttrs -> l
    1466:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1507:void <init>() -> <init>
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> a
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> a
    1664:1669:boolean isStateful() -> a
    1674:1678:boolean onStateChanged(int[]) -> a
    1563:1568:void updateLocalMatrix() -> b
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$e:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> a
    1438:1438:boolean onStateChanged(int[]) -> a
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$f:
    int mChangingConfigurations -> d
    androidx.core.graphics.PathParser$PathDataNode[] mNodes -> a
    java.lang.String mPathName -> b
    int mFillRule -> c
    1693:1695:void <init>() -> <init>
    1719:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1726:1730:void toPath(android.graphics.Path) -> a
    1744:1744:boolean isClipPath() -> b
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$g:
    android.graphics.Path mPath -> a
    float mViewportHeight -> l
    float mViewportWidth -> k
    float mBaseHeight -> j
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup -> h
    float mBaseWidth -> i
    int mRootAlpha -> m
    java.lang.Boolean mIsStateful -> o
    int mChangingConfigurations -> g
    java.lang.String mRootName -> n
    android.graphics.Matrix IDENTITY_MATRIX -> q
    android.graphics.Path mRenderPath -> b
    androidx.collection.ArrayMap mVGTargetsMap -> p
    android.graphics.PathMeasure mPathMeasure -> f
    android.graphics.Paint mFillPaint -> e
    android.graphics.Paint mStrokePaint -> d
    android.graphics.Matrix mFinalPathMatrix -> c
    1170:1170:void <clinit>() -> <clinit>
    1191:1195:void <init>() -> <init>
    1216:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> a
    1379:1379:float cross(float,float,float,float) -> a
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> a
    1412:1415:boolean isStateful() -> a
    1419:1419:boolean onStateChanged(int[]) -> a
    1213:1213:float getAlpha() -> getAlpha
    1202:1202:int getRootAlpha() -> getRootAlpha
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$h:
    android.content.res.ColorStateList mTint -> c
    boolean mCachedAutoMirrored -> j
    android.graphics.PorterDuff$Mode mCachedTintMode -> h
    boolean mCacheDirty -> k
    int mCachedRootAlpha -> i
    androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer -> b
    boolean mAutoMirrored -> e
    android.graphics.Bitmap mCachedBitmap -> f
    android.content.res.ColorStateList mCachedTint -> g
    android.graphics.PorterDuff$Mode mTintMode -> d
    android.graphics.Paint mTempPaint -> l
    int mChangingConfigurations -> a
    1033:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1123:void <init>() -> <init>
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> a
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> a
    1093:1097:boolean canReuseBitmap(int,int) -> a
    1101:1108:boolean canReuseCache() -> a
    1147:1149:boolean onStateChanged(int[]) -> a
    1057:1057:boolean hasTranslucentRoot() -> b
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> b
    1078:1081:void updateCachedBitmap(int,int) -> c
    1143:1143:boolean isStateful() -> c
    1114:1119:void updateCacheStates() -> d
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$i:
    android.graphics.drawable.Drawable$ConstantState mDelegateState -> a
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    45:45:void onPostParceling() -> onPostParceling
    36:36:void onPreParceling(boolean) -> onPreParceling
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
    60:60:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    58:59:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:117:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
    144:157:java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String) -> getVersionedParcelableList
    91:97:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> putVersionedParcelable
    126:133:void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List) -> putVersionedParcelableList
    70:73:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    875:877:void writeCollection(java.util.Collection,int) -> a
    995:1010:int getType(java.lang.Object) -> a
    1040:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> a
    1062:1077:void writeSerializable(java.io.Serializable) -> a
    1193:1194:int readExceptionCode() -> a
    1219:1221:java.lang.Exception createException(int,java.lang.String) -> a
    1344:1386:java.util.Collection readCollection(java.util.Collection) -> a
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> a
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> a
    880:928:void writeCollection(java.util.Collection) -> b
    1198:1199:java.lang.Exception readException(int,java.lang.String) -> b
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> b
    1208:1209:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    96:96:boolean isStream() -> isStream
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    578:581:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    587:595:boolean[] readBooleanArray() -> readBooleanArray
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1245:1248:byte readByte(byte,int) -> readByte
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    625:636:char[] readCharArray(char[],int) -> readCharArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    441:444:double readDouble(double,int) -> readDouble
    795:798:double[] readDoubleArray(double[],int) -> readDoubleArray
    804:812:double[] readDoubleArray() -> readDoubleArray
    1170:1178:java.lang.Exception readException(java.lang.Exception,int) -> readException
    430:433:float readFloat(float,int) -> readFloat
    751:754:float[] readFloatArray(float[],int) -> readFloatArray
    760:768:float[] readFloatArray() -> readFloatArray
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    663:666:int[] readIntArray(int[],int) -> readIntArray
    672:680:int[] readIntArray() -> readIntArray
    1337:1340:java.util.List readList(java.util.List,int) -> readList
    419:422:long readLong(long,int) -> readLong
    707:710:long[] readLongArray(long[],int) -> readLongArray
    716:724:long[] readLongArray() -> readLongArray
    1401:1419:java.util.Map readMap(java.util.Map,int) -> readMap
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1523:1549:java.io.Serializable readSerializable() -> readSerializable
    1318:1321:java.util.Set readSet(java.util.Set,int) -> readSet
    1256:1264:android.util.Size readSize(android.util.Size,int) -> readSize
    1272:1280:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1289:1302:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    941:943:void writeArray(java.lang.Object[],int) -> writeArray
    948:992:void writeArray(java.lang.Object[]) -> writeArray
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    557:559:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    564:573:void writeBooleanArray(boolean[]) -> writeBooleanArray
    285:287:void writeBundle(android.os.Bundle,int) -> writeBundle
    504:506:void writeByte(byte,int) -> writeByte
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    316:318:void writeByteArray(byte[],int,int,int) -> writeByteArray
    601:611:void writeCharArray(char[],int) -> writeCharArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    361:363:void writeDouble(double,int) -> writeDouble
    774:776:void writeDoubleArray(double[],int) -> writeDoubleArray
    781:790:void writeDoubleArray(double[]) -> writeDoubleArray
    1107:1147:void writeException(java.lang.Exception,int) -> writeException
    352:354:void writeFloat(float,int) -> writeFloat
    730:732:void writeFloatArray(float[],int) -> writeFloatArray
    737:746:void writeFloatArray(float[]) -> writeFloatArray
    334:336:void writeInt(int,int) -> writeInt
    642:644:void writeIntArray(int[],int) -> writeIntArray
    649:658:void writeIntArray(int[]) -> writeIntArray
    840:841:void writeList(java.util.List,int) -> writeList
    343:345:void writeLong(long,int) -> writeLong
    686:688:void writeLongArray(long[],int) -> writeLongArray
    693:702:void writeLongArray(long[]) -> writeLongArray
    854:872:void writeMap(java.util.Map,int) -> writeMap
    1157:1158:void writeNoException() -> writeNoException
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    1057:1059:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    826:827:void writeSet(java.util.Set,int) -> writeSet
    514:520:void writeSize(android.util.Size,int) -> writeSize
    528:534:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    539:552:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    370:372:void writeString(java.lang.String,int) -> writeString
    379:381:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    276:278:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$a:
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1643:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> k6:
    android.util.SparseIntArray mPositionLookup -> a
    int mFieldId -> h
    android.os.Parcel mParcel -> b
    int mCurrentField -> f
    int mNextRead -> g
    int mEnd -> d
    int mOffset -> c
    java.lang.String mPrefix -> e
    51:54:void <init>(android.os.Parcel) -> <init>
    60:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    253:253:android.os.Bundle readBundle() -> readBundle
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    221:221:double readDouble() -> readDouble
    70:84:boolean readField(int) -> readField
    216:216:float readFloat() -> readFloat
    206:206:int readInt() -> readInt
    211:211:long readLong() -> readLong
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    231:231:android.os.IBinder readStrongBinder() -> readStrongBinder
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    191:192:void writeBundle(android.os.Bundle) -> writeBundle
    126:132:void writeByteArray(byte[]) -> writeByteArray
    136:142:void writeByteArray(byte[],int,int) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    161:162:void writeDouble(double) -> writeDouble
    156:157:void writeFloat(float) -> writeFloat
    146:147:void writeInt(int) -> writeInt
    151:152:void writeLong(long) -> writeLong
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
    171:172:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    186:187:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> l6:
    java.io.DataOutputStream mMasterOutput -> b
    java.io.DataInputStream mMasterInput -> a
    int mFieldId -> h
    java.io.DataInputStream mCurrentInput -> c
    java.io.DataOutputStream mCurrentOutput -> d
    int mFieldSize -> i
    boolean mIgnoreParcelables -> f
    int mCount -> g
    java.nio.charset.Charset UTF_16 -> j
    androidx.versionedparcelable.VersionedParcelStream$FieldBuffer mFieldBuffer -> e
    44:44:void <clinit>() -> <clinit>
    76:78:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    84:123:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    489:538:void readObject(int,java.lang.String,android.os.Bundle) -> a
    442:484:void writeObject(java.lang.Object) -> b
    142:152:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    127:127:boolean isStream() -> isStream
    402:404:boolean readBoolean() -> readBoolean
    429:438:android.os.Bundle readBundle() -> readBundle
    381:390:byte[] readByteArray() -> readByteArray
    396:396:java.lang.CharSequence readCharSequence() -> readCharSequence
    356:358:double readDouble() -> readDouble
    164:186:boolean readField(int) -> readField
    347:349:float readFloat() -> readFloat
    329:331:int readInt() -> readInt
    338:340:long readLong() -> readLong
    323:323:android.os.Parcelable readParcelable() -> readParcelable
    365:374:java.lang.String readString() -> readString
    317:317:android.os.IBinder readStrongBinder() -> readStrongBinder
    191:194:void setOutputField(int) -> setOutputField
    134:135:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:290:void writeBoolean(boolean) -> writeBoolean
    411:423:void writeBundle(android.os.Bundle) -> writeBundle
    199:206:void writeByteArray(byte[]) -> writeByteArray
    213:220:void writeByteArray(byte[],int,int) -> writeByteArray
    226:227:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    263:265:void writeDouble(double) -> writeDouble
    253:255:void writeFloat(float) -> writeFloat
    234:236:void writeInt(int) -> writeInt
    243:245:void writeLong(long) -> writeLong
    303:304:void writeParcelable(android.os.Parcelable) -> writeParcelable
    273:281:void writeString(java.lang.String) -> writeString
    296:297:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    310:311:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$1 -> l6$a:
    androidx.versionedparcelable.VersionedParcelStream this$0 -> a
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:93:int read() -> read
    98:105:int read(byte[],int,int) -> read
    110:117:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> l6$b:
    java.io.DataOutputStream mDataStream -> b
    java.io.ByteArrayOutputStream mOutput -> a
    java.io.DataOutputStream mTarget -> d
    int mFieldId -> c
    549:552:void <init>(int,java.io.DataOutputStream) -> <init>
    555:563:void flushField() -> a
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    android.database.DataSetObservable mObservable -> a
    android.database.DataSetObserver mViewPagerObserver -> b
    81:82:void <init>() -> <init>
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> a
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:293:void notifyDataSetChanged() -> notifyDataSetChanged
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    android.graphics.Paint mTabPaint -> w
    float mInitialMotionY -> E
    float mInitialMotionX -> D
    int mTouchSlop -> F
    int mFullUnderlineHeight -> B
    boolean mDrawFullUnderline -> z
    int mTabAlpha -> y
    int mTabPadding -> v
    android.graphics.Rect mTempRect -> x
    int mMinTextSpacing -> t
    int mMinStripHeight -> u
    int mIndicatorHeight -> r
    boolean mDrawFullUnderlineSet -> A
    int mMinPaddingBottom -> s
    boolean mIgnoreTap -> C
    int mIndicatorColor -> q
    83:84:void <init>(android.content.Context) -> <init>
    87:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    285:301:void updateTextPositions(int,float,boolean) -> a
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$a:
    androidx.viewpager.widget.PagerTabStrip this$0 -> a
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$b:
    androidx.viewpager.widget.PagerTabStrip this$0 -> a
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    androidx.viewpager.widget.PagerTitleStrip$PageListener mPageListener -> k
    java.lang.ref.WeakReference mWatchingAdapter -> l
    int mTextColor -> n
    int mNonPrimaryAlpha -> m
    boolean mUpdatingText -> i
    boolean mUpdatingPositions -> j
    float mLastKnownPositionOffset -> f
    int mGravity -> h
    androidx.viewpager.widget.ViewPager mPager -> a
    int mScaledTextSpacing -> g
    int mLastKnownCurrentPage -> e
    android.widget.TextView mCurrText -> c
    android.widget.TextView mPrevText -> b
    android.widget.TextView mNextText -> d
    int[] ATTRS -> o
    int[] TEXT_ATTRS -> p
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    113:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> a
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> a
    331:416:void updateTextPositions(int,float,boolean) -> a
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    221:224:void setTextSize(int,float) -> setTextSize
    173:175:void setTextSpacing(int) -> setTextSpacing
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$a:
    androidx.viewpager.widget.PagerTitleStrip this$0 -> b
    int mScrollState -> a
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:515:void onChanged() -> onChanged
    500:501:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    480:485:void onPageScrolled(int,float,int) -> onPageScrolled
    489:496:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$b:
    java.util.Locale mLocale -> a
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    int mFlingDistance -> K
    float mInitialMotionY -> F
    boolean mScrollingCacheEnabled -> u
    int mActivePointerId -> G
    android.view.VelocityTracker mVelocityTracker -> H
    java.util.List mAdapterChangeListeners -> W
    androidx.viewpager.widget.ViewPager$ItemInfo mTempItem -> c
    java.util.ArrayList mDrawingOrderedChildren -> d0
    boolean mIsUnableToDrag -> y
    java.lang.Runnable mEndScrollRunnable -> e0
    boolean mFakeDragging -> M
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener -> V
    java.util.Comparator COMPARATOR -> h0
    int mCloseEnough -> L
    int mPageTransformerLayerType -> b0
    int mPageMargin -> m
    int mScrollState -> f0
    boolean mPopulatePending -> v
    float mLastMotionX -> C
    android.view.animation.Interpolator sInterpolator -> i0
    androidx.viewpager.widget.ViewPager$PagerObserver mObserver -> l
    boolean mFirstLayout -> Q
    java.util.ArrayList mItems -> b
    android.graphics.Rect mTempRect -> d
    int mExpectedAdapterCount -> a
    int mDefaultGutterSize -> z
    androidx.viewpager.widget.PagerAdapter mAdapter -> e
    android.widget.Scroller mScroller -> j
    boolean mIsScrollStarted -> k
    int mMinimumVelocity -> I
    int mCurItem -> f
    float mLastMotionY -> D
    androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator -> j0
    android.widget.EdgeEffect mRightEdge -> P
    android.os.Parcelable mRestoredAdapterState -> h
    boolean mCalledSuper -> R
    int mGutterSize -> A
    androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener -> U
    int mOffscreenPageLimit -> w
    android.graphics.drawable.Drawable mMarginDrawable -> n
    float mFirstOffset -> q
    long mFakeDragBeginTime -> N
    int mChildHeightMeasureSpec -> s
    int mTopPageBounds -> o
    int mDrawingOrder -> c0
    java.lang.ClassLoader mRestoredClassLoader -> i
    int mMaximumVelocity -> J
    java.util.List mOnPageChangeListeners -> T
    float mInitialMotionX -> E
    int mRestoredCurItem -> g
    android.widget.EdgeEffect mLeftEdge -> O
    androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer -> a0
    boolean mIsBeingDragged -> x
    int mTouchSlop -> B
    boolean mInLayout -> t
    int[] LAYOUT_ATTRS -> g0
    float mLastOffset -> r
    int mDecorChildCount -> S
    int mBottomPageBounds -> p
    122:251:void <clinit>() -> <clinit>
    391:393:void <init>(android.content.Context) -> <init>
    396:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> a
    635:637:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    676:696:void scrollToItem(int,boolean,int,boolean) -> a
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> a
    927:929:float distanceInfluenceForSnapDuration(float) -> a
    950:1005:void smoothScrollTo(int,int,int) -> a
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> a
    1023:1089:void dataSetChanged() -> a
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> a
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> a
    1940:1954:void dispatchOnPageSelected(int) -> a
    1974:2008:void completeScroll(boolean) -> a
    2011:2011:boolean isGutterDrag(float,float) -> a
    2406:2421:int determineTargetPage(int,float,int,int) -> a
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> b
    1957:1971:void dispatchOnScrollStateChanged(int) -> b
    2015:2021:void enableLayers(boolean) -> b
    2310:2355:boolean performDrag(float) -> b
    2659:2666:void endDrag() -> b
    2528:2544:boolean beginFakeDrag() -> beginFakeDrag
    1498:1499:boolean isDecorView(android.view.View) -> c
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> c
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> c
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> c
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:748:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1793:1815:void computeScroll() -> computeScroll
    401:475:void initViewPager() -> d
    1818:1844:boolean pageScrolled(int) -> d
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    1096:1143:void populate(int) -> e
    2885:2889:boolean pageLeft() -> e
    2554:2555:void endFakeDrag() -> endFakeDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2893:2897:boolean pageRight() -> f
    2586:2587:void fakeDragBy(float) -> fakeDragBy
    1092:1093:void populate() -> g
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    555:563:void removeNonDecorViews() -> h
    2294:2299:boolean resetTouch() -> i
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    1282:1295:void sortChildDrawingOrder() -> j
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2038:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2181:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$a:
    140:140:void <init>() -> <init>
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> a
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$b:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$c:
    androidx.viewpager.widget.ViewPager this$0 -> a
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$d:
    androidx.viewpager.widget.ViewPager this$0 -> b
    android.graphics.Rect mTempRect -> a
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$e:
    float offset -> e
    float widthFactor -> d
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    int childIndex -> d
    float widthFactor -> a
    boolean needsMeasure -> b
    int position -> c
    3145:3146:void <init>() -> <init>
    3149:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$f:
    androidx.viewpager.widget.ViewPager this$0 -> d
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> b
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3075:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$g:
    androidx.viewpager.widget.ViewPager this$0 -> a
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    android.os.Parcelable adapterState -> c
    int position -> b
    java.lang.ClassLoader loader -> d
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$a:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
    330:330:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$h:
    3157:3157:void <init>() -> <init>
    3160:3165:int compare(android.view.View,android.view.View) -> a
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
com.downloader.BuildConfig -> com.downloader.BuildConfig:
    6:6:void <init>() -> <init>
com.downloader.Constants -> com.downloader.Constants:
    25:27:void <init>() -> <init>
com.downloader.Error -> com.downloader.Error:
    java.util.Map headerFields -> d
    int responseCode -> f
    java.lang.Throwable connectionException -> e
    boolean isServerError -> a
    java.lang.String serverErrorMessage -> c
    boolean isConnectionError -> b
    26:26:void <init>() -> <init>
    72:72:java.lang.Throwable getConnectionException() -> getConnectionException
    64:64:java.util.Map getHeaderFields() -> getHeaderFields
    80:80:int getResponseCode() -> getResponseCode
    56:56:java.lang.String getServerErrorMessage() -> getServerErrorMessage
    44:44:boolean isConnectionError() -> isConnectionError
    36:36:boolean isServerError() -> isServerError
    48:49:void setConnectionError(boolean) -> setConnectionError
    68:69:void setConnectionException(java.lang.Throwable) -> setConnectionException
    60:61:void setHeaderFields(java.util.Map) -> setHeaderFields
    76:77:void setResponseCode(int) -> setResponseCode
    40:41:void setServerError(boolean) -> setServerError
    52:53:void setServerErrorMessage(java.lang.String) -> setServerErrorMessage
com.downloader.PRDownloader -> com.downloader.PRDownloader:
    41:42:void <init>() -> <init>
    100:101:void cancel(int) -> cancel
    109:110:void cancel(java.lang.Object) -> cancel
    116:117:void cancelAll() -> cancelAll
    135:136:void cleanUp(int) -> cleanUp
    73:73:com.downloader.request.DownloadRequestBuilder download(java.lang.String,java.lang.String,java.lang.String) -> download
    126:126:com.downloader.Status getStatus(int) -> getStatus
    50:51:void initialize(android.content.Context) -> initialize
    60:62:void initialize(android.content.Context,com.downloader.PRDownloaderConfig) -> initialize
    82:83:void pause(int) -> pause
    91:92:void resume(int) -> resume
    142:143:void shutDown() -> shutDown
com.downloader.PRDownloaderConfig -> com.downloader.PRDownloaderConfig:
    boolean databaseEnabled -> e
    int connectTimeout -> b
    java.lang.String userAgent -> c
    com.downloader.httpclient.HttpClient httpClient -> d
    int readTimeout -> a
    26:26:void <init>(com.downloader.PRDownloaderConfig$Builder,com.downloader.PRDownloaderConfig$1) -> <init>
    34:40:void <init>(com.downloader.PRDownloaderConfig$Builder) -> <init>
    51:51:int getConnectTimeout() -> getConnectTimeout
    67:67:com.downloader.httpclient.HttpClient getHttpClient() -> getHttpClient
    43:43:int getReadTimeout() -> getReadTimeout
    59:59:java.lang.String getUserAgent() -> getUserAgent
    75:75:boolean isDatabaseEnabled() -> isDatabaseEnabled
    83:83:com.downloader.PRDownloaderConfig$Builder newBuilder() -> newBuilder
    55:56:void setConnectTimeout(int) -> setConnectTimeout
    79:80:void setDatabaseEnabled(boolean) -> setDatabaseEnabled
    71:72:void setHttpClient(com.downloader.httpclient.HttpClient) -> setHttpClient
    47:48:void setReadTimeout(int) -> setReadTimeout
    63:64:void setUserAgent(java.lang.String) -> setUserAgent
com.downloader.PRDownloaderConfig$1 -> com.downloader.PRDownloaderConfig$a:
com.downloader.PRDownloaderConfig$Builder -> com.downloader.PRDownloaderConfig$Builder:
    boolean databaseEnabled -> e
    int connectTimeout -> b
    java.lang.String userAgent -> c
    com.downloader.httpclient.HttpClient httpClient -> d
    int readTimeout -> a
    86:92:void <init>() -> <init>
    120:120:com.downloader.PRDownloaderConfig build() -> build
    100:101:com.downloader.PRDownloaderConfig$Builder setConnectTimeout(int) -> setConnectTimeout
    115:116:com.downloader.PRDownloaderConfig$Builder setDatabaseEnabled(boolean) -> setDatabaseEnabled
    110:111:com.downloader.PRDownloaderConfig$Builder setHttpClient(com.downloader.httpclient.HttpClient) -> setHttpClient
    95:96:com.downloader.PRDownloaderConfig$Builder setReadTimeout(int) -> setReadTimeout
    105:106:com.downloader.PRDownloaderConfig$Builder setUserAgent(java.lang.String) -> setUserAgent
com.downloader.Priority -> com.downloader.Priority:
    com.downloader.Priority[] $VALUES -> a
    31:26:void <clinit>() -> <clinit>
    26:26:void <init>(java.lang.String,int) -> <init>
    26:26:com.downloader.Priority valueOf(java.lang.String) -> valueOf
    26:26:com.downloader.Priority[] values() -> values
com.downloader.Progress -> com.downloader.Progress:
    30:33:void <init>(long,long) -> <init>
    37:37:java.lang.String toString() -> toString
com.downloader.Response -> com.downloader.Response:
    boolean isSuccessful -> b
    com.downloader.Error error -> a
    boolean isPaused -> c
    boolean isCancelled -> d
    23:23:void <init>() -> <init>
    31:31:com.downloader.Error getError() -> getError
    55:55:boolean isCancelled() -> isCancelled
    47:47:boolean isPaused() -> isPaused
    39:39:boolean isSuccessful() -> isSuccessful
    59:60:void setCancelled(boolean) -> setCancelled
    35:36:void setError(com.downloader.Error) -> setError
    51:52:void setPaused(boolean) -> setPaused
    43:44:void setSuccessful(boolean) -> setSuccessful
com.downloader.Status -> com.downloader.Status:
    com.downloader.Status[] $VALUES -> a
    25:23:void <clinit>() -> <clinit>
    23:23:void <init>(java.lang.String,int) -> <init>
    23:23:com.downloader.Status valueOf(java.lang.String) -> valueOf
    23:23:com.downloader.Status[] values() -> values
com.downloader.core.Core -> com.downloader.core.Core:
    com.downloader.core.Core instance -> b
    com.downloader.core.ExecutorSupplier executorSupplier -> a
    25:25:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    44:44:com.downloader.core.ExecutorSupplier getExecutorSupplier() -> getExecutorSupplier
    33:40:com.downloader.core.Core getInstance() -> getInstance
    48:51:void shutDown() -> shutDown
com.downloader.core.DefaultExecutorSupplier -> com.downloader.core.DefaultExecutorSupplier:
    com.downloader.core.DownloadExecutor networkExecutor -> a
    java.util.concurrent.Executor backgroundExecutor -> b
    java.util.concurrent.Executor mainThreadExecutor -> c
    int DEFAULT_MAX_NUM_THREADS -> d
    31:31:void <clinit>() -> <clinit>
    36:41:void <init>() -> <init>
    50:50:java.util.concurrent.Executor forBackgroundTasks() -> forBackgroundTasks
    45:45:com.downloader.core.DownloadExecutor forDownloadTasks() -> forDownloadTasks
    55:55:java.util.concurrent.Executor forMainThreadTasks() -> forMainThreadTasks
com.downloader.core.DownloadExecutor -> com.downloader.core.DownloadExecutor:
    34:36:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    40:42:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.downloader.core.DownloadFutureTask -> com.downloader.core.DownloadFutureTask:
    com.downloader.internal.DownloadRunnable runnable -> a
    33:35:void <init>(com.downloader.internal.DownloadRunnable) -> <init>
    28:28:int compareTo(java.lang.Object) -> compareTo
    39:41:int compareTo(com.downloader.core.DownloadFutureTask) -> compareTo
com.downloader.core.MainThreadExecutor -> com.downloader.core.MainThreadExecutor:
    android.os.Handler handler -> a
    28:30:void <init>() -> <init>
    34:35:void execute(java.lang.Runnable) -> execute
com.downloader.core.PriorityThreadFactory -> com.downloader.core.PriorityThreadFactory:
    int mThreadPriority -> a
    31:33:void <init>(int) -> <init>
    27:27:int access$000(com.downloader.core.PriorityThreadFactory) -> a
    37:48:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.downloader.core.PriorityThreadFactory$1 -> com.downloader.core.PriorityThreadFactory$a:
    com.downloader.core.PriorityThreadFactory this$0 -> b
    java.lang.Runnable val$runnable -> a
    37:37:void <init>(com.downloader.core.PriorityThreadFactory,java.lang.Runnable) -> <init>
    41:46:void run() -> run
com.downloader.database.AppDbHelper -> com.downloader.database.AppDbHelper:
    android.database.sqlite.SQLiteDatabase db -> a
    36:39:void <init>(android.content.Context) -> <init>
    165:169:void clear() -> clear
    43:65:com.downloader.database.DownloadModel find(int) -> find
    130:158:java.util.List getUnwantedModels(int) -> getUnwantedModels
    72:85:void insert(com.downloader.database.DownloadModel) -> insert
    121:126:void remove(int) -> remove
    90:103:void update(com.downloader.database.DownloadModel) -> update
    108:116:void updateProgress(int,long,long) -> updateProgress
com.downloader.database.DatabaseOpenHelper -> com.downloader.database.DatabaseOpenHelper:
    34:35:void <init>(android.content.Context) -> <init>
    39:50:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    55:55:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.downloader.database.DownloadModel -> com.downloader.database.DownloadModel:
    long totalBytes -> f
    long lastModifiedAt -> h
    long downloadedBytes -> g
    java.lang.String eTag -> c
    java.lang.String url -> b
    java.lang.String fileName -> e
    int id -> a
    java.lang.String dirPath -> d
    23:23:void <init>() -> <init>
    68:68:java.lang.String getDirPath() -> getDirPath
    92:92:long getDownloadedBytes() -> getDownloadedBytes
    60:60:java.lang.String getETag() -> getETag
    76:76:java.lang.String getFileName() -> getFileName
    44:44:int getId() -> getId
    100:100:long getLastModifiedAt() -> getLastModifiedAt
    84:84:long getTotalBytes() -> getTotalBytes
    52:52:java.lang.String getUrl() -> getUrl
    72:73:void setDirPath(java.lang.String) -> setDirPath
    96:97:void setDownloadedBytes(long) -> setDownloadedBytes
    64:65:void setETag(java.lang.String) -> setETag
    80:81:void setFileName(java.lang.String) -> setFileName
    48:49:void setId(int) -> setId
    104:105:void setLastModifiedAt(long) -> setLastModifiedAt
    88:89:void setTotalBytes(long) -> setTotalBytes
    56:57:void setUrl(java.lang.String) -> setUrl
com.downloader.database.NoOpsDbHelper -> com.downloader.database.NoOpsDbHelper:
    27:29:void <init>() -> <init>
    64:64:void clear() -> clear
    33:33:com.downloader.database.DownloadModel find(int) -> find
    58:58:java.util.List getUnwantedModels(int) -> getUnwantedModels
    39:39:void insert(com.downloader.database.DownloadModel) -> insert
    54:54:void remove(int) -> remove
    44:44:void update(com.downloader.database.DownloadModel) -> update
    49:49:void updateProgress(int,long,long) -> updateProgress
com.downloader.handler.ProgressHandler -> com.downloader.handler.ProgressHandler:
    com.downloader.OnProgressListener listener -> a
    36:38:void <init>(com.downloader.OnProgressListener) -> <init>
    42:53:void handleMessage(android.os.Message) -> handleMessage
com.downloader.httpclient.DefaultHttpClient -> com.downloader.httpclient.DefaultHttpClient:
    java.net.URLConnection connection -> a
    41:43:void <init>() -> <init>
    112:125:void addHeaders(com.downloader.request.DownloadRequest) -> a
    37:37:java.lang.Object clone() -> clone
    48:48:com.downloader.httpclient.HttpClient clone() -> clone
    96:96:void close() -> close
    53:62:void connect(com.downloader.request.DownloadRequest) -> connect
    80:84:long getContentLength() -> getContentLength
    105:108:java.io.InputStream getErrorStream() -> getErrorStream
    100:100:java.util.Map getHeaderFields() -> getHeaderFields
    75:75:java.io.InputStream getInputStream() -> getInputStream
    66:70:int getResponseCode() -> getResponseCode
    90:90:java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
com.downloader.internal.ComponentHolder -> com.downloader.internal.ComponentHolder:
    com.downloader.internal.ComponentHolder INSTANCE -> f
    int connectTimeout -> b
    java.lang.String userAgent -> c
    com.downloader.httpclient.HttpClient httpClient -> d
    int readTimeout -> a
    com.downloader.database.DbHelper dbHelper -> e
    36:36:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    70:77:int getConnectTimeout() -> getConnectTimeout
    92:99:com.downloader.database.DbHelper getDbHelper() -> getDbHelper
    103:110:com.downloader.httpclient.HttpClient getHttpClient() -> getHttpClient
    44:44:com.downloader.internal.ComponentHolder getInstance() -> getInstance
    59:66:int getReadTimeout() -> getReadTimeout
    81:88:java.lang.String getUserAgent() -> getUserAgent
    48:56:void init(android.content.Context,com.downloader.PRDownloaderConfig) -> init
com.downloader.internal.DownloadRequestQueue -> com.downloader.internal.DownloadRequestQueue:
    java.util.Map currentRequestMap -> a
    com.downloader.internal.DownloadRequestQueue instance -> c
    java.util.concurrent.atomic.AtomicInteger sequenceGenerator -> b
    37:40:void <init>() -> <init>
    58:58:int getSequenceNumber() -> a
    80:84:void cancelAndRemoveFromMap(com.downloader.request.DownloadRequest) -> a
    122:129:void addRequest(com.downloader.request.DownloadRequest) -> addRequest
    87:89:void cancel(int) -> cancel
    92:104:void cancel(java.lang.Object) -> cancel
    107:111:void cancelAll() -> cancelAll
    132:133:void finish(com.downloader.request.DownloadRequest) -> finish
    47:54:com.downloader.internal.DownloadRequestQueue getInstance() -> getInstance
    114:118:com.downloader.Status getStatus(int) -> getStatus
    43:44:void initialize() -> initialize
    62:66:void pause(int) -> pause
    69:77:void resume(int) -> resume
com.downloader.internal.DownloadRunnable -> com.downloader.internal.DownloadRunnable:
    35:39:void <init>(com.downloader.request.DownloadRequest) -> <init>
    43:55:void run() -> run
com.downloader.internal.DownloadTask -> com.downloader.internal.DownloadTask:
    com.downloader.internal.stream.FileDownloadOutputStream outputStream -> f
    java.lang.String eTag -> j
    long totalBytes -> h
    boolean isResumeSupported -> k
    int responseCode -> i
    java.lang.String tempPath -> l
    java.io.InputStream inputStream -> e
    long lastSyncBytes -> d
    com.downloader.request.DownloadRequest request -> a
    long lastSyncTime -> c
    com.downloader.httpclient.HttpClient httpClient -> g
    com.downloader.handler.ProgressHandler progressHandler -> b
    61:63:void <init>(com.downloader.request.DownloadRequest) -> <init>
    66:66:com.downloader.internal.DownloadTask create(com.downloader.request.DownloadRequest) -> a
    265:276:boolean checkIfFreshStartRequiredAndStart(com.downloader.database.DownloadModel) -> a
    291:301:void createAndInsertNewModel() -> a
    349:379:void closeAllSafely(com.downloader.internal.stream.FileDownloadOutputStream) -> a
    382:403:java.lang.String convertStreamToString(java.io.InputStream) -> a
    247:252:void deleteTempFile() -> b
    282:282:boolean isETagChanged(com.downloader.database.DownloadModel) -> b
    333:346:void sync(com.downloader.internal.stream.FileDownloadOutputStream) -> b
    287:287:com.downloader.database.DownloadModel getDownloadModelIfAlreadyPresentInDatabase() -> c
    319:328:void syncIfRequired(com.downloader.internal.stream.FileDownloadOutputStream) -> c
    255:255:boolean isSuccessful() -> d
    304:305:void removeNoMoreNeededModelFromDatabase() -> e
    71:241:com.downloader.Response run() -> f
    308:316:void sendProgress() -> g
    260:261:void setResumeSupportedOrNot() -> h
com.downloader.internal.SynchronousCall -> com.downloader.internal.SynchronousCall:
    10:12:void <init>(com.downloader.request.DownloadRequest) -> <init>
    15:16:com.downloader.Response execute() -> execute
com.downloader.internal.stream.FileDownloadRandomAccessFile -> com.downloader.internal.stream.FileDownloadRandomAccessFile:
    java.io.RandomAccessFile randomAccess -> c
    java.io.FileDescriptor fd -> b
    java.io.BufferedOutputStream out -> a
    16:20:void <init>(java.io.File) -> <init>
    35:37:void close() -> close
    50:50:com.downloader.internal.stream.FileDownloadOutputStream create(java.io.File) -> create
    29:31:void flushAndSync() -> flushAndSync
    41:42:void seek(long) -> seek
    46:47:void setLength(long) -> setLength
    24:25:void write(byte[],int,int) -> write
com.downloader.request.DownloadRequest -> com.downloader.request.DownloadRequest:
    long totalBytes -> i
    int readTimeout -> j
    int connectTimeout -> k
    com.downloader.OnProgressListener onProgressListener -> m
    long downloadedBytes -> h
    java.lang.String userAgent -> l
    int sequenceNumber -> f
    com.downloader.OnPauseListener onPauseListener -> p
    com.downloader.OnCancelListener onCancelListener -> q
    com.downloader.OnDownloadListener onDownloadListener -> n
    java.lang.Object tag -> b
    com.downloader.Priority priority -> a
    java.util.concurrent.Future future -> g
    java.lang.String url -> c
    int downloadId -> r
    com.downloader.Status status -> t
    com.downloader.OnStartOrResumeListener onStartOrResumeListener -> o
    java.lang.String fileName -> e
    java.lang.String dirPath -> d
    java.util.HashMap headerMap -> s
    65:81:void <init>(com.downloader.request.DownloadRequestBuilder) -> <init>
    42:42:com.downloader.OnDownloadListener access$000(com.downloader.request.DownloadRequest) -> a
    295:303:void deliverCancelEvent() -> a
    42:42:void access$100(com.downloader.request.DownloadRequest) -> b
    320:325:void destroy() -> b
    42:42:com.downloader.OnStartOrResumeListener access$200(com.downloader.request.DownloadRequest) -> c
    315:317:void finish() -> c
    306:312:void cancel() -> cancel
    42:42:com.downloader.OnPauseListener access$300(com.downloader.request.DownloadRequest) -> d
    332:332:int getConnectTimeoutFromConfig() -> d
    239:251:void deliverError(com.downloader.Error) -> deliverError
    282:292:void deliverPauseEvent() -> deliverPauseEvent
    269:279:void deliverStartEvent() -> deliverStartEvent
    254:266:void deliverSuccess() -> deliverSuccess
    42:42:com.downloader.OnCancelListener access$400(com.downloader.request.DownloadRequest) -> e
    328:328:int getReadTimeoutFromConfig() -> e
    234:235:com.downloader.Response executeSync() -> executeSync
    168:168:int getConnectTimeout() -> getConnectTimeout
    108:108:java.lang.String getDirPath() -> getDirPath
    187:187:int getDownloadId() -> getDownloadId
    144:144:long getDownloadedBytes() -> getDownloadedBytes
    116:116:java.lang.String getFileName() -> getFileName
    136:136:java.util.concurrent.Future getFuture() -> getFuture
    132:132:java.util.HashMap getHeaders() -> getHeaders
    203:203:com.downloader.OnProgressListener getOnProgressListener() -> getOnProgressListener
    84:84:com.downloader.Priority getPriority() -> getPriority
    160:160:int getReadTimeout() -> getReadTimeout
    124:124:int getSequenceNumber() -> getSequenceNumber
    195:195:com.downloader.Status getStatus() -> getStatus
    92:92:java.lang.Object getTag() -> getTag
    152:152:long getTotalBytes() -> getTotalBytes
    100:100:java.lang.String getUrl() -> getUrl
    176:179:java.lang.String getUserAgent() -> getUserAgent
    172:173:void setConnectTimeout(int) -> setConnectTimeout
    112:113:void setDirPath(java.lang.String) -> setDirPath
    191:192:void setDownloadId(int) -> setDownloadId
    148:149:void setDownloadedBytes(long) -> setDownloadedBytes
    120:121:void setFileName(java.lang.String) -> setFileName
    140:141:void setFuture(java.util.concurrent.Future) -> setFuture
    222:223:com.downloader.request.DownloadRequest setOnCancelListener(com.downloader.OnCancelListener) -> setOnCancelListener
    217:218:com.downloader.request.DownloadRequest setOnPauseListener(com.downloader.OnPauseListener) -> setOnPauseListener
    212:213:com.downloader.request.DownloadRequest setOnProgressListener(com.downloader.OnProgressListener) -> setOnProgressListener
    207:208:com.downloader.request.DownloadRequest setOnStartOrResumeListener(com.downloader.OnStartOrResumeListener) -> setOnStartOrResumeListener
    88:89:void setPriority(com.downloader.Priority) -> setPriority
    164:165:void setReadTimeout(int) -> setReadTimeout
    128:129:void setSequenceNumber(int) -> setSequenceNumber
    199:200:void setStatus(com.downloader.Status) -> setStatus
    96:97:void setTag(java.lang.Object) -> setTag
    156:157:void setTotalBytes(long) -> setTotalBytes
    104:105:void setUrl(java.lang.String) -> setUrl
    183:184:void setUserAgent(java.lang.String) -> setUserAgent
    227:230:int start(com.downloader.OnDownloadListener) -> start
com.downloader.request.DownloadRequest$1 -> com.downloader.request.DownloadRequest$a:
    com.downloader.request.DownloadRequest this$0 -> b
    com.downloader.Error val$error -> a
    242:242:void <init>(com.downloader.request.DownloadRequest,com.downloader.Error) -> <init>
    244:248:void run() -> run
com.downloader.request.DownloadRequest$2 -> com.downloader.request.DownloadRequest$b:
    com.downloader.request.DownloadRequest this$0 -> a
    257:257:void <init>(com.downloader.request.DownloadRequest) -> <init>
    259:263:void run() -> run
com.downloader.request.DownloadRequest$3 -> com.downloader.request.DownloadRequest$c:
    com.downloader.request.DownloadRequest this$0 -> a
    271:271:void <init>(com.downloader.request.DownloadRequest) -> <init>
    273:276:void run() -> run
com.downloader.request.DownloadRequest$4 -> com.downloader.request.DownloadRequest$d:
    com.downloader.request.DownloadRequest this$0 -> a
    284:284:void <init>(com.downloader.request.DownloadRequest) -> <init>
    286:289:void run() -> run
com.downloader.request.DownloadRequest$5 -> com.downloader.request.DownloadRequest$e:
    com.downloader.request.DownloadRequest this$0 -> a
    296:296:void <init>(com.downloader.request.DownloadRequest) -> <init>
    298:301:void run() -> run
com.downloader.request.DownloadRequestBuilder -> com.downloader.request.DownloadRequestBuilder:
    java.util.HashMap headerMap -> i
    java.lang.String userAgent -> h
    java.lang.Object tag -> e
    int readTimeout -> f
    com.downloader.Priority priority -> d
    int connectTimeout -> g
    java.lang.String url -> a
    java.lang.String fileName -> c
    java.lang.String dirPath -> b
    41:45:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    94:94:com.downloader.request.DownloadRequest build() -> build
    29:29:com.downloader.request.RequestBuilder setConnectTimeout(int) -> setConnectTimeout
    83:84:com.downloader.request.DownloadRequestBuilder setConnectTimeout(int) -> setConnectTimeout
    29:29:com.downloader.request.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    49:60:com.downloader.request.DownloadRequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    29:29:com.downloader.request.RequestBuilder setPriority(com.downloader.Priority) -> setPriority
    65:66:com.downloader.request.DownloadRequestBuilder setPriority(com.downloader.Priority) -> setPriority
    29:29:com.downloader.request.RequestBuilder setReadTimeout(int) -> setReadTimeout
    77:78:com.downloader.request.DownloadRequestBuilder setReadTimeout(int) -> setReadTimeout
    29:29:com.downloader.request.RequestBuilder setTag(java.lang.Object) -> setTag
    71:72:com.downloader.request.DownloadRequestBuilder setTag(java.lang.Object) -> setTag
    29:29:com.downloader.request.RequestBuilder setUserAgent(java.lang.String) -> setUserAgent
    89:90:com.downloader.request.DownloadRequestBuilder setUserAgent(java.lang.String) -> setUserAgent
com.downloader.utils.Utils -> com.downloader.utils.Utils:
    42:44:void <init>() -> <init>
    165:165:boolean isRedirection(int) -> a
    75:87:void deleteTempFileAndDatabaseEntryInBackground(java.lang.String,int) -> deleteTempFileAndDatabaseEntryInBackground
    90:110:void deleteUnwantedModelsAndTempFiles(int) -> deleteUnwantedModelsAndTempFiles
    47:47:java.lang.String getPath(java.lang.String,java.lang.String) -> getPath
    140:161:com.downloader.httpclient.HttpClient getRedirectedConnectionIfAny(com.downloader.httpclient.HttpClient,com.downloader.request.DownloadRequest) -> getRedirectedConnectionIfAny
    51:51:java.lang.String getTempPath(java.lang.String,java.lang.String) -> getTempPath
    114:121:int getUniqueId(java.lang.String,java.lang.String,java.lang.String) -> getUniqueId
    55:71:void renameFileName(java.lang.String,java.lang.String) -> renameFileName
com.downloader.utils.Utils$1 -> com.downloader.utils.Utils$a:
    java.lang.String val$path -> b
    int val$downloadId -> a
    76:76:void <init>(int,java.lang.String) -> <init>
    79:85:void run() -> run
com.downloader.utils.Utils$2 -> com.downloader.utils.Utils$b:
    int val$days -> a
    91:91:void <init>(int) -> <init>
    94:108:void run() -> run
com.facebook.fbjni.BuildConfig -> com.facebook.fbjni.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.jni.CppException -> com.facebook.jni.CppException:
    25:26:void <init>(java.lang.String) -> <init>
com.facebook.jni.CppSystemErrorException -> com.facebook.jni.CppSystemErrorException:
    int errorCode -> a
    27:29:void <init>(java.lang.String,int) -> <init>
    32:32:int getErrorCode() -> getErrorCode
com.facebook.jni.DestructorThread -> com.facebook.jni.DestructorThread:
    com.facebook.jni.DestructorThread$DestructorStack sDestructorStack -> b
    java.lang.Thread sThread -> d
    java.lang.ref.ReferenceQueue sReferenceQueue -> c
    com.facebook.jni.DestructorThread$DestructorList sDestructorList -> a
    67:94:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    33:33:java.lang.ref.ReferenceQueue access$000() -> a
    33:33:com.facebook.jni.DestructorThread$DestructorStack access$100() -> b
    33:33:com.facebook.jni.DestructorThread$DestructorList access$700() -> c
com.facebook.jni.DestructorThread$1 -> com.facebook.jni.DestructorThread$a:
    71:71:void <init>(java.lang.String) -> <init>
    76:88:void run() -> run
com.facebook.jni.DestructorThread$Destructor -> com.facebook.jni.DestructorThread$Destructor:
    com.facebook.jni.DestructorThread$Destructor next -> a
    com.facebook.jni.DestructorThread$Destructor previous -> b
    40:40:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    46:48:void <init>(java.lang.Object) -> <init>
    51:52:void <init>() -> <init>
    40:40:com.facebook.jni.DestructorThread$Destructor access$300(com.facebook.jni.DestructorThread$Destructor) -> a
    40:40:com.facebook.jni.DestructorThread$Destructor access$302(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor) -> a
    40:40:com.facebook.jni.DestructorThread$Destructor access$600(com.facebook.jni.DestructorThread$Destructor) -> b
    40:40:com.facebook.jni.DestructorThread$Destructor access$602(com.facebook.jni.DestructorThread$Destructor,com.facebook.jni.DestructorThread$Destructor) -> b
com.facebook.jni.DestructorThread$DestructorList -> com.facebook.jni.DestructorThread$b:
    com.facebook.jni.DestructorThread$Destructor mHead -> a
    129:133:void <init>() -> <init>
    136:141:void enqueue(com.facebook.jni.DestructorThread$Destructor) -> a
    126:126:void access$400(com.facebook.jni.DestructorThread$Destructor) -> b
    144:146:void drop(com.facebook.jni.DestructorThread$Destructor) -> c
com.facebook.jni.DestructorThread$DestructorStack -> com.facebook.jni.DestructorThread$c:
    java.util.concurrent.atomic.AtomicReference mHead -> a
    104:105:void <init>() -> <init>
    104:104:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    110:112:void push(com.facebook.jni.DestructorThread$Destructor) -> a
    116:122:void transferAllToList() -> a
com.facebook.jni.DestructorThread$Terminus -> com.facebook.jni.DestructorThread$d:
    96:96:void <init>() -> <init>
    96:96:void <init>(com.facebook.jni.DestructorThread$1) -> <init>
    99:99:void destruct() -> destruct
com.facebook.jni.HybridClassBase -> com.facebook.jni.HybridClassBase:
    22:22:void <init>() -> <init>
com.facebook.jni.HybridData -> com.facebook.jni.HybridData:
    com.facebook.jni.HybridData$Destructor mDestructor -> a
    34:35:void <clinit>() -> <clinit>
    31:37:void <init>() -> <init>
    64:64:boolean isValid() -> isValid
    48:47:void resetNative() -> resetNative
com.facebook.jni.HybridData$Destructor -> com.facebook.jni.HybridData$Destructor:
    long mNativePointer -> c
    73:74:void <init>(java.lang.Object) -> <init>
    67:67:long access$000(com.facebook.jni.HybridData$Destructor) -> a
    81:83:void destruct() -> destruct
com.facebook.jni.IteratorHelper -> com.facebook.jni.IteratorHelper:
    36:38:void <init>(java.util.Iterator) -> <init>
    41:43:void <init>(java.lang.Iterable) -> <init>
com.facebook.jni.MapIteratorHelper -> com.facebook.jni.MapIteratorHelper:
    37:39:void <init>(java.util.Map) -> <init>
com.facebook.jni.ThreadScopeSupport -> com.facebook.jni.ThreadScopeSupport:
    25:26:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
com.facebook.jni.UnknownCppException -> com.facebook.jni.UnknownCppException:
    25:26:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
com.facebook.soloader.nativeloader.NativeLoader -> com.facebook.soloader.nativeloader.NativeLoader:
    com.facebook.soloader.nativeloader.NativeLoaderDelegate sDelegate -> a
    24:24:void <init>() -> <init>
    53:52:void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate) -> init
    68:68:boolean isInitialized() -> isInitialized
    34:41:boolean loadLibrary(java.lang.String) -> loadLibrary
com.facebook.soloader.nativeloader.SystemDelegate -> com.facebook.soloader.nativeloader.SystemDelegate:
    19:19:void <init>() -> <init>
    22:25:boolean loadLibrary(java.lang.String) -> loadLibrary
com.squareup.picasso.Action -> m6:
    com.squareup.picasso.Picasso picasso -> a
    java.lang.Object tag -> j
    java.lang.String key -> i
    android.graphics.drawable.Drawable errorDrawable -> h
    boolean willReplay -> k
    boolean cancelled -> l
    int networkPolicy -> f
    java.lang.ref.WeakReference target -> c
    int errorResId -> g
    int memoryPolicy -> e
    com.squareup.picasso.Request request -> b
    boolean noFade -> d
    50:62:void <init>(com.squareup.picasso.Picasso,java.lang.Object,com.squareup.picasso.Request,int,int,int,android.graphics.drawable.Drawable,java.lang.String,java.lang.Object,boolean) -> <init>
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    void error(java.lang.Exception) -> a
    69:70:void cancel() -> a
    81:81:java.lang.String getKey() -> b
    93:93:int getMemoryPolicy() -> c
    97:97:int getNetworkPolicy() -> d
    101:101:com.squareup.picasso.Picasso getPicasso() -> e
    105:105:com.squareup.picasso.Picasso$Priority getPriority() -> f
    73:73:com.squareup.picasso.Request getRequest() -> g
    109:109:java.lang.Object getTag() -> h
    77:77:java.lang.Object getTarget() -> i
    85:85:boolean isCancelled() -> j
    89:89:boolean willReplay() -> k
com.squareup.picasso.Action$RequestWeakReference -> m6$a:
    com.squareup.picasso.Action action -> a
    30:32:void <init>(com.squareup.picasso.Action,java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
com.squareup.picasso.AssetRequestHandler -> n6:
    android.content.Context context -> a
    android.content.res.AssetManager assetManager -> c
    java.lang.Object lock -> b
    int ASSET_PREFIX_LENGTH -> d
    30:30:void <clinit>() -> <clinit>
    37:39:void <init>(android.content.Context) -> <init>
    60:60:java.lang.String getFilePath(com.squareup.picasso.Request) -> b
    42:43:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    48:56:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.BitmapHunter -> o6:
    java.lang.String key -> f
    java.util.concurrent.atomic.AtomicInteger SEQUENCE_GENERATOR -> v
    android.graphics.Bitmap result -> m
    com.squareup.picasso.Stats stats -> e
    java.util.concurrent.Future future -> n
    int memoryPolicy -> h
    int networkPolicy -> i
    com.squareup.picasso.RequestHandler requestHandler -> j
    com.squareup.picasso.Cache cache -> d
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> o
    int sequence -> a
    com.squareup.picasso.Picasso$Priority priority -> s
    java.lang.Object DECODE_LOCK -> t
    java.lang.ThreadLocal NAME_BUILDER -> u
    com.squareup.picasso.Request data -> g
    com.squareup.picasso.Dispatcher dispatcher -> c
    com.squareup.picasso.RequestHandler ERRORING_HANDLER -> w
    com.squareup.picasso.Action action -> k
    int retryCount -> r
    java.util.List actions -> l
    java.lang.Exception exception -> p
    com.squareup.picasso.Picasso picasso -> b
    int exifOrientation -> q
    62:72:void <clinit>() -> <clinit>
    104:118:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action,com.squareup.picasso.RequestHandler) -> <init>
    126:143:android.graphics.Bitmap decodeStream(okio.Source,com.squareup.picasso.Request) -> a
    270:299:void attach(com.squareup.picasso.Action) -> a
    350:350:boolean cancel() -> a
    361:366:boolean shouldRetry(boolean,android.net.NetworkInfo) -> a
    414:421:void updateThreadName(com.squareup.picasso.Request) -> a
    425:437:com.squareup.picasso.BitmapHunter forRequest(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action) -> a
    441:499:android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> a
    503:651:android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int) -> a
    656:656:boolean shouldResize(boolean,int,int,int,int) -> a
    662:678:int getExifRotation(int) -> a
    302:319:void detach(com.squareup.picasso.Action) -> b
    322:346:com.squareup.picasso.Picasso$Priority computeNewPriority() -> b
    683:693:int getExifTranslation(int) -> b
    390:390:com.squareup.picasso.Action getAction() -> c
    398:398:java.util.List getActions() -> d
    386:386:com.squareup.picasso.Request getData() -> e
    402:402:java.lang.Exception getException() -> f
    378:378:java.lang.String getKey() -> g
    406:406:com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> h
    382:382:int getMemoryPolicy() -> i
    394:394:com.squareup.picasso.Picasso getPicasso() -> j
    410:410:com.squareup.picasso.Picasso$Priority getPriority() -> k
    374:374:android.graphics.Bitmap getResult() -> l
    204:266:android.graphics.Bitmap hunt() -> m
    357:357:boolean isCancelled() -> n
    370:370:boolean supportsReplay() -> o
    169:199:void run() -> run
com.squareup.picasso.BitmapHunter$1 -> o6$a:
    64:64:void <init>() -> <init>
    64:64:java.lang.Object initialValue() -> initialValue
    66:66:java.lang.StringBuilder initialValue() -> initialValue
com.squareup.picasso.BitmapHunter$2 -> o6$b:
    72:72:void <init>() -> <init>
    74:74:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    78:78:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.BitmapHunter$3 -> o6$c:
    com.squareup.picasso.Transformation val$transformation -> a
    java.lang.RuntimeException val$e -> b
    447:447:void <init>(com.squareup.picasso.Transformation,java.lang.RuntimeException) -> <init>
    449:450:void run() -> run
com.squareup.picasso.BitmapHunter$4 -> o6$d:
    java.lang.StringBuilder val$builder -> a
    466:466:void <init>(java.lang.StringBuilder) -> <init>
    468:468:void run() -> run
com.squareup.picasso.BitmapHunter$5 -> o6$e:
    com.squareup.picasso.Transformation val$transformation -> a
    475:475:void <init>(com.squareup.picasso.Transformation) -> <init>
    477:478:void run() -> run
com.squareup.picasso.BitmapHunter$6 -> o6$f:
    com.squareup.picasso.Transformation val$transformation -> a
    487:487:void <init>(com.squareup.picasso.Transformation) -> <init>
    489:490:void run() -> run
com.squareup.picasso.BuildConfig -> com.squareup.picasso.BuildConfig:
    6:6:void <init>() -> <init>
com.squareup.picasso.Cache -> com.squareup.picasso.Cache:
    47:47:void <clinit>() -> <clinit>
com.squareup.picasso.Cache$1 -> com.squareup.picasso.Cache$a:
    47:47:void <init>() -> <init>
    65:65:void clear() -> clear
    68:68:void clearKeyUri(java.lang.String) -> clearKeyUri
    49:49:android.graphics.Bitmap get(java.lang.String) -> get
    61:61:int maxSize() -> maxSize
    54:54:void set(java.lang.String,android.graphics.Bitmap) -> set
    57:57:int size() -> size
com.squareup.picasso.Callback$EmptyCallback -> com.squareup.picasso.Callback$EmptyCallback:
    23:23:void <init>() -> <init>
    29:29:void onError(java.lang.Exception) -> onError
    26:26:void onSuccess() -> onSuccess
com.squareup.picasso.ContactsPhotoRequestHandler -> p6:
    android.content.Context context -> a
    android.content.UriMatcher matcher -> b
    47:53:void <clinit>() -> <clinit>
    57:59:void <init>(android.content.Context) -> <init>
    77:87:java.io.InputStream getInputStream(com.squareup.picasso.Request) -> b
    62:63:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    69:73:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.ContentStreamRequestHandler -> q6:
    android.content.Context context -> a
    32:34:void <init>(android.content.Context) -> <init>
    46:47:java.io.InputStream getInputStream(com.squareup.picasso.Request) -> b
    37:37:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    41:42:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.DeferredRequestCreator -> r6:
    com.squareup.picasso.RequestCreator creator -> a
    java.lang.ref.WeakReference target -> b
    com.squareup.picasso.Callback callback -> c
    31:43:void <init>(com.squareup.picasso.RequestCreator,android.widget.ImageView,com.squareup.picasso.Callback) -> <init>
    80:95:void cancel() -> a
    98:98:java.lang.Object getTag() -> b
    54:68:boolean onPreDraw() -> onPreDraw
    46:47:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    50:51:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.squareup.picasso.Dispatcher -> s6:
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> a
    boolean scansNetworkChanges -> o
    android.content.Context context -> b
    boolean airplaneMode -> p
    com.squareup.picasso.Stats stats -> l
    com.squareup.picasso.Cache cache -> k
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> n
    java.util.Set pausedTags -> h
    com.squareup.picasso.Downloader downloader -> d
    java.util.Map hunterMap -> e
    java.util.concurrent.ExecutorService service -> c
    java.util.Map failedActions -> f
    android.os.Handler mainThreadHandler -> j
    java.util.List batch -> m
    java.util.Map pausedActions -> g
    android.os.Handler handler -> i
    101:121:void <init>(android.content.Context,java.util.concurrent.ExecutorService,android.os.Handler,com.squareup.picasso.Downloader,com.squareup.picasso.Cache,com.squareup.picasso.Stats) -> <init>
    143:144:void dispatchCancel(com.squareup.picasso.Action) -> a
    147:148:void dispatchPauseTag(java.lang.Object) -> a
    167:168:void dispatchNetworkStateChange(android.net.NetworkInfo) -> a
    171:173:void dispatchAirplaneModeChange(boolean) -> a
    180:212:void performSubmit(com.squareup.picasso.Action,boolean) -> a
    373:379:void performError(com.squareup.picasso.BitmapHunter,boolean) -> a
    396:407:void flushFailedActions() -> a
    433:443:void batch(com.squareup.picasso.BitmapHunter) -> a
    446:446:void logBatch(java.util.List) -> a
    139:140:void dispatchSubmit(com.squareup.picasso.Action) -> b
    151:152:void dispatchResumeTag(java.lang.Object) -> b
    155:156:void dispatchComplete(com.squareup.picasso.BitmapHunter) -> b
    366:370:void performBatchComplete() -> b
    382:383:void performAirplaneModeChange(boolean) -> b
    386:393:void performNetworkStateChange(android.net.NetworkInfo) -> b
    125:136:void shutdown() -> c
    163:164:void dispatchFailed(com.squareup.picasso.BitmapHunter) -> c
    243:296:void performPauseTag(java.lang.Object) -> c
    425:430:void markForReplay(com.squareup.picasso.Action) -> c
    159:160:void dispatchRetry(com.squareup.picasso.BitmapHunter) -> d
    215:239:void performCancel(com.squareup.picasso.Action) -> d
    300:319:void performResumeTag(java.lang.Object) -> d
    176:177:void performSubmit(com.squareup.picasso.Action) -> e
    410:422:void markForReplay(com.squareup.picasso.BitmapHunter) -> e
    355:363:void performComplete(com.squareup.picasso.BitmapHunter) -> f
    323:352:void performRetry(com.squareup.picasso.BitmapHunter) -> g
com.squareup.picasso.Dispatcher$1 -> s6$a:
    com.squareup.picasso.Dispatcher this$0 -> a
    131:131:void <init>(com.squareup.picasso.Dispatcher) -> <init>
    133:134:void run() -> run
com.squareup.picasso.Dispatcher$DispatcherHandler -> s6$b:
    com.squareup.picasso.Dispatcher dispatcher -> a
    463:465:void <init>(android.os.Looper,com.squareup.picasso.Dispatcher) -> <init>
    468:524:void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Dispatcher$DispatcherHandler$1 -> s6$b$a:
    android.os.Message val$msg -> a
    518:518:void <init>(com.squareup.picasso.Dispatcher$DispatcherHandler,android.os.Message) -> <init>
    520:520:void run() -> run
com.squareup.picasso.Dispatcher$DispatcherThread -> s6$c:
    529:530:void <init>() -> <init>
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> s6$d:
    com.squareup.picasso.Dispatcher dispatcher -> a
    538:540:void <init>(com.squareup.picasso.Dispatcher) -> <init>
    543:549:void register() -> a
    552:553:void unregister() -> b
    559:572:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.squareup.picasso.FetchAction -> t6:
    com.squareup.picasso.Callback callback -> n
    java.lang.Object target -> m
    27:30:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,int,int,java.lang.Object,java.lang.String,com.squareup.picasso.Callback) -> <init>
    33:36:void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    39:42:void error(java.lang.Exception) -> a
    45:47:void cancel() -> a
    50:50:java.lang.Object getTarget() -> i
com.squareup.picasso.FileRequestHandler -> u6:
    33:34:void <init>(android.content.Context) -> <init>
    46:47:int getFileExifRotation(android.net.Uri) -> a
    37:37:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    41:42:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.GetAction -> v6:
    23:24:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,int,int,java.lang.Object,java.lang.String) -> <init>
    27:27:void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    30:30:void error(java.lang.Exception) -> a
com.squareup.picasso.ImageViewAction -> w6:
    com.squareup.picasso.Callback callback -> m
    31:34:void <init>(com.squareup.picasso.Picasso,android.widget.ImageView,com.squareup.picasso.Request,int,int,int,android.graphics.drawable.Drawable,java.lang.String,java.lang.Object,com.squareup.picasso.Callback,boolean) -> <init>
    37:39:void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    57:74:void error(java.lang.Exception) -> a
    77:81:void cancel() -> a
com.squareup.picasso.LruCache -> com.squareup.picasso.LruCache:
    android.util.LruCache cache -> a
    31:32:void <init>(android.content.Context) -> <init>
    35:41:void <init>(int) -> <init>
    75:76:void clear() -> clear
    80:87:void clearKeyUri(java.lang.String) -> clearKeyUri
    106:106:int evictionCount() -> evictionCount
    44:45:android.graphics.Bitmap get(java.lang.String) -> get
    91:91:int hitCount() -> hitCount
    71:71:int maxSize() -> maxSize
    96:96:int missCount() -> missCount
    101:101:int putCount() -> putCount
    49:50:void set(java.lang.String,android.graphics.Bitmap) -> set
    67:67:int size() -> size
com.squareup.picasso.LruCache$1 -> com.squareup.picasso.LruCache$a:
    36:36:void <init>(com.squareup.picasso.LruCache,int) -> <init>
    38:38:int sizeOf(java.lang.String,com.squareup.picasso.LruCache$BitmapAndSize) -> a
    36:36:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.squareup.picasso.LruCache$BitmapAndSize -> com.squareup.picasso.LruCache$b:
    android.graphics.Bitmap bitmap -> a
    int byteCount -> b
    113:116:void <init>(android.graphics.Bitmap,int) -> <init>
com.squareup.picasso.MarkableInputStream -> x6:
    long defaultMark -> e
    long offset -> b
    boolean allowExpire -> f
    int limitIncrement -> g
    long limit -> d
    long reset -> c
    java.io.InputStream in -> a
    40:41:void <init>(java.io.InputStream) -> <init>
    44:45:void <init>(java.io.InputStream,int) -> <init>
    47:53:void <init>(java.io.InputStream,int,int) -> <init>
    67:71:long savePosition(int) -> a
    75:76:void allowMarksToExpire(boolean) -> a
    108:109:void reset(long) -> a
    118:129:void skip(long,long) -> a
    174:174:int available() -> available
    87:97:void setLimit(long) -> b
    178:179:void close() -> close
    57:58:void mark(int) -> mark
    182:182:boolean markSupported() -> markSupported
    132:139:int read() -> read
    143:150:int read(byte[]) -> read
    154:161:int read(byte[],int,int) -> read
    103:104:void reset() -> reset
    165:170:long skip(long) -> skip
com.squareup.picasso.MediaStoreRequestHandler -> y6:
    java.lang.String[] CONTENT_ORIENTATION -> b
    42:42:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    100:105:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind getPicassoKind(int,int) -> a
    109:118:int getExifOrientation(android.content.ContentResolver,android.net.Uri) -> a
    51:52:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    57:96:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind -> y6$a:
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind FULL -> f
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MINI -> e
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MICRO -> d
    int width -> b
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] $VALUES -> g
    int height -> c
    int androidKind -> a
    127:126:void <clinit>() -> <clinit>
    135:139:void <init>(java.lang.String,int,int,int,int) -> <init>
    126:126:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String) -> valueOf
    126:126:com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values() -> values
com.squareup.picasso.MemoryPolicy -> com.squareup.picasso.MemoryPolicy:
    com.squareup.picasso.MemoryPolicy[] $VALUES -> b
    int index -> a
    23:19:void <clinit>() -> <clinit>
    40:42:void <init>(java.lang.String,int,int) -> <init>
    31:31:boolean shouldReadFromMemoryCache(int) -> a
    35:35:boolean shouldWriteToMemoryCache(int) -> b
    19:19:com.squareup.picasso.MemoryPolicy valueOf(java.lang.String) -> valueOf
    19:19:com.squareup.picasso.MemoryPolicy[] values() -> values
com.squareup.picasso.NetworkPolicy -> com.squareup.picasso.NetworkPolicy:
    com.squareup.picasso.NetworkPolicy[] $VALUES -> b
    int index -> a
    23:19:void <clinit>() -> <clinit>
    47:49:void <init>(java.lang.String,int,int) -> <init>
    42:42:boolean isOfflineOnly(int) -> isOfflineOnly
    34:34:boolean shouldReadFromDiskCache(int) -> shouldReadFromDiskCache
    38:38:boolean shouldWriteToDiskCache(int) -> shouldWriteToDiskCache
    19:19:com.squareup.picasso.NetworkPolicy valueOf(java.lang.String) -> valueOf
    19:19:com.squareup.picasso.NetworkPolicy[] values() -> values
com.squareup.picasso.NetworkRequestHandler -> z6:
    com.squareup.picasso.Stats stats -> b
    com.squareup.picasso.Downloader downloader -> a
    34:37:void <init>(com.squareup.picasso.Downloader,com.squareup.picasso.Stats) -> <init>
    71:71:int getRetryCount() -> a
    75:75:boolean shouldRetry(boolean,android.net.NetworkInfo) -> a
    83:103:okhttp3.Request createRequest(com.squareup.picasso.Request,int) -> a
    79:79:boolean supportsReplay() -> b
    40:41:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    45:51:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.NetworkRequestHandler$ContentLengthException -> z6$a:
    108:109:void <init>(java.lang.String) -> <init>
com.squareup.picasso.NetworkRequestHandler$ResponseException -> z6$b:
    int networkPolicy -> b
    int code -> a
    117:120:void <init>(int,int) -> <init>
com.squareup.picasso.OkHttp3Downloader -> com.squareup.picasso.OkHttp3Downloader:
    okhttp3.Cache cache -> b
    okhttp3.Call$Factory client -> a
    boolean sharedClient -> c
    40:41:void <init>(android.content.Context) -> <init>
    50:51:void <init>(java.io.File) -> <init>
    60:61:void <init>(android.content.Context,long) -> <init>
    71:73:void <init>(java.io.File,long) -> <init>
    79:82:void <init>(okhttp3.OkHttpClient) -> <init>
    85:88:void <init>(okhttp3.Call$Factory) -> <init>
    91:91:okhttp3.Response load(okhttp3.Request) -> load
    95:101:void shutdown() -> shutdown
com.squareup.picasso.Picasso -> com.squareup.picasso.Picasso:
    com.squareup.picasso.Picasso singleton -> q
    boolean indicatorsEnabled -> m
    boolean loggingEnabled -> n
    boolean shutdown -> o
    com.squareup.picasso.Picasso$Listener listener -> a
    android.os.Handler HANDLER -> p
    com.squareup.picasso.Stats stats -> h
    com.squareup.picasso.Cache cache -> g
    android.content.Context context -> e
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> b
    java.lang.ref.ReferenceQueue referenceQueue -> k
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> c
    java.util.List requestHandlers -> d
    java.util.Map targetToAction -> i
    com.squareup.picasso.Dispatcher dispatcher -> f
    java.util.Map targetToDeferredRequestCreator -> j
    android.graphics.Bitmap$Config defaultBitmapConfig -> l
    114:148:void <clinit>() -> <clinit>
    171:206:void <init>(android.content.Context,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Picasso$Listener,com.squareup.picasso.Picasso$RequestTransformer,java.util.List,com.squareup.picasso.Stats,android.graphics.Bitmap$Config,boolean,boolean) -> <init>
    465:465:java.util.List getRequestHandlers() -> a
    469:472:com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> a
    481:485:void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> a
    488:495:void enqueueAndSubmit(com.squareup.picasso.Action) -> a
    502:508:android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String) -> a
    512:542:void complete(com.squareup.picasso.BitmapHunter) -> a
    566:586:void deliverAction(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,com.squareup.picasso.Action,java.lang.Exception) -> a
    589:603:void cancelExistingRequest(java.lang.Object) -> a
    416:416:boolean areIndicatorsEnabled() -> areIndicatorsEnabled
    545:563:void resumeAction(com.squareup.picasso.Action) -> b
    498:499:void submit(com.squareup.picasso.Action) -> c
    211:212:void cancelRequest(android.widget.ImageView) -> cancelRequest
    220:221:void cancelRequest(com.squareup.picasso.Target) -> cancelRequest
    232:233:void cancelRequest(android.widget.RemoteViews,int) -> cancelRequest
    245:247:void cancelTag(java.lang.Object) -> cancelTag
    677:687:com.squareup.picasso.Picasso get() -> get
    442:442:com.squareup.picasso.StatsSnapshot getSnapshot() -> getSnapshot
    378:381:void invalidate(android.net.Uri) -> invalidate
    391:394:void invalidate(java.lang.String) -> invalidate
    403:404:void invalidate(java.io.File) -> invalidate
    432:432:boolean isLoggingEnabled() -> isLoggingEnabled
    309:309:com.squareup.picasso.RequestCreator load(android.net.Uri) -> load
    328:332:com.squareup.picasso.RequestCreator load(java.lang.String) -> load
    351:354:com.squareup.picasso.RequestCreator load(java.io.File) -> load
    365:366:com.squareup.picasso.RequestCreator load(int) -> load
    278:279:void pauseTag(java.lang.Object) -> pauseTag
    292:293:void resumeTag(java.lang.Object) -> resumeTag
    411:412:void setIndicatorsEnabled(boolean) -> setIndicatorsEnabled
    427:428:void setLoggingEnabled(boolean) -> setLoggingEnabled
    696:697:void setSingletonInstance(com.squareup.picasso.Picasso) -> setSingletonInstance
    447:448:void shutdown() -> shutdown
com.squareup.picasso.Picasso$1 -> com.squareup.picasso.Picasso$a:
    114:114:void <init>(android.os.Looper) -> <init>
    116:145:void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Picasso$Builder -> com.squareup.picasso.Picasso$Builder:
    android.content.Context context -> a
    boolean indicatorsEnabled -> i
    android.graphics.Bitmap$Config defaultBitmapConfig -> h
    boolean loggingEnabled -> j
    com.squareup.picasso.Picasso$Listener listener -> e
    com.squareup.picasso.Downloader downloader -> b
    com.squareup.picasso.Cache cache -> d
    java.util.List requestHandlers -> g
    java.util.concurrent.ExecutorService service -> c
    com.squareup.picasso.Picasso$RequestTransformer transformer -> f
    723:725:void <init>(android.content.Context) -> <init>
    813:814:com.squareup.picasso.Picasso$Builder addRequestHandler(com.squareup.picasso.RequestHandler) -> addRequestHandler
    845:864:com.squareup.picasso.Picasso build() -> build
    735:736:com.squareup.picasso.Picasso$Builder defaultBitmapConfig(android.graphics.Bitmap$Config) -> defaultBitmapConfig
    744:745:com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader) -> downloader
    760:761:com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService) -> executor
    828:829:com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean) -> indicatorsEnabled
    784:785:com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener) -> listener
    839:840:com.squareup.picasso.Picasso$Builder loggingEnabled(boolean) -> loggingEnabled
    772:773:com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache) -> memoryCache
    801:802:com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer) -> requestTransformer
com.squareup.picasso.Picasso$CleanupThread -> com.squareup.picasso.Picasso$b:
    android.os.Handler handler -> b
    java.lang.ref.ReferenceQueue referenceQueue -> a
    614:619:void <init>(java.lang.ref.ReferenceQueue,android.os.Handler) -> <init>
    654:655:void shutdown() -> a
    622:651:void run() -> run
com.squareup.picasso.Picasso$CleanupThread$1 -> com.squareup.picasso.Picasso$b$a:
    java.lang.Exception val$e -> a
    643:643:void <init>(com.squareup.picasso.Picasso$CleanupThread,java.lang.Exception) -> <init>
    645:645:void run() -> run
com.squareup.picasso.Picasso$LoadedFrom -> com.squareup.picasso.Picasso$LoadedFrom:
    com.squareup.picasso.Picasso$LoadedFrom[] $VALUES -> b
    int debugColor -> a
    871:870:void <clinit>() -> <clinit>
    877:879:void <init>(java.lang.String,int,int) -> <init>
    870:870:com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
    870:870:com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
com.squareup.picasso.Picasso$Priority -> com.squareup.picasso.Picasso$Priority:
    com.squareup.picasso.Picasso$Priority[] $VALUES -> a
    108:107:void <clinit>() -> <clinit>
    107:107:void <init>(java.lang.String,int) -> <init>
    107:107:com.squareup.picasso.Picasso$Priority valueOf(java.lang.String) -> valueOf
    107:107:com.squareup.picasso.Picasso$Priority[] values() -> values
com.squareup.picasso.Picasso$RequestTransformer -> com.squareup.picasso.Picasso$RequestTransformer:
    95:95:void <clinit>() -> <clinit>
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.squareup.picasso.Picasso$RequestTransformer$a:
    95:95:void <init>() -> <init>
    97:97:com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
com.squareup.picasso.PicassoDrawable -> a7:
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> c
    android.graphics.drawable.Drawable placeholder -> d
    android.graphics.Paint DEBUG_PAINT -> h
    long startTimeMillis -> e
    boolean animating -> f
    int alpha -> g
    float density -> b
    boolean debugging -> a
    36:36:void <clinit>() -> <clinit>
    77:90:void <init>(android.content.Context,android.graphics.Bitmap,android.graphics.drawable.Drawable,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> <init>
    45:52:void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> a
    59:63:void setPlaceholder(android.widget.ImageView,android.graphics.drawable.Drawable) -> a
    142:149:void drawDebugIndicator(android.graphics.Canvas) -> a
    152:157:android.graphics.Path getTrianglePath(int,int,int) -> a
    93:117:void draw(android.graphics.Canvas) -> draw
    135:139:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    120:125:void setAlpha(int) -> setAlpha
    128:132:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.squareup.picasso.PicassoExecutorService -> b7:
    37:39:void <init>() -> <init>
    42:44:void adjustThreadCount(android.net.NetworkInfo) -> a
    80:82:void setThreadCount(int) -> a
    86:88:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.squareup.picasso.PicassoExecutorService$PicassoFutureTask -> b7$a:
    com.squareup.picasso.BitmapHunter hunter -> a
    96:98:void <init>(com.squareup.picasso.BitmapHunter) -> <init>
    102:107:int compareTo(com.squareup.picasso.PicassoExecutorService$PicassoFutureTask) -> a
    91:91:int compareTo(java.lang.Object) -> compareTo
com.squareup.picasso.PicassoProvider -> com.squareup.picasso.PicassoProvider:
    android.content.Context context -> a
    31:31:void <init>() -> <init>
    56:56:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    47:47:java.lang.String getType(android.net.Uri) -> getType
    51:51:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    36:37:boolean onCreate() -> onCreate
    43:43:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    62:62:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.squareup.picasso.RemoteViewsAction -> c7:
    int viewId -> n
    com.squareup.picasso.Callback callback -> o
    android.widget.RemoteViews remoteViews -> m
    com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget target -> p
    37:41:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,android.widget.RemoteViews,int,int,int,int,java.lang.Object,java.lang.String,com.squareup.picasso.Callback) -> <init>
    44:49:void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    52:56:void cancel() -> a
    59:65:void error(java.lang.Exception) -> a
    75:77:void setImageResource(int) -> a
    68:71:com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget getTarget() -> i
    void update() -> l
com.squareup.picasso.RemoteViewsAction$AppWidgetAction -> c7$a:
    int[] appWidgetIds -> q
    109:112:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,android.widget.RemoteViews,int,int[],int,int,java.lang.String,java.lang.Object,int,com.squareup.picasso.Callback) -> <init>
    103:103:java.lang.Object getTarget() -> i
    115:117:void update() -> l
com.squareup.picasso.RemoteViewsAction$NotificationAction -> c7$b:
    android.app.Notification notification -> s
    java.lang.String notificationTag -> r
    int notificationId -> q
    128:133:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Request,android.widget.RemoteViews,int,int,android.app.Notification,java.lang.String,int,int,java.lang.String,java.lang.Object,int,com.squareup.picasso.Callback) -> <init>
    120:120:java.lang.Object getTarget() -> i
    136:138:void update() -> l
com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget -> c7$c:
    android.widget.RemoteViews remoteViews -> a
    int viewId -> b
    85:88:void <init>(android.widget.RemoteViews,int) -> <init>
    91:92:boolean equals(java.lang.Object) -> equals
    99:99:int hashCode() -> hashCode
com.squareup.picasso.Request -> com.squareup.picasso.Request:
    long started -> b
    long TOO_LONG_LOG -> d
    int networkPolicy -> c
    int id -> a
    34:34:void <clinit>() -> <clinit>
    33:33:void <init>(android.net.Uri,int,java.lang.String,java.util.List,int,int,boolean,boolean,int,boolean,float,float,float,boolean,boolean,android.graphics.Bitmap$Config,com.squareup.picasso.Picasso$Priority,com.squareup.picasso.Request$1) -> <init>
    100:122:void <init>(android.net.Uri,int,java.lang.String,java.util.List,int,int,boolean,boolean,int,boolean,float,float,float,boolean,boolean,android.graphics.Bitmap$Config,com.squareup.picasso.Picasso$Priority) -> <init>
    179:182:java.lang.String getName() -> a
    198:198:boolean hasCustomTransformations() -> b
    202:202:com.squareup.picasso.Request$Builder buildUpon() -> buildUpon
    167:171:java.lang.String logId() -> c
    194:194:boolean needsMatrixTransform() -> d
    190:190:boolean needsTransformation() -> e
    175:175:java.lang.String plainId() -> f
    186:186:boolean hasSize() -> hasSize
    125:163:java.lang.String toString() -> toString
com.squareup.picasso.Request$1 -> com.squareup.picasso.Request$a:
com.squareup.picasso.Request$Builder -> com.squareup.picasso.Request$Builder:
    float rotationPivotY -> l
    boolean hasRotationPivot -> m
    float rotationPivotX -> k
    boolean purgeable -> n
    float rotationDegrees -> j
    java.util.List transformations -> o
    boolean onlyScaleDown -> i
    int centerCropGravity -> g
    int targetWidth -> d
    int targetHeight -> e
    int resourceId -> b
    android.net.Uri uri -> a
    com.squareup.picasso.Picasso$Priority priority -> q
    boolean centerCrop -> f
    boolean centerInside -> h
    java.lang.String stableKey -> c
    android.graphics.Bitmap$Config config -> p
    206:206:void <init>(com.squareup.picasso.Request,com.squareup.picasso.Request$1) -> <init>
    226:228:void <init>(android.net.Uri) -> <init>
    231:233:void <init>(int) -> <init>
    235:239:void <init>(android.net.Uri,int,android.graphics.Bitmap$Config) -> <init>
    241:261:void <init>(com.squareup.picasso.Request) -> <init>
    264:264:boolean hasImage() -> a
    272:272:boolean hasPriority() -> b
    492:506:com.squareup.picasso.Request build() -> build
    268:268:boolean hasSize() -> c
    346:346:com.squareup.picasso.Request$Builder centerCrop() -> centerCrop
    355:356:com.squareup.picasso.Request$Builder centerCrop(int) -> centerCrop
    375:376:com.squareup.picasso.Request$Builder centerInside() -> centerInside
    365:367:com.squareup.picasso.Request$Builder clearCenterCrop() -> clearCenterCrop
    384:385:com.squareup.picasso.Request$Builder clearCenterInside() -> clearCenterInside
    402:403:com.squareup.picasso.Request$Builder clearOnlyScaleDown() -> clearOnlyScaleDown
    333:337:com.squareup.picasso.Request$Builder clearResize() -> clearResize
    423:427:com.squareup.picasso.Request$Builder clearRotation() -> clearRotation
    437:438:com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config) -> config
    393:397:com.squareup.picasso.Request$Builder onlyScaleDown() -> onlyScaleDown
    446:447:com.squareup.picasso.Request$Builder priority(com.squareup.picasso.Picasso$Priority) -> priority
    431:432:com.squareup.picasso.Request$Builder purgeable() -> purgeable
    317:318:com.squareup.picasso.Request$Builder resize(int,int) -> resize
    408:409:com.squareup.picasso.Request$Builder rotate(float) -> rotate
    414:418:com.squareup.picasso.Request$Builder rotate(float,float,float) -> rotate
    295:296:com.squareup.picasso.Request$Builder setResourceId(int) -> setResourceId
    281:282:com.squareup.picasso.Request$Builder setUri(android.net.Uri) -> setUri
    308:309:com.squareup.picasso.Request$Builder stableKey(java.lang.String) -> stableKey
    462:463:com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation) -> transform
    481:482:com.squareup.picasso.Request$Builder transform(java.util.List) -> transform
com.squareup.picasso.RequestCreator -> com.squareup.picasso.RequestCreator:
    int memoryPolicy -> h
    int networkPolicy -> i
    android.graphics.drawable.Drawable placeholderDrawable -> j
    java.util.concurrent.atomic.AtomicInteger nextId -> m
    int placeholderResId -> f
    int errorResId -> g
    com.squareup.picasso.Request$Builder data -> b
    java.lang.Object tag -> l
    com.squareup.picasso.Picasso picasso -> a
    boolean setPlaceholder -> e
    android.graphics.drawable.Drawable errorDrawable -> k
    boolean noFade -> c
    boolean deferred -> d
    58:58:void <clinit>() -> <clinit>
    74:76:void <init>(com.squareup.picasso.Picasso,android.net.Uri,int) -> <init>
    83:86:void <init>() -> <init>
    216:217:com.squareup.picasso.RequestCreator clearTag() -> a
    756:778:com.squareup.picasso.Request createRequest(long) -> a
    782:795:void performRemoteViewInto(com.squareup.picasso.RemoteViewsAction) -> a
    739:750:android.graphics.drawable.Drawable getPlaceholderDrawable() -> b
    222:222:java.lang.Object getTag() -> c
    245:246:com.squareup.picasso.RequestCreator centerCrop() -> centerCrop
    255:256:com.squareup.picasso.RequestCreator centerCrop(int) -> centerCrop
    264:265:com.squareup.picasso.RequestCreator centerInside() -> centerInside
    296:297:com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config) -> config
    210:211:com.squareup.picasso.RequestCreator unfit() -> d
    146:147:com.squareup.picasso.RequestCreator error(int) -> error
    158:159:com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable) -> error
    439:440:void fetch() -> fetch
    452:455:void fetch(com.squareup.picasso.Callback) -> fetch
    204:205:com.squareup.picasso.RequestCreator fit() -> fit
    415:419:android.graphics.Bitmap get() -> get
    531:535:void into(com.squareup.picasso.Target) -> into
    573:574:void into(android.widget.RemoteViews,int,int,android.app.Notification) -> into
    582:583:void into(android.widget.RemoteViews,int,int,android.app.Notification,java.lang.String) -> into
    591:594:void into(android.widget.RemoteViews,int,int,android.app.Notification,java.lang.String,com.squareup.picasso.Callback) -> into
    623:624:void into(android.widget.RemoteViews,int,int[]) -> into
    632:635:void into(android.widget.RemoteViews,int,int[],com.squareup.picasso.Callback) -> into
    665:666:void into(android.widget.ImageView) -> into
    678:682:void into(android.widget.ImageView,com.squareup.picasso.Callback) -> into
    348:349:com.squareup.picasso.RequestCreator memoryPolicy(com.squareup.picasso.MemoryPolicy,com.squareup.picasso.MemoryPolicy[]) -> memoryPolicy
    372:373:com.squareup.picasso.RequestCreator networkPolicy(com.squareup.picasso.NetworkPolicy,com.squareup.picasso.NetworkPolicy[]) -> networkPolicy
    404:405:com.squareup.picasso.RequestCreator noFade() -> noFade
    96:97:com.squareup.picasso.RequestCreator noPlaceholder() -> noPlaceholder
    273:274:com.squareup.picasso.RequestCreator onlyScaleDown() -> onlyScaleDown
    112:113:com.squareup.picasso.RequestCreator placeholder(int) -> placeholder
    134:135:com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable) -> placeholder
    317:318:com.squareup.picasso.RequestCreator priority(com.squareup.picasso.Picasso$Priority) -> priority
    398:399:com.squareup.picasso.RequestCreator purgeable() -> purgeable
    235:236:com.squareup.picasso.RequestCreator resize(int,int) -> resize
    227:230:com.squareup.picasso.RequestCreator resizeDimen(int,int) -> resizeDimen
    279:280:com.squareup.picasso.RequestCreator rotate(float) -> rotate
    285:286:com.squareup.picasso.RequestCreator rotate(float,float,float) -> rotate
    305:306:com.squareup.picasso.RequestCreator stableKey(java.lang.String) -> stableKey
    187:188:com.squareup.picasso.RequestCreator tag(java.lang.Object) -> tag
    328:329:com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation) -> transform
    338:339:com.squareup.picasso.RequestCreator transform(java.util.List) -> transform
com.squareup.picasso.RequestHandler -> com.squareup.picasso.RequestHandler:
    45:45:void <init>() -> <init>
    122:122:int getRetryCount() -> a
    126:126:boolean shouldRetry(boolean,android.net.NetworkInfo) -> a
    138:150:android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request) -> a
    154:154:boolean requiresInSampleSize(android.graphics.BitmapFactory$Options) -> a
    159:161:void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> a
    165:183:void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> a
    130:130:boolean supportsReplay() -> b
com.squareup.picasso.RequestHandler$Result -> com.squareup.picasso.RequestHandler$Result:
    android.graphics.Bitmap bitmap -> b
    okio.Source source -> c
    int exifOrientation -> d
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> a
    60:61:void <init>(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> <init>
    64:65:void <init>(okio.Source,com.squareup.picasso.Picasso$LoadedFrom) -> <init>
    71:73:void <init>(android.graphics.Bitmap,okio.Source,com.squareup.picasso.Picasso$LoadedFrom,int) -> <init>
    104:104:int getExifOrientation() -> a
    83:83:android.graphics.Bitmap getBitmap() -> getBitmap
    96:96:com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    88:88:okio.Source getSource() -> getSource
com.squareup.picasso.ResourceRequestHandler -> d7:
    android.content.Context context -> a
    30:32:void <init>(android.content.Context) -> <init>
    49:54:android.graphics.Bitmap decodeResource(android.content.res.Resources,int,com.squareup.picasso.Request) -> a
    35:39:boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    43:45:com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.Stats -> e7:
    long averageOriginalBitmapSize -> j
    int transformedBitmapCount -> n
    long averageDownloadSize -> i
    int downloadCount -> l
    long averageTransformedBitmapSize -> k
    int originalBitmapCount -> m
    long totalDownloadSize -> f
    long cacheMisses -> e
    long totalTransformedBitmapSize -> h
    long totalOriginalBitmapSize -> g
    long cacheHits -> d
    android.os.HandlerThread statsThread -> a
    com.squareup.picasso.Cache cache -> b
    android.os.Handler handler -> c
    51:57:void <init>(com.squareup.picasso.Cache) -> <init>
    60:61:void dispatchBitmapDecoded(android.graphics.Bitmap) -> a
    68:69:void dispatchDownloadFinished(long) -> a
    92:95:void performDownloadFinished(java.lang.Long) -> a
    110:110:com.squareup.picasso.StatsSnapshot createSnapshot() -> a
    118:120:void processBitmap(android.graphics.Bitmap,int) -> a
    123:123:long getAverage(int,long) -> a
    64:65:void dispatchBitmapTransformed(android.graphics.Bitmap) -> b
    72:73:void dispatchCacheHit() -> b
    98:101:void performBitmapDecoded(long) -> b
    76:77:void dispatchCacheMiss() -> c
    104:107:void performBitmapTransformed(long) -> c
    84:85:void performCacheHit() -> d
    88:89:void performCacheMiss() -> e
    80:81:void shutdown() -> f
com.squareup.picasso.Stats$StatsHandler -> e7$a:
    com.squareup.picasso.Stats stats -> a
    131:133:void <init>(android.os.Looper,com.squareup.picasso.Stats) -> <init>
    136:159:void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Stats$StatsHandler$1 -> e7$a$a:
    android.os.Message val$msg -> a
    153:153:void <init>(com.squareup.picasso.Stats$StatsHandler,android.os.Message) -> <init>
    155:155:void run() -> run
com.squareup.picasso.StatsSnapshot -> com.squareup.picasso.StatsSnapshot:
    45:60:void <init>(int,int,long,long,long,long,long,long,long,long,int,int,int,long) -> <init>
    64:67:void dump() -> dump
    71:105:void dump(java.io.PrintWriter) -> dump
    108:108:java.lang.String toString() -> toString
com.squareup.picasso.TargetAction -> f7:
    25:27:void <init>(com.squareup.picasso.Picasso,com.squareup.picasso.Target,com.squareup.picasso.Request,int,int,android.graphics.drawable.Drawable,java.lang.String,java.lang.Object,int) -> <init>
    30:32:void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> a
    44:52:void error(java.lang.Exception) -> a
com.squareup.picasso.Utils -> g7:
    okio.ByteString WEBP_FILE_HEADER_WEBP -> c
    okio.ByteString WEBP_FILE_HEADER_RIFF -> b
    java.lang.StringBuilder MAIN_THREAD_KEY_BUILDER -> a
    61:98:void <clinit>() -> <clinit>
    105:107:int getBitmapBytes(android.graphics.Bitmap) -> a
    113:114:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> a
    126:127:void checkMain() -> a
    136:136:java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter) -> a
    140:152:java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter,java.lang.String) -> a
    156:157:void log(java.lang.String,java.lang.String,java.lang.String) -> a
    160:161:void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    164:166:java.lang.String createKey(com.squareup.picasso.Request) -> a
    170:208:java.lang.String createKey(com.squareup.picasso.Request,java.lang.StringBuilder) -> a
    222:239:long calculateDiskCacheSize(java.io.File) -> a
    243:247:int calculateMemoryCacheSize(android.content.Context) -> a
    270:270:java.lang.Object getService(android.content.Context,java.lang.String) -> a
    278:278:boolean isWebPFile(okio.BufferedSource) -> a
    283:284:int getResourceId(android.content.res.Resources,com.squareup.picasso.Request) -> a
    312:313:android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request) -> a
    332:338:void flushStackLocalLeaks(android.os.Looper) -> a
    120:121:void checkNotMain() -> b
    212:217:java.io.File createDefaultCacheDir(android.content.Context) -> b
    274:274:boolean hasPermission(android.content.Context,java.lang.String) -> b
    132:132:boolean isMain() -> c
    251:261:boolean isAirplaneModeOn(android.content.Context) -> c
com.squareup.picasso.Utils$1 -> g7$a:
    332:332:void <init>(android.os.Looper) -> <init>
    334:335:void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Utils$PicassoThread -> g7$b:
    349:350:void <init>(java.lang.Runnable) -> <init>
    353:355:void run() -> run
com.squareup.picasso.Utils$PicassoThreadFactory -> g7$c:
    340:340:void <init>() -> <init>
    343:343:java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.github.prabhuomkar.pytorchandroid.BuildConfig -> io.github.prabhuomkar.pytorchandroid.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
io.github.prabhuomkar.pytorchandroid.Constants -> io.github.prabhuomkar.pytorchandroid.Constants:
    28:36:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
io.github.prabhuomkar.pytorchandroid.Constants$1 -> io.github.prabhuomkar.pytorchandroid.Constants$a:
    28:33:void <init>() -> <init>
io.github.prabhuomkar.pytorchandroid.Constants$2 -> io.github.prabhuomkar.pytorchandroid.Constants$b:
    36:52:void <init>() -> <init>
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.-$$Lambda$Runner$n6k2t_UkJdujrM1f8E9uhVmXAK4 -> h7:
    io.github.prabhuomkar.pytorchandroid.datasets.imagenet.-$$Lambda$Runner$n6k2t_UkJdujrM1f8E9uhVmXAK4 INSTANCE -> a
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Runner -> io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Runner:
    22:22:void <init>() -> <init>
    41:41:int lambda$imageNet$0(android.util.Pair,android.util.Pair) -> a
    27:34:java.util.List imageNet(android.content.Context,androidx.camera.core.ImageProxy,int,java.lang.String) -> imageNet
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target -> io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target:
    8:8:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
io.github.prabhuomkar.pytorchandroid.helpers.-$$Lambda$DownloadHelper$fACEL5HxyNtQYxHjJTRprB268mk -> i7:
    android.view.View f$0 -> a
io.github.prabhuomkar.pytorchandroid.helpers.-$$Lambda$DownloadHelper$i1xHZ95BkYoDlBpRDEZlwTWa0FI -> j7:
    android.view.View f$0 -> a
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper -> io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper:
    15:15:void <init>() -> <init>
    38:42:androidx.camera.core.ImageAnalysis buildImageAnalysis() -> buildImageAnalysis
    18:34:androidx.camera.core.Preview buildPreview(io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView) -> buildPreview
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper$1 -> io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper$a:
    io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView val$textureView -> a
    25:25:void <init>(io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView) -> <init>
    28:32:void onUpdated(androidx.camera.core.Preview$PreviewOutput) -> onUpdated
io.github.prabhuomkar.pytorchandroid.helpers.DataHelper -> io.github.prabhuomkar.pytorchandroid.helpers.DataHelper:
    8:8:void <init>() -> <init>
    11:13:java.util.ArrayList getModelListForTask(java.lang.String) -> getModelListForTask
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper -> io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper:
    14:14:void <init>() -> <init>
    22:24:void lambda$downloadModel$0(android.view.View) -> a
    26:31:void lambda$downloadModel$1(android.view.View,com.downloader.Progress) -> a
    52:54:void cancelDownload(java.lang.String) -> cancelDownload
    18:18:int downloadModel(android.content.Context,android.view.View,java.lang.String,java.lang.String,java.lang.String) -> downloadModel
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper$1 -> io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper$a:
    android.content.Context val$context -> a
    android.view.View val$view -> c
    java.lang.String val$fileName -> b
    32:32:void <init>(android.content.Context,java.lang.String,android.view.View) -> <init>
    35:39:void onDownloadComplete() -> onDownloadComplete
    43:47:void onError(com.downloader.Error) -> onError
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper -> io.github.prabhuomkar.pytorchandroid.helpers.FileHelper:
    12:12:void <init>() -> <init>
    37:38:boolean checkIfFileExists(java.lang.String) -> checkIfFileExists
    20:20:java.lang.String getAssetFileNameForModel(java.lang.String) -> getAssetFileNameForModel
    15:16:java.lang.String getAssetModelFilePath(android.content.Context,java.lang.String) -> getAssetModelFilePath
    32:32:java.lang.String getDownloadDirPath(android.content.Context) -> getDownloadDirPath
    24:26:int getImageResourceId(android.content.Context,java.lang.String) -> getImageResourceId
io.github.prabhuomkar.pytorchandroid.helpers.FragmentHelper -> io.github.prabhuomkar.pytorchandroid.helpers.FragmentHelper:
    9:9:void <init>() -> <init>
    13:20:void switchFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManager,java.lang.Boolean) -> switchFragment
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper -> io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper:
    java.lang.String[] PERMISSIONS_LIST -> a
    23:23:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    55:87:void checkPermissions(androidx.appcompat.app.AppCompatActivity,int,java.lang.String[],int[]) -> checkPermissions
    30:38:void getPermissions(androidx.appcompat.app.AppCompatActivity) -> getPermissions
    41:48:boolean hasAllPermissions(androidx.appcompat.app.AppCompatActivity) -> hasAllPermissions
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper$1 -> io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper$a:
    77:77:void <init>() -> <init>
    80:81:void onClick(android.content.DialogInterface,int) -> onClick
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper$2 -> io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper$b:
    androidx.appcompat.app.AppCompatActivity val$appCompatActivity -> a
    66:66:void <init>(androidx.appcompat.app.AppCompatActivity) -> <init>
    69:75:void onClick(android.content.DialogInterface,int) -> onClick
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper -> io.github.prabhuomkar.pytorchandroid.helpers.UIHelper:
    20:20:void <init>() -> <init>
    23:27:void setCustomActionBar(androidx.appcompat.app.AppCompatActivity) -> setCustomActionBar
    31:41:void setupRecyclerView(android.view.View,android.content.Context,int,boolean,androidx.recyclerview.widget.RecyclerView$Adapter) -> setupRecyclerView
    44:50:void updateModelDownloadButton(android.view.View,java.lang.String) -> updateModelDownloadButton
    53:61:void updateModelDownloadProgress(android.view.View,java.lang.String) -> updateModelDownloadProgress
io.github.prabhuomkar.pytorchandroid.models.Model -> io.github.prabhuomkar.pytorchandroid.models.Model:
    java.lang.String imageLink -> f
    int size -> g
    java.lang.String name -> a
    java.lang.String paperLink -> c
    java.lang.String description -> b
    java.lang.String downloadLink -> e
    java.lang.String sourceLink -> d
    8:16:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    23:23:java.lang.String getDescription() -> getDescription
    35:35:java.lang.String getDownloadLink() -> getDownloadLink
    39:39:java.lang.String getImageLink() -> getImageLink
    19:19:java.lang.String getName() -> getName
    27:27:java.lang.String getPaperLink() -> getPaperLink
    43:43:int getSize() -> getSize
    31:31:java.lang.String getSourceLink() -> getSourceLink
io.github.prabhuomkar.pytorchandroid.models.Task -> io.github.prabhuomkar.pytorchandroid.models.Task:
    java.lang.String name -> a
    java.lang.String imageLink -> c
    java.lang.String description -> b
    6:10:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String getDescription() -> getDescription
    21:21:java.lang.String getImageLink() -> getImageLink
    13:13:java.lang.String getName() -> getName
io.github.prabhuomkar.pytorchandroid.playground.-$$Lambda$ImageClassificationActivity$_n1DUjtDEt2IWdW73yjTNk11uhU -> k7:
    io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity f$0 -> a
io.github.prabhuomkar.pytorchandroid.playground.-$$Lambda$ImageClassificationActivity$c3SyEGJeZyBnMP5M44fipftQe_M -> l7:
    io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity f$0 -> a
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView -> io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView:
    int mCameraHeight -> b
    boolean mSquarePreview -> c
    int mCameraWidth -> a
    16:17:void <init>(android.content.Context) -> <init>
    20:21:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    24:25:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    64:70:android.graphics.Matrix squareTransform(int,int) -> a
    39:61:void onMeasure(int,int) -> onMeasure
    28:29:void setAspectRatio(int,int,boolean) -> setAspectRatio
io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity -> io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity:
    android.widget.TextView resultClass2 -> u
    java.util.List scoresWithIdx -> D
    android.widget.TextView resultClass1 -> t
    android.widget.TextView resultScore1 -> w
    android.widget.TextView resultClass3 -> v
    android.widget.TextView resultScore3 -> y
    android.widget.TextView resultScore2 -> x
    java.lang.Boolean modelExists -> C
    android.widget.TextView modelNameView -> z
    java.lang.String modelName -> B
    io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView textureView -> A
    28:34:void <init>() -> <init>
    77:91:void lambda$startCamera$1(androidx.camera.core.ImageProxy,int) -> a
    97:108:void updateUIWithResults(java.util.List) -> a
    84:90:void lambda$null$0() -> b
    71:93:void startCamera() -> c
    39:62:void onCreate(android.os.Bundle) -> onCreate
    66:68:void onPause() -> onPause
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity -> io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity:
    21:21:void <init>() -> <init>
    25:30:void onCreate(android.os.Bundle) -> onCreate
    34:35:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    40:60:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    66:68:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
io.github.prabhuomkar.pytorchandroid.ui.adapters.-$$Lambda$ModelListAdapter$ModelView$2qCHSw38RPQmqvtoSgeFP5UvCHg -> m7:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView f$0 -> a
io.github.prabhuomkar.pytorchandroid.ui.adapters.-$$Lambda$ModelListAdapter$ModelView$Xvi-zcNyC9BAyPCBQIw6U8l3eJ4 -> n7:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView f$0 -> a
    android.view.View f$1 -> b
io.github.prabhuomkar.pytorchandroid.ui.adapters.-$$Lambda$ModelListAdapter$ModelView$ZaTwJbT1gTTUjeTO0DwmNniPV-0 -> o7:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView f$0 -> a
io.github.prabhuomkar.pytorchandroid.ui.adapters.-$$Lambda$ModelListAdapter$ModelView$yUQHgzrhaXltcWABs2SWeeKhBX0 -> p7:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView f$0 -> a
io.github.prabhuomkar.pytorchandroid.ui.adapters.-$$Lambda$TaskListAdapter$A20xinHDBQ6u9r_4n0KqphpFTGc -> q7:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter f$0 -> a
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter -> io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter:
    java.util.List modelList -> c
    android.content.Context context -> d
    33:35:void <init>(java.util.List) -> <init>
    28:28:android.content.Context access$000(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter) -> a
    28:28:java.util.List access$100(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter) -> b
    64:64:int getItemCount() -> getItemCount
    28:28:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    48:60:void onBindViewHolder(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView,int) -> onBindViewHolder
    28:28:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    40:43:io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView -> io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView:
    android.widget.Button modelRunButton -> y
    android.widget.Button modelDownloadButton -> x
    android.widget.TextView modelNameView -> s
    android.widget.TextView modelPaperLinkView -> u
    android.widget.TextView modelDescriptionView -> t
    android.widget.TextView modelSizeView -> w
    android.widget.TextView modelSourceLinkView -> v
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter this$0 -> z
    76:123:void <init>(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter,android.view.View) -> <init>
    96:96:void lambda$new$0(android.view.View) -> a
    103:115:void lambda$new$2(android.view.View,android.view.View) -> a
    99:99:void lambda$new$1(android.view.View) -> b
    117:122:void lambda$new$3(android.view.View) -> c
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter -> io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter:
    java.util.List taskList -> c
    android.content.Context context -> d
    27:29:void <init>(java.util.List) -> <init>
    40:42:void lambda$onCreateViewHolder$0(android.view.View,int) -> a
    58:58:int getItemCount() -> getItemCount
    22:22:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    49:54:void onBindViewHolder(io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView,int) -> onBindViewHolder
    22:22:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    34:44:io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView -> io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView:
    android.widget.ImageView taskImageView -> v
    android.widget.TextView taskDescriptionView -> u
    android.widget.TextView taskNameView -> t
    io.github.prabhuomkar.pytorchandroid.ui.adapters.RecyclerViewClickListener clickListener -> s
    68:78:void <init>(io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter,android.view.View,io.github.prabhuomkar.pytorchandroid.ui.adapters.RecyclerViewClickListener) -> <init>
    82:83:void onClick(android.view.View) -> onClick
io.github.prabhuomkar.pytorchandroid.ui.fragments.AppInfoFragment -> io.github.prabhuomkar.pytorchandroid.ui.fragments.AppInfoFragment:
    12:12:void <init>() -> <init>
    16:16:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
io.github.prabhuomkar.pytorchandroid.ui.fragments.HomeFragment -> io.github.prabhuomkar.pytorchandroid.ui.fragments.HomeFragment:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter taskListAdapter -> Y
    16:16:void <init>() -> <init>
    23:29:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment -> io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment:
    io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter modelListAdapter -> Z
    io.github.prabhuomkar.pytorchandroid.models.Task mTask -> Y
    17:17:void <init>() -> <init>
    26:32:io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment newInstance(io.github.prabhuomkar.pytorchandroid.models.Task) -> newInstance
    37:43:void onCreate(android.os.Bundle) -> onCreate
    48:54:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
okhttp3.Address -> okhttp3.Address:
    okhttp3.Authenticator proxyAuthenticator -> d
    javax.net.ssl.HostnameVerifier hostnameVerifier -> j
    okhttp3.HttpUrl url -> a
    java.util.List connectionSpecs -> f
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> i
    javax.net.SocketFactory socketFactory -> c
    java.util.List protocols -> e
    okhttp3.CertificatePinner certificatePinner -> k
    java.net.ProxySelector proxySelector -> g
    java.net.Proxy proxy -> h
    okhttp3.Dns dns -> b
    55:62:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    176:176:boolean equalsNonHost(okhttp3.Address) -> a
    151:151:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    120:120:java.util.List connectionSpecs() -> connectionSpecs
    98:98:okhttp3.Dns dns() -> dns
    155:155:boolean equals(java.lang.Object) -> equals
    161:172:int hashCode() -> hashCode
    146:146:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    116:116:java.util.List protocols() -> protocols
    136:136:java.net.Proxy proxy() -> proxy
    108:108:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    128:128:java.net.ProxySelector proxySelector() -> proxySelector
    103:103:javax.net.SocketFactory socketFactory() -> socketFactory
    141:141:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    189:200:java.lang.String toString() -> toString
    93:93:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
    64:64:void <clinit>() -> <clinit>
okhttp3.Authenticator$1 -> okhttp3.Authenticator$a:
    64:64:void <init>() -> <init>
    66:66:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
okhttp3.Cache -> okhttp3.Cache:
    int hitCount -> f
    int requestCount -> g
    int writeAbortCount -> d
    int networkCount -> e
    int writeSuccessCount -> c
    okhttp3.internal.cache.InternalCache internalCache -> a
    okhttp3.internal.cache.DiskLruCache cache -> b
    179:180:void <init>(java.io.File,long) -> <init>
    182:184:void <init>(java.io.File,long,okhttp3.internal.io.FileSystem) -> <init>
    191:201:okhttp3.Response get(okhttp3.Request) -> a
    222:254:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> a
    263:275:void update(okhttp3.Response,okhttp3.Response) -> a
    280:285:void abortQuietly(okhttp3.internal.cache.DiskLruCache$Editor) -> a
    403:402:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> a
    415:414:void trackConditionalCacheHit() -> a
    722:729:int readInt(okio.BufferedSource) -> a
    259:260:void remove(okhttp3.Request) -> b
    391:392:void close() -> close
    307:308:void delete() -> delete
    395:395:java.io.File directory() -> directory
    315:316:void evictAll() -> evictAll
    387:388:void flush() -> flush
    423:423:int hitCount() -> hitCount
    299:300:void initialize() -> initialize
    399:399:boolean isClosed() -> isClosed
    187:187:java.lang.String key(okhttp3.HttpUrl) -> key
    383:383:long maxSize() -> maxSize
    419:419:int networkCount() -> networkCount
    427:427:int requestCount() -> requestCount
    379:379:long size() -> size
    328:328:java.util.Iterator urls() -> urls
    371:371:int writeAbortCount() -> writeAbortCount
    375:375:int writeSuccessCount() -> writeSuccessCount
okhttp3.Cache$1 -> okhttp3.Cache$a:
    okhttp3.Cache this$0 -> a
    143:143:void <init>(okhttp3.Cache) -> <init>
    145:145:okhttp3.Response get(okhttp3.Request) -> get
    149:149:okhttp3.internal.cache.CacheRequest put(okhttp3.Response) -> put
    153:154:void remove(okhttp3.Request) -> remove
    161:162:void trackConditionalCacheHit() -> trackConditionalCacheHit
    165:166:void trackResponse(okhttp3.internal.cache.CacheStrategy) -> trackResponse
    157:158:void update(okhttp3.Response,okhttp3.Response) -> update
okhttp3.Cache$2 -> okhttp3.Cache$b:
    java.util.Iterator delegate -> a
    java.lang.String nextUrl -> b
    boolean canRemove -> c
    okhttp3.Cache this$0 -> d
    328:329:void <init>(okhttp3.Cache) -> <init>
    335:352:boolean hasNext() -> hasNext
    328:328:java.lang.Object next() -> next
    356:356:java.lang.String next() -> next
    364:364:void remove() -> remove
okhttp3.Cache$CacheRequestImpl -> okhttp3.Cache$c:
    okio.Sink cacheOut -> b
    okio.Sink body -> c
    okhttp3.internal.cache.DiskLruCache$Editor editor -> a
    okhttp3.Cache this$0 -> e
    boolean done -> d
    436:452:void <init>(okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    455:461:void abort() -> abort
    470:470:okio.Sink body() -> body
okhttp3.Cache$CacheRequestImpl$1 -> okhttp3.Cache$c$a:
    okhttp3.Cache$CacheRequestImpl this$1 -> c
    okhttp3.internal.cache.DiskLruCache$Editor val$editor -> b
    439:439:void <init>(okhttp3.Cache$CacheRequestImpl,okio.Sink,okhttp3.Cache,okhttp3.internal.cache.DiskLruCache$Editor) -> <init>
    441:447:void close() -> close
okhttp3.Cache$CacheResponseBody -> okhttp3.Cache$d:
    okio.BufferedSource bodySource -> c
    okhttp3.internal.cache.DiskLruCache$Snapshot snapshot -> b
    java.lang.String contentLength -> e
    java.lang.String contentType -> d
    740:752:void <init>(okhttp3.internal.cache.DiskLruCache$Snapshot,java.lang.String,java.lang.String) -> <init>
    760:762:long contentLength() -> contentLength
    755:755:okhttp3.MediaType contentType() -> contentType
    767:767:okio.BufferedSource source() -> source
okhttp3.Cache$CacheResponseBody$1 -> okhttp3.Cache$d$a:
    okhttp3.internal.cache.DiskLruCache$Snapshot val$snapshot -> b
    746:746:void <init>(okhttp3.Cache$CacheResponseBody,okio.Source,okhttp3.internal.cache.DiskLruCache$Snapshot) -> <init>
    748:750:void close() -> close
okhttp3.Cache$Entry -> okhttp3.Cache$e:
    long receivedResponseMillis -> j
    java.lang.String message -> f
    long sentRequestMillis -> i
    okhttp3.Handshake handshake -> h
    java.lang.String SENT_MILLIS -> k
    java.lang.String RECEIVED_MILLIS -> l
    java.lang.String url -> a
    okhttp3.Headers responseHeaders -> g
    int code -> e
    java.lang.String requestMethod -> c
    okhttp3.Protocol protocol -> d
    okhttp3.Headers varyHeaders -> b
    476:479:void <clinit>() -> <clinit>
    540:590:void <init>(okio.Source) -> <init>
    594:605:void <init>(okhttp3.Response) -> <init>
    608:651:void writeTo(okhttp3.internal.cache.DiskLruCache$Editor) -> a
    654:654:boolean isHttps() -> a
    658:672:java.util.List readCertificateList(okio.BufferedSource) -> a
    679:688:void writeCertList(okio.BufferedSink,java.util.List) -> a
    693:693:boolean matches(okhttp3.Request,okhttp3.Response) -> a
    699:706:okhttp3.Response response(okhttp3.internal.cache.DiskLruCache$Snapshot) -> a
okhttp3.CacheControl -> okhttp3.CacheControl:
    boolean onlyIfCached -> j
    int maxStaleSeconds -> h
    boolean noTransform -> k
    java.lang.String headerValue -> m
    int minFreshSeconds -> i
    boolean immutable -> l
    int sMaxAgeSeconds -> d
    int maxAgeSeconds -> c
    boolean isPrivate -> e
    boolean isPublic -> f
    boolean mustRevalidate -> g
    boolean noCache -> a
    boolean noStore -> b
    18:25:void <clinit>() -> <clinit>
    48:62:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    64:77:void <init>(okhttp3.CacheControl$Builder) -> <init>
    259:274:java.lang.String headerValue() -> a
    145:145:boolean immutable() -> immutable
    111:111:boolean isPrivate() -> isPrivate
    115:115:boolean isPublic() -> isPublic
    99:99:int maxAgeSeconds() -> maxAgeSeconds
    123:123:int maxStaleSeconds() -> maxStaleSeconds
    127:127:int minFreshSeconds() -> minFreshSeconds
    119:119:boolean mustRevalidate() -> mustRevalidate
    87:87:boolean noCache() -> noCache
    92:92:boolean noStore() -> noStore
    141:141:boolean noTransform() -> noTransform
    137:137:boolean onlyIfCached() -> onlyIfCached
    153:248:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
    107:107:int sMaxAgeSeconds() -> sMaxAgeSeconds
    254:255:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
    boolean onlyIfCached -> f
    int maxStaleSeconds -> d
    boolean noTransform -> g
    int minFreshSeconds -> e
    boolean immutable -> h
    boolean noCache -> a
    boolean noStore -> b
    int maxAgeSeconds -> c
    278:283:void <init>() -> <init>
    370:370:okhttp3.CacheControl build() -> build
    365:366:okhttp3.CacheControl$Builder immutable() -> immutable
    308:308:okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit) -> maxAge
    324:324:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    341:341:okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit) -> minFresh
    290:291:okhttp3.CacheControl$Builder noCache() -> noCache
    296:297:okhttp3.CacheControl$Builder noStore() -> noStore
    360:361:okhttp3.CacheControl$Builder noTransform() -> noTransform
    354:355:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> b
    java.util.Set pins -> a
    129:129:void <clinit>() -> <clinit>
    134:137:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    218:225:java.util.List findMatchingPins(java.lang.String) -> a
    231:231:okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner) -> a
    250:250:okio.ByteString sha1(java.security.cert.X509Certificate) -> a
    254:254:okio.ByteString sha256(java.security.cert.X509Certificate) -> b
    162:204:void check(java.lang.String,java.util.List) -> check
    210:211:void check(java.lang.String,java.security.cert.Certificate[]) -> check
    140:141:boolean equals(java.lang.Object) -> equals
    147:149:int hashCode() -> hashCode
    243:244:java.lang.String pin(java.security.cert.Certificate) -> pin
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
    java.util.List pins -> a
    320:321:void <init>() -> <init>
    331:331:okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[]) -> add
    341:341:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$a:
    okio.ByteString hash -> d
    java.lang.String pattern -> a
    java.lang.String hashAlgorithm -> c
    java.lang.String canonicalHostname -> b
    268:280:void <init>(java.lang.String,java.lang.String) -> <init>
    289:296:boolean matches(java.lang.String) -> a
    300:300:boolean equals(java.lang.Object) -> equals
    307:311:int hashCode() -> hashCode
    315:315:java.lang.String toString() -> toString
okhttp3.Challenge -> okhttp3.Challenge:
    java.nio.charset.Charset charset -> c
    java.lang.String scheme -> a
    java.lang.String realm -> b
    30:31:void <init>(java.lang.String,java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    59:59:java.nio.charset.Charset charset() -> charset
    63:63:boolean equals(java.lang.Object) -> equals
    70:74:int hashCode() -> hashCode
    54:54:java.lang.String realm() -> realm
    49:49:java.lang.String scheme() -> scheme
    78:78:java.lang.String toString() -> toString
    44:44:okhttp3.Challenge withCharset(java.nio.charset.Charset) -> withCharset
okhttp3.CipherSuite -> okhttp3.CipherSuite:
    java.util.Map INSTANCES -> c
    java.lang.String javaName -> a
    java.util.Comparator ORDER_BY_NAME -> b
    43:385:void <clinit>() -> <clinit>
    415:417:void <init>(java.lang.String) -> <init>
    408:412:java.util.List forJavaNames(java.lang.String[]) -> a
    428:428:okhttp3.CipherSuite of(java.lang.String,int) -> a
    399:398:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    438:438:java.lang.String javaName() -> javaName
    442:442:java.lang.String toString() -> toString
okhttp3.CipherSuite$1 -> okhttp3.CipherSuite$a:
    43:43:void <init>() -> <init>
    45:53:int compare(java.lang.String,java.lang.String) -> a
    43:43:int compare(java.lang.Object,java.lang.Object) -> compare
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
    java.util.Deque connections -> d
    java.lang.Runnable cleanupRunnable -> c
    long keepAliveDurationNs -> b
    boolean cleanupRunning -> f
    java.util.concurrent.Executor executor -> g
    okhttp3.internal.connection.RouteDatabase routeDatabase -> e
    int maxIdleConnections -> a
    44:50:void <clinit>() -> <clinit>
    86:87:void <init>() -> <init>
    89:95:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    123:130:okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> a
    138:146:java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> a
    163:166:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> a
    200:242:long cleanup(long) -> a
    257:283:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> a
    150:156:void put(okhttp3.internal.connection.RealConnection) -> b
    115:115:int connectionCount() -> connectionCount
    175:185:void evictAll() -> evictAll
    101:100:int idleConnectionCount() -> idleConnectionCount
okhttp3.ConnectionPool$1 -> okhttp3.ConnectionPool$a:
    okhttp3.ConnectionPool this$0 -> a
    57:57:void <init>(okhttp3.ConnectionPool) -> <init>
    60:72:void run() -> run
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
    okhttp3.CipherSuite[] APPROVED_CIPHER_SUITES -> e
    java.lang.String[] tlsVersions -> d
    boolean tls -> a
    boolean supportsTlsExtensions -> b
    java.lang.String[] cipherSuites -> c
    46:80:void <clinit>() -> <clinit>
    87:92:void <init>(okhttp3.ConnectionSpec$Builder) -> <init>
    120:128:void apply(javax.net.ssl.SSLSocket,boolean) -> a
    135:152:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> b
    103:103:java.util.List cipherSuites() -> cipherSuites
    188:200:boolean equals(java.lang.Object) -> equals
    204:210:int hashCode() -> hashCode
    170:184:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    95:95:boolean isTls() -> isTls
    115:115:boolean supportsTlsExtensions() -> supportsTlsExtensions
    111:111:java.util.List tlsVersions() -> tlsVersions
    214:220:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
    boolean tls -> a
    java.lang.String[] tlsVersions -> c
    java.lang.String[] cipherSuites -> b
    boolean supportsTlsExtensions -> d
    233:235:void <init>(boolean) -> <init>
    237:242:void <init>(okhttp3.ConnectionSpec) -> <init>
    245:245:okhttp3.ConnectionSpec$Builder allEnabledCipherSuites() -> allEnabledCipherSuites
    272:272:okhttp3.ConnectionSpec$Builder allEnabledTlsVersions() -> allEnabledTlsVersions
    306:306:okhttp3.ConnectionSpec build() -> build
    251:251:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    261:261:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    300:300:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    278:278:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    289:289:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.Cookie -> okhttp3.Cookie:
    boolean hostOnly -> i
    long expiresAt -> c
    java.util.regex.Pattern MONTH_PATTERN -> k
    java.util.regex.Pattern YEAR_PATTERN -> j
    java.util.regex.Pattern TIME_PATTERN -> m
    java.util.regex.Pattern DAY_OF_MONTH_PATTERN -> l
    boolean secure -> f
    java.lang.String name -> a
    boolean httpOnly -> g
    boolean persistent -> h
    java.lang.String value -> b
    java.lang.String path -> e
    java.lang.String domain -> d
    47:53:void <clinit>() -> <clinit>
    68:78:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    80:81:void <init>(okhttp3.Cookie$Builder) -> <init>
    186:196:boolean domainMatch(java.lang.String,java.lang.String) -> a
    200:211:boolean pathMatch(okhttp3.HttpUrl,java.lang.String) -> a
    223:231:okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String) -> a
    329:365:long parseExpires(java.lang.String,int,int) -> a
    389:398:int dateCharacterOffset(java.lang.String,int,int,boolean) -> a
    426:427:java.lang.String parseDomain(java.lang.String) -> a
    551:582:java.lang.String toString(boolean) -> a
    410:417:long parseMaxAge(java.lang.String) -> b
    143:143:java.lang.String domain() -> domain
    586:588:boolean equals(java.lang.Object) -> equals
    121:121:long expiresAt() -> expiresAt
    600:610:int hashCode() -> hashCode
    135:135:boolean hostOnly() -> hostOnly
    160:160:boolean httpOnly() -> httpOnly
    173:182:boolean matches(okhttp3.HttpUrl) -> matches
    98:98:java.lang.String name() -> name
    219:219:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    441:451:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    152:152:java.lang.String path() -> path
    108:108:boolean persistent() -> persistent
    165:165:boolean secure() -> secure
    542:542:java.lang.String toString() -> toString
    103:103:java.lang.String value() -> value
okhttp3.Cookie$Builder -> okhttp3.Cookie$Builder:
    boolean hostOnly -> i
    boolean secure -> f
    java.lang.String name -> a
    boolean httpOnly -> g
    long expiresAt -> c
    boolean persistent -> h
    java.lang.String value -> b
    java.lang.String path -> e
    java.lang.String domain -> d
    460:465:void <init>() -> <init>
    510:510:okhttp3.Cookie$Builder domain(java.lang.String,boolean) -> a
    537:537:okhttp3.Cookie build() -> build
    498:498:okhttp3.Cookie$Builder domain(java.lang.String) -> domain
    486:490:okhttp3.Cookie$Builder expiresAt(long) -> expiresAt
    506:506:okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String) -> hostOnlyDomain
    532:533:okhttp3.Cookie$Builder httpOnly() -> httpOnly
    472:472:okhttp3.Cookie$Builder name(java.lang.String) -> name
    521:521:okhttp3.Cookie$Builder path(java.lang.String) -> path
    527:528:okhttp3.Cookie$Builder secure() -> secure
    479:479:okhttp3.Cookie$Builder value(java.lang.String) -> value
okhttp3.CookieJar -> okhttp3.CookieJar:
    36:36:void <clinit>() -> <clinit>
okhttp3.CookieJar$1 -> okhttp3.CookieJar$a:
    36:36:void <init>() -> <init>
    41:41:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    38:38:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
okhttp3.Credentials -> okhttp3.Credentials:
    25:26:void <init>() -> <init>
    30:30:java.lang.String basic(java.lang.String,java.lang.String) -> basic
    34:36:java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset) -> basic
okhttp3.Dispatcher -> okhttp3.Dispatcher:
    java.lang.Runnable idleCallback -> c
    java.util.concurrent.ExecutorService executorService -> d
    java.util.Deque runningSyncCalls -> g
    java.util.Deque runningAsyncCalls -> f
    java.util.Deque readyAsyncCalls -> e
    int maxRequestsPerHost -> b
    int maxRequests -> a
    56:58:void <init>(java.util.concurrent.ExecutorService) -> <init>
    60:61:void <init>() -> <init>
    130:129:void enqueue(okhttp3.RealCall$AsyncCall) -> a
    157:171:void promoteCalls() -> a
    185:184:void executed(okhttp3.RealCall) -> a
    201:206:void finished(java.util.Deque,java.lang.Object,boolean) -> a
    190:191:void finished(okhttp3.RealCall$AsyncCall) -> b
    195:196:void finished(okhttp3.RealCall) -> b
    175:180:int runningCallsForHost(okhttp3.RealCall$AsyncCall) -> c
    143:142:void cancelAll() -> cancelAll
    64:63:java.util.concurrent.ExecutorService executorService() -> executorService
    87:87:int getMaxRequests() -> getMaxRequests
    110:110:int getMaxRequestsPerHost() -> getMaxRequestsPerHost
    215:214:java.util.List queuedCalls() -> queuedCalls
    233:233:int queuedCallsCount() -> queuedCallsCount
    224:223:java.util.List runningCalls() -> runningCalls
    237:237:int runningCallsCount() -> runningCallsCount
    126:125:void setIdleCallback(java.lang.Runnable) -> setIdleCallback
    79:78:void setMaxRequests(int) -> setMaxRequests
    102:101:void setMaxRequestsPerHost(int) -> setMaxRequestsPerHost
okhttp3.Dns -> okhttp3.Dns:
    36:36:void <clinit>() -> <clinit>
okhttp3.Dns$1 -> okhttp3.Dns$a:
    36:36:void <init>() -> <init>
    38:38:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
    59:59:void <clinit>() -> <clinit>
    58:58:void <init>() -> <init>
    63:63:okhttp3.EventListener$Factory factory(okhttp3.EventListener) -> a
    276:276:void callEnd(okhttp3.Call) -> callEnd
    284:284:void callFailed(okhttp3.Call,java.io.IOException) -> callFailed
    79:79:void callStart(okhttp3.Call) -> callStart
    145:145:void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> connectEnd
    157:157:void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> connectFailed
    111:111:void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> connectStart
    166:166:void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> connectionAcquired
    177:177:void connectionReleased(okhttp3.Call,okhttp3.Connection) -> connectionReleased
    99:99:void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> dnsEnd
    91:91:void dnsStart(okhttp3.Call,java.lang.String) -> dnsStart
    221:221:void requestBodyEnd(okhttp3.Call,long) -> requestBodyEnd
    213:213:void requestBodyStart(okhttp3.Call) -> requestBodyStart
    200:200:void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> requestHeadersEnd
    189:189:void requestHeadersStart(okhttp3.Call) -> requestHeadersStart
    267:267:void responseBodyEnd(okhttp3.Call,long) -> responseBodyEnd
    256:256:void responseBodyStart(okhttp3.Call) -> responseBodyStart
    244:244:void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> responseHeadersEnd
    233:233:void responseHeadersStart(okhttp3.Call) -> responseHeadersStart
    134:134:void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> secureConnectEnd
    126:126:void secureConnectStart(okhttp3.Call) -> secureConnectStart
okhttp3.EventListener$1 -> okhttp3.EventListener$a:
    59:59:void <init>() -> <init>
okhttp3.EventListener$2 -> okhttp3.EventListener$b:
    okhttp3.EventListener val$listener -> a
    63:63:void <init>(okhttp3.EventListener) -> <init>
    65:65:okhttp3.EventListener create(okhttp3.Call) -> create
okhttp3.FormBody -> okhttp3.FormBody:
    java.util.List encodedValues -> b
    java.util.List encodedNames -> a
    okhttp3.MediaType CONTENT_TYPE -> c
    31:31:void <clinit>() -> <clinit>
    37:40:void <init>(java.util.List,java.util.List) -> <init>
    82:103:long writeOrCountBytes(okio.BufferedSink,boolean) -> a
    68:68:long contentLength() -> contentLength
    64:64:okhttp3.MediaType contentType() -> contentType
    48:48:java.lang.String encodedName(int) -> encodedName
    56:56:java.lang.String encodedValue(int) -> encodedValue
    52:52:java.lang.String name(int) -> name
    44:44:int size() -> size
    60:60:java.lang.String value(int) -> value
    72:73:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.FormBody$Builder -> okhttp3.FormBody$Builder:
    java.util.List values -> b
    java.util.List names -> a
    java.nio.charset.Charset charset -> c
    112:113:void <init>() -> <init>
    115:117:void <init>(java.nio.charset.Charset) -> <init>
    120:120:okhttp3.FormBody$Builder add(java.lang.String,java.lang.String) -> add
    129:129:okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String) -> addEncoded
    138:138:okhttp3.FormBody build() -> build
okhttp3.Handshake -> okhttp3.Handshake:
    okhttp3.TlsVersion tlsVersion -> a
    okhttp3.CipherSuite cipherSuite -> b
    java.util.List localCertificates -> d
    java.util.List peerCertificates -> c
    42:47:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    94:94:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    122:124:boolean equals(java.lang.Object) -> equals
    50:51:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    78:78:okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List) -> get
    131:136:int hashCode() -> hashCode
    111:111:java.util.List localCertificates() -> localCertificates
    116:116:java.security.Principal localPrincipal() -> localPrincipal
    99:99:java.util.List peerCertificates() -> peerCertificates
    104:104:java.security.Principal peerPrincipal() -> peerPrincipal
    89:89:okhttp3.TlsVersion tlsVersion() -> tlsVersion
okhttp3.Headers -> okhttp3.Headers:
    java.lang.String[] namesAndValues -> a
    53:55:void <init>(okhttp3.Headers$Builder) -> <init>
    57:59:void <init>(java.lang.String[]) -> <init>
    194:199:java.lang.String get(java.lang.String[],java.lang.String) -> a
    121:127:long byteCount() -> byteCount
    163:163:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String get(java.lang.String) -> get
    71:72:java.util.Date getDate(java.lang.String) -> getDate
    168:168:int hashCode() -> hashCode
    82:82:java.lang.String name(int) -> name
    92:96:java.util.Set names() -> names
    131:133:okhttp3.Headers$Builder newBuilder() -> newBuilder
    207:207:okhttp3.Headers of(java.lang.String[]) -> of
    235:235:okhttp3.Headers of(java.util.Map) -> of
    77:77:int size() -> size
    180:190:java.util.Map toMultimap() -> toMultimap
    172:176:java.lang.String toString() -> toString
    87:87:java.lang.String value(int) -> value
    101:108:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
    java.util.List namesAndValues -> a
    257:258:void <init>() -> <init>
    265:273:okhttp3.Headers$Builder addLenient(java.lang.String) -> a
    297:299:okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> a
    279:281:okhttp3.Headers$Builder add(java.lang.String) -> add
    288:289:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    325:325:void checkNameAndValue(java.lang.String,java.lang.String) -> b
    355:355:okhttp3.Headers build() -> build
    346:351:java.lang.String get(java.lang.String) -> get
    303:310:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    318:321:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.HttpUrl -> okhttp3.HttpUrl:
    java.lang.String url -> i
    java.lang.String fragment -> h
    java.util.List pathSegments -> f
    char[] HEX_DIGITS -> j
    java.lang.String scheme -> a
    int port -> e
    java.util.List queryNamesAndValues -> g
    java.lang.String password -> c
    java.lang.String username -> b
    java.lang.String host -> d
    289:289:void <clinit>() -> <clinit>
    338:352:void <init>(okhttp3.HttpUrl$Builder) -> <init>
    620:630:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> a
    922:926:okhttp3.HttpUrl getChecked(java.lang.String) -> a
    1609:1609:java.lang.String percentDecode(java.lang.String,boolean) -> a
    1613:1619:java.util.List percentDecode(java.util.List,boolean) -> a
    1623:1635:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> a
    1640:1656:void percentDecode(okio.Buffer,java.lang.String,int,int,boolean) -> a
    1659:1659:boolean percentEncoded(java.lang.String,int,int) -> a
    1686:1704:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    1710:1747:void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    1751:1751:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    1758:1758:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> a
    552:556:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> b
    639:654:java.util.List queryStringToNamesAndValues(java.lang.String) -> b
    510:515:int defaultPort(java.lang.String) -> defaultPort
    828:830:java.lang.String encodedFragment() -> encodedFragment
    445:448:java.lang.String encodedPassword() -> encodedPassword
    546:548:java.lang.String encodedPath() -> encodedPath
    570:579:java.util.List encodedPathSegments() -> encodedPathSegments
    613:616:java.lang.String encodedQuery() -> encodedQuery
    412:415:java.lang.String encodedUsername() -> encodedUsername
    942:942:boolean equals(java.lang.Object) -> equals
    846:846:java.lang.String fragment() -> fragment
    911:911:okhttp3.HttpUrl get(java.net.URL) -> get
    938:938:okhttp3.HttpUrl get(java.net.URI) -> get
    946:946:int hashCode() -> hashCode
    486:486:java.lang.String host() -> host
    397:397:boolean isHttps() -> isHttps
    872:883:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    891:893:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    901:903:okhttp3.HttpUrl parse(java.lang.String) -> parse
    463:463:java.lang.String password() -> password
    594:594:java.util.List pathSegments() -> pathSegments
    531:531:int pathSize() -> pathSize
    502:502:int port() -> port
    673:676:java.lang.String query() -> query
    711:717:java.lang.String queryParameter(java.lang.String) -> queryParameter
    789:789:java.lang.String queryParameterName(int) -> queryParameterName
    734:739:java.util.Set queryParameterNames() -> queryParameterNames
    811:811:java.lang.String queryParameterValue(int) -> queryParameterValue
    761:768:java.util.List queryParameterValues(java.lang.String) -> queryParameterValues
    694:694:int querySize() -> querySize
    855:855:java.lang.String redact() -> redact
    867:868:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    393:393:java.lang.String scheme() -> scheme
    950:950:java.lang.String toString() -> toString
    973:974:java.lang.String topPrivateDomain() -> topPrivateDomain
    377:386:java.net.URI uri() -> uri
    357:359:java.net.URL url() -> url
    430:430:java.lang.String username() -> username
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
    java.lang.String encodedFragment -> h
    java.util.List encodedPathSegments -> f
    java.lang.String scheme -> a
    int port -> e
    java.util.List encodedQueryNamesAndValues -> g
    java.lang.String encodedPassword -> c
    java.lang.String encodedUsername -> b
    java.lang.String host -> d
    987:989:void <init>() -> <init>
    1049:1049:int effectivePort() -> a
    1088:1094:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean) -> a
    1322:1340:okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String) -> a
    1448:1471:void resolvePath(java.lang.String,int,int) -> a
    1476:1493:void push(java.lang.String,int,int,boolean,boolean) -> a
    1496:1496:boolean isDot(java.lang.String) -> a
    1068:1069:okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String) -> addEncodedPathSegment
    1081:1082:okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String) -> addEncodedPathSegments
    1171:1171:okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String) -> addEncodedQueryParameter
    1053:1053:okhttp3.HttpUrl$Builder addPathSegment(java.lang.String) -> addPathSegment
    1063:1063:okhttp3.HttpUrl$Builder addPathSegments(java.lang.String) -> addPathSegments
    1159:1159:okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String) -> addQueryParameter
    1500:1500:boolean isDotDot(java.lang.String) -> b
    1517:1525:void pop() -> b
    1591:1592:java.lang.String canonicalizeHost(java.lang.String,int,int) -> b
    1264:1264:okhttp3.HttpUrl build() -> build
    1211:1221:void removeAllCanonicalQueryParameters(java.lang.String) -> c
    1242:1260:okhttp3.HttpUrl$Builder reencodeForUri() -> c
    1598:1603:int parsePort(java.lang.String,int,int) -> c
    1574:1585:int portColonOffset(java.lang.String,int,int) -> d
    1532:1535:int schemeDelimiterOffset(java.lang.String,int,int) -> e
    1231:1234:okhttp3.HttpUrl$Builder encodedFragment(java.lang.String) -> encodedFragment
    1024:1024:okhttp3.HttpUrl$Builder encodedPassword(java.lang.String) -> encodedPassword
    1133:1133:okhttp3.HttpUrl$Builder encodedPath(java.lang.String) -> encodedPath
    1150:1154:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    1011:1011:okhttp3.HttpUrl$Builder encodedUsername(java.lang.String) -> encodedUsername
    1559:1569:int slashCount(java.lang.String,int,int) -> f
    1224:1227:okhttp3.HttpUrl$Builder fragment(java.lang.String) -> fragment
    1035:1035:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1018:1018:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1043:1043:okhttp3.HttpUrl$Builder port(int) -> port
    1142:1146:okhttp3.HttpUrl$Builder query(java.lang.String) -> query
    1203:1203:okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String) -> removeAllEncodedQueryParameters
    1194:1194:okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String) -> removeAllQueryParameters
    1125:1129:okhttp3.HttpUrl$Builder removePathSegment(int) -> removePathSegment
    992:993:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    1111:1112:okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String) -> setEncodedPathSegment
    1188:1190:okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String) -> setEncodedQueryParameter
    1099:1099:okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String) -> setPathSegment
    1182:1184:okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String) -> setQueryParameter
    1270:1310:java.lang.String toString() -> toString
    1005:1005:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$ParseResult -> okhttp3.HttpUrl$Builder$a:
    okhttp3.HttpUrl$Builder$ParseResult INVALID_PORT -> d
    okhttp3.HttpUrl$Builder$ParseResult INVALID_HOST -> e
    okhttp3.HttpUrl$Builder$ParseResult[] $VALUES -> f
    okhttp3.HttpUrl$Builder$ParseResult SUCCESS -> a
    okhttp3.HttpUrl$Builder$ParseResult MISSING_SCHEME -> b
    okhttp3.HttpUrl$Builder$ParseResult UNSUPPORTED_SCHEME -> c
    1314:1313:void <clinit>() -> <clinit>
    1313:1313:void <init>(java.lang.String,int) -> <init>
    1313:1313:okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String) -> valueOf
    1313:1313:okhttp3.HttpUrl$Builder$ParseResult[] values() -> values
okhttp3.MediaType -> okhttp3.MediaType:
    java.util.regex.Pattern PARAMETER -> f
    java.util.regex.Pattern TYPE_SUBTYPE -> e
    java.lang.String mediaType -> a
    java.lang.String subtype -> c
    java.lang.String type -> b
    java.lang.String charset -> d
    31:32:void <clinit>() -> <clinit>
    40:45:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    104:104:java.nio.charset.Charset charset() -> charset
    113:115:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    128:128:boolean equals(java.lang.Object) -> equals
    132:132:int hashCode() -> hashCode
    52:82:okhttp3.MediaType parse(java.lang.String) -> parse
    97:97:java.lang.String subtype() -> subtype
    124:124:java.lang.String toString() -> toString
    90:90:java.lang.String type() -> type
okhttp3.MultipartBody -> okhttp3.MultipartBody:
    long contentLength -> e
    okio.ByteString boundary -> a
    java.util.List parts -> d
    byte[] DASHDASH -> h
    byte[] CRLF -> g
    okhttp3.MediaType originalType -> b
    okhttp3.MediaType contentType -> c
    byte[] COLONSPACE -> f
    35:66:void <clinit>() -> <clinit>
    74:79:void <init>(okio.ByteString,okhttp3.MediaType,java.util.List) -> <init>
    125:189:long writeOrCountBytes(okio.BufferedSink,boolean) -> a
    203:222:java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String) -> a
    86:86:java.lang.String boundary() -> boundary
    108:110:long contentLength() -> contentLength
    104:104:okhttp3.MediaType contentType() -> contentType
    99:99:okhttp3.MultipartBody$Part part(int) -> part
    95:95:java.util.List parts() -> parts
    91:91:int size() -> size
    82:82:okhttp3.MediaType type() -> type
    114:115:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.MultipartBody$Builder -> okhttp3.MultipartBody$Builder:
    okio.ByteString boundary -> a
    java.util.List parts -> c
    okhttp3.MediaType type -> b
    285:286:void <init>() -> <init>
    288:290:void <init>(java.lang.String) -> <init>
    319:319:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String) -> addFormDataPart
    324:324:okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody) -> addFormDataPart
    309:309:okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody) -> addPart
    314:314:okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody) -> addPart
    329:329:okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part) -> addPart
    336:337:okhttp3.MultipartBody build() -> build
    297:298:okhttp3.MultipartBody$Builder setType(okhttp3.MediaType) -> setType
okhttp3.MultipartBody$Part -> okhttp3.MultipartBody$Part:
    okhttp3.Headers headers -> a
    okhttp3.RequestBody body -> b
    265:268:void <init>(okhttp3.Headers,okhttp3.RequestBody) -> <init>
    275:275:okhttp3.RequestBody body() -> body
    227:227:okhttp3.MultipartBody$Part create(okhttp3.RequestBody) -> create
    231:232:okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody) -> create
    244:244:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String) -> createFormData
    248:249:okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody) -> createFormData
    271:271:okhttp3.Headers headers() -> headers
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
    okhttp3.internal.cache.InternalCache internalCache -> k
    okhttp3.CookieJar cookieJar -> i
    boolean followSslRedirects -> u
    boolean retryOnConnectionFailure -> w
    okhttp3.Dispatcher dispatcher -> a
    javax.net.ssl.HostnameVerifier hostnameVerifier -> o
    int pingInterval -> A
    okhttp3.Authenticator proxyAuthenticator -> q
    java.util.List networkInterceptors -> f
    java.util.List connectionSpecs -> d
    java.util.List DEFAULT_CONNECTION_SPECS -> C
    int readTimeout -> y
    okhttp3.Cache cache -> j
    javax.net.SocketFactory socketFactory -> l
    okhttp3.ConnectionPool connectionPool -> s
    java.net.ProxySelector proxySelector -> h
    boolean followRedirects -> v
    java.net.Proxy proxy -> b
    okhttp3.EventListener$Factory eventListenerFactory -> g
    java.util.List DEFAULT_PROTOCOLS -> B
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> m
    okhttp3.Dns dns -> t
    okhttp3.Authenticator authenticator -> r
    int writeTimeout -> z
    java.util.List interceptors -> e
    int connectTimeout -> x
    java.util.List protocols -> c
    okhttp3.CertificatePinner certificatePinner -> p
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> n
    128:197:void <clinit>() -> <clinit>
    228:229:void <init>() -> <init>
    231:275:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    300:304:javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager) -> a
    345:345:okhttp3.internal.cache.InternalCache internalCache() -> a
    369:369:okhttp3.Authenticator authenticator() -> authenticator
    285:294:javax.net.ssl.X509TrustManager systemDefaultTrustManager() -> b
    341:341:okhttp3.Cache cache() -> cache
    365:365:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    310:310:int connectTimeoutMillis() -> connectTimeoutMillis
    377:377:okhttp3.ConnectionPool connectionPool() -> connectionPool
    401:401:java.util.List connectionSpecs() -> connectionSpecs
    337:337:okhttp3.CookieJar cookieJar() -> cookieJar
    393:393:okhttp3.Dispatcher dispatcher() -> dispatcher
    349:349:okhttp3.Dns dns() -> dns
    423:423:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    385:385:boolean followRedirects() -> followRedirects
    381:381:boolean followSslRedirects() -> followSslRedirects
    361:361:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    410:410:java.util.List interceptors() -> interceptors
    419:419:java.util.List networkInterceptors() -> networkInterceptors
    443:443:okhttp3.OkHttpClient$Builder newBuilder() -> newBuilder
    430:430:okhttp3.Call newCall(okhttp3.Request) -> newCall
    437:439:okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener) -> newWebSocket
    325:325:int pingIntervalMillis() -> pingIntervalMillis
    397:397:java.util.List protocols() -> protocols
    329:329:java.net.Proxy proxy() -> proxy
    373:373:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    333:333:java.net.ProxySelector proxySelector() -> proxySelector
    315:315:int readTimeoutMillis() -> readTimeoutMillis
    389:389:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    353:353:javax.net.SocketFactory socketFactory() -> socketFactory
    357:357:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    320:320:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.OkHttpClient$1 -> okhttp3.OkHttpClient$a:
    135:135:void <init>() -> <init>
    137:138:void addLenient(okhttp3.Headers$Builder,java.lang.String) -> addLenient
    141:142:void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> addLenient
    181:182:void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> apply
    176:176:int code(okhttp3.Response$Builder) -> code
    150:150:boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    164:164:java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation) -> deduplicate
    159:159:boolean equalsNonHost(okhttp3.Address,okhttp3.Address) -> equalsNonHost
    155:155:okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route) -> get
    186:186:okhttp3.HttpUrl getHttpUrlChecked(java.lang.String) -> getHttpUrlChecked
    194:194:okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request) -> newWebSocketCall
    168:169:void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection) -> put
    172:172:okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool) -> routeDatabase
    145:146:void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache) -> setCache
    190:190:okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call) -> streamAllocation
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
    okhttp3.internal.cache.InternalCache internalCache -> k
    okhttp3.CookieJar cookieJar -> i
    boolean followSslRedirects -> u
    boolean retryOnConnectionFailure -> w
    okhttp3.Dispatcher dispatcher -> a
    javax.net.ssl.HostnameVerifier hostnameVerifier -> o
    int pingInterval -> A
    okhttp3.Authenticator proxyAuthenticator -> q
    java.util.List networkInterceptors -> f
    java.util.List connectionSpecs -> d
    int readTimeout -> y
    okhttp3.Cache cache -> j
    javax.net.SocketFactory socketFactory -> l
    okhttp3.ConnectionPool connectionPool -> s
    java.net.ProxySelector proxySelector -> h
    boolean followRedirects -> v
    java.net.Proxy proxy -> b
    okhttp3.EventListener$Factory eventListenerFactory -> g
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> m
    okhttp3.Dns dns -> t
    okhttp3.Authenticator authenticator -> r
    int writeTimeout -> z
    java.util.List interceptors -> e
    int connectTimeout -> x
    java.util.List protocols -> c
    okhttp3.CertificatePinner certificatePinner -> p
    okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> n
    475:496:void <init>() -> <init>
    498:526:void <init>(okhttp3.OkHttpClient) -> <init>
    625:627:void setInternalCache(okhttp3.internal.cache.InternalCache) -> a
    888:888:okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor) -> addInterceptor
    903:903:okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor) -> addNetworkInterceptor
    746:746:okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator) -> authenticator
    935:935:okhttp3.OkHttpClient build() -> build
    631:633:okhttp3.OkHttpClient$Builder cache(okhttp3.Cache) -> cache
    734:734:okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner) -> certificatePinner
    537:538:okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> connectTimeout
    769:769:okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool) -> connectionPool
    874:875:okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List) -> connectionSpecs
    618:618:okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar) -> cookieJar
    818:818:okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher) -> dispatcher
    642:642:okhttp3.OkHttpClient$Builder dns(okhttp3.Dns) -> dns
    915:915:okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener) -> eventListener
    927:928:okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory) -> eventListenerFactory
    787:788:okhttp3.OkHttpClient$Builder followRedirects(boolean) -> followRedirects
    781:782:okhttp3.OkHttpClient$Builder followSslRedirects(boolean) -> followSslRedirects
    723:723:okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> hostnameVerifier
    884:884:java.util.List interceptors() -> interceptors
    899:899:java.util.List networkInterceptors() -> networkInterceptors
    584:585:okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit) -> pingInterval
    852:856:okhttp3.OkHttpClient$Builder protocols(java.util.List) -> protocols
    594:595:okhttp3.OkHttpClient$Builder proxy(java.net.Proxy) -> proxy
    758:758:okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator) -> proxyAuthenticator
    607:608:okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector) -> proxySelector
    552:553:okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> readTimeout
    810:811:okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean) -> retryOnConnectionFailure
    656:656:okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory) -> socketFactory
    671:671:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory) -> sslSocketFactory
    709:709:okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager) -> sslSocketFactory
    566:567:okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> writeTimeout
okhttp3.Protocol -> okhttp3.Protocol:
    okhttp3.Protocol[] $VALUES -> b
    java.lang.String protocol -> a
    33:29:void <clinit>() -> <clinit>
    76:78:void <init>(java.lang.String,int,java.lang.String) -> <init>
    87:92:okhttp3.Protocol get(java.lang.String) -> get
    103:103:java.lang.String toString() -> toString
    29:29:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    29:29:okhttp3.Protocol[] values() -> values
okhttp3.RealCall -> r7:
    okhttp3.OkHttpClient client -> a
    okhttp3.EventListener eventListener -> c
    boolean forWebSocket -> e
    boolean executed -> f
    okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor -> b
    okhttp3.Request originalRequest -> d
    50:55:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    33:33:okhttp3.EventListener access$000(okhttp3.RealCall) -> a
    59:61:okhttp3.RealCall newRealCall(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> a
    89:91:void captureCallStackTrace() -> a
    185:200:okhttp3.Response getResponseWithInterceptorChain() -> b
    180:180:java.lang.String redactedUrl() -> c
    104:105:void cancel() -> cancel
    33:33:java.lang.Object clone() -> clone
    33:33:okhttp3.Call clone() -> clone
    117:117:okhttp3.RealCall clone() -> clone
    121:121:okhttp3.internal.connection.StreamAllocation streamAllocation() -> d
    174:174:java.lang.String toLoggableString() -> e
    94:97:void enqueue(okhttp3.Callback) -> enqueue
    69:72:okhttp3.Response execute() -> execute
    112:112:boolean isCanceled() -> isCanceled
    108:108:boolean isExecuted() -> isExecuted
    65:65:okhttp3.Request request() -> request
okhttp3.RealCall$AsyncCall -> r7$a:
    okhttp3.RealCall this$0 -> b
    okhttp3.Callback responseCallback -> a
    127:130:void <init>(okhttp3.RealCall,okhttp3.Callback) -> <init>
    141:141:okhttp3.RealCall get() -> a
    133:133:java.lang.String host() -> b
    145:164:void execute() -> execute
okhttp3.Request -> okhttp3.Request:
    okhttp3.HttpUrl url -> a
    okhttp3.RequestBody body -> d
    okhttp3.CacheControl cacheControl -> f
    java.lang.Object tag -> e
    java.lang.String method -> b
    okhttp3.Headers headers -> c
    37:43:void <init>(okhttp3.Request$Builder) -> <init>
    66:66:okhttp3.RequestBody body() -> body
    82:83:okhttp3.CacheControl cacheControl() -> cacheControl
    58:58:java.lang.String header(java.lang.String) -> header
    54:54:okhttp3.Headers headers() -> headers
    62:62:java.util.List headers(java.lang.String) -> headers
    87:87:boolean isHttps() -> isHttps
    50:50:java.lang.String method() -> method
    74:74:okhttp3.Request$Builder newBuilder() -> newBuilder
    70:70:java.lang.Object tag() -> tag
    91:91:java.lang.String toString() -> toString
    46:46:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
    okhttp3.HttpUrl url -> a
    okhttp3.RequestBody body -> d
    java.lang.Object tag -> e
    okhttp3.Headers$Builder headers -> c
    java.lang.String method -> b
    107:110:void <init>() -> <init>
    112:118:void <init>(okhttp3.Request) -> <init>
    177:178:okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    256:256:okhttp3.Request build() -> build
    199:201:okhttp3.Request$Builder cacheControl(okhttp3.CacheControl) -> cacheControl
    217:217:okhttp3.Request$Builder delete(okhttp3.RequestBody) -> delete
    221:221:okhttp3.Request$Builder delete() -> delete
    205:205:okhttp3.Request$Builder get() -> get
    209:209:okhttp3.Request$Builder head() -> head
    165:166:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    189:190:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    233:233:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    229:229:okhttp3.Request$Builder patch(okhttp3.RequestBody) -> patch
    213:213:okhttp3.Request$Builder post(okhttp3.RequestBody) -> post
    225:225:okhttp3.Request$Builder put(okhttp3.RequestBody) -> put
    183:184:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    251:252:okhttp3.Request$Builder tag(java.lang.Object) -> tag
    121:121:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    133:133:okhttp3.Request$Builder url(java.lang.String) -> url
    154:154:okhttp3.Request$Builder url(java.net.URL) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
    28:28:void <init>() -> <init>
    37:37:long contentLength() -> contentLength
    48:57:okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String) -> create
    63:63:okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString) -> create
    80:80:okhttp3.RequestBody create(okhttp3.MediaType,byte[]) -> create
    86:86:okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int) -> create
    105:105:okhttp3.RequestBody create(okhttp3.MediaType,java.io.File) -> create
okhttp3.RequestBody$1 -> okhttp3.RequestBody$a:
    okio.ByteString val$content -> b
    okhttp3.MediaType val$contentType -> a
    63:63:void <init>(okhttp3.MediaType,okio.ByteString) -> <init>
    69:69:long contentLength() -> contentLength
    65:65:okhttp3.MediaType contentType() -> contentType
    73:74:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$2 -> okhttp3.RequestBody$b:
    int val$offset -> d
    int val$byteCount -> b
    byte[] val$content -> c
    okhttp3.MediaType val$contentType -> a
    88:88:void <init>(okhttp3.MediaType,int,byte[],int) -> <init>
    94:94:long contentLength() -> contentLength
    90:90:okhttp3.MediaType contentType() -> contentType
    98:99:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.RequestBody$3 -> okhttp3.RequestBody$c:
    java.io.File val$file -> b
    okhttp3.MediaType val$contentType -> a
    107:107:void <init>(okhttp3.MediaType,java.io.File) -> <init>
    113:113:long contentLength() -> contentLength
    109:109:okhttp3.MediaType contentType() -> contentType
    117:122:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
    okhttp3.Response networkResponse -> h
    long receivedResponseAtMillis -> l
    long sentRequestAtMillis -> k
    okhttp3.ResponseBody body -> g
    okhttp3.Headers headers -> f
    int code -> c
    okhttp3.Response cacheResponse -> i
    okhttp3.Response priorResponse -> j
    okhttp3.Handshake handshake -> e
    okhttp3.Protocol protocol -> b
    okhttp3.CacheControl cacheControl -> m
    okhttp3.Request request -> a
    java.lang.String message -> d
    59:72:void <init>(okhttp3.Response$Builder) -> <init>
    177:177:okhttp3.ResponseBody body() -> body
    250:251:okhttp3.CacheControl cacheControl() -> cacheControl
    214:214:okhttp3.Response cacheResponse() -> cacheResponse
    235:240:java.util.List challenges() -> challenges
    280:281:void close() -> close
    98:98:int code() -> code
    119:119:okhttp3.Handshake handshake() -> handshake
    127:127:java.lang.String header(java.lang.String) -> header
    131:132:java.lang.String header(java.lang.String,java.lang.String) -> header
    123:123:java.util.List headers(java.lang.String) -> headers
    136:136:okhttp3.Headers headers() -> headers
    186:193:boolean isRedirect() -> isRedirect
    106:106:boolean isSuccessful() -> isSuccessful
    111:111:java.lang.String message() -> message
    205:205:okhttp3.Response networkResponse() -> networkResponse
    181:181:okhttp3.Response$Builder newBuilder() -> newBuilder
    151:165:okhttp3.ResponseBody peekBody(long) -> peekBody
    224:224:okhttp3.Response priorResponse() -> priorResponse
    93:93:okhttp3.Protocol protocol() -> protocol
    269:269:long receivedResponseAtMillis() -> receivedResponseAtMillis
    86:86:okhttp3.Request request() -> request
    260:260:long sentRequestAtMillis() -> sentRequestAtMillis
    287:287:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
    okhttp3.Handshake handshake -> e
    okhttp3.Response networkResponse -> h
    long receivedResponseAtMillis -> l
    long sentRequestAtMillis -> k
    okhttp3.ResponseBody body -> g
    okhttp3.Protocol protocol -> b
    okhttp3.Request request -> a
    int code -> c
    okhttp3.Response cacheResponse -> i
    java.lang.String message -> d
    okhttp3.Headers$Builder headers -> f
    okhttp3.Response priorResponse -> j
    312:314:void <init>() -> <init>
    316:329:void <init>(okhttp3.Response) -> <init>
    403:404:void checkSupportResponse(java.lang.String,okhttp3.Response) -> a
    421:422:void checkPriorResponse(okhttp3.Response) -> a
    370:371:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    386:387:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    437:437:okhttp3.Response build() -> build
    397:399:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    342:343:okhttp3.Response$Builder code(int) -> code
    352:353:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    361:362:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    381:382:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    347:348:okhttp3.Response$Builder message(java.lang.String) -> message
    391:393:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    415:417:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    337:338:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    432:433:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    375:376:okhttp3.Response$Builder removeHeader(java.lang.String) -> removeHeader
    332:333:okhttp3.Response$Builder request(okhttp3.Request) -> request
    427:428:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
    java.io.Reader reader -> a
    102:102:void <init>() -> <init>
    182:183:java.nio.charset.Charset charset() -> a
    115:115:java.io.InputStream byteStream() -> byteStream
    128:130:byte[] bytes() -> bytes
    157:158:java.io.Reader charStream() -> charStream
    187:188:void close() -> close
    195:204:okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String) -> create
    209:210:okhttp3.ResponseBody create(okhttp3.MediaType,byte[]) -> create
    216:216:okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource) -> create
    172:177:java.lang.String string() -> string
okhttp3.ResponseBody$1 -> okhttp3.ResponseBody$a:
    okio.BufferedSource val$content -> d
    long val$contentLength -> c
    okhttp3.MediaType val$contentType -> b
    217:217:void <init>(okhttp3.MediaType,long,okio.BufferedSource) -> <init>
    223:223:long contentLength() -> contentLength
    219:219:okhttp3.MediaType contentType() -> contentType
    227:227:okio.BufferedSource source() -> source
okhttp3.ResponseBody$BomAwareReader -> okhttp3.ResponseBody$b:
    okio.BufferedSource source -> a
    java.nio.charset.Charset charset -> b
    boolean closed -> c
    java.io.Reader delegate -> d
    239:242:void <init>(okio.BufferedSource,java.nio.charset.Charset) -> <init>
    256:262:void close() -> close
    245:245:int read(char[],int,int) -> read
okhttp3.Route -> okhttp3.Route:
    java.net.InetSocketAddress inetSocketAddress -> c
    java.net.Proxy proxy -> b
    okhttp3.Address address -> a
    42:44:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    58:58:okhttp3.Address address() -> address
    84:84:boolean equals(java.lang.Object) -> equals
    91:95:int hashCode() -> hashCode
    68:68:java.net.Proxy proxy() -> proxy
    80:80:boolean requiresTunnel() -> requiresTunnel
    72:72:java.net.InetSocketAddress socketAddress() -> socketAddress
    99:99:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
    java.lang.String javaName -> a
    okhttp3.TlsVersion[] $VALUES -> b
    27:26:void <clinit>() -> <clinit>
    36:38:void <init>(java.lang.String,int,java.lang.String) -> <init>
    57:61:java.util.List forJavaNames(java.lang.String[]) -> a
    41:43:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
    65:65:java.lang.String javaName() -> javaName
    26:26:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    26:26:okhttp3.TlsVersion[] values() -> values
okhttp3.WebSocketListener -> okhttp3.WebSocketListener:
    21:21:void <init>() -> <init>
    49:49:void onClosed(okhttp3.WebSocket,int,java.lang.String) -> onClosed
    42:42:void onClosing(okhttp3.WebSocket,int,java.lang.String) -> onClosing
    57:57:void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response) -> onFailure
    31:31:void onMessage(okhttp3.WebSocket,java.lang.String) -> onMessage
    35:35:void onMessage(okhttp3.WebSocket,okio.ByteString) -> onMessage
    27:27:void onOpen(okhttp3.WebSocket,okhttp3.Response) -> onOpen
okhttp3.internal.Internal -> okhttp3.internal.Internal:
    41:41:void <init>() -> <init>
    45:46:void initializeInstanceForTests() -> initializeInstanceForTests
okhttp3.internal.NamedRunnable -> okhttp3.internal.NamedRunnable:
    24:26:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    29:34:void run() -> run
okhttp3.internal.Util -> okhttp3.internal.Util:
    okio.ByteString UTF_16_LE_BOM -> c
    okio.ByteString UTF_16_BE_BOM -> b
    okio.ByteString UTF_32_LE_BOM -> e
    okio.ByteString UTF_32_BE_BOM -> d
    okio.ByteString UTF_8_BOM -> a
    java.nio.charset.Charset UTF_32_LE -> i
    java.nio.charset.Charset UTF_32_BE -> h
    java.nio.charset.Charset UTF_16_LE -> g
    java.util.regex.Pattern VERIFY_AS_IP_ADDRESS -> j
    java.nio.charset.Charset UTF_16_BE -> f
    48:86:void <clinit>() -> <clinit>
    89:90:void <init>() -> <init>
    388:403:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> a
    483:548:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> a
    555:584:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> a
    592:620:java.lang.String inet6AddressToAscii(byte[]) -> a
    465:471:java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception) -> assertionError
    432:452:java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset) -> bomAwareCharset
    361:383:java.lang.String canonicalizeHost(java.lang.String) -> canonicalizeHost
    456:456:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> checkDuration
    93:94:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    108:116:void closeQuietly(java.io.Closeable) -> closeQuietly
    123:133:void closeQuietly(java.net.Socket) -> closeQuietly
    140:148:void closeQuietly(java.net.ServerSocket) -> closeQuietly
    276:279:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    475:478:int decodeHexDigit(char) -> decodeHexDigit
    334:337:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> delimiterOffset
    345:348:int delimiterOffset(java.lang.String,int,int,char) -> delimiterOffset
    157:159:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    100:100:boolean equal(java.lang.Object,java.lang.Object) -> equal
    428:428:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    251:254:java.lang.String hostHeader(okhttp3.HttpUrl,boolean) -> hostHeader
    192:192:java.util.List immutableList(java.util.List) -> immutableList
    197:197:java.util.List immutableList(java.lang.Object[]) -> immutableList
    269:272:int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> indexOf
    412:418:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    217:226:java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> intersect
    264:264:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    237:238:boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> nonEmptyIntersection
    168:180:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    287:299:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> skipLeadingAsciiWhitespace
    307:319:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> skipTrailingAsciiWhitespace
    201:201:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    324:326:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    423:423:boolean verifyAsIpAddress(java.lang.String) -> verifyAsIpAddress
okhttp3.internal.Util$1 -> okhttp3.internal.Util$a:
    70:70:void <init>() -> <init>
    72:72:int compare(java.lang.String,java.lang.String) -> a
    70:70:int compare(java.lang.Object,java.lang.Object) -> compare
okhttp3.internal.Util$2 -> okhttp3.internal.Util$b:
    java.lang.String val$name -> a
    boolean val$daemon -> b
    201:201:void <init>(java.lang.String,boolean) -> <init>
    203:205:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.Version -> okhttp3.internal.Version:
    23:24:void <init>() -> <init>
    20:20:java.lang.String userAgent() -> userAgent
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
    okhttp3.internal.cache.InternalCache cache -> a
    48:50:void <init>(okhttp3.internal.cache.InternalCache) -> <init>
    148:148:okhttp3.Response stripBody(okhttp3.Response) -> a
    161:212:okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response) -> a
    219:240:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> a
    263:263:boolean isContentSpecificHeader(java.lang.String) -> a
    248:248:boolean isEndToEnd(java.lang.String) -> b
    53:97:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.cache.CacheInterceptor$1 -> okhttp3.internal.cache.CacheInterceptor$a:
    okio.BufferedSink val$cacheBody -> d
    okio.BufferedSource val$source -> b
    okhttp3.internal.cache.CacheRequest val$cacheRequest -> c
    boolean cacheRequestClosed -> a
    168:168:void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink) -> <init>
    201:207:void close() -> close
    174:180:long read(okio.Buffer,long) -> read
    197:197:okio.Timeout timeout() -> timeout
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
    57:60:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    66:100:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
    java.util.Date lastModified -> f
    java.lang.String lastModifiedString -> g
    long receivedResponseMillis -> j
    long sentRequestMillis -> i
    java.util.Date servedDate -> d
    int ageSeconds -> l
    okhttp3.Response cacheResponse -> c
    java.lang.String etag -> k
    long nowMillis -> a
    okhttp3.Request request -> b
    java.lang.String servedDateString -> e
    java.util.Date expires -> h
    140:167:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    301:309:long cacheResponseAge() -> a
    326:326:boolean hasConditions(okhttp3.Request) -> a
    272:293:long computeFreshnessLifetime() -> b
    186:204:okhttp3.internal.cache.CacheStrategy getCandidate() -> c
    317:317:boolean isFreshnessLifetimeHeuristic() -> d
    173:180:okhttp3.internal.cache.CacheStrategy get() -> get
okhttp3.internal.cache.DiskLruCache -> okhttp3.internal.cache.DiskLruCache:
    java.io.File directory -> b
    boolean hasJournalErrors -> m
    long size -> i
    boolean initialized -> n
    java.lang.Runnable cleanupRunnable -> t
    java.io.File journalFileTmp -> d
    int redundantOpCount -> l
    boolean closed -> o
    java.io.File journalFile -> c
    boolean mostRecentTrimFailed -> p
    java.io.File journalFileBackup -> e
    java.util.regex.Pattern LEGAL_KEY_PATTERN -> u
    int valueCount -> h
    long maxSize -> g
    int appVersion -> f
    boolean mostRecentRebuildFailed -> q
    java.util.LinkedHashMap lruEntries -> k
    long nextSequenceNumber -> r
    java.util.concurrent.Executor executor -> s
    okhttp3.internal.io.FileSystem fileSystem -> a
    okio.BufferedSink journalWriter -> j
    87:94:void <clinit>() -> <clinit>
    196:206:void <init>(okhttp3.internal.io.FileSystem,java.io.File,int,int,long,java.util.concurrent.Executor) -> <init>
    326:328:void readJournalLine(java.lang.String) -> a
    463:462:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String,long) -> a
    535:534:void completeEdit(okhttp3.internal.cache.DiskLruCache$Editor,boolean) -> a
    623:641:boolean removeEntry(okhttp3.internal.cache.DiskLruCache$Entry) -> a
    650:649:void checkNotClosed() -> a
    599:600:boolean journalRebuildRequired() -> b
    713:715:void validateKey(java.lang.String) -> b
    315:322:okio.BufferedSink newJournalWriter() -> c
    666:665:void close() -> close
    261:262:okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long) -> create
    369:385:void processJournal() -> d
    695:697:void delete() -> delete
    276:310:void readJournal() -> e
    459:459:okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String) -> edit
    704:703:void evictAll() -> evictAll
    392:391:void rebuildJournal() -> f
    657:656:void flush() -> flush
    683:688:void trimToSize() -> g
    436:435:okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String) -> get
    504:504:java.io.File getDirectory() -> getDirectory
    511:511:long getMaxSize() -> getMaxSize
    209:208:void initialize() -> initialize
    646:646:boolean isClosed() -> isClosed
    611:610:boolean remove(java.lang.String) -> remove
    519:518:void setMaxSize(long) -> setMaxSize
    530:529:long size() -> size
    736:735:java.util.Iterator snapshots() -> snapshots
okhttp3.internal.cache.DiskLruCache$1 -> okhttp3.internal.cache.DiskLruCache$a:
    okhttp3.internal.cache.DiskLruCache this$0 -> a
    169:169:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    171:191:void run() -> run
okhttp3.internal.cache.DiskLruCache$2 -> okhttp3.internal.cache.DiskLruCache$b:
    okhttp3.internal.cache.DiskLruCache this$0 -> c
    316:316:void <clinit>() -> <clinit>
    316:316:void <init>(okhttp3.internal.cache.DiskLruCache,okio.Sink) -> <init>
    318:320:void onException(java.io.IOException) -> a
okhttp3.internal.cache.DiskLruCache$3 -> okhttp3.internal.cache.DiskLruCache$c:
    okhttp3.internal.cache.DiskLruCache$Snapshot removeSnapshot -> c
    java.util.Iterator delegate -> a
    okhttp3.internal.cache.DiskLruCache this$0 -> d
    okhttp3.internal.cache.DiskLruCache$Snapshot nextSnapshot -> b
    737:739:void <init>(okhttp3.internal.cache.DiskLruCache) -> <init>
    748:761:boolean hasNext() -> hasNext
    737:737:java.lang.Object next() -> next
    767:767:okhttp3.internal.cache.DiskLruCache$Snapshot next() -> next
    774:774:void remove() -> remove
okhttp3.internal.cache.DiskLruCache$Editor -> okhttp3.internal.cache.DiskLruCache$Editor:
    boolean[] written -> b
    okhttp3.internal.cache.DiskLruCache this$0 -> d
    okhttp3.internal.cache.DiskLruCache$Entry entry -> a
    boolean done -> c
    836:839:void <init>(okhttp3.internal.cache.DiskLruCache,okhttp3.internal.cache.DiskLruCache$Entry) -> <init>
    848:858:void detach() -> a
    934:942:void abort() -> abort
    946:953:void abortUnlessCommitted() -> abortUnlessCommitted
    918:926:void commit() -> commit
    886:910:okio.Sink newSink(int) -> newSink
    865:877:okio.Source newSource(int) -> newSource
okhttp3.internal.cache.DiskLruCache$Editor$1 -> okhttp3.internal.cache.DiskLruCache$Editor$a:
    okhttp3.internal.cache.DiskLruCache$Editor this$1 -> c
    903:903:void <init>(okhttp3.internal.cache.DiskLruCache$Editor,okio.Sink) -> <init>
    905:907:void onException(java.io.IOException) -> a
okhttp3.internal.cache.DiskLruCache$Entry -> okhttp3.internal.cache.DiskLruCache$d:
    java.io.File[] cleanFiles -> c
    java.io.File[] dirtyFiles -> d
    okhttp3.internal.cache.DiskLruCache$Editor currentEditor -> f
    okhttp3.internal.cache.DiskLruCache this$0 -> h
    long[] lengths -> b
    long sequenceNumber -> g
    boolean readable -> e
    java.lang.String key -> a
    974:991:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String) -> <init>
    1010:1013:void writeLengths(okio.BufferedSink) -> a
    1016:1016:java.io.IOException invalidLengths(java.lang.String[]) -> a
    1025:1025:okhttp3.internal.cache.DiskLruCache$Snapshot snapshot() -> a
    995:996:void setLengths(java.lang.String[]) -> b
okhttp3.internal.cache.DiskLruCache$Snapshot -> okhttp3.internal.cache.DiskLruCache$Snapshot:
    long[] lengths -> d
    okio.Source[] sources -> c
    long sequenceNumber -> b
    java.lang.String key -> a
    okhttp3.internal.cache.DiskLruCache this$0 -> e
    794:799:void <init>(okhttp3.internal.cache.DiskLruCache,java.lang.String,long,okio.Source[],long[]) -> <init>
    788:788:java.lang.String access$000(okhttp3.internal.cache.DiskLruCache$Snapshot) -> a
    824:827:void close() -> close
    810:810:okhttp3.internal.cache.DiskLruCache$Editor edit() -> edit
    820:820:long getLength(int) -> getLength
    815:815:okio.Source getSource(int) -> getSource
    802:802:java.lang.String key() -> key
okhttp3.internal.cache.FaultHidingSink -> s7:
    boolean hasErrors -> b
    28:29:void <init>(okio.Sink) -> <init>
    void onException(java.io.IOException) -> a
    55:62:void close() -> close
    45:52:void flush() -> flush
    32:42:void write(okio.Buffer,long) -> write
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
    31:33:void <init>(okhttp3.OkHttpClient) -> <init>
    36:45:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
    java.util.List connectionSpecs -> a
    int nextModeIndex -> b
    boolean isFallbackPossible -> c
    boolean isFallback -> d
    44:47:void <init>(java.util.List) -> <init>
    135:140:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> a
    56:73:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    92:126:boolean connectionFailed(java.io.IOException) -> connectionFailed
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
    okhttp3.Handshake handshake -> e
    okhttp3.Route route -> b
    okhttp3.ConnectionPool connectionPool -> a
    okhttp3.internal.http2.Http2Connection http2Connection -> g
    okio.BufferedSource source -> h
    okhttp3.Protocol protocol -> f
    java.net.Socket socket -> d
    okio.BufferedSink sink -> i
    java.net.Socket rawSocket -> c
    117:120:void <init>(okhttp3.ConnectionPool,okhttp3.Route) -> <init>
    209:225:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> a
    230:244:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> a
    263:282:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> a
    285:343:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> a
    350:350:boolean isValid(javax.net.ssl.SSLSession) -> a
    361:388:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> a
    414:414:okhttp3.Request createTunnelRequest() -> a
    508:509:void cancel() -> cancel
    133:133:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    560:560:okhttp3.Handshake handshake() -> handshake
    428:428:boolean isEligible(okhttp3.Address,okhttp3.Route) -> isEligible
    517:518:boolean isHealthy(boolean) -> isHealthy
    568:568:boolean isMultiplexed() -> isMultiplexed
    484:490:okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation) -> newCodec
    495:495:okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation) -> newWebSocketStreams
    554:556:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
    549:550:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    572:572:okhttp3.Protocol protocol() -> protocol
    503:503:okhttp3.Route route() -> route
    512:512:java.net.Socket socket() -> socket
    469:479:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    124:127:okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long) -> testConnection
    576:576:java.lang.String toString() -> toString
okhttp3.internal.connection.RealConnection$1 -> okhttp3.internal.connection.RealConnection$a:
    okhttp3.internal.connection.StreamAllocation val$streamAllocation -> a
    495:495:void <init>(okhttp3.internal.connection.RealConnection,boolean,okio.BufferedSource,okio.BufferedSink,okhttp3.internal.connection.StreamAllocation) -> <init>
    497:498:void close() -> close
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
    java.util.Set failedRoutes -> a
    28:29:void <init>() -> <init>
    38:37:void connected(okhttp3.Route) -> connected
    33:32:void failed(okhttp3.Route) -> failed
    43:43:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
    java.io.IOException lastException -> a
    java.lang.reflect.Method addSuppressedExceptionMethod -> b
    32:37:void <clinit>() -> <clinit>
    42:44:void <init>(java.io.IOException) -> <init>
    56:62:void addSuppressedIfPossible(java.io.IOException,java.io.IOException) -> a
    51:53:void addConnectException(java.io.IOException) -> addConnectException
    47:47:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
    okhttp3.EventListener eventListener -> d
    java.util.List proxies -> e
    okhttp3.internal.connection.RouteDatabase routeDatabase -> b
    int nextProxyIndex -> f
    java.util.List postponedRoutes -> h
    java.util.List inetSocketAddresses -> g
    okhttp3.Call call -> c
    okhttp3.Address address -> a
    57:64:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    124:135:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> a
    139:139:boolean hasNextProxy() -> a
    156:175:void resetNextInetSocketAddress(java.net.Proxy) -> a
    205:214:java.lang.String getHostString(java.net.InetSocketAddress) -> a
    144:145:java.net.Proxy nextProxy() -> b
    113:120:void connectFailed(okhttp3.Route,java.io.IOException) -> connectFailed
    70:70:boolean hasNext() -> hasNext
    74:75:okhttp3.internal.connection.RouteSelector$Selection next() -> next
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
    java.util.List routes -> a
    int nextRouteIndex -> b
    222:224:void <init>(java.util.List) -> <init>
    238:238:java.util.List getAll() -> getAll
    227:227:boolean hasNext() -> hasNext
    231:232:okhttp3.Route next() -> next
okhttp3.internal.connection.StreamAllocation -> okhttp3.internal.connection.StreamAllocation:
    okhttp3.Route route -> b
    okhttp3.internal.http.HttpCodec codec -> k
    okhttp3.internal.connection.RealConnection connection -> g
    boolean released -> i
    boolean canceled -> j
    okhttp3.ConnectionPool connectionPool -> c
    java.lang.Object callStackTrace -> d
    int refusedStreamCount -> f
    okhttp3.internal.connection.RouteSelector$Selection routeSelection -> a
    boolean reportedAcquired -> h
    okhttp3.internal.connection.RouteSelector routeSelector -> e
    96:103:void <init>(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object) -> <init>
    135:143:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> a
    162:196:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> a
    288:293:java.net.Socket releaseIfNoNewStreams() -> a
    381:405:java.net.Socket deallocate(boolean,boolean,boolean) -> a
    478:485:void release(okhttp3.internal.connection.RealConnection) -> a
    468:469:void acquire(okhttp3.internal.connection.RealConnection,boolean) -> acquire
    333:333:okhttp3.internal.connection.RouteDatabase routeDatabase() -> b
    411:415:void cancel() -> cancel
    327:329:okhttp3.internal.http.HttpCodec codec() -> codec
    341:341:okhttp3.internal.connection.RealConnection connection() -> connection
    512:512:boolean hasMoreRoutes() -> hasMoreRoutes
    107:123:okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean) -> newStream
    362:366:void noNewStreams() -> noNewStreams
    347:351:void release() -> release
    497:498:java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection) -> releaseAndAcquire
    337:337:okhttp3.Route route() -> route
    426:455:void streamFailed(java.io.IOException) -> streamFailed
    297:313:void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException) -> streamFinished
    518:519:java.lang.String toString() -> toString
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> okhttp3.internal.connection.StreamAllocation$StreamAllocationReference:
    530:532:void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object) -> <init>
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
    okhttp3.CookieJar cookieJar -> a
    43:45:void <init>(okhttp3.CookieJar) -> <init>
    118:126:java.lang.String cookieHeader(java.util.List) -> a
    48:113:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
    boolean forWebSocket -> a
    36:38:void <init>(boolean) -> <init>
    41:135:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor$CountingSink -> okhttp3.internal.http.CallServerInterceptor$a:
    long successfulCount -> b
    145:146:void <init>(okio.Sink) -> <init>
    149:151:void write(okio.Buffer,long) -> write
okhttp3.internal.http.HttpDate -> okhttp3.internal.http.HttpDate:
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> a
    java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS -> c
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS -> b
    37:71:void <clinit>() -> <clinit>
    117:118:void <init>() -> <init>
    114:114:java.lang.String format(java.util.Date) -> format
    76:108:java.util.Date parse(java.lang.String) -> parse
okhttp3.internal.http.HttpDate$1 -> okhttp3.internal.http.HttpDate$a:
    38:38:void <init>() -> <init>
    38:38:java.lang.Object initialValue() -> initialValue
    41:44:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
    java.util.regex.Pattern PARAMETER -> a
    43:43:void <clinit>() -> <clinit>
    46:47:void <init>() -> <init>
    58:62:long stringToLong(java.lang.String) -> a
    93:93:java.util.Set varyFields(okhttp3.Response) -> a
    50:50:long contentLength(okhttp3.Response) -> contentLength
    54:54:long contentLength(okhttp3.Headers) -> contentLength
    210:225:boolean hasBody(okhttp3.Response) -> hasBody
    82:82:boolean hasVaryAll(okhttp3.Response) -> hasVaryAll
    89:89:boolean hasVaryAll(okhttp3.Headers) -> hasVaryAll
    156:195:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    264:273:int parseSeconds(java.lang.String,int) -> parseSeconds
    199:205:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    236:241:int skipUntil(java.lang.String,int,java.lang.String) -> skipUntil
    249:255:int skipWhitespace(java.lang.String,int) -> skipWhitespace
    100:112:java.util.Set varyFields(okhttp3.Headers) -> varyFields
    123:125:okhttp3.Headers varyHeaders(okhttp3.Response) -> varyHeaders
    133:143:okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers) -> varyHeaders
    72:75:boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request) -> varyMatches
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
    48:49:void <init>() -> <init>
    20:20:boolean invalidatesCache(java.lang.String) -> invalidatesCache
    36:36:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    45:45:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    40:40:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    28:28:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
    okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    java.util.List interceptors -> a
    okhttp3.internal.connection.RealConnection connection -> d
    okhttp3.Call call -> g
    int calls -> l
    int readTimeout -> j
    int writeTimeout -> k
    int connectTimeout -> i
    okhttp3.Request request -> f
    okhttp3.internal.http.HttpCodec httpCodec -> c
    int index -> e
    okhttp3.EventListener eventListener -> h
    52:64:void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int) -> <init>
    109:109:okhttp3.Call call() -> call
    71:71:int connectTimeoutMillis() -> connectTimeoutMillis
    67:67:okhttp3.Connection connection() -> connection
    113:113:okhttp3.EventListener eventListener() -> eventListener
    105:105:okhttp3.internal.http.HttpCodec httpStream() -> httpStream
    121:121:okhttp3.Response proceed(okhttp3.Request) -> proceed
    126:126:okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection) -> proceed
    81:81:int readTimeoutMillis() -> readTimeoutMillis
    117:117:okhttp3.Request request() -> request
    101:101:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
    75:76:okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit) -> withConnectTimeout
    85:86:okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit) -> withReadTimeout
    95:96:okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit) -> withWriteTimeout
    91:91:int writeTimeoutMillis() -> writeTimeoutMillis
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
    okio.BufferedSource source -> d
    long contentLength -> c
    java.lang.String contentTypeString -> b
    33:37:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    44:44:long contentLength() -> contentLength
    40:40:okhttp3.MediaType contentType() -> contentType
    48:48:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
    24:25:void <init>() -> <init>
    52:52:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> a
    33:44:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    60:62:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
    okhttp3.OkHttpClient client -> a
    java.lang.Object callStackTrace -> d
    okhttp3.internal.connection.StreamAllocation streamAllocation -> c
    boolean canceled -> e
    boolean forWebSocket -> b
    73:76:void <init>(okhttp3.OkHttpClient,boolean) -> <init>
    195:204:okhttp3.Address createAddress(okhttp3.HttpUrl) -> a
    217:232:boolean recover(java.io.IOException,okhttp3.internal.connection.StreamAllocation,boolean,okhttp3.Request) -> a
    237:264:boolean isRecoverable(java.io.IOException,boolean) -> a
    273:273:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.Route) -> a
    387:399:int retryAfter(okhttp3.Response,int) -> a
    407:408:boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl) -> a
    88:91:void cancel() -> cancel
    106:120:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    94:94:boolean isCanceled() -> isCanceled
    98:99:void setCallStackTrace(java.lang.Object) -> setCallStackTrace
    102:102:okhttp3.internal.connection.StreamAllocation streamAllocation() -> streamAllocation
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
    34:38:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    41:41:okhttp3.internal.http.StatusLine get(okhttp3.Response) -> get
    51:69:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
    97:103:java.lang.String toString() -> toString
okhttp3.internal.http1.Http1Codec -> okhttp3.internal.http1.Http1Codec:
    okhttp3.OkHttpClient client -> a
    okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    okio.BufferedSink sink -> d
    okio.BufferedSource source -> c
    long headerLimit -> f
    int state -> e
    90:95:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink) -> <init>
    215:217:java.lang.String readHeaderLine() -> a
    268:272:void detachTimeout(okio.ForwardingTimeout) -> a
    113:115:void cancel() -> cancel
    98:108:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    166:167:void finishRequest() -> finishRequest
    162:163:void flushRequest() -> flushRequest
    158:158:boolean isClosed() -> isClosed
    231:231:okio.Sink newChunkedSink() -> newChunkedSink
    249:249:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    237:237:okio.Sink newFixedLengthSink(long) -> newFixedLengthSink
    243:243:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    255:255:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    134:153:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    222:227:okhttp3.Headers readHeaders() -> readHeaders
    184:210:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    171:171:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    128:131:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1Codec$1 -> okhttp3.internal.http1.Http1Codec$a:
okhttp3.internal.http1.Http1Codec$AbstractSource -> okhttp3.internal.http1.Http1Codec$b:
    okhttp3.internal.http1.Http1Codec this$0 -> d
    okio.ForwardingTimeout timeout -> a
    long bytesRead -> c
    boolean closed -> b
    352:355:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    352:352:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1) -> <init>
    379:380:void endOfInput(boolean,java.io.IOException) -> a
    363:370:long read(okio.Buffer,long) -> read
    358:358:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1Codec$ChunkedSink -> okhttp3.internal.http1.Http1Codec$c:
    okhttp3.internal.http1.Http1Codec this$0 -> c
    okio.ForwardingTimeout timeout -> a
    boolean closed -> b
    321:322:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    344:343:void close() -> close
    339:338:void flush() -> flush
    325:325:okio.Timeout timeout() -> timeout
    329:329:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$ChunkedSource -> okhttp3.internal.http1.Http1Codec$d:
    long bytesRemainingInChunk -> f
    okhttp3.HttpUrl url -> e
    okhttp3.internal.http1.Http1Codec this$0 -> h
    boolean hasMoreChunks -> g
    439:441:void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl) -> <init>
    465:476:void readChunkSize() -> a
    486:491:void close() -> close
    444:444:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1Codec$FixedLengthSink -> okhttp3.internal.http1.Http1Codec$e:
    okhttp3.internal.http1.Http1Codec this$0 -> d
    okio.ForwardingTimeout timeout -> a
    long bytesRemaining -> c
    boolean closed -> b
    280:282:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    305:307:void close() -> close
    300:302:void flush() -> flush
    285:285:okio.Timeout timeout() -> timeout
    289:289:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1Codec$FixedLengthSource -> okhttp3.internal.http1.Http1Codec$f:
    long bytesRemaining -> e
    395:400:void <init>(okhttp3.internal.http1.Http1Codec,long) -> <init>
    422:429:void close() -> close
    403:403:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> okhttp3.internal.http1.Http1Codec$g:
    boolean inputExhausted -> e
    498:499:void <init>(okhttp3.internal.http1.Http1Codec) -> <init>
    517:522:void close() -> close
    503:503:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
    okhttp3.internal.http2.ErrorCode[] $VALUES -> a
    21:19:void <clinit>() -> <clinit>
    45:47:void <init>(java.lang.String,int,int) -> <init>
    50:53:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
    19:19:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    19:19:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
    int hpackSize -> a
    24:29:void <clinit>() -> <clinit>
    39:40:void <init>(java.lang.String,java.lang.String) -> <init>
    43:44:void <init>(okio.ByteString,java.lang.String) -> <init>
    46:50:void <init>(okio.ByteString,okio.ByteString) -> <init>
    53:58:boolean equals(java.lang.Object) -> equals
    62:65:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
okhttp3.internal.http2.Hpack -> t7:
    java.util.Map NAME_TO_FIRST_INDEX -> b
    okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE -> a
    47:354:void <clinit>() -> <clinit>
    357:363:java.util.Map nameToFirstIndex() -> a
    596:602:okio.ByteString checkLowercase(okio.ByteString) -> a
okhttp3.internal.http2.Hpack$Reader -> t7$a:
    java.util.List headerList -> a
    okhttp3.internal.http2.Header[] dynamicTable -> e
    okio.BufferedSource source -> b
    int dynamicTableByteCount -> h
    int nextHeaderIndex -> f
    int headerCount -> g
    int maxDynamicTableByteCount -> d
    int headerTableSizeSetting -> c
    131:132:void <init>(int,okio.Source) -> <init>
    134:138:void <init>(int,int,okio.Source) -> <init>
    145:152:void adjustDynamicTableByteCount() -> a
    233:233:int dynamicTableIndex(int) -> a
    280:312:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> a
    319:337:int readInt(int,int) -> a
    155:159:void clearDynamicTable() -> b
    163:176:int evictToRecoverBytes(int) -> b
    213:215:java.util.List getAndResetHeaderList() -> c
    262:267:okio.ByteString getName(int) -> c
    275:275:boolean isStaticHeader(int) -> d
    315:315:int readByte() -> d
    219:225:void readIndexedHeader(int) -> e
    342:349:okio.ByteString readByteString() -> e
    184:210:void readHeaders() -> f
    250:253:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> f
    237:240:void readLiteralHeaderWithoutIndexingIndexedName(int) -> g
    256:259:void readLiteralHeaderWithIncrementalIndexingNewName() -> g
    243:246:void readLiteralHeaderWithoutIndexingNewName() -> h
okhttp3.internal.http2.Hpack$Writer -> t7$b:
    okio.Buffer out -> a
    int headerCount -> h
    int dynamicTableByteCount -> i
    int nextHeaderIndex -> g
    int maxDynamicTableByteCount -> e
    boolean useCompression -> b
    int smallestHeaderTableSizeSetting -> c
    okhttp3.internal.http2.Header[] dynamicTable -> f
    boolean emitDynamicTableSizeUpdate -> d
    397:398:void <init>(okio.Buffer) -> <init>
    400:405:void <init>(int,boolean,okio.Buffer) -> <init>
    416:430:int evictToRecoverBytes(int) -> a
    434:456:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> a
    461:528:void writeHeaders(java.util.List) -> a
    533:549:void writeInt(int,int,int) -> a
    552:562:void writeByteString(okio.ByteString) -> a
    581:588:void adjustDynamicTableByteCount() -> a
    408:412:void clearDynamicTable() -> b
    565:578:void setHeaderTableSizeSetting(int) -> b
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
    okio.ByteString CONNECTION_PREFACE -> a
    java.lang.String[] BINARY -> d
    java.lang.String[] FLAGS -> c
    java.lang.String[] FRAME_NAMES -> b
    24:103:void <clinit>() -> <clinit>
    105:106:void <init>() -> <init>
    109:109:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> a
    135:137:java.lang.String frameLog(boolean,int,int,byte,byte) -> a
    147:156:java.lang.String formatFlags(byte,byte) -> a
    113:113:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> b
okhttp3.internal.http2.Http2Codec -> okhttp3.internal.http2.Http2Codec:
    okio.ByteString ENCODING -> k
    okio.ByteString TE -> j
    okhttp3.Interceptor$Chain chain -> a
    okio.ByteString UPGRADE -> l
    okio.ByteString KEEP_ALIVE -> g
    okio.ByteString HOST -> f
    okio.ByteString TRANSFER_ENCODING -> i
    okio.ByteString PROXY_CONNECTION -> h
    okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    okio.ByteString CONNECTION -> e
    okhttp3.internal.http2.Http2Stream stream -> d
    java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS -> n
    okhttp3.internal.http2.Http2Connection connection -> c
    java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS -> m
    55:78:void <clinit>() -> <clinit>
    95:100:void <init>(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection) -> <init>
    197:198:void cancel() -> cancel
    103:103:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    121:122:void finishRequest() -> finishRequest
    117:118:void flushRequest() -> flushRequest
    134:151:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    189:193:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    156:179:okhttp3.Response$Builder readHttp2HeadersList(java.util.List) -> readHttp2HeadersList
    125:130:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    107:114:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> okhttp3.internal.http2.Http2Codec$a:
    okhttp3.internal.http2.Http2Codec this$0 -> d
    long bytesRead -> c
    boolean completed -> b
    204:206:void <init>(okhttp3.internal.http2.Http2Codec,okio.Source) -> <init>
    227:230:void endOfInput(java.io.IOException) -> a
    222:224:void close() -> close
    210:217:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
    okhttp3.internal.http2.Http2Connection$Listener listener -> b
    long unacknowledgedBytesRead -> l
    java.util.concurrent.ExecutorService listenerExecutor -> u
    boolean receivedInitialPeerSettings -> p
    java.util.Set currentPushRequests -> t
    boolean awaitingPong -> k
    int nextStreamId -> f
    okhttp3.internal.http2.Http2Writer writer -> r
    int lastGoodStreamId -> e
    okhttp3.internal.http2.PushObserver pushObserver -> j
    java.net.Socket socket -> q
    java.util.concurrent.ScheduledExecutorService writerExecutor -> h
    java.util.Map streams -> c
    okhttp3.internal.http2.Settings peerSettings -> o
    okhttp3.internal.http2.Settings okHttpSettings -> n
    okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable -> s
    java.util.concurrent.ExecutorService pushExecutor -> i
    boolean shutdown -> g
    boolean client -> a
    long bytesLeftInWriteWindow -> m
    java.lang.String hostname -> d
    60:80:void <clinit>() -> <clinit>
    137:175:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    60:60:void access$000(okhttp3.internal.http2.Http2Connection) -> a
    60:60:boolean access$302(okhttp3.internal.http2.Http2Connection,boolean) -> a
    190:190:okhttp3.internal.http2.Http2Stream getStream(int) -> a
    227:256:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> a
    267:268:void writeSynReply(int,boolean,java.util.List) -> a
    319:321:void addBytesToWriteWindow(long) -> a
    345:358:void writeWindowUpdateLater(int,long) -> a
    378:395:void writePing(boolean,int,int) -> a
    444:458:void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode) -> a
    493:496:void failConnection() -> a
    511:520:void start(boolean) -> a
    831:837:void pushRequestLater(int,java.util.List) -> a
    886:889:void pushDataLater(int,okio.BufferedSource,int,boolean) -> a
    907:915:void pushResetLater(int,okhttp3.internal.http2.ErrorCode) -> a
    60:60:java.util.concurrent.ExecutorService access$100() -> b
    60:60:java.util.concurrent.ScheduledExecutorService access$200(okhttp3.internal.http2.Http2Connection) -> b
    340:341:void writeSynReset(int,okhttp3.internal.http2.ErrorCode) -> b
    824:824:boolean pushedStream(int) -> b
    861:878:void pushHeadersLater(int,java.util.List,boolean) -> b
    194:193:okhttp3.internal.http2.Http2Stream removeStream(int) -> c
    325:337:void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode) -> c
    440:441:void close() -> close
    411:412:void flush() -> flush
    179:179:okhttp3.Protocol getProtocol() -> getProtocol
    536:536:boolean isShutdown() -> isShutdown
    200:200:int maxConcurrentStreams() -> maxConcurrentStreams
    222:222:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    186:186:int openStreamCount() -> openStreamCount
    212:212:okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean) -> pushStream
    524:532:void setSettings(okhttp3.internal.http2.Settings) -> setSettings
    420:432:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    503:504:void start() -> start
    284:313:void writeData(int,boolean,okio.Buffer,long) -> writeData
okhttp3.internal.http2.Http2Connection$1 -> okhttp3.internal.http2.Http2Connection$a:
    okhttp3.internal.http2.ErrorCode val$errorCode -> b
    okhttp3.internal.http2.Http2Connection this$0 -> c
    int val$streamId -> a
    325:325:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    328:332:void execute() -> execute
okhttp3.internal.http2.Http2Connection$2 -> okhttp3.internal.http2.Http2Connection$b:
    long val$unacknowledgedBytesRead -> b
    okhttp3.internal.http2.Http2Connection this$0 -> c
    int val$streamId -> a
    346:346:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    349:353:void execute() -> execute
okhttp3.internal.http2.Http2Connection$3 -> okhttp3.internal.http2.Http2Connection$c:
    java.util.List val$requestHeaders -> b
    okhttp3.internal.http2.Http2Connection this$0 -> c
    int val$streamId -> a
    839:839:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    841:851:void execute() -> execute
okhttp3.internal.http2.Http2Connection$4 -> okhttp3.internal.http2.Http2Connection$d:
    java.util.List val$requestHeaders -> b
    okhttp3.internal.http2.Http2Connection this$0 -> d
    boolean val$inFinished -> c
    int val$streamId -> a
    861:861:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    863:873:void execute() -> execute
okhttp3.internal.http2.Http2Connection$5 -> okhttp3.internal.http2.Http2Connection$e:
    okio.Buffer val$buffer -> b
    int val$byteCount -> c
    okhttp3.internal.http2.Http2Connection this$0 -> e
    int val$streamId -> a
    boolean val$inFinished -> d
    890:890:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean) -> <init>
    893:902:void execute() -> execute
okhttp3.internal.http2.Http2Connection$6 -> okhttp3.internal.http2.Http2Connection$f:
    okhttp3.internal.http2.ErrorCode val$errorCode -> b
    okhttp3.internal.http2.Http2Connection this$0 -> c
    int val$streamId -> a
    907:907:void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode) -> <init>
    909:912:void execute() -> execute
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
    okhttp3.internal.http2.PushObserver pushObserver -> f
    okio.BufferedSink sink -> d
    okio.BufferedSource source -> c
    okhttp3.internal.http2.Http2Connection$Listener listener -> e
    int pingIntervalMillis -> h
    boolean client -> g
    java.net.Socket socket -> a
    java.lang.String hostname -> b
    553:555:void <init>(boolean) -> <init>
    587:587:okhttp3.internal.http2.Http2Connection build() -> build
    572:573:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    582:583:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    577:578:okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver) -> pushObserver
    558:558:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket) -> socket
    564:568:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
    919:919:void <clinit>() -> <clinit>
    918:918:void <init>() -> <init>
    941:941:void onSettings(okhttp3.internal.http2.Http2Connection) -> onSettings
okhttp3.internal.http2.Http2Connection$Listener$1 -> okhttp3.internal.http2.Http2Connection$Listener$a:
    919:919:void <init>() -> <init>
    921:922:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$PingRunnable -> okhttp3.internal.http2.Http2Connection$g:
    boolean reply -> a
    int payload1 -> b
    int payload2 -> c
    okhttp3.internal.http2.Http2Connection this$0 -> d
    365:370:void <init>(okhttp3.internal.http2.Http2Connection,boolean,int,int) -> <init>
    373:374:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$h:
    okhttp3.internal.http2.Http2Connection this$0 -> b
    okhttp3.internal.http2.Http2Reader reader -> a
    598:601:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    626:640:void data(boolean,int,okio.BufferedSource,int) -> a
    644:682:void headers(boolean,int,int,java.util.List) -> a
    690:698:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> a
    701:724:void settings(boolean,okhttp3.internal.http2.Settings) -> a
    736:748:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> a
    752:752:void ackSettings() -> a
    755:768:void ping(boolean,int,int) -> a
    771:779:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> a
    791:804:void windowUpdate(int,long) -> a
    809:809:void priority(int,int,int,boolean) -> a
    813:814:void pushPromise(int,int,java.util.List) -> a
    604:620:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> okhttp3.internal.http2.Http2Connection$h$a:
    okhttp3.internal.http2.Http2Stream val$newStream -> a
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> b
    667:667:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream) -> <init>
    670:678:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> okhttp3.internal.http2.Http2Connection$h$b:
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> a
    719:719:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    721:722:void execute() -> execute
okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> okhttp3.internal.http2.Http2Connection$h$c:
    okhttp3.internal.http2.Settings val$peerSettings -> a
    okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> b
    736:736:void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings) -> <init>
    739:743:void execute() -> execute
okhttp3.internal.http2.Http2Reader -> u7:
    okio.BufferedSource source -> a
    java.util.logging.Logger logger -> e
    okhttp3.internal.http2.Http2Reader$ContinuationSource continuation -> b
    okhttp3.internal.http2.Hpack$Reader hpackReader -> d
    boolean client -> c
    60:60:void <clinit>() -> <clinit>
    70:75:void <init>(okio.BufferedSource,boolean) -> <init>
    78:88:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> a
    95:97:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> a
    189:197:java.util.List readHeaderBlock(int,short,byte,int) -> a
    202:202:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> a
    226:231:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> a
    317:317:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> a
    399:399:int readMedium(okio.BufferedSource) -> a
    406:408:int lengthWithoutPadding(int,byte,short) -> a
    169:169:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> b
    220:220:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> b
    235:235:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> c
    307:307:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> c
    342:343:void close() -> close
    294:295:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> d
    335:335:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> d
    247:247:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> e
okhttp3.internal.http2.Http2Reader$ContinuationSource -> u7$a:
    okio.BufferedSource source -> a
    short padding -> f
    int streamId -> d
    byte flags -> c
    int left -> e
    int length -> b
    359:361:void <init>(okio.BufferedSource) -> <init>
    386:393:void readContinuationHeader() -> a
    383:383:void close() -> close
    364:375:long read(okio.Buffer,long) -> read
    379:379:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Reader$Handler -> u7$b:
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
    okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout -> j
    okhttp3.internal.http2.Http2Stream$FramingSource source -> h
    okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout -> k
    okhttp3.internal.http2.ErrorCode errorCode -> l
    java.util.List responseHeaders -> f
    java.util.List requestHeaders -> e
    long bytesLeftInWriteWindow -> b
    okhttp3.internal.http2.Http2Stream$FramingSink sink -> i
    long unacknowledgedBytesRead -> a
    boolean hasResponseHeaders -> g
    int id -> c
    okhttp3.internal.http2.Http2Connection connection -> d
    76:77:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,java.util.List) -> <init>
    242:252:boolean closeInternal(okhttp3.internal.http2.ErrorCode) -> a
    258:273:void receiveHeaders(java.util.List) -> a
    280:282:void receiveData(okio.BufferedSource,int) -> a
    442:448:void cancelStreamIfNecessary() -> a
    557:559:void addBytesToWriteWindow(long) -> a
    298:297:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> b
    562:563:void checkOutNotClosed() -> b
    285:291:void receiveFin() -> c
    223:227:void close(okhttp3.internal.http2.ErrorCode) -> close
    234:238:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    577:579:void waitForIo() -> d
    124:124:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    161:161:okhttp3.internal.http2.ErrorCode getErrorCode() -> getErrorCode
    91:91:int getId() -> getId
    128:128:java.util.List getRequestHeaders() -> getRequestHeaders
    210:214:okio.Sink getSink() -> getSink
    200:200:okio.Source getSource() -> getSource
    119:120:boolean isLocallyInitiated() -> isLocallyInitiated
    106:105:boolean isOpen() -> isOpen
    191:191:okio.Timeout readTimeout() -> readTimeout
    171:173:void sendResponseHeaders(java.util.List,boolean) -> sendResponseHeaders
    137:136:java.util.List takeResponseHeaders() -> takeResponseHeaders
    195:195:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$a:
    okio.Buffer sendBuffer -> a
    okhttp3.internal.http2.Http2Stream this$0 -> d
    boolean closed -> b
    boolean finished -> c
    461:468:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    491:504:void emitFrame(boolean) -> a
    530:533:void close() -> close
    515:518:void flush() -> flush
    526:526:okio.Timeout timeout() -> timeout
    478:483:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$b:
    okio.Buffer readBuffer -> b
    okio.Buffer receiveBuffer -> a
    okhttp3.internal.http2.Http2Stream this$0 -> f
    boolean finished -> e
    long maxByteCount -> c
    boolean closed -> d
    328:330:void <init>(okhttp3.internal.http2.Http2Stream,long) -> <init>
    379:416:void receive(okio.BufferedSource,long) -> a
    432:433:void checkNotClosed() -> a
    368:374:void waitUntilReadable() -> b
    423:427:void close() -> close
    333:333:long read(okio.Buffer,long) -> read
    419:419:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$c:
    okhttp3.internal.http2.Http2Stream this$0 -> j
    587:587:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    601:601:void exitAndThrowIfTimedOut() -> b
    593:597:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    589:590:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> v7:
    okhttp3.internal.http2.Hpack$Writer hpackWriter -> f
    okio.BufferedSink sink -> a
    okio.Buffer hpackBuffer -> c
    boolean closed -> e
    int maxFrameSize -> d
    java.util.logging.Logger logger -> g
    boolean client -> b
    47:47:void <clinit>() -> <clinit>
    57:63:void <init>(okio.BufferedSink,boolean) -> <init>
    66:65:void connectionPreface() -> a
    77:76:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> a
    105:104:void pushPromise(int,int,java.util.List) -> a
    144:143:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> a
    170:169:void data(boolean,int,okio.Buffer,int) -> a
    177:182:void dataFrame(int,byte,okio.Buffer,int) -> a
    211:210:void ping(boolean,int,int) -> a
    232:231:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> a
    252:251:void windowUpdate(int,long) -> a
    266:268:void frameHeader(int,int,byte,byte) -> a
    283:286:void writeMedium(okio.BufferedSink,int) -> a
    298:298:void headers(boolean,int,java.util.List) -> a
    132:131:void synReply(boolean,int,java.util.List) -> b
    157:157:int maxDataLength() -> b
    186:185:void settings(okhttp3.internal.http2.Settings) -> b
    289:295:void writeContinuationFrames(int,long) -> b
    126:126:void synStream(boolean,int,int,java.util.List) -> c
    125:125:void synStream(boolean,int,int,java.util.List) -> c
    278:277:void close() -> close
    120:119:void flush() -> flush
okhttp3.internal.http2.Huffman -> w7:
    int[] CODES -> b
    okhttp3.internal.http2.Huffman INSTANCE -> d
    byte[] CODE_LENGTHS -> c
    okhttp3.internal.http2.Huffman$Node root -> a
    37:79:void <clinit>() -> <clinit>
    87:89:void <init>() -> <init>
    92:115:void encode(okio.ByteString,okio.BufferedSink) -> a
    118:125:int encodedLength(okio.ByteString) -> a
    129:163:byte[] decode(byte[]) -> a
    167:170:void buildTree() -> a
    173:194:void addCode(int,int,byte) -> a
    82:82:okhttp3.internal.http2.Huffman get() -> b
okhttp3.internal.http2.Huffman$Node -> w7$a:
    okhttp3.internal.http2.Huffman$Node[] children -> a
    int symbol -> b
    int terminalBits -> c
    208:212:void <init>() -> <init>
    220:225:void <init>(int,int) -> <init>
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
    76:76:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$1 -> okhttp3.internal.http2.PushObserver$a:
    76:76:void <init>() -> <init>
    88:89:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
    83:83:boolean onHeaders(int,java.util.List,boolean) -> onHeaders
    79:79:boolean onRequest(int,java.util.List) -> onRequest
    93:93:void onReset(int,okhttp3.internal.http2.ErrorCode) -> onReset
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
    int[] values -> b
    int set -> a
    24:51:void <init>() -> <init>
    54:56:void clear() -> a
    59:60:okhttp3.internal.http2.Settings set(int,int) -> a
    77:77:int get(int) -> a
    122:126:void merge(okhttp3.internal.http2.Settings) -> a
    87:88:int getHeaderTableSize() -> b
    98:99:int getMaxConcurrentStreams(int) -> b
    103:104:int getMaxFrameSize(int) -> c
    113:114:int getInitialWindowSize() -> c
    71:72:boolean isSet(int) -> d
    82:82:int size() -> d
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
    25:27:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.io.FileSystem -> okhttp3.internal.io.FileSystem:
    42:42:void <clinit>() -> <clinit>
okhttp3.internal.io.FileSystem$1 -> okhttp3.internal.io.FileSystem$a:
    42:42:void <init>() -> <init>
    59:63:okio.Sink appendingSink(java.io.File) -> appendingSink
    69:72:void delete(java.io.File) -> delete
    90:92:void deleteContents(java.io.File) -> deleteContents
    75:75:boolean exists(java.io.File) -> exists
    83:85:void rename(java.io.File,java.io.File) -> rename
    49:53:okio.Sink sink(java.io.File) -> sink
    79:79:long size(java.io.File) -> size
    44:44:okio.Source source(java.io.File) -> source
okhttp3.internal.platform.AndroidPlatform -> x7:
    okhttp3.internal.platform.OptionalMethod setHostname -> e
    okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol -> f
    okhttp3.internal.platform.OptionalMethod setUseSessionTickets -> d
    okhttp3.internal.platform.OptionalMethod setAlpnProtocols -> g
    okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard -> h
    java.lang.Class sslParametersClass -> c
    60:66:void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod) -> <init>
    194:198:boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> a
    183:187:boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> b
    208:216:boolean supportsAlpn() -> b
    221:228:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    237:264:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    273:278:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    119:129:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    71:74:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    132:136:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    156:156:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    169:174:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    140:153:void log(int,java.lang.String,java.lang.Throwable) -> log
    160:165:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    95:113:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> x7$a:
    java.lang.Object x509TrustManagerExtensions -> a
    java.lang.reflect.Method checkServerTrusted -> b
    291:294:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    300:306:java.util.List clean(java.util.List,java.lang.String) -> clean
    313:313:boolean equals(java.lang.Object) -> equals
    317:317:int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex -> x7$b:
    javax.net.ssl.X509TrustManager trustManager -> a
    java.lang.reflect.Method findByIssuerAndSignatureMethod -> b
    393:396:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    414:421:boolean equals(java.lang.Object) -> equals
    400:406:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    427:427:int hashCode() -> hashCode
okhttp3.internal.platform.AndroidPlatform$CloseGuard -> x7$c:
    java.lang.reflect.Method warnIfOpenMethod -> c
    java.lang.reflect.Method getMethod -> a
    java.lang.reflect.Method openMethod -> b
    331:335:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    338:346:java.lang.Object createAndOpen(java.lang.String) -> a
    350:358:boolean warnIfOpen(java.lang.Object) -> a
    367:376:okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> a
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
    36:37:void <init>() -> <init>
    40:40:java.security.Provider getProvider() -> b
    100:109:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    66:79:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    91:93:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    82:85:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    44:59:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.Jdk9Platform -> y7:
    java.lang.reflect.Method setProtocolMethod -> c
    java.lang.reflect.Method getProtocolMethod -> d
    37:40:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    88:97:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    46:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    62:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    81:81:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.platform.JdkWithJettyBootPlatform -> z7:
    java.lang.Class clientProviderClass -> f
    java.lang.Class serverProviderClass -> g
    java.lang.reflect.Method putMethod -> c
    java.lang.reflect.Method getMethod -> d
    java.lang.reflect.Method removeMethod -> e
    41:47:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    64:66:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    88:101:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    51:58:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    72:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> z7$a:
    java.util.List protocols -> a
    java.lang.String selected -> c
    boolean unsupported -> b
    116:118:void <init>(java.util.List) -> <init>
    121:148:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.OptionalMethod -> a8:
    java.lang.Class[] methodParams -> c
    java.lang.Class returnType -> a
    java.lang.String methodName -> b
    45:49:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    55:55:boolean isSupported(java.lang.Object) -> a
    106:108:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> a
    147:158:java.lang.reflect.Method getMethod(java.lang.Class) -> a
    162:171:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    66:73:java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> b
    86:94:java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> c
    129:137:java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> d
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
    okhttp3.internal.platform.Platform PLATFORM -> a
    java.util.logging.Logger logger -> b
    78:81:void <clinit>() -> <clinit>
    77:77:void <init>() -> <init>
    199:226:okhttp3.internal.platform.Platform findPlatform() -> a
    234:241:byte[] concatLengthPrefixed(java.util.List) -> a
    245:264:java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String) -> a
    120:120:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    162:168:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    172:172:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    176:180:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory) -> buildCertificateChainCleaner
    276:276:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    113:113:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    129:130:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    84:84:okhttp3.internal.platform.Platform get() -> get
    89:89:java.lang.String getPrefix() -> getPrefix
    269:271:javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    124:124:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    147:150:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    138:138:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    188:194:boolean isConscryptPreferred() -> isConscryptPreferred
    133:135:void log(int,java.lang.String,java.lang.Throwable) -> log
    154:159:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    97:102:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> trustManager
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
    java.util.concurrent.CountDownLatch readCompleteLatch -> b
    okhttp3.internal.publicsuffix.PublicSuffixDatabase instance -> h
    java.util.concurrent.atomic.AtomicBoolean listRead -> a
    java.lang.String[] PREVAILING_RULE -> g
    java.lang.String[] EMPTY_RULE -> f
    byte[] publicSuffixExceptionListBytes -> d
    byte[] publicSuffixListBytes -> c
    byte[] WILDCARD_LABEL -> e
    39:45:void <clinit>() -> <clinit>
    36:51:void <init>() -> <init>
    109:123:java.lang.String[] findMatchingRule(java.lang.String[]) -> a
    195:276:java.lang.String binarySearchBytes(byte[],byte[][],int) -> a
    309:322:void readTheList() -> a
    285:296:void readTheListUninterruptibly() -> b
    61:61:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
    78:78:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
    okhttp3.internal.tls.TrustRootIndex trustRootIndex -> a
    43:45:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    106:111:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> a
    56:101:java.util.List clean(java.util.List,java.lang.String) -> clean
    120:121:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
    java.util.Map subjectToCaCerts -> a
    30:41:void <init>(java.security.cert.X509Certificate[]) -> <init>
    61:62:boolean equals(java.lang.Object) -> equals
    44:57:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    68:68:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
    36:36:void <init>() -> <init>
    41:41:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
    45:45:okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[]) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
    37:37:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    74:81:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> a
    94:118:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> a
    85:90:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    63:69:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> b
    48:51:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    56:56:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    132:135:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
okhttp3.internal.ws.RealWebSocket -> okhttp3.internal.ws.RealWebSocket:
    java.util.ArrayDeque pongQueue -> l
    java.util.ArrayDeque messageAndCloseQueue -> m
    okhttp3.internal.ws.WebSocketWriter writer -> i
    boolean enqueuedClose -> o
    java.util.Random random -> c
    java.util.List ONLY_HTTP1 -> x
    long pingIntervalMillis -> d
    boolean awaitingPong -> w
    okhttp3.WebSocketListener listener -> b
    java.lang.String receivedCloseReason -> r
    okhttp3.internal.ws.RealWebSocket$Streams streams -> k
    boolean failed -> s
    okhttp3.Call call -> f
    okhttp3.internal.ws.WebSocketReader reader -> h
    java.util.concurrent.ScheduledFuture cancelFuture -> p
    java.lang.Runnable writerRunnable -> g
    java.util.concurrent.ScheduledExecutorService executor -> j
    int receivedPongCount -> v
    int sentPingCount -> t
    int receivedPingCount -> u
    long queueSize -> n
    okhttp3.Request originalRequest -> a
    java.lang.String key -> e
    int receivedCloseCode -> q
    56:57:void <clinit>() -> <clinit>
    143:145:void <init>(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long) -> <init>
    226:228:void checkResponse(okhttp3.Response) -> a
    385:384:boolean send(okio.ByteString,int) -> a
    414:413:boolean close(int,java.lang.String,long) -> a
    436:441:void runWriter() -> a
    459:489:boolean writeOneFrame() -> b
    536:542:void writePingFrame() -> c
    177:178:void cancel() -> cancel
    410:410:boolean close(int,java.lang.String) -> close
    181:223:void connect(okhttp3.OkHttpClient) -> connect
    560:567:void failWebSocket(java.lang.Exception,okhttp3.Response) -> failWebSocket
    253:264:void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams) -> initReaderAndWriter
    271:275:void loopReader() -> loopReader
    345:345:void onReadClose(int,java.lang.String) -> onReadClose
    322:323:void onReadMessage(java.lang.String) -> onReadMessage
    326:327:void onReadMessage(okio.ByteString) -> onReadMessage
    331:330:void onReadPing(okio.ByteString) -> onReadPing
    340:339:void onReadPong(okio.ByteString) -> onReadPong
    173:173:long queueSize() -> queueSize
    169:169:okhttp3.Request request() -> request
    374:374:boolean send(java.lang.String) -> send
    379:379:boolean send(okio.ByteString) -> send
okhttp3.internal.ws.RealWebSocket$1 -> okhttp3.internal.ws.RealWebSocket$a:
    okhttp3.internal.ws.RealWebSocket this$0 -> a
    156:156:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    159:164:void run() -> run
okhttp3.internal.ws.RealWebSocket$2 -> okhttp3.internal.ws.RealWebSocket$b:
    okhttp3.internal.ws.RealWebSocket this$0 -> b
    okhttp3.Request val$request -> a
    192:192:void <init>(okhttp3.internal.ws.RealWebSocket,okhttp3.Request) -> <init>
    220:221:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    195:199:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
okhttp3.internal.ws.RealWebSocket$CancelRunnable -> okhttp3.internal.ws.RealWebSocket$c:
    okhttp3.internal.ws.RealWebSocket this$0 -> a
    610:610:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    612:613:void run() -> run
okhttp3.internal.ws.RealWebSocket$Close -> okhttp3.internal.ws.RealWebSocket$d:
    okio.ByteString reason -> b
    long cancelAfterCloseMillis -> c
    int code -> a
    591:595:void <init>(int,okio.ByteString,long) -> <init>
okhttp3.internal.ws.RealWebSocket$Message -> okhttp3.internal.ws.RealWebSocket$e:
    okio.ByteString data -> b
    int formatOpcode -> a
    580:583:void <init>(int,okio.ByteString) -> <init>
okhttp3.internal.ws.RealWebSocket$PingRunnable -> okhttp3.internal.ws.RealWebSocket$f:
    okhttp3.internal.ws.RealWebSocket this$0 -> a
    525:526:void <init>(okhttp3.internal.ws.RealWebSocket) -> <init>
    529:530:void run() -> run
okhttp3.internal.ws.RealWebSocket$Streams -> okhttp3.internal.ws.RealWebSocket$Streams:
    603:607:void <init>(boolean,okio.BufferedSource,okio.BufferedSink) -> <init>
okhttp3.internal.ws.WebSocketProtocol -> okhttp3.internal.ws.WebSocketProtocol:
    126:127:void <init>() -> <init>
    96:104:void toggleMask(okio.Buffer$UnsafeCursor,byte[]) -> a
    108:109:java.lang.String closeCodeExceptionMessage(int) -> a
    123:123:java.lang.String acceptHeader(java.lang.String) -> acceptHeader
    118:119:void validateCloseCode(int) -> b
okhttp3.internal.ws.WebSocketReader -> okhttp3.internal.ws.WebSocketReader:
    okio.BufferedSource source -> b
    long frameLength -> f
    okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback -> c
    byte[] maskKey -> k
    boolean isFinalFrame -> g
    int opcode -> e
    boolean isControlFrame -> h
    boolean isClient -> a
    okio.Buffer messageFrameBuffer -> j
    okio.Buffer controlFrameBuffer -> i
    okio.Buffer$UnsafeCursor maskCursor -> l
    boolean closed -> d
    78:79:void <init>(boolean,okio.BufferedSource,okhttp3.internal.ws.WebSocketReader$FrameCallback) -> <init>
    101:107:void processNextFrame() -> a
    172:195:void readControlFrame() -> b
    110:110:void readHeader() -> c
    243:243:void readMessage() -> d
    211:223:void readMessageFrame() -> e
    227:234:void readUntilNonControlFrame() -> f
okhttp3.internal.ws.WebSocketWriter -> b8:
    okio.BufferedSink sink -> c
    okio.Buffer sinkBuffer -> d
    java.util.Random random -> b
    boolean writerClosed -> e
    okio.Buffer buffer -> f
    okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink -> g
    boolean activeWriter -> h
    byte[] maskKey -> i
    boolean isClient -> a
    okio.Buffer$UnsafeCursor maskCursor -> j
    61:62:void <init>(boolean,okio.BufferedSink,java.util.Random) -> <init>
    76:77:void writePing(okio.ByteString) -> a
    92:108:void writeClose(int,okio.ByteString) -> a
    154:155:okio.Sink newMessageSink(int,long) -> a
    170:170:void writeMessageFrame(int,long,boolean,boolean) -> a
    81:82:void writePong(okio.ByteString) -> b
    113:113:void writeControlFrame(int,okio.ByteString) -> b
okhttp3.internal.ws.WebSocketWriter$FrameSink -> b8$a:
    okhttp3.internal.ws.WebSocketWriter this$0 -> e
    long contentLength -> b
    boolean isFirstFrame -> c
    int formatOpcode -> a
    boolean closed -> d
    215:215:void <init>(okhttp3.internal.ws.WebSocketWriter) -> <init>
    251:251:void close() -> close
    239:239:void flush() -> flush
    246:246:okio.Timeout timeout() -> timeout
    222:222:void write(okio.Buffer,long) -> write
okio.AsyncTimeout -> okio.AsyncTimeout:
    long timeoutAt -> f
    long IDLE_TIMEOUT_NANOS -> h
    long IDLE_TIMEOUT_MILLIS -> g
    okio.AsyncTimeout next -> e
    okio.AsyncTimeout head -> i
    boolean inQueue -> d
    50:51:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    86:85:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> a
    128:127:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> a
    145:145:long remainingNanos(long) -> a
    274:276:void exit(boolean) -> a
    284:285:java.io.IOException exit(java.io.IOException) -> a
    342:368:okio.AsyncTimeout awaitTimeout() -> a
    73:73:void enter() -> enter
    120:122:boolean exit() -> exit
    294:298:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    160:160:okio.Sink sink(okio.Sink) -> sink
    232:232:okio.Source source(okio.Source) -> source
    153:153:void timedOut() -> timedOut
okio.AsyncTimeout$1 -> okio.AsyncTimeout$a:
    okio.AsyncTimeout this$0 -> b
    okio.Sink val$sink -> a
    160:160:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    205:213:void close() -> close
    192:200:void flush() -> flush
    218:218:okio.Timeout timeout() -> timeout
    222:222:java.lang.String toString() -> toString
    162:189:void write(okio.Buffer,long) -> write
okio.AsyncTimeout$2 -> okio.AsyncTimeout$b:
    okio.Source val$source -> a
    okio.AsyncTimeout this$0 -> b
    232:232:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    248:255:void close() -> close
    234:243:long read(okio.Buffer,long) -> read
    260:260:okio.Timeout timeout() -> timeout
    264:264:java.lang.String toString() -> toString
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$c:
    303:305:void <init>() -> <init>
    311:328:void run() -> run
okio.Base64 -> c8:
    byte[] URL_MAP -> b
    byte[] MAP -> a
    110:117:void <clinit>() -> <clinit>
    31:107:byte[] decode(java.lang.String) -> a
    125:125:java.lang.String encode(byte[]) -> a
    133:159:java.lang.String encode(byte[],byte[]) -> a
    129:129:java.lang.String encodeUrl(byte[]) -> b
okio.Buffer -> okio.Buffer:
    long size -> b
    okio.Segment head -> a
    byte[] DIGITS -> c
    55:55:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    246:246:void readFrom(java.io.InputStream,long,boolean) -> a
    572:581:int selectPrefix(okio.Options) -> a
    676:686:java.lang.String readUtf8Line(long) -> a
    1208:1208:okio.Segment writableSegment(int) -> a
    1553:1572:boolean rangeEquals(okio.Segment,int,okio.ByteString,int,int) -> a
    1622:1631:okio.ByteString digest(java.lang.String) -> a
    1652:1662:okio.ByteString hmac(java.lang.String,okio.ByteString) -> a
    71:71:okio.Buffer buffer() -> buffer
    840:842:void clear() -> clear
    54:54:java.lang.Object clone() -> clone
    1724:1733:okio.Buffer clone() -> clone
    1583:1583:void close() -> close
    267:276:long completeSegmentByteCount() -> completeSegmentByteCount
    142:142:okio.Buffer copyTo(java.io.OutputStream) -> copyTo
    150:150:okio.Buffer copyTo(java.io.OutputStream,long,long) -> copyTo
    174:174:okio.Buffer copyTo(okio.Buffer,long,long) -> copyTo
    101:101:okio.BufferedSink emit() -> emit
    54:54:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    97:97:okio.Buffer emitCompleteSegments() -> emitCompleteSegments
    1669:1698:boolean equals(java.lang.Object) -> equals
    105:105:boolean exhausted() -> exhausted
    1576:1576:void flush() -> flush
    302:311:byte getByte(long) -> getByte
    1702:1710:int hashCode() -> hashCode
    1637:1637:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    1642:1642:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    1647:1647:okio.ByteString hmacSha512(okio.ByteString) -> hmacSha512
    1323:1323:long indexOf(byte) -> indexOf
    1331:1331:long indexOf(byte,long) -> indexOf
    1335:1337:long indexOf(byte,long,long) -> indexOf
    1391:1391:long indexOf(okio.ByteString) -> indexOf
    1395:1395:long indexOf(okio.ByteString,long) -> indexOf
    1450:1450:long indexOfElement(okio.ByteString) -> indexOfElement
    1454:1454:long indexOfElement(okio.ByteString,long) -> indexOfElement
    117:117:java.io.InputStream inputStream() -> inputStream
    1579:1579:boolean isOpen() -> isOpen
    1602:1602:okio.ByteString md5() -> md5
    75:75:java.io.OutputStream outputStream() -> outputStream
    1527:1527:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    1532:1537:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    785:785:int read(byte[]) -> read
    798:813:int read(byte[],int,int) -> read
    817:831:int read(java.nio.ByteBuffer) -> read
    1314:1314:long read(okio.Buffer,long) -> read
    593:597:long readAll(okio.Sink) -> readAll
    1767:1767:okio.Buffer$UnsafeCursor readAndWriteUnsafe() -> readAndWriteUnsafe
    1771:1772:okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor) -> readAndWriteUnsafe
    280:280:byte readByte() -> readByte
    767:769:byte[] readByteArray() -> readByteArray
    774:776:byte[] readByteArray(long) -> readByteArray
    540:540:okio.ByteString readByteString() -> readByteString
    544:544:okio.ByteString readByteString(long) -> readByteString
    426:426:long readDecimalLong() -> readDecimalLong
    234:235:okio.Buffer readFrom(java.io.InputStream) -> readFrom
    240:240:okio.Buffer readFrom(java.io.InputStream,long) -> readFrom
    585:587:void readFully(okio.Buffer,long) -> readFully
    789:795:void readFully(byte[]) -> readFully
    484:484:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    348:348:int readInt() -> readInt
    418:418:int readIntLe() -> readIntLe
    380:380:long readLong() -> readLong
    422:422:long readLongLe() -> readLongLe
    319:319:short readShort() -> readShort
    414:414:short readShortLe() -> readShortLe
    614:616:java.lang.String readString(java.nio.charset.Charset) -> readString
    621:622:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    1753:1753:okio.Buffer$UnsafeCursor readUnsafe() -> readUnsafe
    1757:1758:okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor) -> readUnsafe
    602:604:java.lang.String readUtf8() -> readUtf8
    609:609:java.lang.String readUtf8(long) -> readUtf8
    691:691:int readUtf8CodePoint() -> readUtf8CodePoint
    647:653:java.lang.String readUtf8Line() -> readUtf8Line
    657:657:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    661:661:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    113:113:boolean request(long) -> request
    109:109:void require(long) -> require
    548:563:int select(okio.Options) -> select
    1607:1607:okio.ByteString sha1() -> sha1
    1612:1612:okio.ByteString sha256() -> sha256
    1617:1617:okio.ByteString sha512() -> sha512
    67:67:long size() -> size
    848:862:void skip(long) -> skip
    1738:1739:okio.ByteString snapshot() -> snapshot
    1748:1749:okio.ByteString snapshot(int) -> snapshot
    1586:1586:okio.Timeout timeout() -> timeout
    1719:1719:java.lang.String toString() -> toString
    54:54:okio.BufferedSink write(okio.ByteString) -> write
    54:54:okio.BufferedSink write(byte[]) -> write
    54:54:okio.BufferedSink write(byte[],int,int) -> write
    865:865:okio.Buffer write(okio.ByteString) -> write
    1008:1008:okio.Buffer write(byte[]) -> write
    1013:1013:okio.Buffer write(byte[],int,int) -> write
    1032:1032:int write(java.nio.ByteBuffer) -> write
    1060:1065:okio.BufferedSink write(okio.Source,long) -> write
    1273:1273:void write(okio.Buffer,long) -> write
    1051:1051:long writeAll(okio.Source) -> writeAll
    54:54:okio.BufferedSink writeByte(int) -> writeByte
    1069:1072:okio.Buffer writeByte(int) -> writeByte
    54:54:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    1129:1181:okio.Buffer writeDecimalLong(long) -> writeDecimalLong
    54:54:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    1185:1200:okio.Buffer writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    54:54:okio.BufferedSink writeInt(int) -> writeInt
    1091:1100:okio.Buffer writeInt(int) -> writeInt
    54:54:okio.BufferedSink writeIntLe(int) -> writeIntLe
    1104:1104:okio.Buffer writeIntLe(int) -> writeIntLe
    54:54:okio.BufferedSink writeLong(long) -> writeLong
    1108:1121:okio.Buffer writeLong(long) -> writeLong
    54:54:okio.BufferedSink writeLongLe(long) -> writeLongLe
    1125:1125:okio.Buffer writeLongLe(long) -> writeLongLe
    54:54:okio.BufferedSink writeShort(int) -> writeShort
    1076:1083:okio.Buffer writeShort(int) -> writeShort
    54:54:okio.BufferedSink writeShortLe(int) -> writeShortLe
    1087:1087:okio.Buffer writeShortLe(int) -> writeShortLe
    54:54:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    54:54:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    987:987:okio.Buffer writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    992:992:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    205:205:okio.Buffer writeTo(java.io.OutputStream) -> writeTo
    210:210:okio.Buffer writeTo(java.io.OutputStream,long) -> writeTo
    54:54:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    54:54:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> writeUtf8
    871:871:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    875:875:okio.Buffer writeUtf8(java.lang.String,int,int) -> writeUtf8
    54:54:okio.BufferedSink writeUtf8CodePoint(int) -> writeUtf8CodePoint
    951:980:okio.Buffer writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.Buffer$1 -> okio.Buffer$a:
    okio.Buffer this$0 -> a
    75:75:void <init>(okio.Buffer) -> <init>
    88:88:void close() -> close
    85:85:void flush() -> flush
    91:91:java.lang.String toString() -> toString
    77:78:void write(int) -> write
    81:82:void write(byte[],int,int) -> write
okio.Buffer$2 -> okio.Buffer$b:
    okio.Buffer this$0 -> a
    117:117:void <init>(okio.Buffer) -> <init>
    128:128:int available() -> available
    132:132:void close() -> close
    119:120:int read() -> read
    124:124:int read(byte[],int,int) -> read
    135:135:java.lang.String toString() -> toString
okio.Buffer$UnsafeCursor -> okio.Buffer$UnsafeCursor:
    okio.Segment segment -> a
    1980:1988:void <init>() -> <init>
    2208:2209:void close() -> close
    2177:2178:long expandBuffer(int) -> expandBuffer
    1996:1996:int next() -> next
    2096:2097:long resizeBuffer(long) -> resizeBuffer
    2007:2009:int seek(long) -> seek
okio.ByteString -> okio.ByteString:
    char[] HEX_DIGITS -> d
    byte[] data -> a
    int hashCode -> b
    java.lang.String utf8 -> c
    53:58:void <clinit>() -> <clinit>
    64:66:void <init>(byte[]) -> <init>
    156:158:okio.ByteString digest(java.lang.String) -> a
    179:183:okio.ByteString hmac(java.lang.String,okio.ByteString) -> a
    233:236:int decodeHexDigit(char) -> a
    359:359:byte[] internalArray() -> a
    377:378:void write(okio.Buffer) -> a
    513:524:int codePointIndexToCharIndex(java.lang.String,int) -> a
    366:366:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    131:131:java.lang.String base64() -> base64
    194:194:java.lang.String base64Url() -> base64Url
    52:52:int compareTo(java.lang.Object) -> compareTo
    473:482:int compareTo(okio.ByteString) -> compareTo
    202:202:okio.ByteString decodeBase64(java.lang.String) -> decodeBase64
    220:220:okio.ByteString decodeHex(java.lang.String) -> decodeHex
    107:107:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset) -> encodeString
    99:99:okio.ByteString encodeUtf8(java.lang.String) -> encodeUtf8
    409:409:boolean endsWith(okio.ByteString) -> endsWith
    413:413:boolean endsWith(byte[]) -> endsWith
    461:462:boolean equals(java.lang.Object) -> equals
    340:340:byte getByte(int) -> getByte
    468:469:int hashCode() -> hashCode
    209:215:java.lang.String hex() -> hex
    164:164:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    169:169:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    174:174:okio.ByteString hmacSha512(okio.ByteString) -> hmacSha512
    417:417:int indexOf(okio.ByteString) -> indexOf
    421:421:int indexOf(okio.ByteString,int) -> indexOf
    425:425:int indexOf(byte[]) -> indexOf
    429:435:int indexOf(byte[],int) -> indexOf
    439:439:int lastIndexOf(okio.ByteString) -> lastIndexOf
    443:443:int lastIndexOf(okio.ByteString,int) -> lastIndexOf
    447:447:int lastIndexOf(byte[]) -> lastIndexOf
    451:457:int lastIndexOf(byte[],int) -> lastIndexOf
    136:136:okio.ByteString md5() -> md5
    72:72:okio.ByteString of(byte[]) -> of
    81:81:okio.ByteString of(byte[],int,int) -> of
    90:90:okio.ByteString of(java.nio.ByteBuffer) -> of
    386:386:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    395:395:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    246:246:okio.ByteString read(java.io.InputStream,int) -> read
    141:141:okio.ByteString sha1() -> sha1
    146:146:okio.ByteString sha256() -> sha256
    151:151:okio.ByteString sha512() -> sha512
    347:347:int size() -> size
    401:401:boolean startsWith(okio.ByteString) -> startsWith
    405:405:boolean startsWith(byte[]) -> startsWith
    121:121:java.lang.String string(java.nio.charset.Charset) -> string
    312:312:okio.ByteString substring(int) -> substring
    321:321:okio.ByteString substring(int,int) -> substring
    264:279:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    289:304:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    354:354:byte[] toByteArray() -> toByteArray
    490:507:java.lang.String toString() -> toString
    114:116:java.lang.String utf8() -> utf8
    371:371:void write(java.io.OutputStream) -> write
okio.DeflaterSink -> okio.DeflaterSink:
    okio.BufferedSink sink -> a
    java.util.zip.Deflater deflater -> b
    boolean closed -> c
    44:45:void <init>(okio.Sink,java.util.zip.Deflater) -> <init>
    52:53:void <init>(okio.BufferedSink,java.util.zip.Deflater) -> <init>
    84:108:void deflate(boolean) -> a
    117:119:void finishDeflate() -> a
    122:146:void close() -> close
    112:114:void flush() -> flush
    150:150:okio.Timeout timeout() -> timeout
    154:154:java.lang.String toString() -> toString
    60:80:void write(okio.Buffer,long) -> write
okio.ForwardingSink -> okio.ForwardingSink:
    okio.Sink delegate -> a
    24:25:void <init>(okio.Sink) -> <init>
    47:48:void close() -> close
    31:31:okio.Sink delegate() -> delegate
    39:40:void flush() -> flush
    43:43:okio.Timeout timeout() -> timeout
    51:51:java.lang.String toString() -> toString
    35:36:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
    okio.Source delegate -> a
    24:25:void <init>(okio.Source) -> <init>
    43:44:void close() -> close
    31:31:okio.Source delegate() -> delegate
    35:35:long read(okio.Buffer,long) -> read
    39:39:okio.Timeout timeout() -> timeout
    47:47:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
    okio.Timeout delegate -> d
    25:26:void <init>(okio.Timeout) -> <init>
    66:66:okio.Timeout clearDeadline() -> clearDeadline
    62:62:okio.Timeout clearTimeout() -> clearTimeout
    54:54:long deadlineNanoTime() -> deadlineNanoTime
    58:58:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    32:32:okio.Timeout delegate() -> delegate
    50:50:boolean hasDeadline() -> hasDeadline
    36:36:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    70:71:void throwIfReached() -> throwIfReached
    42:42:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    46:46:long timeoutNanos() -> timeoutNanos
okio.GzipSink -> okio.GzipSink:
    okio.BufferedSink sink -> a
    okio.DeflaterSink deflaterSink -> c
    java.util.zip.Deflater deflater -> b
    java.util.zip.CRC32 crc -> e
    boolean closed -> d
    56:57:void <init>(okio.Sink) -> <init>
    133:135:void writeFooter() -> a
    139:144:void updateCrc(okio.Buffer,long) -> a
    123:130:void writeHeader() -> b
    82:110:void close() -> close
    118:118:java.util.zip.Deflater deflater() -> deflater
    74:75:void flush() -> flush
    78:78:okio.Timeout timeout() -> timeout
    66:66:void write(okio.Buffer,long) -> write
okio.GzipSource -> okio.GzipSource:
    okio.BufferedSource source -> b
    okio.InflaterSource inflaterSource -> d
    java.util.zip.Inflater inflater -> c
    java.util.zip.CRC32 crc -> e
    int section -> a
    60:61:void <init>(okio.Source) -> <init>
    114:166:void consumeHeader() -> a
    188:201:void updateCrc(okio.Buffer,long,long) -> a
    204:205:void checkEqual(java.lang.String,int,int) -> a
    173:175:void consumeTrailer() -> b
    182:183:void close() -> close
    68:68:long read(okio.Buffer,long) -> read
    178:178:okio.Timeout timeout() -> timeout
okio.HashingSink -> okio.HashingSink:
    javax.crypto.Mac mac -> c
    java.security.MessageDigest messageDigest -> b
    84:89:void <init>(okio.Sink,java.lang.String) -> <init>
    94:100:void <init>(okio.Sink,okio.ByteString,java.lang.String) -> <init>
    132:133:okio.ByteString hash() -> hash
    70:70:okio.HashingSink hmacSha1(okio.Sink,okio.ByteString) -> hmacSha1
    75:75:okio.HashingSink hmacSha256(okio.Sink,okio.ByteString) -> hmacSha256
    80:80:okio.HashingSink hmacSha512(okio.Sink,okio.ByteString) -> hmacSha512
    50:50:okio.HashingSink md5(okio.Sink) -> md5
    55:55:okio.HashingSink sha1(okio.Sink) -> sha1
    60:60:okio.HashingSink sha256(okio.Sink) -> sha256
    65:65:okio.HashingSink sha512(okio.Sink) -> sha512
    107:123:void write(okio.Buffer,long) -> write
okio.HashingSource -> okio.HashingSource:
    javax.crypto.Mac mac -> c
    java.security.MessageDigest messageDigest -> b
    71:76:void <init>(okio.Source,java.lang.String) -> <init>
    81:87:void <init>(okio.Source,okio.ByteString,java.lang.String) -> <init>
    131:132:okio.ByteString hash() -> hash
    62:62:okio.HashingSource hmacSha1(okio.Source,okio.ByteString) -> hmacSha1
    67:67:okio.HashingSource hmacSha256(okio.Source,okio.ByteString) -> hmacSha256
    47:47:okio.HashingSource md5(okio.Source) -> md5
    94:121:long read(okio.Buffer,long) -> read
    52:52:okio.HashingSource sha1(okio.Source) -> sha1
    57:57:okio.HashingSource sha256(okio.Source) -> sha256
okio.InflaterSource -> okio.InflaterSource:
    okio.BufferedSource source -> a
    java.util.zip.Inflater inflater -> b
    int bufferBytesHeldByInflater -> c
    boolean closed -> d
    40:41:void <init>(okio.Source,java.util.zip.Inflater) -> <init>
    48:49:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    113:117:void releaseInflatedBytes() -> a
    124:128:void close() -> close
    57:57:long read(okio.Buffer,long) -> read
    96:99:boolean refill() -> refill
    120:120:okio.Timeout timeout() -> timeout
okio.Okio -> okio.Okio:
    java.util.logging.Logger logger -> a
    40:40:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    69:69:okio.Sink sink(java.io.OutputStream,okio.Timeout) -> a
    129:129:okio.Source source(java.io.InputStream,okio.Timeout) -> a
    230:230:okio.AsyncTimeout timeout(java.net.Socket) -> a
    262:262:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> a
    186:186:okio.Sink appendingSink(java.io.File) -> appendingSink
    199:199:okio.Sink blackhole() -> blackhole
    51:51:okio.BufferedSource buffer(okio.Source) -> buffer
    60:60:okio.BufferedSink buffer(okio.Sink) -> buffer
    65:65:okio.Sink sink(java.io.OutputStream) -> sink
    116:116:okio.Sink sink(java.net.Socket) -> sink
    180:180:okio.Sink sink(java.io.File) -> sink
    193:193:okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]) -> sink
    125:125:okio.Source source(java.io.InputStream) -> source
    167:167:okio.Source source(java.io.File) -> source
    174:174:okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]) -> source
    222:222:okio.Source source(java.net.Socket) -> source
okio.Okio$1 -> okio.Okio$a:
    okio.Timeout val$timeout -> a
    java.io.OutputStream val$out -> b
    72:72:void <init>(okio.Timeout,java.io.OutputStream) -> <init>
    97:98:void close() -> close
    93:94:void flush() -> flush
    101:101:okio.Timeout timeout() -> timeout
    105:105:java.lang.String toString() -> toString
    74:90:void write(okio.Buffer,long) -> write
okio.Okio$2 -> okio.Okio$b:
    okio.Timeout val$timeout -> a
    java.io.InputStream val$in -> b
    132:132:void <init>(okio.Timeout,java.io.InputStream) -> <init>
    152:153:void close() -> close
    134:134:long read(okio.Buffer,long) -> read
    156:156:okio.Timeout timeout() -> timeout
    160:160:java.lang.String toString() -> toString
okio.Okio$3 -> okio.Okio$c:
    199:199:void <init>() -> <init>
    212:212:void close() -> close
    205:205:void flush() -> flush
    208:208:okio.Timeout timeout() -> timeout
    201:202:void write(okio.Buffer,long) -> write
okio.Okio$4 -> okio.Okio$d:
    java.net.Socket val$socket -> j
    230:230:void <init>(java.net.Socket) -> <init>
    232:236:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    241:253:void timedOut() -> timedOut
okio.Options -> okio.Options:
    okio.ByteString[] byteStrings -> a
    25:27:void <init>(okio.ByteString[]) -> <init>
    22:22:java.lang.Object get(int) -> get
    34:34:okio.ByteString get(int) -> get
    30:30:okio.Options of(okio.ByteString[]) -> of
    38:38:int size() -> size
okio.Pipe -> okio.Pipe:
    okio.Source source -> f
    okio.Buffer buffer -> b
    long maxBufferSize -> a
    okio.Sink sink -> e
    boolean sinkClosed -> c
    boolean sourceClosed -> d
    44:46:void <init>(long) -> <init>
    56:56:okio.Sink sink() -> sink
    52:52:okio.Source source() -> source
okio.Pipe$PipeSink -> okio.Pipe$a:
    okio.Timeout timeout -> a
    okio.Pipe this$0 -> b
    59:60:void <init>(okio.Pipe) -> <init>
    91:96:void close() -> close
    84:87:void flush() -> flush
    100:100:okio.Timeout timeout() -> timeout
    63:80:void write(okio.Buffer,long) -> write
okio.Pipe$PipeSource -> okio.Pipe$b:
    okio.Timeout timeout -> a
    okio.Pipe this$0 -> b
    104:105:void <init>(okio.Pipe) -> <init>
    123:126:void close() -> close
    108:119:long read(okio.Buffer,long) -> read
    130:130:okio.Timeout timeout() -> timeout
okio.RealBufferedSink -> d8:
    okio.Buffer buffer -> a
    okio.Sink sink -> b
    boolean closed -> c
    29:30:void <init>(okio.Sink) -> <init>
    35:35:okio.Buffer buffer() -> buffer
    234:254:void close() -> close
    184:184:okio.BufferedSink emit() -> emit
    177:177:okio.BufferedSink emitCompleteSegments() -> emitCompleteSegments
    222:222:void flush() -> flush
    230:230:boolean isOpen() -> isOpen
    191:191:java.io.OutputStream outputStream() -> outputStream
    258:258:okio.Timeout timeout() -> timeout
    262:262:java.lang.String toString() -> toString
    40:40:void write(okio.Buffer,long) -> write
    46:46:okio.BufferedSink write(okio.ByteString) -> write
    84:84:okio.BufferedSink write(byte[]) -> write
    90:90:okio.BufferedSink write(byte[],int,int) -> write
    96:96:int write(java.nio.ByteBuffer) -> write
    113:119:okio.BufferedSink write(okio.Source,long) -> write
    103:103:long writeAll(okio.Source) -> writeAll
    123:123:okio.BufferedSink writeByte(int) -> writeByte
    165:165:okio.BufferedSink writeDecimalLong(long) -> writeDecimalLong
    171:171:okio.BufferedSink writeHexadecimalUnsignedLong(long) -> writeHexadecimalUnsignedLong
    141:141:okio.BufferedSink writeInt(int) -> writeInt
    147:147:okio.BufferedSink writeIntLe(int) -> writeIntLe
    153:153:okio.BufferedSink writeLong(long) -> writeLong
    159:159:okio.BufferedSink writeLongLe(long) -> writeLongLe
    129:129:okio.BufferedSink writeShort(int) -> writeShort
    135:135:okio.BufferedSink writeShortLe(int) -> writeShortLe
    71:71:okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset) -> writeString
    78:78:okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    52:52:okio.BufferedSink writeUtf8(java.lang.String) -> writeUtf8
    59:59:okio.BufferedSink writeUtf8(java.lang.String,int,int) -> writeUtf8
    65:65:okio.BufferedSink writeUtf8CodePoint(int) -> writeUtf8CodePoint
okio.RealBufferedSink$1 -> d8$a:
    okio.RealBufferedSink this$0 -> a
    191:191:void <init>(okio.RealBufferedSink) -> <init>
    212:213:void close() -> close
    206:209:void flush() -> flush
    216:216:java.lang.String toString() -> toString
    193:193:void write(int) -> write
    199:199:void write(byte[],int,int) -> write
okio.RealBufferedSource -> e8:
    okio.Buffer buffer -> a
    okio.Source source -> b
    boolean closed -> c
    32:33:void <init>(okio.Source) -> <init>
    38:38:okio.Buffer buffer() -> buffer
    467:471:void close() -> close
    56:56:boolean exhausted() -> exhausted
    334:334:long indexOf(byte) -> indexOf
    338:338:long indexOf(byte,long) -> indexOf
    342:342:long indexOf(byte,long,long) -> indexOf
    364:364:long indexOf(okio.ByteString) -> indexOf
    368:368:long indexOf(okio.ByteString,long) -> indexOf
    383:383:long indexOfElement(okio.ByteString) -> indexOfElement
    387:387:long indexOfElement(okio.ByteString,long) -> indexOfElement
    425:425:java.io.InputStream inputStream() -> inputStream
    463:463:boolean isOpen() -> isOpen
    402:402:boolean rangeEquals(long,okio.ByteString) -> rangeEquals
    408:408:boolean rangeEquals(long,okio.ByteString,int,int) -> rangeEquals
    42:42:long read(okio.Buffer,long) -> read
    118:118:int read(byte[]) -> read
    138:146:int read(byte[],int,int) -> read
    150:155:int read(java.nio.ByteBuffer) -> read
    170:170:long readAll(okio.Sink) -> readAll
    74:75:byte readByte() -> readByte
    108:109:byte[] readByteArray() -> readByteArray
    113:114:byte[] readByteArray(long) -> readByteArray
    79:80:okio.ByteString readByteString() -> readByteString
    84:85:okio.ByteString readByteString(long) -> readByteString
    286:300:long readDecimalLong() -> readDecimalLong
    123:132:void readFully(byte[]) -> readFully
    160:164:void readFully(okio.Buffer,long) -> readFully
    304:318:long readHexadecimalUnsignedLong() -> readHexadecimalUnsignedLong
    266:267:int readInt() -> readInt
    271:272:int readIntLe() -> readIntLe
    276:277:long readLong() -> readLong
    281:282:long readLongLe() -> readLongLe
    256:257:short readShort() -> readShort
    261:262:short readShortLe() -> readShortLe
    198:198:java.lang.String readString(java.nio.charset.Charset) -> readString
    205:206:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    188:189:java.lang.String readUtf8() -> readUtf8
    193:194:java.lang.String readUtf8(long) -> readUtf8
    241:252:int readUtf8CodePoint() -> readUtf8CodePoint
    211:217:java.lang.String readUtf8Line() -> readUtf8Line
    221:221:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    225:225:java.lang.String readUtf8LineStrict(long) -> readUtf8LineStrict
    65:65:boolean request(long) -> request
    61:61:void require(long) -> require
    89:89:int select(okio.Options) -> select
    322:322:void skip(long) -> skip
    474:474:okio.Timeout timeout() -> timeout
    478:478:java.lang.String toString() -> toString
okio.RealBufferedSource$1 -> e8$a:
    okio.RealBufferedSource this$0 -> a
    425:425:void <init>(okio.RealBufferedSource) -> <init>
    448:448:int available() -> available
    453:454:void close() -> close
    427:427:int read() -> read
    436:436:int read(byte[],int,int) -> read
    457:457:java.lang.String toString() -> toString
okio.Segment -> f8:
    byte[] data -> a
    boolean owner -> e
    int pos -> b
    okio.Segment prev -> g
    int limit -> c
    okio.Segment next -> f
    boolean shared -> d
    62:66:void <init>() -> <init>
    68:74:void <init>(byte[],int,int,boolean,boolean) -> <init>
    109:113:okio.Segment push(okio.Segment) -> a
    125:125:okio.Segment split(int) -> a
    151:151:void compact() -> a
    163:163:void writeTo(okio.Segment,int) -> a
    96:101:okio.Segment pop() -> b
    82:83:okio.Segment sharedCopy() -> c
    88:88:okio.Segment unsharedCopy() -> d
okio.SegmentPool -> g8:
    long byteCount -> b
    okio.Segment next -> a
    35:36:void <init>() -> <init>
    39:47:okio.Segment take() -> a
    52:52:void recycle(okio.Segment) -> a
okio.SegmentedByteString -> h8:
    int[] directory -> f
    byte[][] segments -> e
    57:87:void <init>(okio.Buffer,int) -> <init>
    156:157:int segment(int) -> a
    193:207:void write(okio.Buffer) -> a
    261:261:byte[] internalArray() -> a
    178:178:java.nio.ByteBuffer asByteBuffer() -> asByteBuffer
    257:257:okio.ByteString toByteString() -> b
    98:98:java.lang.String base64() -> base64
    134:134:java.lang.String base64Url() -> base64Url
    265:266:boolean equals(java.lang.Object) -> equals
    146:150:byte getByte(int) -> getByte
    272:288:int hashCode() -> hashCode
    102:102:java.lang.String hex() -> hex
    126:126:okio.ByteString hmacSha1(okio.ByteString) -> hmacSha1
    130:130:okio.ByteString hmacSha256(okio.ByteString) -> hmacSha256
    248:248:int indexOf(byte[],int) -> indexOf
    252:252:int lastIndexOf(byte[],int) -> lastIndexOf
    114:114:okio.ByteString md5() -> md5
    211:211:boolean rangeEquals(int,okio.ByteString,int,int) -> rangeEquals
    228:230:boolean rangeEquals(int,byte[],int,int) -> rangeEquals
    118:118:okio.ByteString sha1() -> sha1
    122:122:okio.ByteString sha256() -> sha256
    161:161:int size() -> size
    94:94:java.lang.String string(java.nio.charset.Charset) -> string
    138:138:okio.ByteString substring(int) -> substring
    142:142:okio.ByteString substring(int,int) -> substring
    106:106:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    110:110:okio.ByteString toAsciiUppercase() -> toAsciiUppercase
    165:174:byte[] toByteArray() -> toByteArray
    292:292:java.lang.String toString() -> toString
    90:90:java.lang.String utf8() -> utf8
    182:182:void write(java.io.OutputStream) -> write
okio.Timeout -> okio.Timeout:
    long deadlineNanoTime -> b
    long timeoutNanos -> c
    boolean hasDeadline -> a
    48:48:void <clinit>() -> <clinit>
    69:70:void <init>() -> <init>
    134:135:okio.Timeout clearDeadline() -> clearDeadline
    128:129:okio.Timeout clearTimeout() -> clearTimeout
    121:121:okio.Timeout deadline(long,java.util.concurrent.TimeUnit) -> deadline
    104:104:long deadlineNanoTime() -> deadlineNanoTime
    114:116:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    94:94:boolean hasDeadline() -> hasDeadline
    144:145:void throwIfReached() -> throwIfReached
    81:81:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    89:89:long timeoutNanos() -> timeoutNanos
    191:224:void waitUntilNotified(java.lang.Object) -> waitUntilNotified
okio.Timeout$1 -> okio.Timeout$a:
    48:48:void <init>() -> <init>
    54:54:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    58:58:void throwIfReached() -> throwIfReached
    50:50:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.Utf8 -> okio.Utf8:
    66:67:void <init>() -> <init>
    74:74:long size(java.lang.String) -> size
    82:82:long size(java.lang.String,int,int) -> size
okio.Util -> i8:
    java.nio.charset.Charset UTF_8 -> a
    22:22:void <clinit>() -> <clinit>
    28:30:void checkOffsetAndCount(long,long,long) -> a
    35:38:short reverseBytesShort(short) -> a
    42:42:int reverseBytesInt(int) -> a
    49:49:long reverseBytesLong(long) -> a
    65:65:void sneakyRethrow(java.lang.Throwable) -> a
    75:78:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> a
    70:70:void sneakyThrow2(java.lang.Throwable) -> b
org.pytorch.BuildConfig -> org.pytorch.BuildConfig:
    6:6:void <init>() -> <init>
org.pytorch.DType -> org.pytorch.DType:
    org.pytorch.DType[] $VALUES -> a
    11:6:void <clinit>() -> <clinit>
    26:28:void <init>(java.lang.String,int,int) -> <init>
    6:6:org.pytorch.DType valueOf(java.lang.String) -> valueOf
    6:6:org.pytorch.DType[] values() -> values
org.pytorch.INativePeer -> j8:
org.pytorch.IValue -> org.pytorch.IValue:
    java.lang.Object mData -> b
    int mTypeCode -> a
    45:47:void <init>(int) -> <init>
    305:307:void preconditionType(int,int) -> a
    234:236:org.pytorch.IValue dictLongKeyFrom(java.util.Map) -> dictLongKeyFrom
    225:227:org.pytorch.IValue dictStringKeyFrom(java.util.Map) -> dictStringKeyFrom
    116:118:org.pytorch.IValue from(org.pytorch.Tensor) -> from
    125:127:org.pytorch.IValue from(boolean) -> from
    134:136:org.pytorch.IValue from(long) -> from
    143:145:org.pytorch.IValue from(double) -> from
    152:154:org.pytorch.IValue from(java.lang.String) -> from
    58:58:boolean isBool() -> isBool
    78:78:boolean isBoolList() -> isBoolList
    102:102:boolean isDictLongKey() -> isDictLongKey
    98:98:boolean isDictStringKey() -> isDictStringKey
    66:66:boolean isDouble() -> isDouble
    86:86:boolean isDoubleList() -> isDoubleList
    94:94:boolean isList() -> isList
    62:62:boolean isLong() -> isLong
    82:82:boolean isLongList() -> isLongList
    50:50:boolean isNull() -> isNull
    70:70:boolean isString() -> isString
    54:54:boolean isTensor() -> isTensor
    90:90:boolean isTensorList() -> isTensorList
    74:74:boolean isTuple() -> isTuple
    161:163:org.pytorch.IValue listFrom(boolean[]) -> listFrom
    170:172:org.pytorch.IValue listFrom(long[]) -> listFrom
    179:181:org.pytorch.IValue listFrom(double[]) -> listFrom
    188:190:org.pytorch.IValue listFrom(org.pytorch.Tensor[]) -> listFrom
    197:209:org.pytorch.IValue listFrom(org.pytorch.IValue[]) -> listFrom
    109:109:org.pytorch.IValue optionalNull() -> optionalNull
    245:246:boolean toBool() -> toBool
    265:266:boolean[] toBoolList() -> toBoolList
    300:301:java.util.Map toDictLongKey() -> toDictLongKey
    295:296:java.util.Map toDictStringKey() -> toDictStringKey
    255:256:double toDouble() -> toDouble
    275:276:double[] toDoubleList() -> toDoubleList
    285:286:org.pytorch.IValue[] toList() -> toList
    250:251:long toLong() -> toLong
    270:271:long[] toLongList() -> toLongList
    260:261:java.lang.String toStr() -> toStr
    240:241:org.pytorch.Tensor toTensor() -> toTensor
    280:281:org.pytorch.Tensor[] toTensorList() -> toTensorList
    290:291:org.pytorch.IValue[] toTuple() -> toTuple
    216:218:org.pytorch.IValue tupleFrom(org.pytorch.IValue[]) -> tupleFrom
org.pytorch.Module -> org.pytorch.Module:
    org.pytorch.INativePeer mNativePeer -> a
    26:28:void <init>(org.pytorch.INativePeer) -> <init>
    58:59:void destroy() -> destroy
    37:37:org.pytorch.IValue forward(org.pytorch.IValue[]) -> forward
    20:23:org.pytorch.Module load(java.lang.String) -> load
    48:48:org.pytorch.IValue runMethod(java.lang.String,org.pytorch.IValue[]) -> runMethod
org.pytorch.NativePeer -> org.pytorch.NativePeer:
    com.facebook.jni.HybridData mHybridData -> a
    10:11:void <clinit>() -> <clinit>
    17:19:void <init>(java.lang.String) -> <init>
    22:23:void resetNative() -> a
org.pytorch.Tensor -> org.pytorch.Tensor:
    long[] shape -> a
    31:31:void <init>(long[],org.pytorch.Tensor$1) -> <init>
    330:333:void <init>(long[]) -> <init>
    628:629:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> a
    634:639:void checkShape(long[]) -> a
    642:649:void checkShapeAndDataCapacityConsistency(int,long[]) -> a
    57:57:java.nio.ByteBuffer allocateByteBuffer(int) -> allocateByteBuffer
    103:103:java.nio.DoubleBuffer allocateDoubleBuffer(int) -> allocateDoubleBuffer
    79:79:java.nio.FloatBuffer allocateFloatBuffer(int) -> allocateFloatBuffer
    67:67:java.nio.IntBuffer allocateIntBuffer(int) -> allocateIntBuffer
    91:91:java.nio.LongBuffer allocateLongBuffer(int) -> allocateLongBuffer
    133:139:org.pytorch.Tensor fromBlob(byte[],long[]) -> fromBlob
    150:156:org.pytorch.Tensor fromBlob(int[],long[]) -> fromBlob
    167:173:org.pytorch.Tensor fromBlob(float[],long[]) -> fromBlob
    184:190:org.pytorch.Tensor fromBlob(long[],long[]) -> fromBlob
    201:207:org.pytorch.Tensor fromBlob(long[],double[]) -> fromBlob
    239:247:org.pytorch.Tensor fromBlob(java.nio.ByteBuffer,long[]) -> fromBlob
    259:267:org.pytorch.Tensor fromBlob(java.nio.IntBuffer,long[]) -> fromBlob
    279:287:org.pytorch.Tensor fromBlob(java.nio.FloatBuffer,long[]) -> fromBlob
    299:307:org.pytorch.Tensor fromBlob(java.nio.LongBuffer,long[]) -> fromBlob
    319:327:org.pytorch.Tensor fromBlob(java.nio.DoubleBuffer,long[]) -> fromBlob
    116:122:org.pytorch.Tensor fromBlobUnsigned(byte[],long[]) -> fromBlobUnsigned
    219:227:org.pytorch.Tensor fromBlobUnsigned(java.nio.ByteBuffer,long[]) -> fromBlobUnsigned
    375:376:byte[] getDataAsByteArray() -> getDataAsByteArray
    425:426:double[] getDataAsDoubleArray() -> getDataAsDoubleArray
    405:406:float[] getDataAsFloatArray() -> getDataAsFloatArray
    395:396:int[] getDataAsIntArray() -> getDataAsIntArray
    415:416:long[] getDataAsLongArray() -> getDataAsLongArray
    385:386:byte[] getDataAsUnsignedByteArray() -> getDataAsUnsignedByteArray
    337:337:long numel() -> numel
    344:349:long numel(long[]) -> numel
    356:356:long[] shape() -> shape
org.pytorch.Tensor$1 -> org.pytorch.Tensor$a:
org.pytorch.Tensor$Tensor_float32 -> org.pytorch.Tensor$b:
    java.nio.FloatBuffer data -> b
    534:536:void <init>(java.nio.FloatBuffer,long[]) -> <init>
    548:548:org.pytorch.DType dtype() -> dtype
    540:543:float[] getDataAsFloatArray() -> getDataAsFloatArray
    558:558:java.lang.String toString() -> toString
org.pytorch.Tensor$Tensor_float64 -> org.pytorch.Tensor$c:
    java.nio.DoubleBuffer data -> b
    594:594:void <init>(java.nio.DoubleBuffer,long[],org.pytorch.Tensor$1) -> <init>
    598:600:void <init>(java.nio.DoubleBuffer,long[]) -> <init>
    604:604:org.pytorch.DType dtype() -> dtype
    614:617:double[] getDataAsDoubleArray() -> getDataAsDoubleArray
    622:622:java.lang.String toString() -> toString
org.pytorch.Tensor$Tensor_int32 -> org.pytorch.Tensor$d:
    java.nio.IntBuffer data -> b
    498:498:void <init>(java.nio.IntBuffer,long[],org.pytorch.Tensor$1) -> <init>
    502:504:void <init>(java.nio.IntBuffer,long[]) -> <init>
    508:508:org.pytorch.DType dtype() -> dtype
    518:521:int[] getDataAsIntArray() -> getDataAsIntArray
    526:526:java.lang.String toString() -> toString
org.pytorch.Tensor$Tensor_int64 -> org.pytorch.Tensor$e:
    java.nio.LongBuffer data -> b
    562:562:void <init>(java.nio.LongBuffer,long[],org.pytorch.Tensor$1) -> <init>
    566:568:void <init>(java.nio.LongBuffer,long[]) -> <init>
    572:572:org.pytorch.DType dtype() -> dtype
    582:585:long[] getDataAsLongArray() -> getDataAsLongArray
    590:590:java.lang.String toString() -> toString
org.pytorch.Tensor$Tensor_int8 -> org.pytorch.Tensor$f:
    java.nio.ByteBuffer data -> b
    466:466:void <init>(java.nio.ByteBuffer,long[],org.pytorch.Tensor$1) -> <init>
    470:472:void <init>(java.nio.ByteBuffer,long[]) -> <init>
    476:476:org.pytorch.DType dtype() -> dtype
    486:489:byte[] getDataAsByteArray() -> getDataAsByteArray
    494:494:java.lang.String toString() -> toString
org.pytorch.Tensor$Tensor_uint8 -> org.pytorch.Tensor$g:
    java.nio.ByteBuffer data -> b
    434:434:void <init>(java.nio.ByteBuffer,long[],org.pytorch.Tensor$1) -> <init>
    438:440:void <init>(java.nio.ByteBuffer,long[]) -> <init>
    444:444:org.pytorch.DType dtype() -> dtype
    454:457:byte[] getDataAsUnsignedByteArray() -> getDataAsUnsignedByteArray
    462:462:java.lang.String toString() -> toString
org.pytorch.torchvision.BuildConfig -> org.pytorch.torchvision.BuildConfig:
    6:6:void <init>() -> <init>
org.pytorch.torchvision.TensorImageUtils -> org.pytorch.torchvision.TensorImageUtils:
    19:20:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    293:294:void checkOutBufferCapacity(java.nio.FloatBuffer,int,int,int) -> a
    299:300:void checkTensorSize(int,int) -> a
    305:311:void checkRotateCWDegrees(int) -> a
    314:314:int clamp(int,int,int) -> a
    324:325:void checkNormMeanArg(float[]) -> a
    318:319:void checkNormStdArg(float[]) -> b
    31:34:org.pytorch.Tensor bitmapToFloat32Tensor(android.graphics.Bitmap,float[],float[]) -> bitmapToFloat32Tensor
    104:109:org.pytorch.Tensor bitmapToFloat32Tensor(android.graphics.Bitmap,int,int,int,int,float[],float[]) -> bitmapToFloat32Tensor
    61:82:void bitmapToFloatBuffer(android.graphics.Bitmap,int,int,int,int,float[],float[],java.nio.FloatBuffer,int) -> bitmapToFloatBuffer
    131:133:org.pytorch.Tensor imageYUV420CenterCropToFloat32Tensor(android.media.Image,int,int,int,float[],float[]) -> imageYUV420CenterCropToFloat32Tensor
    175:179:void imageYUV420CenterCropToFloatBuffer(android.media.Image,int,int,int,float[],float[],java.nio.FloatBuffer,int) -> imageYUV420CenterCropToFloatBuffer
