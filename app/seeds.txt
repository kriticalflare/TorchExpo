io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorPrimaryDark
okhttp3.internal.Util: java.util.List immutableList(java.lang.Object[])
androidx.appcompat.R$dimen: int abc_list_item_height_large_material
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.appcompat.R$drawable: int notification_tile_bg
org.pytorch.R$style: int Theme_AppCompat_DayNight
okhttp3.Cookie: java.lang.String toString()
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification
org.pytorch.torchvision.R$dimen: int abc_disabled_alpha_material_dark
androidx.appcompat.widget.SwitchCompat: void setShowText(boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionOverflowMenuStyle
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority HIGH
okhttp3.WebSocket: boolean close(int,java.lang.String)
androidx.customview.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)
androidx.core.provider.FontsContractCompat$Columns: java.lang.String FILE_ID
androidx.appcompat.resources.R$id: int accessibility_custom_action_20
androidx.swiperefreshlayout.R$dimen: int notification_large_icon_height
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.camera.core.PreviewConfig$Builder: PreviewConfig$Builder()
androidx.appcompat.widget.TintTypedArray: int getIndex(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.widget.ListPopupWindow: long getSelectedItemId()
org.pytorch.torchvision.R$styleable: int ViewStubCompat_android_inflatedId
org.pytorch.torchvision.R$layout: int abc_screen_toolbar
androidx.vectordrawable.R$id: int accessibility_custom_action_25
androidx.constraintlayout.widget.Barrier: boolean allowsGoneWidget()
org.pytorch.R$attr: int textAppearanceSearchResultSubtitle
okio.HashingSink: okio.HashingSink md5(okio.Sink)
androidx.appcompat.widget.ForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
org.pytorch.R$attr: int gapBetweenBars
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetStart
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForScrolling(int)
androidx.exifinterface.media.ExifInterface: boolean isFlipped()
okio.ByteString: okio.ByteString EMPTY
androidx.legacy.v4.R$attr: int coordinatorLayoutStyle
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonIconDimen
org.pytorch.torchvision.R$drawable: int abc_edit_text_material
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
com.downloader.Priority: com.downloader.Priority LOW
okhttp3.internal.http2.Http2Codec
androidx.viewpager.R$styleable: int GradientColor_android_centerX
androidx.camera.camera2.impl.PreviewConfigProvider
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.downloader.database.DownloadModel: void setLastModifiedAt(long)
io.github.prabhuomkar.pytorchandroid.R$id: int line1
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableLeft
org.pytorch.torchvision.R$attr: int actionModeStyle
androidx.legacy.coreutils.R$drawable: int notification_tile_bg
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_SearchView
androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.exifinterface.media.ExifInterface: void resetOrientation()
androidx.appcompat.R$styleable: int StateListDrawable_android_constantSize
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_typeface
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHorizontal_bias
androidx.core.util.AtomicFile: AtomicFile(java.io.File)
androidx.camera.core.R$string
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.camera.core.DeviceProperties: DeviceProperties()
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivotY(int,float)
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
androidx.exifinterface.media.ExifInterface: int ORIGINAL_RESOLUTION_IMAGE
androidx.core.content.pm.ShortcutInfoCompatSaver: java.util.List getShortcuts()
okhttp3.Response: int code()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_alertDialogTheme
androidx.appcompat.view.ActionMode: void invalidate()
androidx.core.os.LocaleListCompat: java.lang.String toString()
androidx.appcompat.R$id: int src_in
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimaryDark
org.pytorch.R$drawable: int abc_ratingbar_material
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_search_hint
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
androidx.camera.camera2.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
androidx.recyclerview.widget.RecyclerView: void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat
androidx.recyclerview.R$string: int status_bar_notification_info_overflow
org.pytorch.torchvision.R$string: int abc_shareactionprovider_share_with_application
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.R$styleable: int AppCompatImageView_tint
androidx.customview.R$style
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeBackground
androidx.camera.core.UseCaseConfig: androidx.camera.core.Config$Option OPTION_SURFACE_OCCUPANCY_PRIORITY
androidx.appcompat.R$drawable: int abc_dialog_material_background
android.support.v4.media.session.MediaControllerCompat$Callback
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontStyle
androidx.exifinterface.media.ExifInterface: short ALTITUDE_ABOVE_SEA_LEVEL
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.core.widget.ListPopupWindowCompat
org.pytorch.torchvision.R$style: int Platform_Widget_AppCompat_Spinner
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
org.pytorch.R$attr: int fontProviderFetchStrategy
okhttp3.EventListener: void callFailed(okhttp3.Call,java.io.IOException)
io.github.prabhuomkar.pytorchandroid.R$attr: int tintMode
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isFocused()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.recyclerview.R$id: int chronometer
androidx.collection.LongSparseArray: int indexOfKey(long)
androidx.camera.core.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.ImageUtil$CodecFailedException$FailureType valueOf(java.lang.String)
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.core.view.ScrollingView: int computeVerticalScrollRange()
androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)
android.support.v4.media.session.MediaSessionCompat$Callback
org.pytorch.R$attr: int paddingTopNoTitle
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getId()
androidx.asynclayoutinflater.R$dimen: int notification_action_text_size
androidx.appcompat.widget.DecorToolbar: void dismissPopupMenus()
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderFetchStrategy
android.support.v4.media.MediaDescriptionCompat: java.lang.String DESCRIPTION_KEY_MEDIA_URI
androidx.constraintlayout.widget.R$attr: int layout_constraintBaseline_creator
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorError
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState)
org.pytorch.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.appcompat.widget.ScrollingTabContainerView: void updateTab(int)
androidx.core.graphics.drawable.IconCompat: int getType()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_percent
androidx.legacy.coreui.R$layout: int notification_template_part_chronometer
org.pytorch.torchvision.R$styleable: int SearchView_submitBackground
androidx.recyclerview.widget.SortedList
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
androidx.recyclerview.R$styleable: int GradientColorItem_android_offset
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_creator
androidx.lifecycle.Lifecycle
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_TARGET_ASPECT_RATIO_CUSTOM
androidx.swiperefreshlayout.R$attr
androidx.camera.camera2.R$dimen: int notification_action_text_size
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
androidx.media.VolumeProviderCompat$ControlType
org.pytorch.R$attr: int borderlessButtonStyle
androidx.recyclerview.widget.LinearLayoutManager
org.pytorch.torchvision.R$styleable: int TextAppearance_textAllCaps
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getDescription()
com.downloader.database.DownloadModel: DownloadModel()
okio.GzipSink: GzipSink(okio.Sink)
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MINOR
androidx.core.app.JobIntentService: void onCreate()
androidx.core.app.FrameMetricsAggregator: int INPUT_DURATION
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarPopupTheme
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.ViewCompat: androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
androidx.core.provider.FontsContractCompat: java.lang.String PARCEL_FONT_RESULTS
androidx.fragment.app.DialogFragment: int STYLE_NO_INPUT
androidx.appcompat.R$dimen: int abc_text_size_body_2_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_creator
androidx.asynclayoutinflater.R$dimen: int notification_small_icon_background_padding
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)
androidx.legacy.coreutils.R$id: int notification_background
androidx.viewpager.widget.PagerTitleStrip: void onDetachedFromWindow()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_default_mtrl_shape
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_checkable
androidx.appcompat.resources.R$id: int accessibility_custom_action_14
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
androidx.loader.R$styleable: int GradientColor_android_centerColor
androidx.core.widget.ScrollerCompat: void notifyVerticalEdgeReached(int,int,int)
androidx.recyclerview.widget.BatchingListUpdateCallback: void dispatchLastEvent()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_URI
androidx.legacy.coreutils.R$color: int secondary_text_default_material_light
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int right
org.pytorch.R$dimen: int compat_button_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$color: int colorPyTorch3
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.media.R$id: int cancel_action
androidx.appcompat.R$id: int italic
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.appcompat.R$attr: int backgroundTintMode
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA
org.pytorch.torchvision.R$styleable: int MenuItem_android_numericShortcut
androidx.fragment.app.FragmentActivity: void onPause()
androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_end
androidx.camera.camera2.impl.CameraEventCallbacks: androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback createComboCallback()
androidx.vectordrawable.R
androidx.recyclerview.R$id: int accessibility_custom_action_27
com.downloader.internal.ComponentHolder: int getConnectTimeout()
android.support.v4.media.MediaMetadataCompatApi21$Builder
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(java.nio.DoubleBuffer,long[])
org.pytorch.R$dimen: int abc_dialog_fixed_height_minor
io.github.prabhuomkar.pytorchandroid.R$attr: int dropdownListPreferredItemHeight
androidx.camera.core.CameraDeviceStateCallbacks: android.hardware.camera2.CameraDevice$StateCallback createComboCallback(java.util.List)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
androidx.camera.core.CameraDeviceSurfaceManager: androidx.camera.core.SurfaceConfig transformSurfaceConfig(java.lang.String,int,android.util.Size)
org.pytorch.torchvision.R$dimen: int compat_notification_large_icon_max_height
androidx.vectordrawable.animated.R$layout: int custom_dialog
com.squareup.picasso.Request: com.squareup.picasso.Request$Builder buildUpon()
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
io.github.prabhuomkar.pytorchandroid.R$styleable: int View_android_theme
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColor(int)
androidx.coordinatorlayout.R$drawable: int notification_tile_bg
androidx.appcompat.widget.PopupMenu: void setGravity(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int thumbTint
org.pytorch.torchvision.R$attr: int actionOverflowButtonStyle
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getContentDescription()
androidx.legacy.v4.R$id: int italic
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)
org.pytorch.torchvision.R$color: int primary_text_default_material_dark
androidx.camera.core.ImageCapture: ImageCapture(androidx.camera.core.ImageCaptureConfig)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.appcompat.R$dimen: int abc_text_size_menu_header_material
androidx.appcompat.R$id: int alertTitle
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.legacy.v4.R$id: int right_icon
androidx.cardview.widget.CardView: void setPadding(int,int,int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_percent
androidx.fragment.R$styleable: int[] FontFamily
org.pytorch.R$dimen: int notification_large_icon_height
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int)
androidx.viewpager.widget.ViewPager$LayoutParams: int gravity
io.github.prabhuomkar.pytorchandroid.ui.fragments.HomeFragment
androidx.viewpager.R$attr: int font
io.github.prabhuomkar.pytorchandroid.Constants: Constants()
androidx.appcompat.R$attr: int lastBaselineToBottomHeight
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontWeight
androidx.camera.core.CameraInfoUnavailableException: CameraInfoUnavailableException(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
org.pytorch.Tensor: org.pytorch.Tensor fromBlobUnsigned(byte[],long[])
okhttp3.internal.Util: int skipTrailingAsciiWhitespace(java.lang.String,int,int)
org.pytorch.R$id: int right_side
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
androidx.customview.widget.ViewDragHelper: int DIRECTION_ALL
androidx.constraintlayout.widget.R$id: int bottom
androidx.recyclerview.selection.SelectionTracker: boolean deselect(java.lang.Object)
org.pytorch.R$attr: int showAsAction
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
androidx.constraintlayout.solver.Metrics: long maxRows
androidx.constraintlayout.widget.ConstraintSet: int BASELINE
androidx.camera.core.ThreadConfig$Builder
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getTop()
okio.BufferedSource: short readShort()
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mNextChainWidget
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL_LINEAR
org.pytorch.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getConnectionCreator()
okhttp3.internal.connection.RealConnection: void onSettings(okhttp3.internal.http2.Http2Connection)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
androidx.appcompat.resources.R$attr: int fontProviderAuthority
androidx.core.app.FrameMetricsAggregator: int DELAY_INDEX
org.pytorch.R$id: int submit_area
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POINTER
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
org.pytorch.torchvision.R$dimen: int abc_text_size_subhead_material
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_SEARCH
org.pytorch.R$style: int Base_Theme_AppCompat_Dialog
okhttp3.internal.http.HttpMethod: boolean redirectsWithBody(java.lang.String)
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_KILOMETERS
androidx.legacy.coreui.R$styleable: int GradientColorItem_android_color
androidx.camera.core.ImageInfoProcessor: androidx.camera.core.CaptureStage getCaptureStage()
androidx.recyclerview.selection.OnItemActivatedListener: boolean onItemActivated(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails,android.view.MotionEvent)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTheme
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.concurrent.futures.CallbackToFutureAdapter$Resolver: java.lang.Object attachCompleter(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
org.pytorch.R$attr: int contentDescription
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getVolumeControl()
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_NORMAL
androidx.cardview.widget.CardView: float getMaxCardElevation()
androidx.appcompat.app.ActionBarDrawerToggle: void setToolbarNavigationClickListener(android.view.View$OnClickListener)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo)
okhttp3.Headers$Builder: okhttp3.Headers$Builder set(java.lang.String,java.lang.String)
androidx.appcompat.R$attr: int actionModeShareDrawable
androidx.camera.camera2.R$dimen: int notification_right_icon_size
org.pytorch.torchvision.R$style: int Base_V22_Theme_AppCompat_Light
androidx.camera.core.VideoCaptureConfig
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet,int)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.core.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float)
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError UNKNOWN_ERROR
androidx.media.R$drawable: int notify_panel_notification_icon_bg
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_1
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.appcompat.resources.R$attr: int fontStyle
org.pytorch.torchvision.R$dimen: int tooltip_margin
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModePasteDrawable
androidx.activity.R$drawable: int notification_action_background
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap)
androidx.appcompat.R$attr: int titleTextColor
org.pytorch.R$attr: int fontProviderCerts
androidx.customview.R$attr: int fontWeight
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Line2
androidx.drawerlayout.widget.DrawerLayout: android.os.Parcelable onSaveInstanceState()
androidx.camera.camera2.impl.VideoCaptureConfigProvider: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.view.menu.BaseMenuPresenter: int getId()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getStart()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_backgroundStacked
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.media.R$styleable: int GradientColor_android_endY
androidx.recyclerview.R$integer: int status_bar_notification_info_maxnum
androidx.camera.core.PreviewConfig$Builder
androidx.appcompat.R$id: int action_menu_presenter
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_dialog_title_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionButtonStyle
androidx.loader.content.AsyncTaskLoader: void cancelLoadInBackground()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeRemoved(int,int)
okhttp3.Headers: int hashCode()
org.pytorch.R$color: int abc_search_url_text_selected
com.facebook.jni.CppException: CppException(java.lang.String)
androidx.cursoradapter.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)
androidx.core.widget.NestedScrollView: void computeScroll()
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
androidx.core.graphics.BitmapCompat
androidx.camera.core.ImageCapture: androidx.camera.core.ImageCapture$Defaults DEFAULT_CONFIG
androidx.customview.R$id: int italic
androidx.camera.core.Exif: void removeTimestamp()
androidx.camera.core.impl.utils.futures.FutureChain: void addCallback(androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
okio.BufferedSource: java.lang.String readUtf8()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_light
okhttp3.ResponseBody: okhttp3.MediaType contentType()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Line2_Media
io.github.prabhuomkar.pytorchandroid.R$color: int button_material_light
androidx.legacy.coreutils.R$dimen: int compat_notification_large_icon_max_width
androidx.recyclerview.R$attr: int fontProviderAuthority
com.downloader.request.DownloadRequest: void setUserAgent(java.lang.String)
androidx.customview.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.view.menu.ListMenuPresenter: void setItemIndexOffset(int)
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
io.github.prabhuomkar.pytorchandroid.R$attr: int reverseLayout
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper
androidx.recyclerview.widget.RecyclerView$LayoutManager
androidx.core.view.ActionProvider: void reset()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_mode_close_item_material
androidx.camera.core.VideoCaptureConfig: int getTargetRotation()
androidx.camera.core.UseCaseAttachState: void setUseCaseActive(androidx.camera.core.UseCase)
androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.camera.core.ImageAnalysisConfig: java.lang.String getTargetName(java.lang.String)
org.pytorch.torchvision.R$styleable: int Toolbar_titleMarginEnd
androidx.core.view.ActionProvider
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean)
androidx.recyclerview.widget.ItemTouchHelper: void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_HIDDEN_CONVERSATION_TITLE
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.swiperefreshlayout.R$layout: int notification_action_tombstone
okio.Buffer: int read(byte[])
androidx.swiperefreshlayout.R$id: int title
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
org.pytorch.torchvision.R$attr: int thumbTextPadding
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
androidx.appcompat.R$color: int highlighted_text_material_light
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_GROUP
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.media.app.NotificationCompat$MediaStyle
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_button_inset_vertical_material
androidx.core.view.DragStartHelper$OnDragStartListener: boolean onDragStart(android.view.View,androidx.core.view.DragStartHelper)
org.pytorch.R$attr: int actionBarSize
org.pytorch.torchvision.R$styleable: int Toolbar_titleMarginTop
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
androidx.core.view.MotionEventCompat: int AXIS_TOOL_MAJOR
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
org.pytorch.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_font
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionContainer
androidx.asynclayoutinflater.R$styleable: int[] FontFamily
org.pytorch.R$color: int abc_primary_text_material_light
org.pytorch.torchvision.R$style: int Theme_AppCompat_Dialog_Alert
androidx.camera.core.ImageCaptureConfig: android.util.Size getMaxResolution()
androidx.legacy.coreui.R$dimen: int notification_subtext_size
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToTop
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.camera.camera2.impl.compat.CameraManagerCompat: android.hardware.camera2.CameraManager unwrap()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_screen_simple_overlay_action_mode
androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setChangeDuration(long)
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
org.pytorch.torchvision.R$id: int content
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.viewpager.R$dimen: int notification_right_icon_size
androidx.constraintlayout.solver.widgets.ResolutionNode: int UNRESOLVED
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginStart
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[])
androidx.loader.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_textLocale
androidx.collection.SimpleArrayMap
androidx.core.view.NestedScrollingChild2: void stopNestedScroll(int)
org.pytorch.R$style: int Base_TextAppearance_AppCompat
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FOLLOW
androidx.legacy.v4.R$color
androidx.appcompat.R$styleable: int MenuView_android_itemIconDisabledAlpha
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_editor_absoluteY
androidx.activity.R$id: int tag_accessibility_pane_title
androidx.media.MediaBrowserCompatUtils: boolean areSameOptions(android.os.Bundle,android.os.Bundle)
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.appcompat.R$drawable: int btn_checkbox_checked_mtrl
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.R$attr: int buttonPanelSideLayout
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderAuthority
okhttp3.MediaType
androidx.constraintlayout.solver.widgets.ConstraintTableLayout
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.camera.core.Config$OptionMatcher: boolean onOptionMatched(androidx.camera.core.Config$Option)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideEnd
androidx.camera.camera2.R$id: int accessibility_action_clickable_span
io.github.prabhuomkar.pytorchandroid.R$attr: int color
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
androidx.core.graphics.drawable.IconCompat: int mType
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_toRightOf
okhttp3.internal.Util: java.nio.charset.Charset UTF_8
androidx.appcompat.R$id: int action_divider
androidx.appcompat.R$dimen: int notification_media_narrow_margin
androidx.viewpager.R$styleable: int[] FontFamily
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setBitRate(int)
androidx.coordinatorlayout.R$color: int notification_action_color_filter
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Paint getPaint()
androidx.viewpager.widget.PagerAdapter
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorFilter(android.graphics.ColorFilter)
android.support.v4.media.session.PlaybackStateCompat: int STATE_NONE
androidx.core.view.accessibility.AccessibilityRecordCompat: AccessibilityRecordCompat(java.lang.Object)
androidx.loader.R$layout: int notification_template_icon_group
org.pytorch.torchvision.R$attr: int dialogTheme
androidx.recyclerview.R$id: int accessibility_custom_action_20
io.github.prabhuomkar.pytorchandroid.R$style: int Base_DialogWindowTitleBackground_AppCompat
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
okhttp3.internal.http2.Http2Connection$Listener: void onSettings(okhttp3.internal.http2.Http2Connection)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CompoundButton_android_button
androidx.slidingpanelayout.R$id: int notification_background
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_RECENT
androidx.fragment.R$integer: int status_bar_notification_info_maxnum
androidx.legacy.coreui.R$styleable: int[] ColorStateListItem
androidx.core.app.CoreComponentFactory$CompatWrapped: java.lang.Object getWrapper()
androidx.constraintlayout.widget.Placeholder: void onDraw(android.graphics.Canvas)
androidx.appcompat.R$styleable: int FontFamily_fontProviderPackage
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_ACCESSIBILITY
org.pytorch.torchvision.R$anim: int abc_slide_in_bottom
okio.Buffer: java.lang.String readUtf8Line()
androidx.camera.camera2.R$styleable: int GradientColorItem_android_color
androidx.appcompat.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RESOLUTION_UNIT
androidx.core.R$dimen: int notification_small_icon_size_as_large
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor)
androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)
androidx.asynclayoutinflater.R$dimen: int notification_main_column_padding_top
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength getStrength()
androidx.camera.core.ImageOutputConfig: android.util.Size getMaxResolution(android.util.Size)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
androidx.recyclerview.widget.OrientationHelper
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.legacy.v4.R$id: int notification_main_column_container
okhttp3.internal.connection.ConnectionSpecSelector: okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowActionBarOverlay
io.github.prabhuomkar.pytorchandroid.BuildConfig: int VERSION_CODE
androidx.versionedparcelable.ParcelField
androidx.recyclerview.widget.AdapterListUpdateCallback: void onChanged(int,int,java.lang.Object)
androidx.customview.R$dimen: int notification_top_pad
androidx.camera.camera2.Camera2Config: android.hardware.camera2.CameraDevice$StateCallback getDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback)
com.downloader.OnCancelListener
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
org.pytorch.R$attr: int trackTint
androidx.camera.core.CameraX: boolean isInitialized()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)
org.pytorch.torchvision.R$drawable: int abc_seekbar_thumb_material
androidx.camera.camera2.impl.Camera2CameraControl
org.pytorch.torchvision.R$attr: int popupMenuStyle
org.pytorch.R$attr: int dialogPreferredPadding
org.pytorch.torchvision.R$styleable: int AppCompatTheme_borderlessButtonStyle
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_tooltip_enter
androidx.camera.core.R$id: int accessibility_custom_action_23
org.pytorch.torchvision.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.drawerlayout.R$id: int time
org.pytorch.R$styleable: int MenuItem_actionViewClass
androidx.viewpager.R$color: int notification_action_color_filter
androidx.recyclerview.widget.LinearLayoutManager: boolean isSmoothScrollbarEnabled()
androidx.camera.core.CameraCaptureFailure$Reason: androidx.camera.core.CameraCaptureFailure$Reason ERROR
androidx.exifinterface.media.ExifInterface: short CONTRAST_SOFT
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig build()
androidx.recyclerview.widget.RecyclerView$Recycler: void recycleView(android.view.View)
org.pytorch.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.camera.camera2.R$id: int accessibility_custom_action_7
androidx.camera.core.R$id: int accessibility_custom_action_7
org.pytorch.R$styleable: int AppCompatTheme_dividerHorizontal
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintCircle
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_custom_big
androidx.drawerlayout.widget.DrawerLayout: void closeDrawers()
androidx.core.provider.FontsContractCompat$Columns: java.lang.String VARIATION_SETTINGS
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintLeft_toLeftOf
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.viewpager.R$styleable: int GradientColorItem_android_offset
androidx.core.graphics.ColorUtils: int blendARGB(int,int,float)
org.pytorch.R$id: int action_menu_presenter
androidx.legacy.coreutils.R$id: int time
androidx.recyclerview.selection.OnDragInitiatedListener
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState CONVERGED
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.recyclerview.R$dimen: int notification_large_icon_height
androidx.core.view.MarginLayoutParamsCompat: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
com.downloader.database.NoOpsDbHelper: void clear()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
android.support.v4.media.session.IMediaControllerCallback: void onExtrasChanged(android.os.Bundle)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getTrackDrawable()
org.pytorch.torchvision.R$attr: int controlBackground
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clone()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
android.support.v4.media.session.MediaSessionCompat: void setRepeatMode(int)
androidx.appcompat.R$attr: int maxButtonHeight
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_ENUM
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_INTERRUPTED
androidx.recyclerview.widget.OrientationHelper: int getStartAfterPadding()
androidx.recyclerview.R$attr: int alpha
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.legacy.coreutils.R$dimen: int notification_top_pad_large_text
androidx.viewpager.widget.PagerTabStrip: int getMinHeight()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_checkedTextViewStyle
okhttp3.Cookie$Builder
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
org.pytorch.torchvision.R$string: int abc_activitychooserview_choose_application
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int,int)
androidx.camera.core.R$id: int accessibility_custom_action_2
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetEndWithActions
androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView
android.support.v4.media.session.MediaSessionCompat: void setExtras(android.os.Bundle)
androidx.constraintlayout.solver.widgets.Barrier: int TOP
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newThumbRating(boolean)
org.pytorch.torchvision.R$dimen: int abc_text_size_title_material_toolbar
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.legacy.v4.R$layout: int notification_template_media
org.pytorch.torchvision.R$layout: int abc_search_view
org.pytorch.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.appcompat.R$styleable: int DrawerArrowToggle_color
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
androidx.legacy.coreui.R$styleable: int GradientColor_android_type
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_PopupMenu
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromFile(java.io.File)
androidx.core.internal.view.SupportMenuItem: boolean isActionViewExpanded()
androidx.viewpager.R$attr: int fontProviderQuery
okhttp3.Dispatcher: int runningCallsCount()
androidx.lifecycle.ReportFragment: void onResume()
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)
okio.DeflaterSink: void close()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_Switch
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context)
androidx.media.R$layout: int notification_template_icon_group
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_POLITE
androidx.core.app.NotificationCompat$WearableExtender: android.graphics.Bitmap getBackground()
androidx.slidingpanelayout.R$id: int actions
android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
org.pytorch.torchvision.R$styleable: int MenuView_android_headerBackground
androidx.exifinterface.media.ExifInterface: short METERING_MODE_UNKNOWN
androidx.core.view.NestedScrollingParent2: void onNestedScroll(android.view.View,int,int,int,int,int)
okhttp3.Route: boolean requiresTunnel()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
androidx.core.app.NotificationCompat: int getActionCount(android.app.Notification)
org.pytorch.R$attr: int state_above_anchor
com.downloader.Status: com.downloader.Status[] values()
org.pytorch.R$attr: int navigationContentDescription
android.support.v4.os.IResultReceiver$Stub
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircleAngle
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
androidx.core.app.NavUtils
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintVertical_chainStyle
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.recyclerview.widget.LinearSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.fragment.app.FragmentController: boolean execPendingActions()
androidx.core.view.ViewCompat: void setSaveFromParentEnabled(android.view.View,boolean)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnectionFailed()
androidx.core.widget.NestedScrollView: void stopNestedScroll()
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.view.View)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
androidx.core.app.Person: androidx.core.app.Person fromBundle(android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_editor_absoluteY
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textColor
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat x(float)
okio.Buffer: int readIntLe()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.resources.R$styleable: int[] FontFamily
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_display_2_material
org.pytorch.R$styleable: int FontFamily_fontProviderCerts
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setTag(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowTitleEnabled(boolean)
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display2
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
okio.Buffer: boolean request(long)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$id: int time
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemViewType(android.view.View)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
okio.ForwardingTimeout: okio.Timeout clearDeadline()
androidx.appcompat.R$styleable: int SearchView_queryBackground
androidx.appcompat.widget.AppCompatTextView
androidx.appcompat.R$attr: int actionModePasteDrawable
androidx.core.provider.FontsContractCompat$Columns: java.lang.String TTC_INDEX
okhttp3.WebSocketListener: void onClosed(okhttp3.WebSocket,int,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_progress_bar_height_material
androidx.camera.core.ImageProxyBundle: com.google.common.util.concurrent.ListenableFuture getImageProxy(int)
androidx.versionedparcelable.VersionedParcel: void writeFloat(float)
org.pytorch.R$styleable: int GradientColor_android_endY
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTint(int)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
org.pytorch.R$style: int Widget_AppCompat_Spinner
androidx.recyclerview.R$id: int icon_group
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_UNEXPECTED_DATA_PROVIDED
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] reset()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
okhttp3.Response: void close()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context)
okhttp3.internal.http.HttpCodec: void finishRequest()
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
io.github.prabhuomkar.pytorchandroid.R$id: int title_template
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatImageView_tint
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
androidx.camera.core.SensorOrientedMeteringPointFactory: SensorOrientedMeteringPointFactory(float,float,androidx.camera.core.UseCase)
androidx.fragment.R$dimen: int notification_small_icon_size_as_large
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.vectordrawable.graphics.drawable.Animatable2Compat
io.github.prabhuomkar.pytorchandroid.R$attr: int navigationMode
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mHorizontalWrapOptimized
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isRoot()
okhttp3.Challenge: okhttp3.Challenge withCharset(java.nio.charset.Charset)
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
org.pytorch.R$attr: int queryHint
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
androidx.loader.content.Loader: void startLoading()
androidx.viewpager.R$styleable: int GradientColorItem_android_color
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertInLayoutOrScroll(java.lang.String)
androidx.constraintlayout.widget.R$attr: int layout_goneMarginTop
androidx.core.view.NestedScrollingParent
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setSurfaceOccupancyPriority(int)
androidx.slidingpanelayout.R$id: int normal
androidx.camera.core.VideoCapture$OnVideoSavedListener: void onError(androidx.camera.core.VideoCapture$VideoCaptureError,java.lang.String,java.lang.Throwable)
androidx.core.content.SharedPreferencesCompat$EditorCompat: androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance()
okio.Timeout: okio.Timeout deadlineNanoTime(long)
org.pytorch.torchvision.R$color: int ripple_material_light
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDtToFit(int,int,int,int,int)
androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean)
androidx.lifecycle.ComputableLiveData: java.lang.Object compute()
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_SEARCH
androidx.appcompat.R$styleable: int[] FontFamily
org.pytorch.torchvision.R$style: int Widget_AppCompat_SeekBar
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.R$attr: int textAppearancePopupMenuHeader
org.pytorch.R$attr: int buttonTintMode
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.legacy.v4.R$id: int text2
org.pytorch.R$styleable: int AppCompatTheme_actionBarTheme
androidx.core.R$id: int right_side
org.pytorch.R$styleable: int ActionBar_homeLayout
org.pytorch.R$color: int abc_primary_text_disable_only_material_dark
androidx.core.os.ParcelableCompat
androidx.camera.core.ImageProxy: long getTimestamp()
com.downloader.internal.ComponentHolder
androidx.fragment.R$styleable: int FontFamily_fontProviderPackage
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Runner: java.util.List imageNet(android.content.Context,androidx.camera.core.ImageProxy,int,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintRight_toLeftOf
androidx.camera.core.R$styleable: int GradientColor_android_startX
androidx.core.R$styleable: int GradientColor_android_centerColor
okhttp3.internal.cache.DiskLruCache: void setMaxSize(long)
androidx.recyclerview.selection.SelectionTracker: boolean clearSelection()
androidx.vectordrawable.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
org.pytorch.R$dimen: int abc_text_size_title_material_toolbar
androidx.appcompat.R$attr: int actionBarTabStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
android.support.v4.media.RatingCompat$StarStyle
org.pytorch.torchvision.R$styleable: int Toolbar_titleMarginBottom
androidx.cardview.widget.CardView: void setRadius(float)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body2
io.github.prabhuomkar.pytorchandroid.R$attr: int background
androidx.camera.core.R$styleable: int GradientColor_android_endColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int Spinner_android_prompt
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
androidx.camera.core.SessionConfig$ValidatingBuilder
androidx.core.graphics.ColorUtils: int XYZToColor(double,double,double)
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.camera.core.ImageOutputConfig: android.util.Rational getTargetAspectRatioCustom(android.util.Rational)
org.pytorch.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.customview.widget.ViewDragHelper: void cancel()
org.pytorch.R
org.pytorch.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.app.NotificationCompatSideChannelService: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.swiperefreshlayout.R$id: int notification_main_column
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_root
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream()
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
androidx.slidingpanelayout.R$drawable
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.appcompat.R$dimen: int abc_text_size_small_material
okhttp3.ResponseBody: void close()
androidx.recyclerview.widget.AsyncListUtil$DataCallback
okio.BufferedSource: long indexOfElement(okio.ByteString)
io.github.prabhuomkar.pytorchandroid.R$id: int search_voice_btn
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionBar_Solid
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle)
okhttp3.internal.connection.ConnectionSpecSelector: boolean connectionFailed(java.io.IOException)
org.pytorch.torchvision.R$attr: int titleTextStyle
org.pytorch.torchvision.R$styleable: int GradientColor_android_startY
androidx.appcompat.widget.ActionBarContextView: void postShowOverflowMenu()
androidx.legacy.coreui.R$id: int line1
androidx.vectordrawable.animated.R$color: int secondary_text_default_material_light
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setRemoveDuration(long)
androidx.core.view.NestedScrollingParent3: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void preOptimize()
org.pytorch.R$attr: int selectableItemBackground
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
androidx.camera.camera2.Camera2Config: boolean containsOption(androidx.camera.core.Config$Option)
androidx.media.R$id: int tag_unhandled_key_listeners
org.pytorch.R$attr: int tooltipFrameBackground
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.core.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)
androidx.camera.core.R$layout: int notification_action
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestSimpleAnimationsInNextLayout()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setViewIdResourceName(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$id: int FUNCTION
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.viewpager.R$styleable: int GradientColor_android_gradientRadius
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type getType()
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment LEFT
okhttp3.HttpUrl: java.lang.String username()
androidx.core.os.BuildCompat: boolean isAtLeastQ()
androidx.legacy.coreui.R$id
androidx.recyclerview.widget.AsyncDifferConfig$Builder
android.support.v4.media.session.IMediaSession: boolean sendMediaButton(android.view.KeyEvent)
org.pytorch.R$styleable: int AppCompatTheme_checkedTextViewStyle
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_CLIENT_VERSION
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onAttachedToWindow()
org.pytorch.torchvision.R$dimen: int compat_button_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$id: int async
androidx.recyclerview.widget.BatchingListUpdateCallback: void onInserted(int,int)
androidx.core.view.NestedScrollingChild2
okhttp3.CacheControl: int maxStaleSeconds()
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.downloader.PRDownloader: void cancelAll()
androidx.constraintlayout.solver.ArrayRow: boolean isEmpty()
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_bias
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.slidingpanelayout.R$id: int notification_main_column_container
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_max
androidx.appcompat.R$color: int tooltip_background_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_placeholder_content
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.legacy.v4.R$id: int normal
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createSlackVariable()
androidx.camera.core.ImageAnalysis: androidx.camera.core.ImageAnalysis$Analyzer getAnalyzer()
androidx.camera.core.UseCaseGroupRepository$UseCaseGroupSetup
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
okio.DeflaterSink: DeflaterSink(okio.Sink,java.util.zip.Deflater)
androidx.slidingpanelayout.R$dimen: int notification_right_side_padding_top
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionButtonStyle
androidx.camera.camera2.R$id: int chronometer
io.github.prabhuomkar.pytorchandroid.R$bool: int abc_allow_stacked_button_bar
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.core.hardware.display.DisplayManagerCompat: androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context)
androidx.camera.core.R$id: int accessibility_custom_action_30
androidx.camera.core.CaptureConfig$OptionUnpacker
io.github.prabhuomkar.pytorchandroid.R$id: int progress_horizontal
androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context)
androidx.core.os.LocaleListCompat: boolean isEmpty()
okhttp3.FormBody: java.lang.String encodedName(int)
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$attr: int listChoiceBackgroundIndicator
androidx.fragment.R$drawable: int notification_bg_normal
androidx.fragment.R$id: int actions
androidx.appcompat.R$attr: int customNavigationLayout
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
okhttp3.OkHttpClient: java.util.List connectionSpecs()
org.pytorch.R$attr: int checkboxStyle
io.github.prabhuomkar.pytorchandroid.R$id: int scrollIndicatorDown
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COLLAPSE
androidx.fragment.R$id: int tag_accessibility_heading
androidx.activity.ImmLeaksCleaner
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)
org.pytorch.torchvision.R$attr: int paddingTopNoTitle
androidx.constraintlayout.solver.widgets.Barrier: void resolve()
android.support.v4.media.session.MediaSessionCompat: void setPlaybackToRemote(androidx.media.VolumeProviderCompat)
androidx.core.graphics.ColorUtils: void blendLAB(double[],double[],double,double[])
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
androidx.core.view.MarginLayoutParamsCompat
okio.BufferedSource: short readShortLe()
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.R$style: int AlertDialog_AppCompat
androidx.constraintlayout.widget.ConstraintSet: int START
androidx.appcompat.R$color: int primary_dark_material_light
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getIncomingEdges(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Animation_AppCompat_DropDownUp
androidx.legacy.v4.R$id: int end_padder
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: android.view.animation.Interpolator getInterpolator()
androidx.legacy.v4.R$id: int tag_transition_group
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_EditText
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_caption_material
androidx.camera.core.ExtendableUseCaseConfigFactory
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.Config$Option OPTION_CAMERA_ID_FILTER
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_sourcelink
androidx.appcompat.app.ActionBar$TabListener
org.pytorch.torchvision.R$color: int dim_foreground_material_light
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
okio.ByteString: int compareTo(java.lang.Object)
androidx.slidingpanelayout.R$layout: int notification_action
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintCircleAngle
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_android_font
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_activity_chooser_view
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.downloader.Constants: java.lang.String USER_AGENT
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
io.github.prabhuomkar.pytorchandroid.R$layout: int select_dialog_item_material
org.pytorch.R$id: int right
androidx.recyclerview.widget.RecyclerView: long getChildItemId(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_divider_mtrl_alpha
org.pytorch.torchvision.R$color: int abc_search_url_text_normal
androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.coordinatorlayout.R$id: int text
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
org.pytorch.torchvision.R$styleable: int View_paddingEnd
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate
androidx.camera.core.UseCase: java.util.Map onSuggestedResolutionUpdated(java.util.Map)
com.facebook.jni.HybridClassBase: HybridClassBase()
android.support.v4.media.session.MediaControllerCompat: void adjustVolume(int,int)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
androidx.constraintlayout.widget.R$attr: int content
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endColor
androidx.appcompat.R$attr: int buttonBarPositiveButtonStyle
okhttp3.Challenge: Challenge(java.lang.String,java.lang.String)
androidx.collection.ArrayMap: ArrayMap()
androidx.constraintlayout.solver.SolverVariable
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.fragment.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_3_score
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void cycleColumnAlignment(int)
androidx.loader.R$styleable: int GradientColor_android_centerY
androidx.recyclerview.widget.RecyclerView$ViewHolder: RecyclerView$ViewHolder(android.view.View)
org.pytorch.torchvision.R$id: int shortcut
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
androidx.core.net.ConnectivityManagerCompat$RestrictBackgroundStatus
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy()
androidx.media.MediaBrowserServiceCompat: void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result)
androidx.recyclerview.widget.ListUpdateCallback: void onInserted(int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry: void addPosition(int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_orientation
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAllViews()
androidx.core.content.res.FontResourcesParserCompat: int INFINITE_TIMEOUT_VALUE
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_17
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: int MAX_NUM_POINTS
androidx.camera.core.ImageCaptureConfig: java.lang.Class getTargetClass(java.lang.Class)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
androidx.legacy.coreutils.R$styleable: int[] FontFamilyFont
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.core.widget.TextViewCompat$AutoSizeTextType
androidx.camera.core.R$id: int tag_screen_reader_focusable
androidx.vectordrawable.R$id: int tag_unhandled_key_event_manager
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_FILTER_KEY_EVENTS
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderPackage
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.appcompat.resources.R$attr: int fontProviderCerts
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_enter_shortcut_label
androidx.exifinterface.media.ExifInterface: short RENDERED_PROCESS_NORMAL
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_REGISTER_CALLBACK_MESSENGER
androidx.swiperefreshlayout.R$attr: int ttcIndex
androidx.vectordrawable.R$styleable: int[] GradientColor
okio.GzipSource: GzipSource(okio.Source)
okhttp3.Address: okhttp3.Dns dns()
okhttp3.Cookie: java.lang.String domain()
androidx.core.view.LayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String ERR_NO_EMAIL_CLIENT
androidx.loader.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.TintTypedArray: float getDimension(int,float)
androidx.coordinatorlayout.R$attr: int statusBarBackground
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
okhttp3.WebSocket$Factory
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicHeight()
androidx.media.R$styleable: int FontFamilyFont_android_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$color: int notification_icon_bg_color
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.fragment.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_percent
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.core.app.NotificationCompat$Builder
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getRowCount()
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
androidx.appcompat.R$dimen: int abc_text_size_large_material
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.R$attr: int backgroundStacked
okio.DeflaterSink: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
io.github.prabhuomkar.pytorchandroid.R$attr: int windowNoTitle
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isRefreshing()
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence getText(android.content.res.TypedArray,int,int)
org.pytorch.R$styleable: int GradientColor_android_startColor
androidx.versionedparcelable.R
androidx.legacy.coreui.R$dimen: int notification_small_icon_size_as_large
androidx.fragment.app.FragmentTransitionImpl: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.constraintlayout.solver.ArrayRow: void reset()
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
androidx.camera.core.VideoCaptureConfig: android.util.Size getDefaultResolution()
androidx.customview.R$id: int tag_unhandled_key_listeners
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
org.pytorch.R$dimen: int abc_action_bar_default_padding_end_material
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
okhttp3.internal.io.FileSystem: okio.Sink sink(java.io.File)
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder priority(com.squareup.picasso.Picasso$Priority)
androidx.camera.camera2.R$dimen: int notification_top_pad
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_menu
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
org.pytorch.torchvision.R$attr: int autoSizeTextType
org.pytorch.torchvision.R$id: int title
androidx.appcompat.R$styleable: int[] PopupWindow
androidx.loader.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$attr: int windowFixedHeightMinor
androidx.camera.core.R$dimen: int compat_button_inset_horizontal_material
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.fragment.app.FragmentActivity
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean)
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.appcompat.R$attr: int paddingEnd
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getX()
androidx.slidingpanelayout.R$styleable: int[] GradientColorItem
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: boolean isSpinEnabled()
androidx.swiperefreshlayout.R$drawable: int notification_tile_bg
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError[] values()
okio.Buffer: okio.ByteString sha1()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_height
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)
okio.Sink: void close()
androidx.constraintlayout.solver.SolverVariable: void removeFromRow(androidx.constraintlayout.solver.ArrayRow)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void update()
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_btn_checkable
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
androidx.media.MediaBrowserServiceCompat$BrowserRoot: android.os.Bundle getExtras()
androidx.core.graphics.PathSegment: float getEndFraction()
androidx.legacy.v4.R$dimen: int subtitle_shadow_radius
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_NoActionBar
org.pytorch.torchvision.R$attr: int dialogCornerRadius
androidx.customview.R$drawable: int notification_bg_low_normal
androidx.loader.R$layout
androidx.slidingpanelayout.R$id: int icon
org.pytorch.torchvision.R$dimen: int notification_action_text_size
androidx.camera.core.R$id: int info
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
org.pytorch.R$layout: int abc_action_bar_title_item
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerY
androidx.fragment.app.FragmentManager: void popBackStack()
androidx.fragment.app.ListFragment: void setListShown(boolean)
okhttp3.CacheControl$Builder: CacheControl$Builder()
androidx.core.view.InputDeviceCompat: int SOURCE_HDMI
org.pytorch.R$color: int foreground_material_dark
io.github.prabhuomkar.pytorchandroid.R$attr: int layout
okio.Buffer: okio.BufferedSink writeShortLe(int)
android.support.v4.media.session.PlaybackStateCompat$MediaKeyAction
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDy(int)
android.support.v4.media.session.MediaSessionCompat: void setCaptioningEnabled(boolean)
androidx.viewpager.R$drawable: int notification_bg_normal
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startY
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String ERR_MODEL_NOT_FOUND
androidx.cardview.widget.CardView: void onMeasure(int,int)
androidx.fragment.R$id: int icon_group
androidx.vectordrawable.animated.R$integer: int status_bar_notification_info_maxnum
okio.Buffer: void write(okio.Buffer,long)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
androidx.appcompat.R$attr: int actionModeCopyDrawable
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$id: int action_mode_bar_stub
androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_suggestionRowLayout
androidx.appcompat.R$styleable: int SwitchCompat_track
android.support.v4.media.MediaBrowserCompat: void disconnect()
androidx.annotation.ColorInt
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_ASPECT_FRAME
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_ACTION_EXTRAS
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
androidx.camera.core.AppConfig: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActionMode
androidx.media.R$id: int right_icon
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
io.github.prabhuomkar.pytorchandroid.R$attr: int defaultQueryHint
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getType()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneRightMargin
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_1_score
androidx.core.R$styleable: int ColorStateListItem_android_alpha
org.pytorch.R$attr: int barLength
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EMAIL
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMinWidth(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
org.pytorch.torchvision.R$styleable: int Toolbar_title
androidx.asynclayoutinflater.R$dimen: int notification_large_icon_width
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
org.pytorch.R$attr: int windowMinWidthMinor
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.camera.core.CameraCaptureMetaData$AwbState
androidx.appcompat.R$anim: int abc_popup_exit
org.pytorch.R$attr: int seekBarStyle
androidx.media.R$id: int tag_unhandled_key_event_manager
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet: void setVerticalBias(int,float)
androidx.appcompat.R$style: int Widget_AppCompat_Button
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.facebook.jni.HybridData
androidx.camera.core.CameraX$LensFacing: androidx.camera.core.CameraX$LensFacing FRONT
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView onCreateViewHolder(android.view.ViewGroup,int)
androidx.core.R$id: int accessibility_custom_action_6
androidx.appcompat.R$id: int action_bar_title
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_switch_thumb_material
androidx.core.R$dimen: int notification_large_icon_width
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_000
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)
org.pytorch.R$dimen: int highlight_alpha_material_dark
okhttp3.MultipartBody: okhttp3.MediaType FORM
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_description
androidx.lifecycle.LiveData: LiveData()
com.downloader.httpclient.DefaultHttpClient: void connect(com.downloader.request.DownloadRequest)
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Dialog_Alert
androidx.customview.widget.ViewDragHelper: float getMinVelocity()
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeBegin()
androidx.legacy.v4.R$styleable: int GradientColor_android_endColor
androidx.camera.core.VideoCapture: androidx.camera.core.VideoCapture$Defaults DEFAULT_CONFIG
androidx.appcompat.view.menu.MenuWrapperICS
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
androidx.core.widget.ImageViewCompat
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat getIcon()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode fromHttp2(int)
androidx.asynclayoutinflater.R$color: int secondary_text_default_material_light
org.pytorch.R$attr: int actionModeSplitBackground
androidx.appcompat.R$attr: int actionButtonStyle
androidx.appcompat.R$id: int accessibility_custom_action_27
org.pytorch.R$style: int Widget_AppCompat_ActionBar_TabText
org.pytorch.torchvision.R$styleable: int ActionBar_indeterminateProgressStyle
org.pytorch.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.core.view.InputDeviceCompat: int SOURCE_UNKNOWN
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOrigin(int,int)
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(androidx.core.app.NotificationCompat$Action)
androidx.core.app.BundleCompat
androidx.asynclayoutinflater.R$id: int tag_transition_group
androidx.vectordrawable.R$attr: int fontVariationSettings
org.pytorch.R$attr
androidx.swiperefreshlayout.R$attr: int font
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
org.pytorch.torchvision.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
org.pytorch.torchvision.R$styleable: int SwitchCompat_switchTextAppearance
androidx.drawerlayout.R$id: int info
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.camera.camera2.impl.compat.CameraManagerCompat: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager$AvailabilityCallback)
com.downloader.internal.DownloadRunnable: com.downloader.Priority priority
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
okio.Buffer: okio.Buffer emitCompleteSegments()
org.pytorch.torchvision.R$attr: int listChoiceBackgroundIndicator
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_iconifiedByDefault
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.core.view.ViewCompat: float getElevation(android.view.View)
org.pytorch.torchvision.R$styleable: int Spinner_android_dropDownWidth
androidx.recyclerview.R$id: int accessibility_custom_action_30
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startY
androidx.activity.R$id: int normal
androidx.constraintlayout.widget.Placeholder: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
android.support.v4.os.ResultReceiver
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.recyclerview.R$drawable: int notification_bg_low_pressed
androidx.core.app.NotificationCompat$MessagingStyle: int MAXIMUM_RETAINED_MESSAGES
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.Guideline: int VERTICAL
androidx.recyclerview.selection.ItemKeyProvider
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_OECF
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
okio.HashingSource: okio.HashingSource md5(okio.Source)
androidx.constraintlayout.solver.widgets.ChainHead: float mTotalWeight
okhttp3.internal.http2.Http2Codec: void cancel()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COPYRIGHT
androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)
androidx.appcompat.widget.ListPopupWindow: int getSelectedItemPosition()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.camera.core.CameraCaptureCallback
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode ON_MANUAL_AUTO
androidx.loader.content.CursorLoader
androidx.recyclerview.R$id
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)
androidx.coordinatorlayout.widget.CoordinatorLayout: void dispatchDependentViewsChanged(android.view.View)
org.pytorch.R$id: int action_bar
androidx.recyclerview.widget.SimpleItemAnimator: void setSupportsChangeAnimations(boolean)
org.pytorch.R$dimen: int compat_button_padding_vertical_material
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.customview.widget.ViewDragHelper: int DIRECTION_HORIZONTAL
androidx.appcompat.R$attr: int color
androidx.camera.core.ImageInfo
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_dark
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_tooltip_exit
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
androidx.camera.camera2.R$id: int accessibility_custom_action_26
org.pytorch.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
androidx.fragment.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$string: int abc_activity_chooser_view_see_all
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$FlagEntry[] flagMapping()
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerStyle
com.downloader.handler.ProgressHandler
androidx.constraintlayout.widget.ConstraintSet: void create(int,int)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
androidx.camera.core.ImageCapture: void takePicture(java.io.File,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageSavedListener)
androidx.core.hardware.display.DisplayManagerCompat
org.pytorch.R$styleable: int Toolbar_titleTextColor
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.customview.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.vectordrawable.R$dimen: int notification_big_circle_margin
okhttp3.Interceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.activity.R$styleable: int FontFamily_fontProviderFetchTimeout
io.github.prabhuomkar.pytorchandroid.R$id: int action_image
androidx.loader.R$attr: int fontProviderPackage
androidx.swiperefreshlayout.R$id: int text
androidx.camera.camera2.R$styleable: int GradientColor_android_tileMode
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean)
org.pytorch.R$id: int search_src_text
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_7
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean isOpen()
androidx.core.app.NotificationCompat: int FLAG_LOCAL_ONLY
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper: PermissionsHelper()
androidx.legacy.coreui.R$dimen: int compat_button_padding_horizontal_material
okhttp3.internal.platform.Platform: void log(int,java.lang.String,java.lang.Throwable)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionMode
org.pytorch.R$styleable: int[] View
org.pytorch.R$attr: int closeIcon
androidx.appcompat.resources.R$id: int accessibility_custom_action_0
androidx.appcompat.widget.ActivityChooserView: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
okio.Okio: okio.Source source(java.io.InputStream)
androidx.appcompat.app.AlertDialog: void setMessage(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getDescription()
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light
androidx.activity.R$layout: int custom_dialog
androidx.camera.core.SessionConfig$SessionError: androidx.camera.core.SessionConfig$SessionError[] values()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)
okio.Buffer: boolean equals(java.lang.Object)
androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)
androidx.appcompat.R$dimen: int notification_top_pad
okhttp3.HttpUrl: java.net.URI uri()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.core.view.inputmethod.InputContentInfoCompat
androidx.loader.R$id: int action_divider
androidx.recyclerview.widget.RecyclerView: android.view.View findChildViewUnder(float,float)
androidx.slidingpanelayout.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionWidth()
androidx.appcompat.R$integer: int status_bar_notification_info_maxnum
androidx.recyclerview.widget.RecyclerView$OnFlingListener
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintRight_toLeftOf
androidx.camera.core.CameraDeviceStateCallbacks: android.hardware.camera2.CameraDevice$StateCallback createNoOpCallback()
androidx.constraintlayout.widget.R$attr: int layout_editor_absoluteX
androidx.appcompat.R$styleable: int AppCompatTheme_editTextColor
com.squareup.picasso.Request: float rotationDegrees
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_id
io.github.prabhuomkar.pytorchandroid.R$attr: int title
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_STANDARD
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMenuItemView_android_minWidth
androidx.core.R$style: int TextAppearance_Compat_Notification
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setVideoFrameRate(int)
androidx.fragment.app.FragmentManagerNonConfig
androidx.fragment.R$styleable: int FontFamily_fontProviderCerts
androidx.core.app.ComponentActivity
androidx.media.R$styleable: int FontFamily_fontProviderAuthority
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewAdapterPosition()
androidx.camera.core.impl.utils.futures.FutureChain: boolean isCancelled()
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginRight
androidx.camera.core.R$styleable: int GradientColor_android_centerY
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.widget.EdgeEffectCompat: EdgeEffectCompat(android.content.Context)
androidx.appcompat.view.ActionBarPolicy
androidx.fragment.R$id: int accessibility_custom_action_31
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
okio.InflaterSource: long read(okio.Buffer,long)
androidx.versionedparcelable.VersionedParcel: byte readByte(byte,int)
org.pytorch.torchvision.R$id: int alertTitle
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int end
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontWeight
okhttp3.internal.cache.DiskLruCache$Snapshot: long getLength(int)
androidx.appcompat.R$styleable: int AppCompatTheme_colorError
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
androidx.recyclerview.R$id: int accessibility_custom_action_9
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: int getEnd()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType RELAXED
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Info
androidx.vectordrawable.animated.R$id: int forever
org.pytorch.torchvision.R$attr: int contentInsetLeft
androidx.vectordrawable.animated.R$drawable: int notification_bg_low_pressed
androidx.appcompat.widget.DropDownListView: int lookForSelectablePosition(int,boolean)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
androidx.drawerlayout.R$layout: int notification_template_part_chronometer
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
io.github.prabhuomkar.pytorchandroid.R$drawable: int pytorch_placeholder
androidx.viewpager.widget.PagerTitleStrip: int getTextSpacing()
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_AUTO
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_horizontalDivider
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
androidx.customview.widget.FocusStrategy$CollectionAdapter
org.pytorch.torchvision.R$layout: int abc_tooltip
androidx.viewpager.R$id: int tag_unhandled_key_listeners
androidx.recyclerview.widget.RecyclerView$RecycledViewPool
androidx.media.R$layout
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
org.pytorch.R$color: int notification_action_color_filter
org.pytorch.torchvision.R$attr: int contentInsetRight
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getAudioStream()
androidx.camera.core.CameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AeState getAeState()
org.pytorch.torchvision.R$styleable: int SwitchCompat_android_thumb
androidx.loader.content.Loader$OnLoadCompleteListener: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String)
androidx.exifinterface.media.ExifInterface: boolean getLatLong(float[])
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
org.pytorch.R$styleable: int MenuItem_android_title
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Widget_AppCompat_EditText
androidx.appcompat.view.ActionMode: void setTitle(java.lang.CharSequence)
androidx.camera.core.CameraIdFilterSet: java.util.Set getCameraIdFilters()
androidx.recyclerview.widget.RecyclerView$Adapter: void setHasStableIds(boolean)
androidx.core.view.NestedScrollingChild
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
androidx.core.app.NotificationCompat$NotificationVisibility
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleX(float)
androidx.camera.core.FocusMeteringAction$OnAutoFocusListener
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
org.pytorch.torchvision.R$styleable: int ActionBar_height
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.constraintlayout.widget.Constraints$LayoutParams: float scaleX
org.pytorch.R$color: int primary_text_disabled_material_light
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int)
androidx.appcompat.widget.Toolbar
org.pytorch.R$drawable: int notification_bg_low_pressed
androidx.constraintlayout.solver.widgets.WidgetContainer: void removeAllChildren()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
okhttp3.internal.connection.StreamAllocation: void acquire(okhttp3.internal.connection.RealConnection,boolean)
com.squareup.picasso.PicassoProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.swiperefreshlayout.R$drawable: int notification_bg_low_normal
androidx.core.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)
androidx.camera.core.R$attr: int font
androidx.customview.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
androidx.appcompat.R$attr: int radioButtonStyle
io.github.prabhuomkar.pytorchandroid.R$id: int right_side
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback: int onGetChildDrawingOrder(int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_alert_dialog_title_material
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.ViewGroup)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_checkboxStyle
io.github.prabhuomkar.pytorchandroid.R$string: int model_size
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_HIGH
androidx.recyclerview.selection.SelectionPredicates: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate createSelectSingleAnything()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
org.pytorch.torchvision.R$style: int Widget_AppCompat_SearchView
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadHeight()
androidx.customview.R$drawable
org.pytorch.torchvision.R$styleable: int TextAppearance_fontFamily
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCanOpenPopup(boolean)
androidx.appcompat.widget.ThemedSpinnerAdapter: android.content.res.Resources$Theme getDropDownViewTheme()
androidx.camera.core.UseCase: void clear()
org.pytorch.R$id: int src_over
org.pytorch.R$layout: int abc_search_dropdown_item_icons_2line
androidx.cardview.R$attr
org.pytorch.R$attr: int buttonBarPositiveButtonStyle
okio.ByteString: java.lang.String toString()
androidx.camera.core.FlashMode: androidx.camera.core.FlashMode ON
androidx.recyclerview.selection.OperationMonitor$OnChangeListener: void onChanged()
okio.AsyncTimeout
androidx.legacy.coreui.R$dimen: int notification_right_icon_size
androidx.appcompat.R$style: int Widget_AppCompat_ActionMode
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.appcompat.widget.DecorToolbar: boolean isTitleTruncated()
androidx.appcompat.R$attr: int switchTextAppearance
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA
io.github.prabhuomkar.pytorchandroid.R$attr: int colorBackgroundFloating
androidx.core.R$styleable: int GradientColor_android_endY
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_END
okio.Buffer
androidx.camera.core.VideoCaptureConfig: java.util.Set listOptions()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context)
androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)
androidx.media.R$dimen: int compat_control_corner_material
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: void setFullSpan(boolean)
okhttp3.internal.Internal: java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener)
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_DOUBLE_ARROW
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
org.pytorch.IValue: boolean[] toBoolList()
org.pytorch.IValue: org.pytorch.IValue from(long)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
androidx.appcompat.resources.R$color: int ripple_material_light
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_3D
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
io.github.prabhuomkar.pytorchandroid.R$attr: int closeItemLayout
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.MenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setConnectTimeout(int)
okio.Buffer: okio.BufferedSink writeByte(int)
androidx.camera.core.Observable: com.google.common.util.concurrent.ListenableFuture fetchData()
androidx.camera.core.CaptureConfig$Builder: java.util.Set getSurfaces()
okhttp3.internal.Internal: void initializeInstanceForTests()
org.pytorch.torchvision.R$attr: int selectableItemBackground
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVisibility()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintWidth_min
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
androidx.legacy.v4.R$id: int left
androidx.camera.core.UseCaseEventConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: long getLatestTimestamp()
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg_normal_pressed
androidx.constraintlayout.solver.Metrics: long variables
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onAttachedFromWindow()
androidx.recyclerview.widget.RecyclerView: void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNRESTRICTED
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_Alert
okhttp3.internal.http.BridgeInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
org.pytorch.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.core.internal.view.SupportMenuItem: boolean requiresOverflow()
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[])
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
okhttp3.Dispatcher: java.util.List queuedCalls()
androidx.fragment.app.Fragment: void setSharedElementEnterTransition(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_scaleX
androidx.legacy.coreutils.R$id: int tag_transition_group
io.github.prabhuomkar.pytorchandroid.R$id: int alertTitle
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_background
androidx.swiperefreshlayout.R$id: int icon_group
androidx.legacy.v4.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.vectordrawable.R$styleable: int[] GradientColorItem
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
okhttp3.internal.http2.Http2Connection: void close()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ImageButton
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreFling(float,float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
org.pytorch.BuildConfig: java.lang.String BUILD_TYPE
org.pytorch.R$color: int abc_tint_default
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.R$dimen: int notification_action_icon_size
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Display4
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder clearResize()
androidx.appcompat.widget.SwitchCompat: android.graphics.drawable.Drawable getThumbDrawable()
org.pytorch.torchvision.R$drawable: int abc_btn_switch_to_on_mtrl_00012
okio.Buffer: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_FOCUS
android.support.v4.media.session.IMediaSession: void setRepeatMode(int)
androidx.media.R$color: int secondary_text_default_material_light
android.support.v4.media.session.MediaSessionCompat: void setActive(boolean)
org.pytorch.R$styleable: int TextAppearance_android_shadowColor
org.pytorch.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.customview.R$attr: int fontProviderCerts
androidx.activity.R$dimen: int notification_big_circle_margin
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.DialogFragment: void setStyle(int,int)
org.pytorch.R$style: int TextAppearance_AppCompat_Caption
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.recyclerview.selection.DefaultSelectionTracker: boolean select(java.lang.Object)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_elevation
android.support.v4.media.session.IMediaSession: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_BEGINNING
com.downloader.OnPauseListener: void onPause()
io.github.prabhuomkar.pytorchandroid.R$id: int textSpacerNoTitle
com.squareup.picasso.Picasso: boolean isLoggingEnabled()
okhttp3.internal.cache.CacheStrategy$Factory
org.pytorch.torchvision.R$styleable: int AppCompatSeekBar_android_thumb
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_13
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)
org.pytorch.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.collection.CircularIntArray: void clear()
androidx.collection.LruCache: java.lang.Object remove(java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.camera.core.ImageProxy: android.media.Image getImage()
okhttp3.Protocol: okhttp3.Protocol[] values()
okhttp3.internal.http.HttpDate: java.lang.String format(java.util.Date)
androidx.appcompat.R$styleable: int ActionBar_progressBarStyle
org.pytorch.torchvision.R$styleable: int View_theme
androidx.coordinatorlayout.R$style: int Widget_Compat_NotificationActionText
io.github.prabhuomkar.pytorchandroid.R$id: int beginning
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType[] values()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle)
org.pytorch.torchvision.R$id: int line3
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: ViewModelProvider$NewInstanceFactory()
androidx.recyclerview.widget.RecyclerView$State: int getItemCount()
androidx.appcompat.R$id: int src_over
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_fontVariationSettings
androidx.core.app.NotificationCompat$Action$Builder
androidx.recyclerview.R$styleable: int GradientColor_android_endY
androidx.appcompat.view.menu.ActionMenuItemView
org.pytorch.R$id: int notification_main_column_container
org.pytorch.R$id: int alertTitle
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener)
androidx.exifinterface.media.ExifInterface: void flipVertically()
androidx.viewpager.R$id: int title
androidx.core.view.PointerIconCompat: int TYPE_GRABBING
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
io.github.prabhuomkar.pytorchandroid.R$id: int SHIFT
androidx.camera.core.impl.utils.executor.CameraXExecutors
androidx.camera.core.DeferrableSurface$SurfaceClosedException
androidx.asynclayoutinflater.R$drawable: int notification_icon_background
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem getSystem()
okhttp3.internal.ws.RealWebSocket: void onReadPing(okio.ByteString)
androidx.recyclerview.widget.TileList$Tile: int mItemCount
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_CHANGED
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)
androidx.appcompat.R$styleable: int TextAppearance_android_shadowColor
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
androidx.recyclerview.selection.ItemKeyProvider: java.lang.Object getKey(int)
androidx.camera.core.UseCaseConfig$Builder: java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.loader.content.Loader: boolean isAbandoned()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
android.support.v4.media.session.MediaSessionCompat$Callback: void onRemoveQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getBackgroundColor()
androidx.camera.core.ImageCaptureConfig: java.lang.Integer getBufferFormat(java.lang.Integer)
androidx.camera.core.VideoCaptureConfig$Builder
org.pytorch.torchvision.R$attr: int titleMarginBottom
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Spinner
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
org.pytorch.R$color: int material_grey_50
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_NEVER
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams)
androidx.camera.core.CameraOrientationUtil: int getRelativeImageRotation(int,int,boolean)
androidx.media.VolumeProviderCompat: VolumeProviderCompat(int,int,int)
androidx.media.R$dimen: int subtitle_shadow_offset
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)
androidx.appcompat.R$attr: int font
androidx.viewpager.widget.PagerTitleStrip: void setNonPrimaryAlpha(float)
androidx.media.R$styleable: int GradientColor_android_endColor
androidx.appcompat.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRow()
androidx.core.widget.EdgeEffectCompat: void setSize(int,int)
androidx.constraintlayout.widget.Constraints$LayoutParams: float transformPivotY
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontWeight
androidx.fragment.R$styleable: int GradientColor_android_endY
org.pytorch.R$attr: int listDividerAlertDialog
androidx.appcompat.R$style: int Base_Animation_AppCompat_Dialog
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable)
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean)
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.appcompat.widget.AppCompatCheckedTextView
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.media.R$dimen: int compat_notification_large_icon_max_width
androidx.legacy.coreui.R$id: int title
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_bias
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderQuery
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)
androidx.appcompat.R$attr: int titleMargins
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISC_NUMBER
androidx.appcompat.view.menu.BaseMenuPresenter
org.pytorch.torchvision.R$color: int abc_secondary_text_material_light
org.pytorch.torchvision.R$style: int Widget_AppCompat_Spinner_DropDown
org.pytorch.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState UNKNOWN
androidx.camera.camera2.R$id: int action_divider
androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_RatingBar
androidx.appcompat.R$attr: int drawableTint
org.pytorch.torchvision.R$styleable: int AppCompatTheme_editTextColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_android_thumb
androidx.appcompat.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
androidx.core.view.ScrollingView: int computeHorizontalScrollExtent()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToStart
androidx.customview.R$color: int ripple_material_light
androidx.core.view.NestedScrollingChild: boolean hasNestedScrollingParent()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
org.pytorch.torchvision.BuildConfig: java.lang.String FLAVOR
androidx.core.R$layout: int notification_action
androidx.legacy.v4.R$dimen: int compat_button_padding_horizontal_material
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingApplicationIcon()
androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Dark
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.vectordrawable.R$string
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] CompoundButton
androidx.lifecycle.Lifecycling$1
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper)
android.support.v4.media.session.IMediaSession: void setShuffleModeEnabledRemoved(boolean)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.core.R$styleable: int ColorStateListItem_android_color
okhttp3.Route: boolean equals(java.lang.Object)
okhttp3.Handshake
androidx.vectordrawable.R$dimen: int notification_right_icon_size
okio.Buffer: int select(okio.Options)
androidx.media.MediaSessionManager: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo)
org.pytorch.R$id: int search_plate
androidx.fragment.app.FragmentController: void reportLoaderStart()
androidx.core.widget.TintableCompoundButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_COOL_WHITE_FLUORESCENT
androidx.loader.R$id: int actions
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.recyclerview.widget.AsyncListUtil$ViewCallback
androidx.fragment.R$drawable: int notification_icon_background
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
androidx.appcompat.R$attr: int spinnerDropDownItemStyle
okhttp3.internal.http2.Settings
okhttp3.Address: int hashCode()
androidx.drawerlayout.R$dimen: int compat_button_inset_vertical_material
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.core.provider.SelfDestructiveThread
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeEscapeVelocity(float)
org.pytorch.torchvision.R$color: int error_color_material_dark
okio.ByteString: boolean startsWith(okio.ByteString)
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableTopCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.fragment.R$id: int accessibility_custom_action_10
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator transform(java.util.List)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_F_NUMBER
android.support.v4.media.session.MediaControllerCompat$Callback: void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
androidx.appcompat.widget.ContentFrameLayout
androidx.vectordrawable.R$style
androidx.core.R$id: int accessibility_custom_action_23
org.pytorch.R$color: int bright_foreground_inverse_material_dark
androidx.vectordrawable.animated.R$layout: int notification_action
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.R$id: int tag_screen_reader_focusable
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
com.downloader.internal.SynchronousCall: com.downloader.request.DownloadRequest request
androidx.viewpager.R$id: int notification_main_column_container
androidx.constraintlayout.widget.R$id
androidx.fragment.app.ListFragment: void setListAdapter(android.widget.ListAdapter)
androidx.appcompat.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)
org.pytorch.torchvision.R$styleable: int Toolbar_buttonGravity
okhttp3.Call
androidx.core.content.res.TypedArrayUtils
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMarginBottom
okhttp3.OkHttpClient: int connectTimeoutMillis()
org.pytorch.R$styleable: int[] LinearLayoutCompat
androidx.camera.core.VideoCapture$Defaults: VideoCapture$Defaults()
androidx.cardview.R$attr: int contentPaddingBottom
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getContentDescription()
androidx.appcompat.widget.DecorContentParent: void setMenuPrepared()
androidx.constraintlayout.solver.widgets.Barrier: void analyze(int)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
androidx.loader.R$dimen: int notification_content_margin_start
androidx.camera.core.CameraRepository: CameraRepository()
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy valueOf(java.lang.String)
org.pytorch.torchvision.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.torchvision.R$id: int info
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopIgnoringView(android.view.View)
okhttp3.OkHttpClient: okhttp3.Dispatcher dispatcher()
androidx.drawerlayout.R$styleable: <clinit>()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.camera.core.FocusMeteringAction$Builder
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.R$id: int icon
androidx.appcompat.R$attr: int numericModifiers
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)
org.pytorch.torchvision.R$styleable: int ViewBackgroundHelper_android_background
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
org.pytorch.R$attr: int radioButtonStyle
androidx.media.VolumeProviderCompat: int getVolumeControl()
org.pytorch.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$style: int Widget_AppCompat_ListPopupWindow
androidx.vectordrawable.R$dimen: int notification_action_text_size
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.collection.LruCache
androidx.appcompat.app.ActionBar: java.lang.CharSequence getTitle()
io.github.prabhuomkar.pytorchandroid.R$attr: int navigationIcon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_PERCENT
androidx.recyclerview.R$color: int ripple_material_light
androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_showTitle
androidx.core.app.NotificationCompat$WearableExtender: java.lang.Object clone()
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.legacy.coreutils.R$dimen: int notification_subtext_size
androidx.recyclerview.widget.SortedList$BatchedCallback: void onMoved(int,int)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder rotate(float)
io.github.prabhuomkar.pytorchandroid.R$styleable: int PopupWindow_android_popupBackground
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabView
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.viewpager.R$styleable: int[] GradientColor
androidx.camera.core.UseCaseAttachState
okhttp3.internal.Util: boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[])
org.pytorch.R$dimen: int abc_button_padding_horizontal_material
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.camera.camera2.impl.Camera2CaptureCallbacks: android.hardware.camera2.CameraCaptureSession$CaptureCallback createNoOpCallback()
androidx.core.math.MathUtils: double clamp(double,double,double)
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
androidx.coordinatorlayout.R$attr: int fontProviderPackage
org.pytorch.torchvision.R$id: int search_plate
androidx.core.view.ViewParentCompat: boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
androidx.core.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_OK
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object)
org.pytorch.torchvision.R$styleable: int Toolbar_collapseContentDescription
androidx.camera.core.CameraControlInternal: void enableTorch(boolean)
io.github.prabhuomkar.pytorchandroid.ui.fragments.HomeFragment: HomeFragment()
androidx.fragment.app.DialogFragment: boolean isCancelable()
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.vectordrawable.animated.R$dimen: int compat_button_padding_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$attr: int borderlessButtonStyle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_X_RESOLUTION
androidx.recyclerview.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.R$integer: int abc_config_activityDefaultDur
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
io.github.prabhuomkar.pytorchandroid.R$attr: int emptyVisibility
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.legacy.coreutils.R$drawable: int notification_bg_low
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback: java.util.List onEnableSession()
androidx.appcompat.app.ActionBar: void setWindowTitle(java.lang.CharSequence)
okhttp3.internal.connection.StreamAllocation: void release()
androidx.core.internal.view.SupportSubMenu
androidx.camera.core.CameraDeviceSurfaceManager: android.util.Size getMaxOutputSize(java.lang.String,int)
androidx.core.os.TraceCompat: void endSection()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.constraintlayout.widget.ConstraintSet: void constrainPercentWidth(int,float)
androidx.cardview.R
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderFetchTimeout
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionButton
androidx.legacy.coreui.R$dimen: int compat_control_corner_material
androidx.versionedparcelable.VersionedParcel: void setOutputField(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isActive()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_checkbox_unchecked_mtrl
androidx.customview.R$drawable: int notification_bg_low_pressed
androidx.media.R$dimen: int notification_media_narrow_margin
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$id: int invisible
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context,android.util.AttributeSet)
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Title
androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager requireFragmentManager()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.recyclerview.widget.SortedList$Callback: void onChanged(int,int,java.lang.Object)
org.pytorch.torchvision.R$dimen: int tooltip_y_offset_touch
okhttp3.FormBody: java.lang.String name(int)
androidx.legacy.v4.R$dimen: int notification_top_pad_large_text
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.appcompat.R$id: int search_bar
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.viewpager.R$id: int tag_transition_group
androidx.core.view.InputDeviceCompat: int SOURCE_STYLUS
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dropdownitem_text_padding_right
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toTopOf
org.pytorch.torchvision.R$color: int secondary_text_default_material_light
androidx.camera.core.ImageOutputConfig: android.util.Size getMaxResolution()
androidx.fragment.app.FragmentHostCallback: java.lang.Object onGetHost()
androidx.viewpager.widget.PagerTitleStrip: void onAttachedToWindow()
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
androidx.slidingpanelayout.R$id: int title
org.pytorch.R$attr: int actionModePopupWindowStyle
org.pytorch.R$attr: int fontProviderQuery
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.appcompat.R$styleable: int Toolbar_logo
androidx.recyclerview.R$styleable: int FontFamily_fontProviderQuery
org.pytorch.torchvision.R$attr: int toolbarNavigationButtonStyle
org.pytorch.torchvision.R$layout: int abc_screen_simple_overlay_action_mode
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
androidx.camera.core.R$drawable: int notification_bg_low_pressed
androidx.core.view.OnApplyWindowInsetsListener: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerOpened(android.view.View)
androidx.annotation.ColorRes
androidx.drawerlayout.R$dimen: int notification_action_text_size
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
org.pytorch.torchvision.R$drawable: int abc_btn_switch_to_on_mtrl_00001
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.recyclerview.R$dimen: int notification_top_pad
org.pytorch.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()
com.squareup.picasso.RequestCreator: void into(android.widget.RemoteViews,int,int[],com.squareup.picasso.Callback)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_placeholder_emptyVisibility
android.support.v4.media.session.IMediaSession: void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.camera.core.SessionConfig: java.util.List getSessionStateCallbacks()
androidx.recyclerview.R$styleable: int[] FontFamily
androidx.constraintlayout.solver.widgets.Guideline: void setMinimumPosition(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
androidx.core.app.NotificationBuilderWithBuilderAccessor: android.app.Notification$Builder getBuilder()
androidx.vectordrawable.R$drawable: int notification_bg_low
android.support.v4.app.INotificationSideChannel$Stub: android.os.IBinder asBinder()
androidx.appcompat.view.menu.MenuBuilder: void clearAll()
androidx.appcompat.R$dimen: int abc_text_size_headline_material
androidx.recyclerview.selection.BandPredicate$EmptyArea: boolean canInitiate(android.view.MotionEvent)
androidx.camera.core.ImageCaptureConfig: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.media.R$attr: int fontProviderQuery
androidx.appcompat.R$style: int Widget_AppCompat_ImageButton
org.pytorch.R$styleable: int AppCompatTheme_panelMenuListTheme
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
org.pytorch.R$attr: int actionModeBackground
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: void drawableStateChanged()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActionBarContextView
io.github.prabhuomkar.pytorchandroid.R$attr: int fastScrollHorizontalThumbDrawable
androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAKE
androidx.core.content.res.ResourcesCompat: void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
org.pytorch.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.legacy.coreui.R$id: int action_divider
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V22_Theme_AppCompat
io.github.prabhuomkar.pytorchandroid.R$id: int tag_accessibility_clickable_spans
androidx.appcompat.R$anim: int abc_fade_in
androidx.camera.core.TargetConfig: java.lang.Class getTargetClass()
androidx.core.app.NotificationCompat: int DEFAULT_SOUND
okio.ByteString: java.lang.String base64Url()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.core.view.LayoutInflaterCompat: androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_seekbar_track_progress_height_material
okhttp3.internal.ws.RealWebSocket: void loopReader()
okhttp3.ResponseBody: okio.BufferedSource source()
androidx.viewpager.widget.PagerAdapter: void notifyDataSetChanged()
io.github.prabhuomkar.pytorchandroid.R$id: int action_mode_bar
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Dialog_Alert
com.facebook.jni.HybridData$Destructor: void destruct()
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker()
androidx.camera.camera2.R$id: int accessibility_custom_action_25
okhttp3.Route
org.pytorch.IValue: double toDouble()
org.pytorch.R$drawable: int abc_list_longpressed_holo
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_Dark
org.pytorch.R$drawable: int abc_btn_check_material
okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.Rectangle getHead()
androidx.collection.LongSparseArray: void clear()
androidx.appcompat.R$id: int image
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.core.util.DebugUtils
androidx.appcompat.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)
okhttp3.Response: okhttp3.Response networkResponse()
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.Person getUser()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.appcompat.widget.ListPopupWindow: android.view.View$OnTouchListener createDragToOpenListener(android.view.View)
androidx.drawerlayout.R$layout: int notification_template_part_time
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_OTHER
okhttp3.Connection: okhttp3.Route route()
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setUserAgent(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$attr: int cardCornerRadius
io.github.prabhuomkar.pytorchandroid.models.Task: Task(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context)
androidx.fragment.R$styleable: int GradientColor_android_centerX
androidx.drawerlayout.widget.DrawerLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_weight
androidx.core.widget.AutoScrollHelper: void scrollTargetBy(int,int)
androidx.media.R$styleable: int FontFamilyFont_font
okhttp3.Response: java.lang.String message()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getMargin()
okhttp3.internal.connection.RouteDatabase: void connected(okhttp3.Route)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.core.app.FrameMetricsAggregator: int ANIMATION_DURATION
androidx.appcompat.app.WindowDecorActionBar: void removeTabAt(int)
androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)
androidx.camera.core.ImageCapture: void takePicture(java.io.File,androidx.camera.core.ImageCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageSavedListener)
androidx.activity.R$id: int icon_group
androidx.vectordrawable.R$id: int accessibility_custom_action_14
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_SEARCH
androidx.constraintlayout.solver.Metrics
androidx.appcompat.R$id: int none
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_START
androidx.vectordrawable.R$dimen: int notification_small_icon_size_as_large
androidx.camera.camera2.R$layout: int notification_template_icon_group
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AnimatedStateListDrawableCompat
android.support.v4.media.MediaBrowserCompat: void unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate
androidx.collection.SimpleArrayMap: SimpleArrayMap(androidx.collection.SimpleArrayMap)
androidx.appcompat.resources.R$id: int accessibility_custom_action_23
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
androidx.appcompat.R$dimen: int abc_list_item_padding_horizontal_material
androidx.core.view.MotionEventCompat: int ACTION_POINTER_UP
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.camera.core.SessionConfig$OptionUnpacker
androidx.fragment.R$attr
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope valueOf(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
io.github.prabhuomkar.pytorchandroid.R$attr: int contentPaddingBottom
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.camera.core.LensFacingCameraIdFilter: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
org.pytorch.torchvision.R$dimen: int abc_config_prefDialogWidth
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_TIME
org.pytorch.R$dimen: int abc_seekbar_track_progress_height_material
androidx.activity.R$id: int accessibility_custom_action_7
org.pytorch.R$attr: int srcCompat
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_voice_search_api_material
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType STRICT
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_APERTURE_VALUE
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large_Inverse
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_startColor
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.annotation.InspectableProperty$FlagEntry: int target()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String,okhttp3.RequestBody)
org.pytorch.torchvision.R$id: int title_template
androidx.media.R$id: int action_text
com.downloader.core.MainThreadExecutor: void execute(java.lang.Runnable)
androidx.core.content.SharedPreferencesCompat$EditorCompat: void apply(android.content.SharedPreferences$Editor)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
androidx.drawerlayout.R$dimen: int compat_button_padding_vertical_material
okhttp3.HttpUrl$Builder
androidx.appcompat.widget.DecorToolbar: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
okio.Buffer: Buffer()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: GridLayoutManager$SpanSizeLookup()
org.pytorch.R$attr: int actionDropDownStyle
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintCircleAngle
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_android_focusable
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.camera.core.Config$ExtendableBuilder
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MAX
androidx.exifinterface.media.ExifInterface: int ORIENTATION_TRANSVERSE
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.legacy.coreui.R$dimen: int notification_action_icon_size
androidx.appcompat.R$attr: int gapBetweenBars
org.pytorch.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.vectordrawable.R$attr
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int stackFromEnd
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_action_clickable_span
androidx.appcompat.resources.R$dimen: int notification_media_narrow_margin
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_17
org.pytorch.R$styleable: int AppCompatTheme_buttonStyleSmall
org.pytorch.R$attr: int autoSizeMaxTextSize
org.pytorch.R$styleable: int MenuItem_android_onClick
androidx.vectordrawable.R$styleable
okio.Buffer: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
androidx.camera.core.MutableOptionsBundle: androidx.camera.core.MutableOptionsBundle create()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.vectordrawable.animated.R$dimen: int notification_right_icon_size
androidx.fragment.R$string: int status_bar_notification_info_overflow
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence)
okhttp3.Headers$Builder: Headers$Builder()
io.github.prabhuomkar.pytorchandroid.R$dimen: int subtitle_shadow_radius
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString)
androidx.fragment.app.DialogFragment: int show(androidx.fragment.app.FragmentTransaction,java.lang.String)
okhttp3.internal.Util: int indexOf(java.util.Comparator,java.lang.String[],java.lang.String)
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AF_ONLY
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewDetachedFromWindow(android.view.View)
androidx.slidingpanelayout.R$id: int action_image
com.downloader.Constants: int DEFAULT_READ_TIMEOUT_IN_MILLS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.MenuBuilder: void close()
androidx.camera.core.CameraX$LensFacing: androidx.camera.core.CameraX$LensFacing[] values()
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_4
androidx.appcompat.R$styleable: int AppCompatTheme_dividerHorizontal
androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_SETTLING
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationError(int,java.lang.CharSequence)
androidx.collection.LongSparseArray: boolean isEmpty()
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void updateRange(int,int,int,int,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.widget.AppCompatRatingBar
com.google.auto.value.AutoValue$Builder
androidx.camera.core.R$id: int blocking
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PLAY_FROM_URI
androidx.appcompat.view.menu.MenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
androidx.appcompat.R$style: int Widget_AppCompat_ListView_Menu
com.downloader.utils.Utils: java.lang.String getPath(java.lang.String,java.lang.String)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.appcompat.R$dimen: int abc_text_size_button_material
androidx.appcompat.R$id: int accessibility_custom_action_29
androidx.appcompat.resources.R$id: int tag_unhandled_key_event_manager
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onPlaybackStateChanged(java.lang.Object)
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
androidx.core.widget.ScrollerCompat: int getFinalX()
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_UP
okhttp3.Request: okhttp3.Headers headers()
androidx.appcompat.R$styleable: int View_paddingStart
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_WITH_TEXT
androidx.camera.core.impl.utils.Optional: androidx.camera.core.impl.utils.Optional of(java.lang.Object)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat: void setFitsSystemWindows(android.view.View,boolean)
androidx.camera.core.DeferrableSurface: void setOnSurfaceDetachedListener(java.util.concurrent.Executor,androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener)
androidx.activity.R$dimen: int compat_notification_large_icon_max_width
androidx.activity.R$id: int accessibility_custom_action_27
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_checked_icon_null_animation
androidx.asynclayoutinflater.R$drawable: int notification_bg_low_pressed
androidx.core.view.accessibility.AccessibilityRecordCompat: int getAddedCount()
com.google.auto.value.AutoOneOf
androidx.appcompat.widget.AppCompatSeekBar
androidx.core.app.NotificationCompat$BigPictureStyle
okio.ForwardingSink: void flush()
androidx.recyclerview.widget.RecyclerView$Recycler: android.view.View getViewForPosition(int)
androidx.recyclerview.selection.SelectionTracker: void setProvisionalSelection(java.util.Set)
androidx.camera.core.Preview$OnPreviewOutputUpdateListener: void onUpdated(androidx.camera.core.Preview$PreviewOutput)
androidx.appcompat.app.AppCompatDelegate: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.camera.core.MultiValueSet: void addAll(java.util.List)
androidx.print.PrintHelper: int SCALE_MODE_FILL
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.DialogFragment: void dismissAllowingStateLoss()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PIXEL_X_DIMENSION
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.core.R$drawable: int notification_template_icon_bg
org.pytorch.torchvision.R$id: int search_go_btn
androidx.exifinterface.media.ExifInterface: long getDateTime()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
okhttp3.internal.cache.DiskLruCache$Editor: void commit()
androidx.camera.core.PreviewConfig: android.util.Size getTargetResolution(android.util.Size)
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
org.pytorch.torchvision.R$color: int abc_primary_text_material_light
com.downloader.database.AppDbHelper: void clear()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V22_Theme_AppCompat_Light
androidx.camera.core.impl.utils.futures.FutureChain: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.camera.core.FlashMode: androidx.camera.core.FlashMode OFF
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
androidx.appcompat.R$styleable: int FontFamilyFont_font
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_default
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMinWidth
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_tooltipForegroundColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_numericModifiers
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.appcompat.R$styleable: int GradientColor_android_startY
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_toolbarStyle
org.pytorch.torchvision.R$attr: int allowStacking
androidx.appcompat.widget.DecorToolbar: android.view.Menu getMenu()
androidx.appcompat.widget.DropDownListView: int INVALID_POSITION
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_toLeftOf
org.pytorch.R$attr: int showTitle
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder()
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
org.pytorch.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.core.app.NotificationCompat$GroupAlertBehavior
org.pytorch.R$dimen: int notification_right_icon_size
androidx.viewpager.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActivityChooserView
io.github.prabhuomkar.pytorchandroid.R$attr: int spinBars
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)
androidx.recyclerview.selection.SelectionTracker: boolean setItemsSelected(java.lang.Iterable,boolean)
androidx.loader.R$drawable: int notification_bg_low
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
androidx.recyclerview.widget.GridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okhttp3.Request$Builder: okhttp3.Request$Builder get()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.camera.core.CaptureConfig$Builder: void setTemplateType(int)
okhttp3.internal.platform.Platform: int INFO
androidx.camera.core.VideoCaptureConfig: java.util.concurrent.Executor getBackgroundExecutor()
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
androidx.loader.R$id: int normal
androidx.core.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)
org.pytorch.torchvision.R$styleable: int GradientColor_android_centerX
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.app.NotificationCompat$Style: void restoreFromCompatExtras(android.os.Bundle)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.appcompat.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.appcompat.widget.DecorToolbar: void setDropdownSelectedPosition(int)
androidx.lifecycle.LifecycleRegistry
androidx.camera.camera2.R$attr: int fontProviderQuery
org.pytorch.torchvision.R$style: int Theme_AppCompat_Dialog
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.appcompat.R$attr: int alertDialogTheme
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Small
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
org.pytorch.torchvision.R$dimen: int abc_edit_text_inset_top_material
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine parse(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
androidx.legacy.coreui.R$attr: int alpha
okhttp3.internal.http1.Http1Codec: okio.Source newUnknownLengthSource()
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.camera.core.SessionConfig$Builder: void addSurface(androidx.camera.core.DeferrableSurface)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_titleTextStyle
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
okhttp3.Response: okhttp3.CacheControl cacheControl()
androidx.customview.R$id: int text2
androidx.slidingpanelayout.R
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState FOCUSED
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State RELEASING
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,boolean)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
okio.ByteString: okio.ByteString substring(int)
org.pytorch.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.camera.core.impl.utils.futures.Futures: java.util.concurrent.ScheduledFuture immediateFailedScheduledFuture(java.lang.Throwable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_enterFadeDuration
okio.ByteString: int lastIndexOf(byte[],int)
androidx.fragment.R$dimen: int notification_main_column_padding_top
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSplitStyle
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment[] values()
androidx.drawerlayout.R$id: int action_container
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColor(int)
com.squareup.picasso.Cache: com.squareup.picasso.Cache NONE
org.pytorch.torchvision.R$color: int abc_input_method_navigation_guard
androidx.appcompat.view.menu.MenuPresenter: void updateMenuView(boolean)
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState LOCKED_FOCUSED
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
org.pytorch.R$styleable: int AppCompatTheme_panelMenuListWidth
org.pytorch.torchvision.R$attr: int paddingStart
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToQueueItem(java.lang.Object,long)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int)
io.github.prabhuomkar.pytorchandroid.R$id: int default_activity_button
androidx.camera.core.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
androidx.camera.camera2.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.R$styleable: int[] FontFamilyFont
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.camera.core.UseCaseConfig$Builder: java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.appcompat.R$color: int abc_hint_foreground_material_light
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowShaftLength()
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: ItemDetailsLookup$ItemDetails()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.Http2Connection getConnection()
androidx.appcompat.widget.TintTypedArray: int getChangingConfigurations()
okhttp3.internal.Util: int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.ListMenuPresenter: void saveHierarchyState(android.os.Bundle)
org.pytorch.R$drawable: int abc_cab_background_internal_bg
androidx.legacy.coreui.R$attr: int fontVariationSettings
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getConversationTitle()
org.pytorch.R$attr: int spinnerStyle
androidx.constraintlayout.widget.ConstraintSet: void addToHorizontalChain(int,int,int)
androidx.core.view.ScrollingView: int computeVerticalScrollExtent()
okhttp3.Address: java.net.ProxySelector proxySelector()
org.pytorch.R$attr: int subtitleTextAppearance
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
okio.ByteString: okio.ByteString sha512()
androidx.customview.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setAudioRecordSource(int)
okhttp3.internal.cache.DiskLruCache$Editor: void abort()
androidx.recyclerview.selection.StableIdKeyProvider
android.support.v4.app.INotificationSideChannel: void cancel(java.lang.String,int,java.lang.String)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderCerts
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget(int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: java.util.List getStartWidgets(int)
android.support.v4.media.session.PlaybackStateCompat$State
androidx.appcompat.app.ActionBar: void setDisplayOptions(int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotationY
org.pytorch.R$attr: int layout_insetEdge
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence)
okhttp3.FormBody: void writeTo(okio.BufferedSink)
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(java.nio.LongBuffer,long[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
okio.Buffer: okio.ByteString hmacSha1(okio.ByteString)
androidx.collection.LongSparseArray: void removeAt(int)
com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(int)
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.R$id: int action_container
okhttp3.internal.connection.RealConnection: okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation)
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_CONNECT
androidx.loader.R$dimen: int notification_small_icon_size_as_large
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontWeight
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator noFade()
androidx.camera.core.CameraDeviceConfig$Builder: java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.core.view.MenuCompat: void setShowAsAction(android.view.MenuItem,int)
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintLayout)
org.pytorch.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.appcompat.R$id: int default_activity_button
androidx.core.view.LayoutInflaterCompat
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_PROCESSING_METHOD
androidx.vectordrawable.animated.R$drawable: int notification_bg_low
androidx.camera.core.UseCaseAttachState: androidx.camera.core.SessionConfig$ValidatingBuilder getActiveAndOnlineBuilder()
androidx.loader.R$styleable: int FontFamilyFont_fontWeight
io.github.prabhuomkar.pytorchandroid.R$id: int fill_vertical
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
androidx.loader.content.Loader$OnLoadCanceledListener: void onLoadCanceled(androidx.loader.content.Loader)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()
org.pytorch.R$dimen: int abc_action_button_min_width_material
androidx.core.math.MathUtils
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State CLOSED
org.pytorch.torchvision.R$attr: int title
androidx.lifecycle.GeneratedAdapter
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: void onCaptioningEnabledChanged(boolean)
androidx.camera.core.VideoCapture: void startRecording(java.io.File,androidx.camera.core.VideoCapture$Metadata,java.util.concurrent.Executor,androidx.camera.core.VideoCapture$OnVideoSavedListener)
androidx.exifinterface.media.ExifInterface: boolean hasThumbnail()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedHeight
androidx.core.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintRight_creator
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setExclusive(boolean)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarTabTextStyle
okio.BufferedSource: long indexOf(okio.ByteString)
androidx.appcompat.R$color: int material_deep_teal_200
androidx.cardview.R$styleable: int CardView_contentPaddingLeft
com.squareup.picasso.Cache: void clear()
org.pytorch.torchvision.R$attr: int actionLayout
androidx.legacy.v4.R$style: int Widget_Support_CoordinatorLayout
androidx.camera.core.R$id: int accessibility_custom_action_6
androidx.coordinatorlayout.R$attr: int font
androidx.appcompat.app.ActionBar$NavigationMode
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onMeasure(int,int)
okio.Buffer: long indexOfElement(okio.ByteString)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_delete_shortcut_label
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
androidx.camera.core.ImageAnalysis: androidx.camera.core.ImageAnalysis$Defaults DEFAULT_CONFIG
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
androidx.core.app.NotificationManagerCompat: int getImportance()
android.support.v4.media.session.MediaSessionCompat$Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
androidx.legacy.v4.R$layout: int notification_template_big_media_custom
androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_YCBCR
androidx.core.content.res.ResourcesCompat: float getFloat(android.content.res.Resources,int)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence)
androidx.appcompat.R$attr: int fontProviderFetchTimeout
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_RATING
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
com.downloader.internal.ComponentHolder: com.downloader.httpclient.HttpClient getHttpClient()
androidx.camera.core.DeviceProperties: int sdkVersion()
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_LEGACY
io.github.prabhuomkar.pytorchandroid.R$attr: int dividerHorizontal
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void extendRangeInto(int[],int[],int)
androidx.appcompat.R$attr: int selectableItemBackgroundBorderless
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PRIMARY_CHROMATICITIES
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu
org.pytorch.torchvision.R$color: int material_grey_300
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getProgress()
androidx.core.widget.AutoScrollHelper: boolean isExclusive()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getPlaybackType(java.lang.Object)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.fragment.app.Fragment: Fragment(int)
androidx.core.app.ServiceCompat: int START_STICKY
org.pytorch.R$attr: int drawableSize
androidx.core.app.RemoteActionCompatParcelizer
androidx.fragment.app.Fragment: void startActivity(android.content.Intent)
org.pytorch.IValue: long toLong()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.camera.core.SessionConfig$Builder: void addCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback)
androidx.core.content.PermissionChecker: int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String)
androidx.recyclerview.selection.OperationMonitor: void removeListener(androidx.recyclerview.selection.OperationMonitor$OnChangeListener)
org.pytorch.torchvision.R$id: int submenuarrow
okhttp3.OkHttpClient: okhttp3.Authenticator authenticator()
org.pytorch.R$string: int abc_activitychooserview_choose_application
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonGravity
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setTargetRotation(int)
org.pytorch.R$id: int tag_transition_group
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: OutputConfigurationCompat(android.util.Size,java.lang.Class)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_capital_on
org.pytorch.torchvision.R$color: int abc_search_url_text
androidx.recyclerview.widget.LinearLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)
androidx.camera.core.CameraX: void unbindAll()
com.downloader.core.Core
androidx.camera.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
io.github.prabhuomkar.pytorchandroid.R$id: int textSpacerNoButtons
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalBiasPercent(float)
org.pytorch.torchvision.R$style: int Widget_AppCompat_CompoundButton_CheckBox
org.pytorch.R$drawable: int abc_btn_radio_material
androidx.loader.R$dimen: int notification_main_column_padding_top
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable,int)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
org.pytorch.torchvision.R$dimen: int abc_text_size_body_2_material
androidx.media.MediaBrowserProtocol: java.lang.String DATA_SEARCH_QUERY
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_divider
okhttp3.internal.http.RealResponseBody: okio.BufferedSource source()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.core.app.AppOpsManagerCompat: int MODE_ALLOWED
androidx.slidingpanelayout.R$drawable: int notification_template_icon_low_bg
androidx.viewpager.R$layout: int notification_template_part_time
org.pytorch.torchvision.R$id: int search_voice_btn
androidx.legacy.v4.R$attr: int font
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionButton
okhttp3.OkHttpClient: java.util.List protocols()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean handlesInternalConstraints()
androidx.camera.camera2.R$styleable: int GradientColor_android_type
org.pytorch.R$dimen: int abc_control_corner_material
okhttp3.internal.platform.ConscryptPlatform: okhttp3.internal.platform.Platform buildIfSupported()
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setItemPrefetchEnabled(boolean)
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
okhttp3.CacheControl: boolean onlyIfCached()
org.pytorch.R$styleable: int ActionBar_navigationMode
androidx.camera.core.SessionConfig$SessionError: androidx.camera.core.SessionConfig$SessionError SESSION_ERROR_SURFACE_NEEDS_RESET
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.R$id: int tag_unhandled_key_event_manager
androidx.camera.core.VideoCaptureConfig: int getVideoFrameRate(int)
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
androidx.fragment.R$id: int accessibility_custom_action_6
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
okhttp3.internal.http1.Http1Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.torchvision.R$string: int abc_action_bar_home_description
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_128_CBC_SHA
androidx.appcompat.resources.R$string
androidx.appcompat.R$integer: int cancel_button_image_alpha
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.camera.core.ImageReaderProxy$OnImageAvailableListener
androidx.coordinatorlayout.R$attr: int layout_anchorGravity
androidx.asynclayoutinflater.R$drawable: int notification_action_background
androidx.core.view.WindowInsetsCompat
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.R$dimen: int compat_button_inset_vertical_material
androidx.camera.core.ImageOutputConfig: int getTargetRotation()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SELECT
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_contentPaddingLeft
androidx.legacy.v4.R$color: int notification_icon_bg_color
org.pytorch.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int colorControlHighlight
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.viewpager.R$id
androidx.fragment.app.Fragment: android.view.View requireView()
androidx.camera.camera2.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_10
okio.DeflaterSink: void flush()
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_RIGHT
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState INACTIVE
com.facebook.fbjni.R
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.OrientationHelper: void offsetChildren(int)
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: long getTimestamp()
org.pytorch.torchvision.R$style: int Widget_AppCompat_EditText
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_NOT_AVAILABLE_IN_REGION
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_RatingBar
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean)
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME
androidx.constraintlayout.solver.widgets.ChainHead
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_spinnerStyle
androidx.legacy.coreutils.R$attr: int fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
okhttp3.internal.platform.Platform: boolean isCleartextTrafficPermitted(java.lang.String)
androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.vectordrawable.animated.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle)
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
androidx.recyclerview.widget.LinearSmoothScroller: android.graphics.PointF mTargetVector
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxHeight
androidx.customview.R$dimen: int notification_right_side_padding_top
androidx.legacy.coreutils.R$styleable: int[] GradientColor
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLastMatchConstraintWidget
androidx.camera.core.R$layout: int notification_template_part_chronometer
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.loader.R$id: int italic
androidx.camera.core.ImageCaptureConfig: android.util.Rational getTargetAspectRatioCustom(android.util.Rational)
androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray(float[],int)
androidx.vectordrawable.R$id: int action_container
org.pytorch.R$styleable: int[] LinearLayoutCompat_Layout
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.loader.content.AsyncTaskLoader: void setUpdateThrottle(long)
androidx.loader.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.app.ActionBar$LayoutParams
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.R$dimen: int notification_large_icon_width
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_DropDown
androidx.customview.R$dimen: int notification_top_pad_large_text
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int START
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.core.internal.view.SupportMenuItem: java.lang.CharSequence getTooltipText()
io.github.prabhuomkar.pytorchandroid.R$id: int always
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setPriority(com.downloader.Priority)
android.support.v4.media.session.IMediaSession: android.os.Bundle getExtras()
androidx.collection.SparseArrayCompat: void removeAtRange(int,int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: int getPosition()
androidx.appcompat.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.core.app.NotificationCompat$WearableExtender: int getCustomContentHeight()
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.viewpager.widget.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.camera.core.UseCase: void setImageFormat(int)
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_disabled_material_dark
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[],int)
org.pytorch.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.core.graphics.TypefaceCompatApi28Impl
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withSelectionPredicate(androidx.recyclerview.selection.SelectionTracker$SelectionPredicate)
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_light
androidx.constraintlayout.solver.SolverVariable: void addToRow(androidx.constraintlayout.solver.ArrayRow)
org.pytorch.R$styleable: int AppCompatTheme_buttonStyle
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.asynclayoutinflater.R$id: int line1
org.pytorch.torchvision.R$attr: int tooltipText
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeInserted(int,int)
androidx.constraintlayout.widget.ConstraintSet: void centerVertically(int,int,int,int,int,int,int,float)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowHeight()
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context)
androidx.appcompat.R$attr: int drawableStartCompat
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AnimatedStateListDrawableTransition
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginLeft
androidx.constraintlayout.solver.Cache
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_TRANSFER_FUNCTION
androidx.core.graphics.drawable.IconCompatParcelizer
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] GradientColorItem
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int END
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.appcompat.R$drawable: int abc_tab_indicator_material
androidx.core.widget.ScrollerCompat: boolean computeScrollOffset()
okio.Options: java.lang.Object get(int)
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)
androidx.lifecycle.LiveData: void onActive()
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
org.pytorch.R$styleable: int ActionMenuItemView_android_minWidth
com.facebook.jni.annotations.DoNotStrip
org.pytorch.torchvision.R$styleable: int[] PopupWindow
io.github.prabhuomkar.pytorchandroid.R$attr: int listMenuViewStyle
androidx.appcompat.R$styleable: int StateListDrawable_android_variablePadding
androidx.appcompat.resources.R$id: int accessibility_custom_action_19
androidx.appcompat.resources.R$id: int tag_accessibility_actions
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec COMPATIBLE_TLS
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int LARGE
org.pytorch.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.versionedparcelable.VersionedParcel: void writeLong(long,int)
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getSourceLink()
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_media
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5
androidx.activity.R$styleable: int FontFamilyFont_ttcIndex
androidx.loader.R$id: int text
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultDragDirs(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_WRONG_CERTIFICATES
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.downloader.database.DownloadModel: void setDownloadedBytes(long)
org.pytorch.R$styleable: int AppCompatTheme_windowActionModeOverlay
androidx.appcompat.R$id: int accessibility_custom_action_17
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionBar
androidx.camera.core.CameraCaptureSessionStateCallbacks: android.hardware.camera2.CameraCaptureSession$StateCallback createNoOpCallback()
org.pytorch.torchvision.R$styleable: int MenuView_android_windowAnimationStyle
androidx.appcompat.widget.ListPopupWindow: boolean isDropDownAlwaysVisible()
androidx.collection.LruCache: int hitCount()
com.downloader.database.AppDbHelper: void update(com.downloader.database.DownloadModel)
androidx.camera.core.R$id: int tag_transition_group
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
org.pytorch.R$styleable: int ActionBar_contentInsetLeft
androidx.collection.LongSparseArray: int indexOfValue(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int forever
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putLong(java.lang.Object,java.lang.String,long)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_defaultQueryHint
org.pytorch.R$style: int Theme_AppCompat_Dialog
androidx.viewpager.widget.ViewPager$SavedState: java.lang.String toString()
androidx.media.AudioAttributesCompat
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
androidx.recyclerview.widget.GridLayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
org.pytorch.R$dimen: int hint_alpha_material_light
okhttp3.Address: javax.net.SocketFactory socketFactory()
androidx.camera.core.SessionConfig: java.util.List getSurfaces()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_MAKE
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
okio.BufferedSource
androidx.appcompat.R$attr: int contentInsetEndWithActions
okio.BufferedSink: okio.BufferedSink writeLongLe(long)
androidx.swiperefreshlayout.R$attr: int fontWeight
androidx.viewpager.R$styleable: int GradientColor_android_endColor
androidx.fragment.R$drawable: int notification_bg_low_pressed
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_FROM_FOCUSABLE
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)
androidx.fragment.R$color: int secondary_text_default_material_light
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_YEAR
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence)
androidx.customview.R$styleable: int GradientColor_android_centerColor
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor[] mListAnchors
org.pytorch.torchvision.R$styleable: int FontFamilyFont_fontWeight
androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
okhttp3.internal.http.CallServerInterceptor: CallServerInterceptor(boolean)
androidx.vectordrawable.R$dimen: int notification_action_icon_size
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_CANCEL
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
androidx.legacy.widget.Space: Space(android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
androidx.core.view.ActionProvider: boolean isVisible()
androidx.recyclerview.selection.BandPredicate$NonDraggableArea
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
androidx.recyclerview.R$dimen: int compat_control_corner_material
androidx.constraintlayout.widget.R$attr: int layout_goneMarginBottom
androidx.camera.core.ImageAnalysis$ImageReaderMode
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_30
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int horizontalChainStyle
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(int,int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
androidx.appcompat.resources.R$id: int chronometer
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
androidx.appcompat.R$drawable: int notification_bg_low_normal
androidx.appcompat.R$styleable: int[] MenuItem
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ListPopupWindow
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void fastForward(java.lang.Object)
org.pytorch.torchvision.R$styleable: int RecycleListView_paddingTopNoTitle
com.downloader.Constants: java.lang.String ETAG
android.support.v4.media.session.IMediaSession: void prepareFromMediaId(java.lang.String,android.os.Bundle)
androidx.camera.camera2.R$id: int info
okio.BufferedSink
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
androidx.loader.R$styleable: int GradientColor_android_endX
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: java.lang.Object unwrap()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createObjectVariable(java.lang.Object)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.pytorch.torchvision.R$dimen: int abc_dialog_fixed_width_major
androidx.core.view.GravityCompat: int RELATIVE_HORIZONTAL_GRAVITY_MASK
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_CENTER
io.github.prabhuomkar.pytorchandroid.R$attr: int alphabeticModifiers
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable)
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(java.nio.ByteBuffer,long[])
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
androidx.print.PrintHelper: PrintHelper(android.content.Context)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
androidx.camera.core.AppConfig: java.lang.String getTargetName(java.lang.String)
androidx.camera.core.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
org.pytorch.R$styleable: int MenuItem_android_menuCategory
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontStyle
androidx.core.view.ViewCompat: float getTranslationY(android.view.View)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeRemoved(int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
androidx.camera.core.OptionsBundle: java.util.Set listOptions()
org.pytorch.torchvision.R$attr: int subtitleTextColor
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_switch_track_mtrl_alpha
androidx.camera.core.UseCase: void notifyUpdated()
androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)
org.pytorch.torchvision.R$attr: int dividerVertical
androidx.appcompat.R$id: int accessibility_custom_action_0
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarStyle
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] DrawerArrowToggle
io.github.prabhuomkar.pytorchandroid.R$id: int scrollView
androidx.appcompat.R$styleable: int GradientColor_android_centerColor
org.pytorch.R$dimen: int abc_button_inset_horizontal_material
androidx.appcompat.R$id: int accessibility_custom_action_10
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
androidx.appcompat.view.menu.MenuView$ItemView: void setCheckable(boolean)
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.drawerlayout.widget.DrawerLayout: void onLayout(boolean,int,int,int,int)
org.pytorch.torchvision.R$layout: int notification_action_tombstone
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction openTransaction()
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getDisabledMessage()
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getDimensionBehaviour(int)
androidx.camera.camera2.R$attr: int fontWeight
org.pytorch.torchvision.R$attr: int tickMark
androidx.camera.camera2.impl.CameraEventCallbacks: androidx.camera.core.MultiValueSet clone()
org.pytorch.torchvision.R$style: int AlertDialog_AppCompat
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.camera.core.R$attr: int fontVariationSettings
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
androidx.appcompat.widget.SwitchCompat: void setThumbResource(int)
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.customview.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)
androidx.recyclerview.selection.R
android.support.v4.os.IResultReceiver: void send(int,android.os.Bundle)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_RC4_128_SHA
androidx.recyclerview.selection.SelectionTracker: void endRange()
androidx.vectordrawable.animated.R$attr: int ttcIndex
org.pytorch.R$styleable: int ColorStateListItem_alpha
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_navigationContentDescription
org.pytorch.torchvision.R$attr: int dropdownListPreferredItemHeight
okio.BufferedSink: okio.BufferedSink write(okio.ByteString)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.view.ViewCompat: float getScaleX(android.view.View)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$id: int progress_circular
com.squareup.picasso.RequestHandler$Result: okio.Source getSource()
androidx.appcompat.R$styleable: int SearchView_goIcon
androidx.fragment.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
org.pytorch.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.core.view.ViewCompat: int SCROLL_AXIS_VERTICAL
org.pytorch.Module: org.pytorch.IValue runMethod(java.lang.String,org.pytorch.IValue[])
androidx.recyclerview.selection.SelectionTracker: void clearProvisionalSelection()
androidx.appcompat.app.ActionBar$Tab: int getPosition()
com.downloader.BuildConfig: BuildConfig()
androidx.appcompat.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.recyclerview.R$styleable: int GradientColor_android_tileMode
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
org.pytorch.torchvision.R$id: int none
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
okhttp3.internal.platform.Platform: int WARN
androidx.appcompat.R$drawable: int abc_action_bar_item_background_material
androidx.appcompat.R$attr: int drawableRightCompat
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getMessages()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float)
org.pytorch.DType: org.pytorch.DType[] values()
androidx.camera.core.UseCaseEventConfig$Builder
androidx.vectordrawable.animated.R$drawable: int notification_bg
androidx.recyclerview.widget.GridLayoutManager: void setStackFromEnd(boolean)
androidx.drawerlayout.widget.DrawerLayout: int STATE_DRAGGING
io.github.prabhuomkar.pytorchandroid.R$id: int CTRL
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
androidx.recyclerview.widget.RecyclerView$Recycler
okhttp3.Cache: int writeAbortCount()
okhttp3.internal.http1.Http1Codec: okhttp3.Headers readHeaders()
androidx.media.R$string: int status_bar_notification_info_overflow
com.downloader.internal.stream.FileDownloadRandomAccessFile: void setLength(long)
com.squareup.picasso.PicassoProvider
androidx.camera.core.PreviewConfig: android.util.Size getDefaultResolution()
androidx.appcompat.view.ActionMode: boolean isTitleOptional()
androidx.coordinatorlayout.widget.ViewGroupUtils
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarStyle
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.animated.R$dimen: int notification_top_pad
androidx.lifecycle.MediatorLiveData
androidx.camera.core.DeferrableSurfaces
androidx.core.util.Pair: int hashCode()
androidx.recyclerview.widget.GridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
androidx.appcompat.R$attr: int collapseContentDescription
okhttp3.EventListener: void responseHeadersEnd(okhttp3.Call,okhttp3.Response)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.recyclerview.widget.SortedList: void addAll(java.util.Collection)
androidx.camera.core.ImageOutputConfig: android.util.Size getTargetResolution()
androidx.appcompat.app.ActionBar: int DISPLAY_USE_LOGO
androidx.swiperefreshlayout.R$dimen: int compat_button_inset_vertical_material
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean isSpanIndexCacheEnabled()
androidx.core.view.InputDeviceCompat: int SOURCE_GAMEPAD
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.cardview.R$dimen: int cardview_compat_inset_shadow
androidx.media.R$id: int media_actions
io.github.prabhuomkar.pytorchandroid.R$id: int list_task_item_image
androidx.camera.core.VideoCaptureConfig: java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)
androidx.recyclerview.widget.DividerItemDecoration: void setOrientation(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int radioButtonStyle
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
androidx.swiperefreshlayout.R$color: int secondary_text_default_material_light
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Info
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager,int)
androidx.core.util.AtomicFile: java.io.FileOutputStream startWrite()
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonPanelSideLayout
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerX
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderCerts
androidx.customview.widget.FocusStrategy$BoundsAdapter: void obtainBounds(java.lang.Object,android.graphics.Rect)
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize PREVIEW
androidx.camera.core.UseCase$State: androidx.camera.core.UseCase$State[] values()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEqualDimension(float,float,float,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int,androidx.constraintlayout.solver.SolverVariable,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecorated(android.view.View,int,int,int,int)
androidx.customview.R$id: int action_divider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA
androidx.fragment.app.FragmentTransaction: int TRANSIT_NONE
androidx.core.text.TextUtilsCompat: int getLayoutDirectionFromLocale(java.util.Locale)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_list_item_padding_horizontal_material
org.pytorch.torchvision.R$string: int abc_menu_sym_shortcut_label
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.vectordrawable.animated.R$id: int action_image
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_NOT_DEFINED
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarLength(float)
androidx.versionedparcelable.VersionedParcel: double readDouble(double,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
org.pytorch.R$style: int Base_Widget_AppCompat_Toolbar
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AwbState getAwbState()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_textfield_default_mtrl_alpha
org.pytorch.torchvision.R$drawable: int abc_scrubber_track_mtrl_alpha
org.pytorch.torchvision.R$layout: int support_simple_spinner_dropdown_item
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constrainedHeight
androidx.core.view.ViewCompat: int getMeasuredWidthAndState(android.view.View)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_MEDIA_ID
okhttp3.Response: java.lang.String header(java.lang.String,java.lang.String)
androidx.appcompat.R$id: int accessibility_custom_action_30
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
androidx.camera.core.impl.utils.Optional: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetStart
io.github.prabhuomkar.pytorchandroid.R$id: int search_mag_icon
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo()
androidx.appcompat.R$attr: int actionModeBackground
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE_REF
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endY
androidx.constraintlayout.solver.LinearSystem
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
androidx.appcompat.R$styleable: int[] AlertDialog
okhttp3.internal.cache.CacheStrategy: okhttp3.Response cacheResponse
androidx.camera.core.CameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$FlashState getFlashState()
org.pytorch.R$styleable: int SwitchCompat_switchPadding
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
com.squareup.picasso.RequestHandler$Result: RequestHandler$Result(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
androidx.loader.R$dimen: int notification_large_icon_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: boolean isHierarchical()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_alert_dialog_button_bar_material
androidx.drawerlayout.R$id: int text
androidx.appcompat.R$styleable: int ActionBar_contentInsetStartWithNavigation
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat
com.downloader.PRDownloaderConfig$Builder: PRDownloaderConfig$Builder()
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.appcompat.resources.R$id: int tag_transition_group
okhttp3.internal.http2.StreamResetException: StreamResetException(okhttp3.internal.http2.ErrorCode)
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Info
androidx.vectordrawable.R$dimen: int notification_top_pad
androidx.recyclerview.widget.DiffUtil$DiffResult
androidx.camera.core.R$dimen: int notification_large_icon_height
org.pytorch.R$id
org.pytorch.R$styleable: int TextAppearance_android_shadowRadius
org.pytorch.R$attr: int splitTrack
androidx.appcompat.resources.R$styleable: int GradientColorItem_android_color
androidx.camera.core.R$attr: int ttcIndex
org.pytorch.torchvision.R$styleable: int ViewBackgroundHelper_backgroundTintMode
org.pytorch.R$id: int title_template
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.util.ArrayList getAnchors()
org.pytorch.R$attr: int paddingStart
androidx.camera.core.PreviewConfig: int getSurfaceOccupancyPriority(int)
android.support.v4.media.session.MediaControllerCompat: java.lang.CharSequence getQueueTitle()
androidx.loader.R$id: int tag_unhandled_key_listeners
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
org.pytorch.torchvision.R$styleable: int Toolbar_titleMarginStart
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
androidx.activity.R$styleable: int FontFamily_fontProviderFetchStrategy
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRepeatMode(int)
androidx.legacy.coreutils.R$dimen: int notification_small_icon_size_as_large
org.pytorch.torchvision.R$color: int material_blue_grey_800
androidx.swiperefreshlayout.R$drawable: int notification_template_icon_low_bg
androidx.fragment.R$drawable: int notification_action_background
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int)
io.github.prabhuomkar.pytorchandroid.R$id: int notification_main_column_container
androidx.media.MediaBrowserServiceCompat: android.os.IBinder onBind(android.content.Intent)
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_NAUTICAL_MILES
org.pytorch.R$id: int multiply
org.pytorch.torchvision.R$dimen: int abc_text_size_display_4_material
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: boolean canSetStateAtPosition(int,boolean)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter)
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_behavior
io.github.prabhuomkar.pytorchandroid.R$color: int secondary_text_default_material_light
androidx.recyclerview.widget.StaggeredGridLayoutManager: int HORIZONTAL
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_COEFFICIENTS
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_texture
androidx.recyclerview.R$styleable: int GradientColorItem_android_color
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setIFrameInterval(int)
androidx.media.session.MediaButtonReceiver
androidx.camera.core.SessionConfig$ErrorListener
org.pytorch.torchvision.R$id: int scrollIndicatorDown
io.github.prabhuomkar.pytorchandroid.R$color: int abc_primary_text_disable_only_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRootX()
androidx.cardview.widget.CardView: int getContentPaddingTop()
okio.Okio: okio.Source source(java.io.File)
androidx.camera.core.DeviceProperties: androidx.camera.core.DeviceProperties create()
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.cardview.R$styleable: int[] CardView
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.torchvision.R$dimen: int abc_text_size_medium_material
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat_Light
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.activity.R$id: int right_icon
androidx.vectordrawable.animated.R$id: int async
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_radio_off_mtrl
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.camera.core.ImmediateSurface: ImmediateSurface(android.view.Surface)
androidx.appcompat.widget.SearchView$OnQueryTextListener
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.fragment.app.FragmentTransitionImpl: void removeTarget(java.lang.Object,android.view.View)
androidx.camera.camera2.impl.Camera2CameraControl: void cancelAfAeTrigger(boolean,boolean)
com.downloader.BuildConfig
androidx.slidingpanelayout.R$id: int forever
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context)
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_TABS
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: RecyclerView$SimpleOnItemTouchListener()
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] getMetrics()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addNode(java.lang.Object)
androidx.appcompat.R$color: int bright_foreground_material_dark
androidx.vectordrawable.R$color: int notification_action_color_filter
androidx.drawerlayout.R$id: int tag_unhandled_key_listeners
org.pytorch.torchvision.R$layout: int notification_template_part_time
androidx.appcompat.view.menu.MenuBuilder: void clear()
androidx.collection.CircularArray: void clear()
androidx.appcompat.R$styleable: int[] ActivityChooserView
androidx.print.PrintHelper: void setOrientation(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
org.pytorch.R$dimen: int tooltip_corner_radius
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
androidx.recyclerview.widget.DividerItemDecoration: DividerItemDecoration(android.content.Context,int)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder from(android.content.Context)
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.torchvision.R$color: int bright_foreground_material_dark
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
androidx.viewpager.R$styleable: int FontFamilyFont_fontStyle
io.github.prabhuomkar.pytorchandroid.R$id: int showCustom
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Spinner_Underlined
androidx.camera.core.ExtendableUseCaseConfigFactory: void installDefaultProvider(java.lang.Class,androidx.camera.core.ConfigProvider)
org.pytorch.R$attr: int listPreferredItemHeightSmall
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.pytorch.R$drawable: int notification_template_icon_low_bg
androidx.core.view.PointerIconCompat: int TYPE_VERTICAL_TEXT
androidx.core.view.MotionEventCompat: int AXIS_SIZE
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SPATIAL_FREQUENCY_RESPONSE
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio)
org.pytorch.torchvision.R$attr: int actionBarTabTextStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_scaleX
androidx.appcompat.R$id: int search_mag_icon
androidx.camera.core.CaptureProcessor
androidx.recyclerview.widget.TileList$Tile: TileList$Tile(java.lang.Class,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
org.pytorch.R$drawable: int abc_list_selector_holo_light
androidx.appcompat.widget.ToolbarWidgetWrapper: void restoreHierarchyState(android.util.SparseArray)
androidx.appcompat.R$id: int on
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mOffsetX
androidx.appcompat.R$drawable: int abc_ic_go_search_api_material
com.downloader.request.DownloadRequest: java.lang.String getFileName()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)
androidx.legacy.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_shadowDx
android.support.v4.media.session.PlaybackStateCompat$Builder: PlaybackStateCompat$Builder(android.support.v4.media.session.PlaybackStateCompat)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
org.pytorch.torchvision.R$attr: int actionOverflowMenuStyle
androidx.core.app.JobIntentService: void onDestroy()
android.support.v4.media.session.IMediaSession: void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.customview.R$layout: int notification_template_icon_group
org.pytorch.R$attr: int backgroundStacked
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
androidx.constraintlayout.widget.ConstraintSet: void setRotation(int,float)
androidx.appcompat.app.AppCompatDelegate: boolean applyDayNight()
androidx.core.provider.SelfDestructiveThread$ReplyCallback
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
androidx.customview.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)
androidx.appcompat.view.menu.MenuView$ItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat: AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat()
org.pytorch.R$styleable: int View_paddingEnd
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int gravity
androidx.appcompat.R$attr: int buttonStyleSmall
androidx.core.internal.view.SupportMenu: int USER_MASK
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.core.view.MotionEventCompat: int AXIS_LTRIGGER
androidx.viewpager.R$id: int right_side
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$drawable: int abc_ratingbar_material
androidx.appcompat.app.AppCompatDelegate: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_radio_on_mtrl
androidx.appcompat.resources.R$dimen: int compat_button_padding_horizontal_material
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
org.pytorch.R$integer: int config_tooltipAnimTime
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)
androidx.core.view.MotionEventCompat: int ACTION_HOVER_MOVE
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type SLACK
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type TOP
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int insetEdge
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isVerticalAnchor()
androidx.core.widget.TintableImageSourceView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_REPEAT_MODE
androidx.lifecycle.AndroidViewModel: android.app.Application getApplication()
org.pytorch.torchvision.R$dimen: int hint_pressed_alpha_material_light
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent)
okhttp3.internal.ws.RealWebSocket: boolean send(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar
androidx.loader.R$attr: int alpha
okhttp3.WebSocket
androidx.legacy.coreui.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.R$anim: int abc_slide_in_bottom
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
org.pytorch.torchvision.R$layout: int abc_activity_chooser_view_list_item
androidx.activity.R$id: int notification_background
androidx.constraintlayout.widget.R$attr: int constraintSet
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec build()
androidx.appcompat.widget.DecorToolbar: int getHeight()
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor)
androidx.appcompat.app.ActionBar$Tab
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture successfulAsList(java.util.Collection)
com.squareup.picasso.BuildConfig: java.lang.String VERSION_NAME
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState LOCKED
androidx.vectordrawable.R$drawable: int notification_bg_low_pressed
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemMoved(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.appcompat.R$color: int bright_foreground_disabled_material_dark
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_RATIO_RESOLVED
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5
androidx.core.R$attr: int fontProviderFetchTimeout
androidx.legacy.v4.R$integer: int cancel_button_image_alpha
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarTheme
androidx.activity.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderCerts
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig build()
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener
androidx.appcompat.app.ActionBar$Tab: java.lang.Object getTag()
okio.Timeout: long deadlineNanoTime()
androidx.core.app.ServiceCompat$StopForegroundFlags
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification
com.google.auto.value.extension.memoized.Memoized
androidx.recyclerview.selection.ItemDetailsLookup
androidx.constraintlayout.widget.ConstraintSet: int VERTICAL
com.squareup.picasso.BuildConfig: java.lang.String BUILD_TYPE
com.facebook.soloader.nativeloader.SystemDelegate: boolean loadLibrary(java.lang.String)
org.pytorch.R$style: int Animation_AppCompat_Tooltip
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.drawerlayout.R$styleable: int GradientColorItem_android_color
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.recyclerview.R$id: int accessibility_custom_action_29
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_2
org.pytorch.IValue: java.util.Map toDictLongKey()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)
org.pytorch.R$styleable: int CompoundButton_buttonCompat
androidx.camera.core.R$attr: int fontProviderPackage
org.pytorch.torchvision.R$attr: int buttonBarPositiveButtonStyle
androidx.camera.core.ImageCaptureConfig: boolean containsOption(androidx.camera.core.Config$Option)
androidx.legacy.v4.R$styleable: int GradientColor_android_centerY
org.pytorch.R$dimen: int abc_text_size_body_2_material
org.pytorch.torchvision.R$attr: int imageButtonStyle
androidx.core.app.NotificationCompat$Action$Builder: NotificationCompat$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.activity.OnBackPressedCallback: void handleOnBackPressed()
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: TaskListAdapter(java.util.List)
okhttp3.internal.tls.BasicCertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.vectordrawable.animated.R$id: int tag_transition_group
androidx.camera.core.impl.utils.Optional
androidx.fragment.R$styleable: int ColorStateListItem_android_alpha
androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.R$styleable: int SwitchCompat_android_textOff
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_navigationMode
androidx.constraintlayout.widget.ConstraintSet: void connect(int,int,int,int)
androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.appcompat.R$attr: int arrowShaftLength
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)
org.pytorch.torchvision.R$dimen: int abc_alert_dialog_button_bar_height
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintCircleRadius
androidx.appcompat.R$string: int abc_searchview_description_clear
androidx.appcompat.R$id: int expand_activities_button
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_subtitleTextColor
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.loader.R$id: int right_side
androidx.camera.core.R$id: int tag_accessibility_actions
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int PLAYBACK_TYPE_REMOTE
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
androidx.camera.core.Preview$PreviewOutput: android.graphics.SurfaceTexture getSurfaceTexture()
org.pytorch.torchvision.R$styleable: int[] StateListDrawableItem
androidx.coordinatorlayout.R$id: int action_divider
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
androidx.appcompat.R$layout: int select_dialog_multichoice_material
org.pytorch.R$attr: int fontProviderPackage
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment: io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment newInstance(io.github.prabhuomkar.pytorchandroid.models.Task)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String)
androidx.exifinterface.media.ExifInterface: ExifInterface(java.io.InputStream)
androidx.appcompat.view.menu.ListMenuItemView: boolean showsIcon()
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.coordinatorlayout.R$layout
androidx.print.PrintHelper: int SCALE_MODE_FIT
org.pytorch.R$styleable: int ActionBar_contentInsetEndWithActions
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(int,int)
androidx.recyclerview.widget.LinearSmoothScroller: int getVerticalSnapPreference()
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.appcompat.R$id: int group_divider
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocused()
io.github.prabhuomkar.pytorchandroid.R$id: int src_over
androidx.recyclerview.widget.TileList$Tile: int mStartPosition
org.pytorch.torchvision.R$id: int buttonPanel
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_icon_vertical_padding_material
okhttp3.Challenge: java.nio.charset.Charset charset()
androidx.core.view.WindowInsetsCompat: int getStableInsetBottom()
org.pytorch.R$dimen: int abc_text_size_display_1_material
org.pytorch.torchvision.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
androidx.coordinatorlayout.R$id: int none
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Animation_AppCompat_Tooltip
org.pytorch.torchvision.R$styleable: int AppCompatTheme_panelMenuListTheme
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_WHEN
androidx.camera.core.SessionConfig$Builder: androidx.camera.core.SessionConfig$Builder createFrom(androidx.camera.core.UseCaseConfig)
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
androidx.camera.core.R$drawable: int notification_icon_background
androidx.customview.widget.ExploreByTouchHelper: void onVirtualViewKeyboardFocusChanged(int,boolean)
okhttp3.MultipartBody: okhttp3.MediaType MIXED
org.pytorch.R$styleable: int Spinner_popupTheme
androidx.fragment.app.Fragment: void requestPermissions(java.lang.String[],int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_fontFamily
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMaxTextLength()
androidx.documentfile.provider.DocumentFile
androidx.appcompat.R$styleable: int PopupWindow_android_popupAnimationStyle
androidx.camera.core.CameraCaptureCallbacks
androidx.core.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)
androidx.camera.core.MeteringPoint: float getWeight()
androidx.appcompat.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.OkHttpClient: javax.net.SocketFactory socketFactory()
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT_SPREAD
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.swiperefreshlayout.R$id
androidx.loader.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.R$dimen: int abc_control_inset_material
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int)
androidx.customview.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHorizontal_chainStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
androidx.recyclerview.widget.StaggeredGridLayoutManager: void invalidateSpanAssignments()
okhttp3.internal.http2.PushObserver: boolean onRequest(int,java.util.List)
com.downloader.request.DownloadRequest: void setStatus(com.downloader.Status)
androidx.appcompat.R$attr: int subMenuArrow
androidx.core.view.MotionEventCompat: int ACTION_SCROLL
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.EventListener: void secureConnectEnd(okhttp3.Call,okhttp3.Handshake)
com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)
org.pytorch.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.customview.R$dimen: int notification_big_circle_margin
androidx.appcompat.widget.FitWindowsViewGroup: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
android.support.v4.media.session.IMediaSession: void playFromSearch(java.lang.String,android.os.Bundle)
org.pytorch.R$dimen: int abc_control_inset_material
androidx.lifecycle.AndroidViewModel
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_AUTHENTICATION_EXPIRED
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSnapCompatibleWith(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.core.content.IntentCompat: java.lang.String CATEGORY_LEANBACK_LAUNCHER
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.camera.core.Preview: void setOnPreviewOutputUpdateListener(androidx.camera.core.Preview$OnPreviewOutputUpdateListener)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder hostOnlyDomain(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: android.view.View getViewForPositionAndType(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeAllShortcuts()
androidx.appcompat.R$id: int accessibility_custom_action_2
androidx.camera.core.VideoCaptureConfig: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
org.pytorch.torchvision.R$id: int customPanel
org.pytorch.torchvision.R$styleable: int TextAppearance_android_typeface
androidx.fragment.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_ISO
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
com.facebook.jni.CppSystemErrorException: int getErrorCode()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void clear()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
org.pytorch.R$styleable: int ActionBar_background
org.pytorch.torchvision.R$style: int Widget_AppCompat_PopupWindow
org.pytorch.torchvision.R$attr: int alphabeticModifiers
androidx.camera.core.AppConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.camera.core.Preview$Defaults: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
androidx.recyclerview.widget.BatchingListUpdateCallback
androidx.constraintlayout.solver.widgets.Rectangle: int getCenterY()
androidx.appcompat.widget.PopupMenu: void show()
android.support.v4.media.session.MediaSessionCompat: void setPlaybackToLocal(int)
androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)
androidx.camera.core.OptionsBundle: java.util.TreeMap mOptions
io.github.prabhuomkar.pytorchandroid.R$id: int list_task_item_name
androidx.appcompat.widget.DecorToolbar: void setTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$id: int forever
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
org.pytorch.R$styleable: int PopupWindow_android_popupAnimationStyle
org.pytorch.torchvision.R$attr: int panelBackground
org.pytorch.R$styleable: int AppCompatTheme_windowMinWidthMinor
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_download
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Info
okio.Options: okio.ByteString get(int)
androidx.fragment.app.FragmentTransaction: void commitNow()
org.pytorch.R$styleable: int MenuItem_android_icon
androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)
androidx.core.os.OperationCanceledException
androidx.camera.camera2.R$attr: int fontProviderFetchTimeout
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.viewpager.R$id: int notification_background
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_OPTICAL_BOUNDS
androidx.recyclerview.widget.RecyclerView$OnFlingListener: boolean onFling(int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS
org.pytorch.torchvision.R$attr: int actionModePasteDrawable
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder fragment(java.lang.String)
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.recyclerview.widget.SortedList$Callback
androidx.camera.core.Observable$Observer: void onError(java.lang.Throwable)
org.pytorch.R$styleable: int Toolbar_titleMargin
okhttp3.internal.http2.Http2Stream: void sendResponseHeaders(java.util.List,boolean)
androidx.fragment.R$string
androidx.camera.core.ImageProxy: int getFormat()
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.camera.camera2.R$id: int text
androidx.recyclerview.R$id: int tag_accessibility_actions
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.camera.core.UseCase: androidx.camera.core.CameraControlInternal getCameraControl(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onDetachedFromWindow()
org.pytorch.R$dimen: int abc_edit_text_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$attr: int searchIcon
androidx.collection.LongSparseArray: long keyAt(int)
androidx.appcompat.app.AlertDialog: void setView(android.view.View)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter()
com.facebook.jni.HybridData: void resetNative()
org.pytorch.torchvision.R$drawable: int abc_list_pressed_holo_dark
androidx.core.app.BundleCompat: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.legacy.coreui.R$layout: int notification_template_custom_big
androidx.legacy.coreui.R$id: int time
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
okhttp3.MultipartBody$Builder
androidx.appcompat.R$dimen: int abc_control_padding_material
org.pytorch.torchvision.TensorImageUtils: org.pytorch.Tensor bitmapToFloat32Tensor(android.graphics.Bitmap,int,int,int,int,float[],float[])
androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)
org.pytorch.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleAngle
androidx.appcompat.view.CollapsibleActionView
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getPaperLink()
androidx.coordinatorlayout.R$id: int line1
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.vectordrawable.animated.R$styleable: int[] GradientColor
androidx.appcompat.R$styleable: int AppCompatTheme_checkboxStyle
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: float weight
androidx.media.R$id: int time
org.pytorch.Module: org.pytorch.Module load(java.lang.String)
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData distinctUntilChanged(androidx.lifecycle.LiveData)
androidx.viewpager.R$styleable: int[] FontFamilyFont
org.pytorch.torchvision.R$id: int notification_background
org.pytorch.R$color: int switch_thumb_disabled_material_light
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender(android.app.Notification)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)
androidx.appcompat.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
okhttp3.Cache: java.util.Iterator urls()
androidx.camera.camera2.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
okio.InflaterSource: okio.Timeout timeout()
org.pytorch.torchvision.R$drawable: int abc_list_divider_mtrl_alpha
androidx.recyclerview.selection.FocusDelegate: FocusDelegate()
org.pytorch.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.R$color: int material_blue_grey_900
androidx.exifinterface.R
androidx.vectordrawable.R$dimen: int notification_large_icon_height
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_NONE
com.squareup.picasso.NetworkPolicy: boolean shouldReadFromDiskCache(int)
androidx.slidingpanelayout.R$dimen: int notification_top_pad_large_text
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setMaxResolution(android.util.Size)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
okhttp3.EventListener: void secureConnectStart(okhttp3.Call)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()
androidx.loader.R$id: int notification_main_column_container
androidx.viewpager.R$dimen: int notification_action_icon_size
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int anchorGravity
androidx.legacy.coreui.R
androidx.appcompat.R$attr: int alertDialogCenterButtons
androidx.camera.core.Exif: void rotate(int)
androidx.appcompat.resources.R$drawable: int notification_bg_normal_pressed
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_behavior
androidx.activity.R$drawable: int notification_bg_low_normal
androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarWidgetTheme
org.pytorch.R$drawable: int abc_ic_go_search_api_material
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_KEY
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable getKey()
androidx.recyclerview.widget.RecyclerView$State: void remove(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_ACCESSIBILITY_OVERLAY
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Small
androidx.viewpager.R$id: int icon_group
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.camera.core.CameraFactory: androidx.camera.core.LensFacingCameraIdFilter getLensFacingCameraIdFilter(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.widget.SwitchCompat: void setTrackTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
androidx.legacy.v4.R$layout: int notification_media_cancel_action
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.loader.R$layout: int notification_action
androidx.loader.R$id: int line1
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
androidx.recyclerview.widget.AdapterListUpdateCallback
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean addChildrenToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int compareTo(java.lang.Object)
androidx.appcompat.R$id: int scrollIndicatorUp
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginBottom
android.support.v4.media.session.MediaControllerCompat: java.util.List getQueue()
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_2
androidx.legacy.v4.R$drawable: int notification_action_background
androidx.core.view.PointerIconCompat: int TYPE_CELL
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
android.support.v4.media.MediaBrowserCompat: void subscribe(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.appcompat.resources.R$attr
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)
org.pytorch.R$color: int secondary_text_disabled_material_light
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Time
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
androidx.interpolator.R
androidx.viewpager.widget.PagerTabStrip: void setTextSpacing(int)
androidx.fragment.R$id: int accessibility_custom_action_3
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
okhttp3.internal.connection.RealConnection: boolean noNewStreams
androidx.core.app.NotificationCompat$WearableExtender
androidx.constraintlayout.solver.widgets.ConstraintWidget: int DIRECT
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.lifecycle.ViewModelStoreOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
io.github.prabhuomkar.pytorchandroid.models.Task
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAvoidBackgroundClipping()
androidx.fragment.R$id: int tag_accessibility_actions
org.pytorch.torchvision.R$drawable: int notification_bg_normal_pressed
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
org.pytorch.torchvision.R$dimen: int abc_button_inset_vertical_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_android_orientation
okhttp3.ConnectionPool: ConnectionPool(int,long,java.util.concurrent.TimeUnit)
androidx.camera.camera2.impl.Camera2CameraFactory: java.util.Set getAvailableCameraIds()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDefaults(int)
androidx.appcompat.widget.SearchView: boolean isIconfiedByDefault()
androidx.fragment.R$id: int right_side
org.pytorch.R$attr: int editTextStyle
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter()
androidx.core.provider.SelfDestructiveThread: SelfDestructiveThread(java.lang.String,int,int)
androidx.loader.R$styleable: int GradientColor_android_tileMode
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
io.github.prabhuomkar.pytorchandroid.R$attr: int paddingStart
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
org.pytorch.R$integer: int abc_config_activityDefaultDur
io.github.prabhuomkar.pytorchandroid.R$string: int app_info_copyright
io.github.prabhuomkar.pytorchandroid.R$string: int menu_github
androidx.arch.core.internal.SafeIterableMap
androidx.camera.core.MultiValueSet: java.util.List getAllItems()
okhttp3.internal.connection.RouteSelector$Selection: boolean hasNext()
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ConstraintSet
androidx.viewpager.widget.PagerTabStrip: void setBackgroundResource(int)
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
androidx.vectordrawable.animated.R$drawable: int notification_bg_normal_pressed
androidx.documentfile.provider.DocumentFile: boolean canWrite()
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig()
org.pytorch.torchvision.R$styleable: int Toolbar_collapseIcon
androidx.recyclerview.R$styleable: int GradientColor_android_centerColor
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
androidx.viewpager.R$layout: int notification_template_part_chronometer
androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)
androidx.drawerlayout.R$id: int notification_background
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
androidx.camera.core.ImageReaderProxy: androidx.camera.core.ImageProxy acquireNextImage()
androidx.media.R$id: int blocking
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList getHorizontalGuidelines()
androidx.camera.core.UseCaseEventConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener()
okhttp3.internal.http.HttpCodec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.appcompat.R$styleable: int Toolbar_android_minHeight
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.asynclayoutinflater.R$dimen: int notification_top_pad_large_text
androidx.recyclerview.R$id: int accessibility_custom_action_28
org.pytorch.torchvision.R$styleable: int AppCompatTheme_switchStyle
com.downloader.request.DownloadRequest: long getDownloadedBytes()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)
org.pytorch.R$anim: int abc_slide_in_bottom
org.pytorch.R$color: int abc_hint_foreground_material_dark
okhttp3.internal.http2.Header: okio.ByteString RESPONSE_STATUS
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Body1
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
okhttp3.Call$Factory: okhttp3.Call newCall(okhttp3.Request)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AppCompatTheme
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
androidx.camera.core.VideoCaptureConfig: int getAudioMinBufferSize(int)
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerY
okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.widget.PopupMenu: android.view.Menu getMenu()
androidx.activity.R$id: int chronometer
androidx.annotation.RequiresFeature
androidx.recyclerview.widget.RecyclerView$State: void put(int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
androidx.core.view.OnApplyWindowInsetsListener
android.support.v4.media.session.IMediaSession: void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
androidx.drawerlayout.R$integer: int status_bar_notification_info_maxnum
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginEnd
androidx.appcompat.R$styleable: int SearchView_layout
androidx.loader.content.Loader: Loader(android.content.Context)
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(java.lang.CharSequence)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransition(int)
androidx.appcompat.R$style: int Widget_AppCompat_DropDownItem_Spinner
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.lifecycle.ComputableLiveData
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.cursoradapter.widget.ResourceCursorAdapter: void setDropDownViewResource(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActivityChooserView
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int top
androidx.core.R$id: int accessibility_action_clickable_span
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_2
androidx.appcompat.R$attr: int iconTint
okio.HashingSource: okio.HashingSource sha1(okio.Source)
androidx.camera.core.SurfaceCombination: boolean addSurfaceConfig(androidx.camera.core.SurfaceConfig)
org.pytorch.IValue: boolean isDictLongKey()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
okhttp3.Challenge: java.lang.String toString()
com.downloader.httpclient.DefaultHttpClient: java.util.Map getHeaderFields()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintStart_toStartOf
androidx.camera.core.Config$Option: java.lang.Class getValueClass()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence)
org.pytorch.R$dimen: int abc_progress_bar_height_material
androidx.legacy.coreutils.R$id: int text
androidx.media.R$dimen: int compat_button_padding_horizontal_material
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.vectordrawable.R$dimen: int notification_small_icon_background_padding
androidx.loader.R$attr: int fontStyle
androidx.camera.core.CaptureConfig$Builder: CaptureConfig$Builder()
org.pytorch.BuildConfig: java.lang.String APPLICATION_ID
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
com.squareup.picasso.Downloader: okhttp3.Response load(okhttp3.Request)
androidx.camera.core.PreviewConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter)
org.pytorch.R$styleable: int AppCompatTheme_textColorSearchUrl
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setReadTimeout(int)
org.pytorch.R$dimen: int abc_dialog_min_width_minor
org.pytorch.torchvision.R$id: int scrollIndicatorUp
androidx.appcompat.R$color: int dim_foreground_material_light
androidx.appcompat.app.AppCompatCallback: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Snapshot get(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_50
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
org.pytorch.torchvision.R$color: int secondary_text_disabled_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] LinearConstraintLayout
org.pytorch.R$dimen: int notification_main_column_padding_top
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.core.content.IntentCompat: java.lang.String EXTRA_START_PLAYBACK
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)
org.pytorch.R$attr: int lastBaselineToBottomHeight
androidx.camera.core.R$color: int secondary_text_default_material_light
androidx.media.MediaBrowserServiceCompat: void onSubscribe(java.lang.String,android.os.Bundle)
org.pytorch.R$string
androidx.camera.core.UseCaseConfig: androidx.camera.core.Config$Option OPTION_CAPTURE_CONFIG_UNPACKER
androidx.drawerlayout.widget.DrawerLayout$DrawerListener
androidx.media.R$attr: int fontProviderCerts
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
org.pytorch.R$dimen: int abc_config_prefDialogWidth
io.github.prabhuomkar.pytorchandroid.R$attr: int multiChoiceItemLayout
org.pytorch.IValue
androidx.constraintlayout.widget.R$attr: int layout_constraintBaseline_toBaselineOf
io.github.prabhuomkar.pytorchandroid.R$id: int percent
androidx.camera.core.CameraIdFilterSet
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.downloader.PRDownloader: void pause(int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)
okhttp3.internal.cache.DiskLruCache: void close()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_alpha
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerColor
androidx.core.util.Pair: java.lang.Object first
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
org.pytorch.R$attr: int colorPrimaryDark
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void removeShortcuts(java.util.List)
org.pytorch.R$id: int search_bar
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginStart
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintEnd_toStartOf
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(androidx.drawerlayout.widget.DrawerLayout$LayoutParams)
androidx.legacy.coreui.R$attr: int statusBarBackground
androidx.constraintlayout.widget.ConstraintSet: int VISIBLE
com.downloader.handler.ProgressHandler: ProgressHandler(com.downloader.OnProgressListener)
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_source
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
androidx.appcompat.widget.TintInfo: TintInfo()
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_type
androidx.constraintlayout.solver.Metrics: long minimize
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_vertical_padding
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)
okio.Buffer: long indexOf(byte,long,long)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.cursoradapter.widget.ResourceCursorAdapter
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
okhttp3.internal.http.HttpCodec: void cancel()
androidx.legacy.coreutils.R$attr: int fontProviderFetchTimeout
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void getItemRangeInto(int[])
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerSlide(android.view.View,float)
org.pytorch.torchvision.R$id: int edit_query
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
org.pytorch.R$style: int Animation_AppCompat_Dialog
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionButton
androidx.appcompat.R$attr: int autoSizeStepGranularity
androidx.camera.camera2.impl.PreviewConfigProvider: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.camera.core.R$id: int actions
org.pytorch.torchvision.R$styleable: int PopupWindow_android_popupBackground
okhttp3.internal.http.RetryAndFollowUpInterceptor: RetryAndFollowUpInterceptor(okhttp3.OkHttpClient,boolean)
androidx.cursoradapter.widget.CursorAdapter: int FLAG_REGISTER_CONTENT_OBSERVER
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: SessionConfigurationCompat(int,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$StateCallback)
androidx.viewpager.R$styleable: int ColorStateListItem_android_color
org.pytorch.R$color: int switch_thumb_material_dark
androidx.camera.core.ImageOutputConfig: int INVALID_ROTATION
androidx.core.app.NotificationCompat$Extender
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationY
org.pytorch.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String)
com.squareup.picasso.Picasso: boolean areIndicatorsEnabled()
androidx.swiperefreshlayout.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.resources.R$styleable: <clinit>()
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()
androidx.drawerlayout.R$layout: int notification_action
androidx.appcompat.R$id: int right_icon
okhttp3.Cookie: int hashCode()
androidx.core.app.ShareCompat$IntentReader: android.graphics.drawable.Drawable getCallingActivityIcon()
androidx.legacy.v4.R$string
androidx.legacy.v4.R$id: int info
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder addRequestHandler(com.squareup.picasso.RequestHandler)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.core.R$style: int Widget_Compat_NotificationActionText
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: void setPhysicalCameraId(java.lang.String)
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ListPopupWindow
org.pytorch.R$attr: int dividerVertical
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
org.pytorch.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int[] getColorSchemeColors()
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_slide_out_top
org.pytorch.torchvision.R$styleable: int Toolbar_navigationContentDescription
androidx.core.R$id: int accessibility_custom_action_12
androidx.camera.core.VideoCaptureConfig: android.util.Rational getTargetAspectRatioCustom()
okio.Sink: void write(okio.Buffer,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.constraintlayout.widget.ConstraintSet: void setBarrierType(int,int)
androidx.activity.R$id: int accessibility_custom_action_13
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
androidx.viewpager.R$styleable: int GradientColor_android_startY
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceLeft(int)
androidx.lifecycle.Lifecycle$State
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.R$attr: int arrowHeadLength
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_DIV
org.pytorch.torchvision.R$string: int abc_menu_meta_shortcut_label
androidx.legacy.coreutils.R$attr: int ttcIndex
androidx.appcompat.view.menu.MenuBuilder$Callback
androidx.camera.core.CameraOrientationUtil
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_PERCENT
androidx.asynclayoutinflater.R$id: int notification_background
androidx.customview.R$drawable: int notification_bg_low
androidx.legacy.coreui.R$styleable: int FontFamilyFont_font
org.pytorch.R$style: int Widget_Support_CoordinatorLayout
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
androidx.appcompat.R$styleable: int AppCompatTheme_listDividerAlertDialog
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Medium
org.pytorch.R$id: int parentPanel
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.core.view.TintableBackgroundView
android.support.v4.media.MediaBrowserCompat$MediaItem
org.pytorch.R$anim: int abc_fade_in
org.pytorch.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.camera.core.UseCase: UseCase(androidx.camera.core.UseCaseConfig)
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder stereoReset(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
okhttp3.ResponseBody: long contentLength()
androidx.legacy.coreutils.R$id: int tag_unhandled_key_event_manager
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_visible
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
androidx.viewpager.R$styleable: int FontFamilyFont_font
org.pytorch.torchvision.R$color: int abc_tint_default
androidx.coordinatorlayout.R$layout: int notification_action_tombstone
org.pytorch.torchvision.R$style: int Platform_V25_AppCompat_Light
androidx.asynclayoutinflater.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.viewpager.R$id: int action_text
androidx.core.internal.view.SupportMenu: void setGroupDividerEnabled(boolean)
org.pytorch.IValue: boolean isTuple()
androidx.appcompat.resources.R$layout: int notification_template_icon_group
androidx.swiperefreshlayout.R$style: int Widget_Compat_NotificationActionContainer
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.appcompat.widget.DecorToolbar: boolean canShowOverflowMenu()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_corner_radius_material
org.pytorch.torchvision.R$color: int foreground_material_dark
androidx.appcompat.R$style: int Platform_V25_AppCompat
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat wrap(java.lang.Object)
androidx.appcompat.R$attr: int textLocale
org.pytorch.R$attr: int titleMarginStart
androidx.camera.core.UseCaseAttachState: java.util.Collection getActiveAndOnlineUseCases()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPRESSION
androidx.appcompat.app.AppCompatDelegate: void setLocalNightMode(int)
okio.Buffer: okio.BufferedSink writeShort(int)
okhttp3.OkHttpClient: java.util.List interceptors()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_navigationIcon
androidx.media.R$drawable: int notification_icon_background
org.pytorch.torchvision.R$color: int material_deep_teal_500
androidx.vectordrawable.R$styleable: int GradientColor_android_type
androidx.camera.core.ImageCapture: java.util.Map onSuggestedResolutionUpdated(java.util.Map)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
org.pytorch.R$attr: int thumbTintMode
com.downloader.Priority
androidx.camera.core.R$styleable: int[] FontFamilyFont
androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
androidx.appcompat.R$attr: int thickness
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
okhttp3.EventListener$Factory
okhttp3.internal.http.RealResponseBody
androidx.lifecycle.ComputableLiveData: ComputableLiveData()
androidx.appcompat.R$anim: int abc_tooltip_exit
androidx.legacy.v4.R$id: int end
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureProcessor getCaptureProcessor()
org.pytorch.torchvision.R$string: int abc_menu_ctrl_shortcut_label
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder centerCrop()
android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChanged(int)
androidx.slidingpanelayout.R$dimen: int notification_top_pad
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_CAPTIONING_ENABLED
androidx.customview.R$id: int notification_background
androidx.appcompat.R$styleable: int SwitchCompat_trackTint
org.pytorch.R$styleable: int MenuGroup_android_visible
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_SETTLING
androidx.recyclerview.selection.SelectionTracker: void anchorRange(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream,long,long)
org.pytorch.R$color: int secondary_text_default_material_light
androidx.appcompat.R$attr: int tickMark
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState NONE
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_9
org.pytorch.torchvision.R$style: int Base_V26_Theme_AppCompat_Light
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureProcessor getCaptureProcessor(androidx.camera.core.CaptureProcessor)
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
okio.HashingSource: okio.ByteString hash()
org.pytorch.R$styleable: int TextAppearance_android_textColor
androidx.fragment.R$id: int tag_transition_group
okio.ForwardingSource: void close()
org.pytorch.torchvision.R$attr: int showAsAction
androidx.coordinatorlayout.R$id
androidx.appcompat.app.AlertController$AlertParams
androidx.customview.R$styleable: int GradientColor_android_endY
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ARTIST
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneTopMargin
okhttp3.MultipartBody: void writeTo(okio.BufferedSink)
androidx.recyclerview.selection.DefaultSelectionTracker: void anchorRange(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorAccent
androidx.appcompat.R$id: int accessibility_custom_action_25
androidx.recyclerview.widget.SortedList$BatchedCallback: int compare(java.lang.Object,java.lang.Object)
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_android_color
androidx.core.view.MotionEventCompat: int AXIS_RX
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback: java.util.List onPresetSession()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
org.pytorch.R$dimen: int compat_control_corner_material
io.github.prabhuomkar.pytorchandroid.R$attr: int colorError
androidx.core.app.FrameMetricsAggregator: int DELAY_DURATION
okhttp3.EventListener
androidx.loader.content.Loader: void onAbandon()
androidx.appcompat.app.WindowDecorActionBar: void setLogo(int)
org.pytorch.torchvision.R$drawable: int abc_ic_search_api_material
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$style: int Base_Animation_AppCompat_Dialog
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDxToMakeVisible(android.view.View,int)
org.pytorch.torchvision.R$styleable: int Toolbar_popupTheme
androidx.camera.core.BaseCamera: androidx.camera.core.CameraInfoInternal getCameraInfoInternal()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.core.provider.FontsContractCompat$FontFamilyResult: int STATUS_OK
androidx.vectordrawable.R$styleable: int GradientColor_android_endY
androidx.constraintlayout.widget.Barrier: int END
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
org.pytorch.R$anim: int abc_shrink_fade_out_from_bottom
androidx.recyclerview.selection.SelectionTracker: void onRestoreInstanceState(android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_headline_material
okhttp3.Response: okhttp3.Response$Builder newBuilder()
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
androidx.camera.core.MutableConfig: void insertOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getCallingApplicationLabel()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_YYY
okio.BufferedSink: void flush()
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setPadding(int,int,int,int)
androidx.legacy.v4.R$attr: int ttcIndex
androidx.camera.camera2.R$styleable: <clinit>()
androidx.constraintlayout.widget.Guideline
androidx.appcompat.R$color: int abc_background_cache_hint_selector_material_dark
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_width
androidx.core.view.ViewCompat: void setPaddingRelative(android.view.View,int,int,int,int)
androidx.fragment.app.Fragment: boolean isInLayout()
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper
androidx.appcompat.R$id: int accessibility_custom_action_14
androidx.appcompat.widget.ListPopupWindow: java.lang.Object getSelectedItem()
androidx.legacy.coreui.R$dimen: int notification_right_side_padding_top
org.pytorch.R$attr: int listLayout
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHorizontal_chainStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
okhttp3.ConnectionSpec$Builder
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void instantScrollToPosition(int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls
androidx.constraintlayout.widget.Guideline: void draw(android.graphics.Canvas)
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(int)
androidx.drawerlayout.R$drawable: int notification_template_icon_low_bg
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.appcompat.resources.R$drawable: int notification_tile_bg
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isAutoMeasureEnabled()
androidx.appcompat.view.menu.MenuBuilder
org.pytorch.torchvision.R$id: int image
androidx.activity.R$attr: int fontProviderCerts
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerClosed(android.view.View)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.appcompat.R$styleable: int DrawerArrowToggle_drawableSize
androidx.vectordrawable.animated.R$styleable: int[] ColorStateListItem
org.pytorch.R$dimen: int abc_action_bar_elevation_material
androidx.camera.camera2.impl.compat.CameraManagerCompat: void openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice$StateCallback)
androidx.appcompat.widget.Toolbar: void collapseActionView()
androidx.camera.core.ImageOutputConfig$Builder
androidx.cursoradapter.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.constraintlayout.solver.widgets.ResolutionNode: ResolutionNode()
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)
androidx.recyclerview.R$id: int tag_accessibility_heading
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
okhttp3.HttpUrl$Builder$ParseResult: okhttp3.HttpUrl$Builder$ParseResult[] values()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
androidx.recyclerview.R$id: int async
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.versionedparcelable.VersionedParcel: java.lang.Exception readException(java.lang.Exception,int)
androidx.recyclerview.R$attr: int stackFromEnd
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$id: int direct
io.github.prabhuomkar.pytorchandroid.R$string: int abc_searchview_description_query
androidx.appcompat.R$attr: int logo
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.torchvision.R$styleable: int[] SwitchCompat
androidx.slidingpanelayout.R$attr: int font
okio.Buffer$UnsafeCursor: int start
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_15
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
androidx.camera.core.ImageOutputConfig
androidx.recyclerview.R$id: int text
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorBackgroundFloating
okhttp3.internal.cache.DiskLruCache: long size()
androidx.core.database.DatabaseUtilsCompat
androidx.appcompat.R$string: int abc_action_mode_done
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
androidx.coordinatorlayout.R$attr: int layout_insetEdge
androidx.camera.core.VideoCaptureConfig: android.util.Size getTargetResolution(android.util.Size)
okhttp3.RequestBody: RequestBody()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_fixed_width_minor
org.pytorch.torchvision.R$drawable: int abc_vector_test
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_DialogWindowTitle_AppCompat
androidx.appcompat.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.core.view.inputmethod.EditorInfoCompat
androidx.vectordrawable.animated.R$attr: int fontProviderAuthority
androidx.appcompat.R$styleable: int[] SwitchCompat
com.facebook.soloader.nativeloader.SystemDelegate: SystemDelegate()
androidx.exifinterface.media.ExifInterface: short Y_CB_CR_POSITIONING_CENTERED
androidx.legacy.v4.R$attr: int layout_insetEdge
androidx.legacy.coreui.R$drawable: int notification_bg
androidx.annotation.InspectableProperty: int attributeId()
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView: ModelListAdapter$ModelView(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter,android.view.View)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginLeft
org.pytorch.R$styleable: int AppCompatTheme_tooltipFrameBackground
io.github.prabhuomkar.pytorchandroid.R$string: int abc_capital_off
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.customview.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)
androidx.media.R$color: int notification_icon_bg_color
io.github.prabhuomkar.pytorchandroid.R$attr: int tickMarkTint
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setVerticalMirror(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_FORWARD
android.support.v4.media.MediaDescriptionCompat
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_creator
androidx.exifinterface.media.ExifInterface: java.lang.String LATITUDE_NORTH
androidx.collection.CircularArray: void removeFromStart(int)
org.pytorch.IValue: org.pytorch.Tensor toTensor()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
org.pytorch.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.appcompat.R$id: int action_image
androidx.camera.core.CameraCaptureMetaData$AeState
androidx.camera.core.ImageCapture: void takePicture(java.util.concurrent.Executor,androidx.camera.core.ImageCapture$OnImageCapturedListener)
androidx.exifinterface.media.ExifInterface: int WHITEBALANCE_MANUAL
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_Alert
androidx.recyclerview.widget.GridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.R$attr: int listPreferredItemPaddingEnd
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CUT
android.support.v4.app.INotificationSideChannel: void cancelAll(java.lang.String)
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrievalFailed(int)
androidx.camera.core.VideoCapture$Defaults
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
androidx.core.graphics.ColorUtils: void blendHSL(float[],float[],float,float[])
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_CONNECT_FAILED
org.pytorch.torchvision.R$attr: int spinnerStyle
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_spinBars
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
org.pytorch.R$styleable: int DrawerArrowToggle_arrowShaftLength
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMargins
org.pytorch.R$style: int Base_Widget_AppCompat_ListView
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int USER_CREATOR
androidx.lifecycle.ReportFragment: void onPause()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String getAction()
okio.Buffer: okio.BufferedSink write(okio.ByteString)
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat
androidx.camera.core.SurfaceSizeDefinition
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Display4
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_popup_background_mtrl_mult
androidx.constraintlayout.solver.Metrics: long maxTableSize
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize MAXIMUM
androidx.legacy.v4.R$color: int notification_material_background_media_default_color
org.pytorch.torchvision.R$dimen: int abc_text_size_body_1_material
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Dialog
androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_ICON
org.pytorch.R$attr: int actionBarStyle
androidx.core.util.Supplier: java.lang.Object get()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_PREVIOUS
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action)
androidx.core.R$styleable: int GradientColor_android_startY
androidx.drawerlayout.R$dimen: int compat_button_inset_horizontal_material
androidx.core.view.MenuItemCompat
org.pytorch.R$attr: int layout_keyline
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy NO_STORE
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
androidx.core.graphics.ColorUtils: int HSLToColor(float[])
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginTop
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int center
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardElevation
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivot(int,float,float)
org.pytorch.torchvision.R$attr: int singleChoiceItemLayout
androidx.camera.core.UseCase: androidx.camera.core.UseCaseConfig getUseCaseConfig()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_shadowDy
androidx.appcompat.app.ActionBarDrawerToggle: androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable()
androidx.core.app.NotificationManagerCompat: java.lang.String ACTION_BIND_SIDE_CHANNEL
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarSize
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
androidx.recyclerview.selection.Selection: boolean isEmpty()
androidx.camera.core.VideoCaptureConfig: java.lang.String getTargetName(java.lang.String)
androidx.camera.core.impl.LiveDataObservable: void postValue(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Medium_Inverse
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.util.List fromQueueItemList(java.util.List)
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_UNSPECIFIED
androidx.appcompat.R$color: int bright_foreground_disabled_material_light
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureProcessor getCaptureProcessor(androidx.camera.core.CaptureProcessor)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_sym_shortcut_label
androidx.customview.R$attr: int fontProviderQuery
androidx.media.R$dimen: int notification_large_icon_height
androidx.camera.core.R$styleable: int GradientColor_android_startY
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.camera.camera2.impl.Camera2CameraControl: void cancelFocusAndMetering()
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getNumRows()
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String)
org.pytorch.torchvision.R$styleable: int[] AppCompatTheme
androidx.recyclerview.widget.GridLayoutManager: int getSpanCount()
androidx.legacy.coreui.R$drawable: int notification_bg_low_pressed
org.pytorch.R$layout: int abc_popup_menu_header_item_layout
androidx.camera.core.DeferrableSurface: void notifySurfaceAttached()
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.recyclerview.selection.StorageStrategy: androidx.recyclerview.selection.Selection asSelection(android.os.Bundle)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidth(int)
androidx.appcompat.R$anim: int abc_shrink_fade_out_from_bottom
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg
androidx.appcompat.R$layout: int abc_action_bar_title_item
org.pytorch.R$layout: int abc_activity_chooser_view
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Toolbar
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_iconTintMode
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailTo()
androidx.camera.camera2.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.R$attr: int actionModeWebSearchDrawable
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_READ
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
androidx.legacy.v4.R$dimen: int notification_top_pad
com.squareup.picasso.Request$Builder: Request$Builder(int)
androidx.core.graphics.ColorUtils
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)
androidx.camera.camera2.R$styleable: int GradientColor_android_gradientRadius
androidx.fragment.app.FragmentController: void dispatchResume()
androidx.core.util.Preconditions: void checkState(boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int tickMarkTintMode
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
android.support.v4.media.MediaBrowserCompat$SearchCallback
androidx.appcompat.R$dimen: int abc_button_padding_vertical_material
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintVertical_weight
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.appcompat.R$layout: int abc_list_menu_item_layout
okhttp3.internal.http2.Http2Connection: void setSettings(okhttp3.internal.http2.Settings)
androidx.core.view.ViewCompat: android.graphics.Rect getClipBounds(android.view.View)
androidx.media.R$styleable
io.github.prabhuomkar.pytorchandroid.R$id: int all
org.pytorch.torchvision.R$styleable: int MenuItem_iconTintMode
androidx.camera.core.CaptureConfig$Builder: void clearSurfaces()
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_SHIFT
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
org.pytorch.R$drawable: int abc_ic_menu_share_mtrl_alpha
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Headers)
org.pytorch.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context)
androidx.customview.widget.ViewDragHelper: int STATE_IDLE
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginLeft
org.pytorch.R$dimen: int abc_button_padding_vertical_material
androidx.collection.SimpleArrayMap: SimpleArrayMap()
android.support.v4.media.RatingCompat: int RATING_4_STARS
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
org.pytorch.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.annotation.RestrictTo$Scope
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_IF_ROOM
org.pytorch.torchvision.R$styleable: int MenuItem_android_id
io.github.prabhuomkar.pytorchandroid.R$id: int scrollIndicatorUp
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
androidx.camera.camera2.R$drawable: int notification_bg_normal
android.support.v4.media.MediaMetadataCompat: java.lang.String getString(java.lang.String)
androidx.coordinatorlayout.widget.ViewGroupUtils: void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect)
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintDisplayActionInline()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeBackground
okio.Okio: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Cache getCache()
androidx.appcompat.R$anim: int btn_checkbox_to_checked_icon_null_animation
androidx.appcompat.text.AllCapsTransformationMethod
androidx.recyclerview.selection.DefaultSelectionTracker: void extendRange(int)
androidx.camera.core.ImageCaptureConfig: android.util.Size getTargetResolution(android.util.Size)
org.pytorch.R$styleable: int[] FontFamilyFont
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_21
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg_normal
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
okhttp3.Cookie$Builder: okhttp3.Cookie build()
androidx.savedstate.SavedStateRegistry
org.pytorch.torchvision.R$styleable: int SearchView_commitIcon
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_end
org.pytorch.torchvision.R$style: int AlertDialog_AppCompat_Light
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_default_padding_start_material
org.pytorch.IValue: org.pytorch.IValue dictStringKeyFrom(java.util.Map)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isAccessibilityFocused()
androidx.legacy.coreui.R$drawable: int notify_panel_notification_icon_bg
androidx.collection.SparseArrayCompat: java.lang.String toString()
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig$Builder setReadTimeout(int)
org.pytorch.R$style: int Base_Widget_AppCompat_ListMenuView
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearConstraintLayout_android_orientation
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
org.pytorch.R$style: int Base_V28_Theme_AppCompat_Light
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.R$attr: int dropdownListPreferredItemHeight
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
androidx.customview.R$id
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button_Small
androidx.recyclerview.widget.DividerItemDecoration: void setDrawable(android.graphics.drawable.Drawable)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.activity.OnBackPressedCallback)
androidx.appcompat.view.ActionMode: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.SwitchCompat: boolean getSplitTrack()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection)
androidx.swiperefreshlayout.R$dimen: int notification_small_icon_size_as_large
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromSearch(java.lang.String,android.os.Bundle)
androidx.vectordrawable.animated.R$dimen: int compat_notification_large_icon_max_width
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.versionedparcelable.VersionedParcel: float[] readFloatArray()
org.pytorch.torchvision.R$layout: int abc_action_bar_title_item
org.pytorch.torchvision.R$attr: int color
androidx.drawerlayout.R$id: int tag_unhandled_key_event_manager
org.pytorch.R$styleable: int AppCompatTheme_colorControlActivated
io.github.prabhuomkar.pytorchandroid.R$color: int material_blue_grey_800
androidx.media.R$style: int TextAppearance_Compat_Notification_Line2
org.pytorch.torchvision.R$styleable: int[] AlertDialog
androidx.appcompat.R$attr: int listChoiceBackgroundIndicator
io.github.prabhuomkar.pytorchandroid.ui.fragments.AppInfoFragment: AppInfoFragment()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Spinner
androidx.camera.core.Preview$PreviewSurfaceCallback: com.google.common.util.concurrent.ListenableFuture getSurface(android.util.Size,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
androidx.legacy.coreutils.R$dimen: int compat_button_inset_horizontal_material
okhttp3.internal.Internal: int code(okhttp3.Response$Builder)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Title
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SAMPLES_PER_PIXEL
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.cardview.R$color: int cardview_shadow_start_color
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
com.downloader.OnCancelListener: void onCancel()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)
org.pytorch.torchvision.R$drawable: int abc_list_longpressed_holo
androidx.camera.core.AppConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
androidx.constraintlayout.widget.R$attr: int layout_constraintCircleAngle
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Light
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.media.R$attr: int alpha
com.downloader.httpclient.DefaultHttpClient: int getResponseCode()
androidx.camera.core.R$id: int text2
okhttp3.Address: javax.net.ssl.HostnameVerifier hostnameVerifier()
okhttp3.internal.connection.ConnectionSpecSelector
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void validate()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
androidx.camera.core.Exif: androidx.camera.core.Exif createFromFileString(java.lang.String)
androidx.recyclerview.selection.SelectionTracker
org.pytorch.R$attr: int actionLayout
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY
org.pytorch.torchvision.R$attr: int fontProviderFetchTimeout
org.pytorch.torchvision.R$attr: int navigationIcon
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getIOThreadExecutor()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
androidx.core.R$id: int accessibility_custom_action_19
org.pytorch.torchvision.R$styleable: int MenuGroup_android_menuCategory
io.github.prabhuomkar.pytorchandroid.R$color: int ripple_material_light
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetRotation(int)
androidx.recyclerview.R$dimen: int notification_media_narrow_margin
io.github.prabhuomkar.pytorchandroid.R$attr: int statusBarBackground
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.drawerlayout.R$color: int notification_action_color_filter
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
androidx.appcompat.widget.Toolbar$SavedState
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int getMaxCachedTiles()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
androidx.constraintlayout.solver.widgets.ResolutionDimension: void remove()
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.recyclerview.R$drawable: int notification_tile_bg
androidx.legacy.v4.R$dimen: int notification_action_icon_size
androidx.vectordrawable.animated.R$id: int action_divider
okhttp3.Cache: void delete()
androidx.legacy.coreui.R$attr: int fontProviderQuery
androidx.fragment.app.FragmentController: void dispatchStop()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int orientation
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle getExtras()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V26_Theme_AppCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: int VERTICAL
androidx.core.widget.EdgeEffectCompat: boolean onAbsorb(int)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection build()
androidx.legacy.v4.R$dimen: int notification_main_column_padding_top
androidx.appcompat.app.AppCompatDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
org.pytorch.Tensor: long[] shape()
androidx.asynclayoutinflater.R$id: int tag_unhandled_key_listeners
io.github.prabhuomkar.pytorchandroid.R$integer: int config_tooltipAnimTime
org.pytorch.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
okio.BufferedSink: okio.BufferedSink emit()
androidx.recyclerview.widget.DividerItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
androidx.annotation.DrawableRes
androidx.customview.R$style: int TextAppearance_Compat_Notification_Line2
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintEnd_toStartOf
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback: void onCaptureFailed(androidx.camera.core.CameraCaptureFailure)
androidx.core.view.ActionProvider$SubUiVisibilityListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$dimen: int abc_switch_padding
androidx.core.app.NotificationCompat$WearableExtender: int getCustomSizePreset()
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.annotation.InterpolatorRes
androidx.appcompat.app.WindowDecorActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.appcompat.view.menu.MenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalWeight
androidx.drawerlayout.R$dimen: int notification_top_pad
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
com.downloader.database.NoOpsDbHelper: void updateProgress(int,long,long)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.camera.core.ImageCapture$Metadata: boolean isReversedHorizontal
androidx.viewpager.widget.ViewPager: int getCurrentItem()
androidx.core.app.NotificationManagerCompat: java.lang.String EXTRA_USE_SIDE_CHANNEL
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
androidx.camera.core.CameraX: java.lang.String getCameraWithCameraDeviceConfig(androidx.camera.core.CameraDeviceConfig)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_PACKED
org.pytorch.R$drawable: int abc_ic_ab_back_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_gradientRadius
androidx.camera.core.Exif: int getHeight()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent)
okhttp3.internal.connection.RouteException: java.io.IOException getLastConnectException()
androidx.fragment.app.FragmentController: void noteStateNotSaved()
androidx.camera.core.Preview$UseCaseError: androidx.camera.core.Preview$UseCaseError UNKNOWN_ERROR
androidx.camera.core.PreviewConfig: java.util.Set listOptions()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent)
androidx.appcompat.R$attr: int dividerHorizontal
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_action
okhttp3.WebSocket: void cancel()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ListPopupWindow
androidx.core.net.TrafficStatsCompat: void tagSocket(java.net.Socket)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
androidx.constraintlayout.solver.widgets.Guideline: java.lang.String getType()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.coordinatorlayout.R$dimen: int notification_large_icon_width
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState valueOf(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int VERTICAL
androidx.customview.R$drawable: int notification_action_background
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.view.accessibility.AccessibilityEventCompat: int getAction(android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isValidConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.core.util.AtomicFile: void finishWrite(java.io.FileOutputStream)
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig)
org.pytorch.torchvision.R$styleable: int Spinner_android_entries
androidx.viewpager.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MAJOR
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.activity.ComponentActivity$2
androidx.camera.core.Exif: long getTimestamp()
org.pytorch.R$attr: int backgroundTintMode
androidx.core.view.accessibility.AccessibilityRecordCompat: int getFromIndex()
io.github.prabhuomkar.pytorchandroid.R$attr: int toolbarStyle
android.support.v4.media.session.IMediaControllerCallback: void onShuffleModeChangedRemoved(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_customNavigationLayout
androidx.appcompat.R$styleable: int TextAppearance_android_shadowRadius
androidx.core.view.ViewGroupCompat: void setLayoutMode(android.view.ViewGroup,int)
org.pytorch.R$layout: int abc_alert_dialog_title_material
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
org.pytorch.R$dimen: int disabled_alpha_material_light
androidx.appcompat.widget.ActivityChooserView: boolean showPopup()
androidx.core.R$style: int Widget_Compat_NotificationActionContainer
androidx.camera.core.CameraCaptureFailure$Reason: androidx.camera.core.CameraCaptureFailure$Reason[] values()
org.pytorch.R$attr: int thickness
org.pytorch.R$attr: int firstBaselineToTopHeight
org.pytorch.R$id: int radio
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_END
org.pytorch.torchvision.R$attr: int logo
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
io.github.prabhuomkar.pytorchandroid.models.Task: java.lang.String getName()
androidx.collection.ArraySet: boolean equals(java.lang.Object)
androidx.core.app.ShareCompat$IntentReader: android.content.ComponentName getCallingActivity()
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener
androidx.core.R$id: int accessibility_custom_action_31
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_screen_content_include
okhttp3.Route: java.lang.String toString()
okhttp3.Interceptor$Chain
androidx.appcompat.widget.TintTypedArray: void recycle()
androidx.appcompat.resources.R$id: int forever
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_WIDTH
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dropdownitem_icon_width
androidx.vectordrawable.animated.R$styleable: int[] FontFamilyFont
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_NONE
androidx.cardview.R$color
androidx.slidingpanelayout.R$dimen: int notification_action_icon_size
androidx.fragment.app.ListFragment: void setEmptyText(java.lang.CharSequence)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5
org.pytorch.R$styleable: int ActionBar_progressBarStyle
androidx.appcompat.widget.ActivityChooserView: void onDetachedFromWindow()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_toBottomOf
com.squareup.picasso.Picasso: void cancelRequest(android.widget.RemoteViews,int)
okhttp3.internal.Util: okhttp3.RequestBody EMPTY_REQUEST
org.pytorch.R$styleable: int AppCompatTheme_actionModeBackground
androidx.annotation.FloatRange: double to()
androidx.recyclerview.R$styleable: int FontFamilyFont_android_ttcIndex
okio.Buffer: java.io.OutputStream outputStream()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
androidx.versionedparcelable.VersionedParcel: boolean readField(int)
com.downloader.Priority: com.downloader.Priority[] values()
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet)
androidx.core.widget.ScrollerCompat: int getCurrY()
org.pytorch.torchvision.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.media.AudioAttributesCompat$AttributeUsage
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
androidx.recyclerview.R$id: int accessibility_custom_action_7
org.pytorch.torchvision.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.vectordrawable.animated.R$dimen: int compat_button_padding_vertical_material
androidx.camera.core.CameraCaptureMetaData: CameraCaptureMetaData()
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
androidx.core.view.ViewCompat: void setAccessibilityHeading(android.view.View,boolean)
androidx.activity.R$id: int accessibility_custom_action_18
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener: void onPrepareListView(android.widget.ListView)
androidx.core.view.ViewCompat: int SCROLL_AXIS_HORIZONTAL
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMinHeight(int)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
androidx.cardview.R$styleable: <clinit>()
androidx.appcompat.R$layout: int select_dialog_singlechoice_material
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeInserted(int,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int dividerVertical
androidx.camera.core.FocusMeteringAction
androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.annotation.IntDef: boolean open()
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.camera.core.Preview: java.util.Map onSuggestedResolutionUpdated(java.util.Map)
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_WRAP
androidx.legacy.v4.R$dimen: int subtitle_shadow_offset
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
androidx.recyclerview.widget.SortedList: int INVALID_POSITION
androidx.appcompat.resources.R$id: int accessibility_custom_action_25
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.appcompat.view.menu.MenuPresenter: int getId()
io.github.prabhuomkar.pytorchandroid.R$attr: int displayOptions
androidx.viewpager.widget.ViewPager: void computeScroll()
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
androidx.appcompat.R$color: int abc_search_url_text
androidx.core.R$layout: int notification_action_tombstone
okhttp3.internal.platform.Platform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.fragment.R$id: int accessibility_custom_action_5
androidx.fragment.R$id: int notification_background
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setDefaultResolution(android.util.Size)
android.support.v4.media.MediaBrowserCompat: android.os.Bundle getExtras()
com.facebook.fbjni.BuildConfig: java.lang.String BUILD_TYPE
androidx.core.R$drawable: int notification_bg_low
androidx.core.R$color: int ripple_material_light
android.support.v4.media.RatingCompat: float getStarRating()
org.pytorch.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.camera.core.R$dimen: int notification_main_column_padding_top
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action build()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.loader.R$styleable: int FontFamily_fontProviderQuery
androidx.legacy.v4.R$drawable: int notification_bg_low_normal
io.github.prabhuomkar.pytorchandroid.R$attr: int listItemLayout
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
androidx.appcompat.R$string: int abc_searchview_description_search
androidx.appcompat.app.WindowDecorActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_normal_material_dark
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
androidx.viewpager.R$id: int text2
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadClose(int,java.lang.String)
org.pytorch.R$styleable: int[] FontFamily
androidx.exifinterface.media.ExifInterface: int ORIENTATION_FLIP_HORIZONTAL
androidx.viewpager.widget.ViewPager$PageTransformer: void transformPage(android.view.View,float)
androidx.appcompat.resources.R$id: int action_container
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeBackground
org.pytorch.torchvision.R$dimen: int abc_action_button_min_height_material
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence)
androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)
androidx.appcompat.R$styleable: int MenuItem_android_onClick
org.pytorch.torchvision.R$id: int action_image
androidx.constraintlayout.widget.ConstraintSet: void setScaleY(int,float)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionProviderClass
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
android.support.v4.media.MediaDescriptionCompat: java.lang.String toString()
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.graphics.drawable.IconCompat: byte[] mData
androidx.constraintlayout.widget.R$attr: int layout_constraintCircle
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_verticalDivider
org.pytorch.torchvision.R$attr: int alertDialogButtonGroupStyle
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_14
androidx.legacy.coreutils.R$integer
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
androidx.core.content.res.ResourcesCompat
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Headline
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
org.pytorch.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationStart(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
okio.Buffer: okio.Buffer write(byte[])
androidx.recyclerview.widget.SnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorError
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat)
androidx.appcompat.R$dimen: int abc_dialog_title_divider_material
androidx.viewpager.R$attr
org.pytorch.Tensor
org.pytorch.R$dimen: int compat_notification_large_icon_max_height
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setBot(boolean)
org.pytorch.torchvision.R$drawable: int notification_bg
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper
androidx.appcompat.R$style: int Base_V22_Theme_AppCompat
androidx.core.app.NotificationCompat: int VISIBILITY_PRIVATE
androidx.camera.camera2.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat)
org.pytorch.R$attr: int defaultQueryHint
org.pytorch.torchvision.R$attr: int ratingBarStyle
androidx.customview.R$id: int chronometer
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderCerts
androidx.vectordrawable.animated.R$dimen: int notification_subtext_size
androidx.fragment.app.FragmentTransaction: int commitAllowingStateLoss()
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
okio.ByteString: java.lang.String base64()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_divider_material
androidx.camera.core.R$id: int accessibility_custom_action_15
androidx.fragment.R$id: int accessibility_custom_action_20
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Response)
androidx.appcompat.R$dimen: int highlight_alpha_material_colored
androidx.customview.widget.ViewDragHelper: void flingCapturedView(int,int,int,int)
androidx.exifinterface.media.ExifInterface: int REDUCED_RESOLUTION_IMAGE
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ListView
androidx.camera.core.Preview: void setPreviewSurfaceCallback(androidx.camera.core.Preview$PreviewSurfaceCallback)
okhttp3.internal.http.StatusLine: int HTTP_PERM_REDIRECT
androidx.appcompat.R$styleable: int[] GradientColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintEnd_toStartOf
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_visible
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
androidx.recyclerview.R$attr: int fastScrollVerticalThumbDrawable
androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy[] values()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ART
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int button_border_line
androidx.constraintlayout.solver.widgets.Helper: void removeAllIds()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawY(int)
okhttp3.internal.http.RequestLine: java.lang.String get(okhttp3.Request,java.net.Proxy$Type)
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_TOKEN
androidx.appcompat.app.AppCompatCallback
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginBottom
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
okhttp3.OkHttpClient$Builder
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
androidx.annotation.MainThread
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_fade_out
androidx.activity.R$dimen: int notification_right_icon_size
androidx.recyclerview.R$attr
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
okhttp3.internal.http2.Http2
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleAngle
androidx.recyclerview.widget.DefaultItemAnimator: DefaultItemAnimator()
okhttp3.internal.connection.RealConnection: void cancel()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)
org.pytorch.R$styleable: int SearchView_voiceIcon
androidx.exifinterface.media.ExifInterface: java.lang.String LATITUDE_SOUTH
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
org.pytorch.torchvision.R$id: int search_badge
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_buttonPanelSideLayout
io.github.prabhuomkar.pytorchandroid.R$attr: int viewInflaterClass
androidx.camera.core.MeteringPoint: android.util.Rational getFOVAspectRatio()
androidx.constraintlayout.widget.R$id: int packed
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.fragment.R$id: int info
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
org.pytorch.torchvision.R$styleable: int AppCompatTextView_autoSizeMinTextSize
org.pytorch.torchvision.R$attr: int titleMarginTop
androidx.appcompat.view.ActionMode: java.lang.CharSequence getSubtitle()
androidx.legacy.coreui.R$styleable
androidx.core.app.AlarmManagerCompat
androidx.recyclerview.selection.SelectionPredicates
androidx.constraintlayout.solver.widgets.ResolutionAnchor
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_WHITE_POINT
androidx.camera.core.impl.LiveDataObservable$Result: boolean completedSuccessfully()
androidx.core.widget.TextViewCompat: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewStubCompat_android_id
androidx.camera.core.ImageInfoProcessor
androidx.core.view.PointerIconCompat: int TYPE_COPY
androidx.camera.camera2.R$id: int accessibility_custom_action_28
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()
okio.ByteString: okio.ByteString toAsciiLowercase()
org.pytorch.R$attr: int popupTheme
androidx.appcompat.widget.SwitchCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.R$id: int accessibility_custom_action_22
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Inverse
androidx.core.R$drawable: int notification_tile_bg
androidx.media.AudioAttributesCompat: int getLegacyStreamType()
com.downloader.request.DownloadRequest: long getTotalBytes()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEqualMatchDimensions(float,float,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable)
androidx.legacy.coreui.R$style: int Widget_Compat_NotificationActionContainer
org.pytorch.torchvision.R$attr: int colorAccent
org.pytorch.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$attr: int logoDescription
org.pytorch.R$style: int Widget_AppCompat_Button_Small
org.pytorch.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMarginTop
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withOnContextClickListener(androidx.recyclerview.selection.OnContextClickListener)
androidx.cursoradapter.widget.CursorAdapter: boolean hasStableIds()
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textFontWeight
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context)
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(android.support.v4.media.MediaDescriptionCompat,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()
okio.InflaterSource: InflaterSource(okio.Source,java.util.zip.Inflater)
androidx.appcompat.widget.TintTypedArray: boolean getValue(int,android.util.TypedValue)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Info
org.pytorch.R$styleable: int Toolbar_collapseContentDescription
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.versionedparcelable.ParcelField: java.lang.String defaultValue()
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View)
androidx.appcompat.app.AppCompatDelegate: void setDefaultNightMode(int)
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
org.pytorch.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.core.internal.view.SupportMenuItem: boolean requiresActionButton()
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_MALFORMED_QUERY
androidx.fragment.app.Fragment: void onDestroy()
androidx.cardview.R$attr: int cardUseCompatPadding
androidx.appcompat.R$styleable: int AppCompatTheme_checkedTextViewStyle
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(okio.ByteString)
androidx.loader.content.Loader: boolean onCancelLoad()
androidx.coordinatorlayout.R$id: int notification_background
androidx.camera.camera2.R$id: int title
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_MUSIC
org.pytorch.R$styleable: int Toolbar_collapseIcon
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_textAllCaps
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
androidx.appcompat.R$attr: int iconifiedByDefault
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startX
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_20
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEvent(android.view.View,int)
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_toRightOf
androidx.core.util.PatternsCompat: java.util.regex.Pattern IP_ADDRESS
org.pytorch.torchvision.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_MEDIA_ID
androidx.core.util.Pools$SynchronizedPool
androidx.constraintlayout.widget.Barrier
androidx.fragment.R$styleable: int GradientColor_android_tileMode
androidx.collection.CircularArray: void addLast(java.lang.Object)
androidx.activity.R$id: int tag_unhandled_key_event_manager
okhttp3.internal.http2.ConnectionShutdownException
androidx.loader.content.Loader: void stopLoading()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int)
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.constraintlayout.widget.ConstraintHelper
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
androidx.core.R$id: int tag_accessibility_heading
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_XSMALL
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatImageHelper
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.appcompat.R$id: int buttonPanel
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int)
androidx.arch.core.internal.FastSafeIterableMap
androidx.appcompat.R$id: int split_action_bar
androidx.appcompat.R$dimen: int notification_top_pad_large_text
androidx.appcompat.R$style: int Widget_Compat_NotificationActionContainer
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_endY
androidx.appcompat.content.res.AppCompatResources
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textColorSearchUrl
org.pytorch.R$style: int Theme_AppCompat_NoActionBar
androidx.vectordrawable.R$layout: int notification_template_custom_big
org.pytorch.R$styleable
io.github.prabhuomkar.pytorchandroid.R$color: int abc_search_url_text_pressed
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float)
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderQuery
io.github.prabhuomkar.pytorchandroid.R$interpolator: int fast_out_slow_in
androidx.core.app.NotificationCompat$WearableExtender: int getContentIconGravity()
org.pytorch.R$style: int Base_Theme_AppCompat_Light
org.pytorch.torchvision.R$dimen: int abc_dialog_padding_top_material
androidx.coordinatorlayout.widget.CoordinatorLayout
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button
androidx.core.text.HtmlCompat: int FROM_HTML_OPTION_USE_CSS_COLORS
org.pytorch.torchvision.R$drawable: int tooltip_frame_light
androidx.core.view.ViewCompat$ScrollIndicators
androidx.media.MediaBrowserCompatUtils
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
org.pytorch.torchvision.R$id: int italic
androidx.appcompat.R$style: int Widget_AppCompat_DrawerArrowToggle
androidx.camera.core.UseCaseConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
androidx.legacy.v4.R$string: int status_bar_notification_info_overflow
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginStart
okhttp3.Response: okhttp3.Request request()
androidx.camera.core.R$attr
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_UNKNOWN
io.github.prabhuomkar.pytorchandroid.R$color: int foreground_material_light
org.pytorch.torchvision.R$styleable: int RecycleListView_paddingBottomNoButtons
org.pytorch.R$drawable: int abc_seekbar_tick_mark_material
androidx.recyclerview.widget.SnapHelper: SnapHelper()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
androidx.core.widget.ContentLoadingProgressBar
androidx.appcompat.view.menu.MenuPresenter: android.os.Parcelable onSaveInstanceState()
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int,int)
androidx.camera.core.MeteringPoint: float getNormalizedCropRegionX()
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context)
com.downloader.internal.DownloadRequestQueue: void addRequest(com.downloader.request.DownloadRequest)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
org.pytorch.R$attr: int iconTintMode
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] LinearLayoutCompat_Layout
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.downloader.utils.Utils: com.downloader.httpclient.HttpClient getRedirectedConnectionIfAny(com.downloader.httpclient.HttpClient,com.downloader.request.DownloadRequest)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light
okio.Source: okio.Timeout timeout()
android.support.v4.media.session.PlaybackStateCompat: android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)
androidx.lifecycle.LifecycleEventObserver
com.downloader.Progress: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_UNKNOWN
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean)
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(int)
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays()
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.legacy.v4.R$attr: int fontProviderFetchStrategy
okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
io.github.prabhuomkar.pytorchandroid.R$attr: int logoDescription
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
org.pytorch.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.fragment.R$id: int accessibility_action_clickable_span
androidx.constraintlayout.solver.Cache: Cache()
org.pytorch.R$styleable: int DrawerArrowToggle_color
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Tooltip
okhttp3.ConnectionSpec: boolean supportsTlsExtensions()
org.pytorch.R$styleable: int ViewStubCompat_android_id
androidx.camera.core.ImageAnalysisConfig: java.util.List getSupportedResolutions()
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.fragment.R$styleable: int GradientColorItem_android_color
androidx.vectordrawable.animated.R$drawable: int notification_bg_normal
io.github.prabhuomkar.pytorchandroid.R$id: int icon_group
org.pytorch.R$styleable: int GradientColorItem_android_color
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
androidx.slidingpanelayout.R$drawable: int notification_icon_background
okhttp3.internal.ws.RealWebSocket: okhttp3.Request request()
okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])
okhttp3.Request: java.util.List headers(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void requestLayout()
androidx.recyclerview.widget.GridLayoutManager: void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_UNKNOWN
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
androidx.camera.core.ImageCaptureConfig: java.lang.Integer getBufferFormat()
androidx.core.view.MotionEventCompat: int AXIS_DISTANCE
androidx.legacy.coreutils.R$attr: int fontWeight
androidx.recyclerview.widget.DefaultItemAnimator: boolean isRunning()
androidx.localbroadcastmanager.R
org.pytorch.torchvision.R$styleable: int ActionBar_logo
androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.camera.core.impl.utils.Threads: boolean isMainThread()
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
androidx.appcompat.R$styleable: int Toolbar_popupTheme
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_NONE
androidx.core.graphics.drawable.RoundedBitmapDrawable: void draw(android.graphics.Canvas)
androidx.viewpager.widget.PagerTitleStrip: PagerTitleStrip(android.content.Context)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
androidx.core.R$styleable: int[] ColorStateListItem
io.github.prabhuomkar.pytorchandroid.R$id: int content_main
org.pytorch.R$attr: int ttcIndex
androidx.constraintlayout.solver.SolverVariable: SolverVariable(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
androidx.constraintlayout.widget.ConstraintSet: ConstraintSet()
androidx.appcompat.R$attr: int fontProviderFetchStrategy
org.pytorch.torchvision.R$style: int Widget_AppCompat_ListView
okio.BufferedSource: byte[] readByteArray()
androidx.appcompat.R$styleable: int ActionBar_elevation
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Menu
org.pytorch.torchvision.R$styleable: int FontFamilyFont_android_font
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_fastScrollEnabled
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$color: int primary_dark_material_light
okhttp3.FormBody: java.lang.String encodedValue(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int progressBarStyle
androidx.appcompat.widget.WithHint: java.lang.CharSequence getHint()
okhttp3.Dispatcher: void setMaxRequests(int)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet,int)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownSelectedPosition(int)
org.pytorch.torchvision.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
okhttp3.internal.platform.ConscryptPlatform
androidx.loader.R$dimen: int notification_small_icon_background_padding
okhttp3.internal.http.HttpCodec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
androidx.cursoradapter.widget.CursorAdapter
org.pytorch.torchvision.R$styleable: int Toolbar_subtitleTextAppearance
androidx.appcompat.resources.R$string: int status_bar_notification_info_overflow
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)
androidx.appcompat.view.menu.BaseMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
okhttp3.internal.Util: int decodeHexDigit(char)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_switchTextAppearance
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Title
androidx.vectordrawable.R$styleable: int[] FontFamily
androidx.vectordrawable.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.camera.core.R$id: int accessibility_custom_action_8
org.pytorch.R$attr: int arrowShaftLength
androidx.fragment.R$color: int notification_action_color_filter
androidx.vectordrawable.R$id: int accessibility_custom_action_4
androidx.drawerlayout.R$layout: int notification_action_tombstone
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_NOT_DETECTED
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.annotation.FractionRes
okio.ByteString: int indexOf(byte[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_radio_to_on_mtrl_000
io.github.prabhuomkar.pytorchandroid.R$attr: int panelMenuListTheme
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionBar
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
org.pytorch.torchvision.R$styleable: int TextAppearance_textLocale
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: java.lang.String getHTMLElement()
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener()
androidx.recyclerview.R$styleable: int GradientColor_android_gradientRadius
org.pytorch.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.annotation.LongDef: boolean open()
androidx.recyclerview.widget.GridLayoutManager$LayoutParams
androidx.recyclerview.widget.ListAdapter: java.util.List getCurrentList()
io.github.prabhuomkar.pytorchandroid.R$attr: int listChoiceIndicatorMultipleAnimated
android.support.v4.media.session.MediaSessionCompat$Callback: boolean onMediaButtonEvent(android.content.Intent)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_31
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isPendingInitialRun()
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView: void onMeasure(int,int)
androidx.asynclayoutinflater.R$id: int notification_main_column_container
org.pytorch.IValue: org.pytorch.IValue optionalNull()
okhttp3.internal.connection.StreamAllocation: boolean hasMoreRoutes()
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_WITH_TEXT
okhttp3.MultipartBody$Builder: MultipartBody$Builder()
androidx.appcompat.R$drawable
androidx.recyclerview.selection.EventBridge
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.fragment.app.FragmentManager: boolean isStateSaved()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constrainedWidth
com.downloader.internal.stream.FileDownloadRandomAccessFile: void close()
androidx.appcompat.widget.SearchView$OnSuggestionListener
org.pytorch.R$styleable: int View_theme
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
androidx.core.view.DragStartHelper
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.viewpager.widget.ViewPager: void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.appcompat.widget.DecorContentParent: boolean canShowOverflowMenu()
androidx.appcompat.R$attr: int searchHintIcon
io.github.prabhuomkar.pytorchandroid.R$attr: int preserveIconSpacing
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment VERTICAL_MIDDLE
androidx.asynclayoutinflater.R$dimen: int compat_notification_large_icon_max_height
okhttp3.ConnectionSpec: java.util.List tlsVersions()
okio.ForwardingSink: ForwardingSink(okio.Sink)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
okhttp3.HttpUrl$Builder: HttpUrl$Builder()
org.pytorch.torchvision.R$drawable: int notification_bg_low
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardBackgroundColor
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setSliderFadeColor(int)
androidx.camera.core.CaptureConfig$Builder: void setImplementationOptions(androidx.camera.core.Config)
androidx.camera.core.FlashMode: androidx.camera.core.FlashMode valueOf(java.lang.String)
androidx.appcompat.R$styleable: int SwitchCompat_thumbTextPadding
androidx.core.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.media.R$color: int ripple_material_light
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_DRAGGING
androidx.appcompat.app.WindowDecorActionBar: boolean hasLogo()
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerAfter()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.core.R$attr: int fontProviderAuthority
androidx.loader.R$drawable: int notification_bg_normal_pressed
androidx.activity.R$dimen: int notification_main_column_padding_top
org.pytorch.R$styleable: int AppCompatTheme_activityChooserViewStyle
okhttp3.internal.http2.Http2Stream: okio.Source getSource()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.customview.R$dimen
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int)
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat fromMediaSession(android.content.Context,java.lang.Object)
androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_AUTO_BRACKET
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
androidx.interpolator.view.animation.FastOutSlowInInterpolator
org.pytorch.R$styleable: int[] ActionMenuItemView
org.pytorch.torchvision.R$attr: int alertDialogTheme
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.fragment.R$drawable
androidx.asynclayoutinflater.R$integer: int status_bar_notification_info_maxnum
com.squareup.picasso.Picasso: com.squareup.picasso.Picasso get()
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
androidx.camera.camera2.R$styleable: int[] GradientColor
androidx.appcompat.R$drawable: int abc_scrubber_control_off_mtrl_alpha
org.pytorch.R$dimen: int abc_dialog_fixed_width_minor
androidx.camera.core.VideoCapture$OnVideoSavedListener: void onVideoSaved(java.io.File)
androidx.camera.core.BaseCamera: androidx.camera.core.CameraControlInternal getCameraControlInternal()
okhttp3.Cookie: boolean equals(java.lang.Object)
androidx.appcompat.R$layout: int abc_screen_content_include
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder clearRotation()
com.squareup.picasso.StatsSnapshot: void dump()
androidx.drawerlayout.R$styleable: int FontFamilyFont_ttcIndex
com.squareup.picasso.RequestCreator: void fetch(com.squareup.picasso.Callback)
androidx.exifinterface.media.ExifInterface: void setLatLong(double,double)
androidx.appcompat.R$string: int abc_action_bar_up_description
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
androidx.drawerlayout.R$color: int ripple_material_light
android.support.v4.media.MediaBrowserCompat$MediaItem: java.util.List fromMediaItemList(java.util.List)
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.R$attr: int indeterminateProgressStyle
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRetrieved(android.graphics.Typeface)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CONNECT_ERROR
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.appcompat.R$id: int accessibility_custom_action_1
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
org.pytorch.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState INACTIVE
androidx.camera.core.TargetConfig: java.lang.String getTargetName(java.lang.String)
org.pytorch.R$dimen: int abc_search_view_preferred_height
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Time
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.vectordrawable.R$id: int line1
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
androidx.recyclerview.widget.BatchingListUpdateCallback: void onChanged(int,int,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
androidx.appcompat.app.AppCompatDelegate: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: android.hardware.camera2.CameraCaptureSession$StateCallback getStateCallback()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepare()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_title_material
org.pytorch.IValue: org.pytorch.IValue[] toTuple()
androidx.swiperefreshlayout.R$id: int action_text
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintShowBackgroundOnly()
androidx.camera.core.R$dimen: int notification_small_icon_background_padding
androidx.constraintlayout.widget.ConstraintSet: void setRotationX(int,float)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.view.menu.ShowableListMenu
androidx.camera.camera2.impl.Camera2CaptureRequestBuilder: android.hardware.camera2.CaptureRequest build(androidx.camera.core.CaptureConfig,android.hardware.camera2.CameraDevice,java.util.Map)
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
androidx.appcompat.widget.DecorToolbar: int getDisplayOptions()
androidx.core.widget.PopupMenuCompat: android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object)
androidx.appcompat.widget.DecorToolbar: int getDropdownItemCount()
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.fragment.R$styleable: int GradientColor_android_endColor
androidx.swiperefreshlayout.R$dimen: int notification_big_circle_margin
androidx.legacy.coreutils.R$dimen: int notification_content_margin_start
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.recyclerview.widget.LinearSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
org.pytorch.torchvision.R$style: int Base_V21_Theme_AppCompat
org.pytorch.R$styleable: int AppCompatTheme_selectableItemBackground
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity: void onCreate(android.os.Bundle)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)
androidx.media.VolumeProviderCompat$Callback
org.pytorch.R$color: int abc_btn_colored_text_material
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
org.pytorch.torchvision.R$attr: int statusBarBackground
org.pytorch.R$styleable: int SearchView_defaultQueryHint
org.pytorch.R$styleable: int Toolbar_contentInsetRight
androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout
io.github.prabhuomkar.pytorchandroid.R$attr: int titleTextAppearance
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
okhttp3.internal.http.StatusLine: int HTTP_TEMP_REDIRECT
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetAspectRatioCustom(android.util.Rational)
org.pytorch.torchvision.R$drawable: int abc_ic_voice_search_api_material
androidx.constraintlayout.solver.LinearSystem: void addLowerThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontStyle
androidx.asynclayoutinflater.R$color: int ripple_material_light
androidx.appcompat.widget.DecorContentParent: boolean hasIcon()
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_SONIFICATION
androidx.appcompat.R$id: int content
androidx.camera.core.UseCaseAttachState: java.util.Collection getOnlineUseCases()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
androidx.core.view.ScaleGestureDetectorCompat
org.pytorch.R$drawable: int abc_switch_track_mtrl_alpha
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat)
androidx.core.app.RemoteInput: android.os.Bundle getExtras()
okio.Buffer: okio.BufferedSink write(okio.Source,long)
io.github.prabhuomkar.pytorchandroid.R$id: int parentPanel
androidx.core.view.ViewCompat: int MEASURED_STATE_MASK
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.app.ActivityCompat: void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
androidx.appcompat.R$styleable: int ActionBar_displayOptions
org.pytorch.R$attr: int actionBarPopupTheme
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_RINGTONE
androidx.core.content.res.TypedArrayUtils: boolean getBoolean(android.content.res.TypedArray,int,int,boolean)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
okhttp3.Headers$Builder: okhttp3.Headers build()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: java.lang.String toString()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.camera.camera2.R$id: int accessibility_custom_action_18
org.pytorch.torchvision.R$styleable: int MenuView_android_itemIconDisabledAlpha
androidx.core.R$drawable: int notification_bg_normal
androidx.legacy.v4.R$layout
androidx.fragment.R$dimen: int compat_button_padding_vertical_material
org.pytorch.torchvision.R$attr: int layout_dodgeInsetEdges
okhttp3.internal.connection.RouteDatabase: void failed(okhttp3.Route)
org.pytorch.R$styleable: int MenuItem_android_enabled
androidx.core.app.NotificationCompat: int FLAG_AUTO_CANCEL
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
androidx.coordinatorlayout.R$attr: int fontStyle
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_tileMode
androidx.core.text.TextUtilsCompat: java.lang.String htmlEncode(java.lang.String)
androidx.camera.core.CameraX$ErrorListener: void onError(androidx.camera.core.CameraX$ErrorCode,java.lang.String)
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: void enableSurfaceSharing()
androidx.camera.core.VideoCaptureConfig: int getBitRate()
androidx.appcompat.R$dimen: int notification_content_margin_start
androidx.recyclerview.widget.RecyclerView
org.pytorch.torchvision.R$anim: int abc_fade_in
android.support.v4.media.session.MediaSessionCompat: java.lang.Object getRemoteControlClient()
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType YUV
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.drawerlayout.R$styleable: int GradientColor_android_endX
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnectionSuspended()
android.support.v4.media.session.IMediaControllerCallback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
org.pytorch.R$color: int background_material_dark
okhttp3.CacheControl: int maxAgeSeconds()
androidx.loader.content.CursorLoader: void onStopLoading()
androidx.core.app.NotificationCompat$Style: android.app.Notification build()
androidx.exifinterface.media.ExifInterface: int DATA_HUFFMAN_COMPRESSED
androidx.core.view.ViewCompat$FocusRelativeDirection
androidx.core.widget.ScrollerCompat: int getCurrX()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String)
androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_OTHER
androidx.fragment.app.Fragment: java.lang.CharSequence getText(int)
androidx.core.app.ActivityOptionsCompat: ActivityOptionsCompat()
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_NO
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(android.content.Context)
org.pytorch.torchvision.R$attr: int lineHeight
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)
org.pytorch.R$attr: int textColorAlertDialogListItem
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_searchHintIcon
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.Rectangle getBounds(java.util.ArrayList)
androidx.recyclerview.widget.GridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
org.pytorch.torchvision.R$styleable: int[] ListPopupWindow
org.pytorch.R$styleable: int AppCompatTheme_dividerVertical
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
okhttp3.Response: long sentRequestAtMillis()
androidx.print.PrintHelper: void setColorMode(int)
org.pytorch.R$style: int Widget_AppCompat_Spinner_DropDown
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_Button
io.github.prabhuomkar.pytorchandroid.R$attr: int height
org.pytorch.torchvision.R$styleable: int FontFamilyFont_font
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_shadowRadius
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_TITLE
androidx.appcompat.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textColorSearchUrl
com.downloader.httpclient.DefaultHttpClient: long getContentLength()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_default_height_material
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.media.MediaSessionManager$RemoteUserInfo
org.pytorch.R$styleable: int AppCompatTheme_checkboxStyle
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength
androidx.recyclerview.selection.SelectionTracker: boolean select(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int groups
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
okhttp3.internal.http.HttpCodec: int DISCARD_STREAM_TIMEOUT_MILLIS
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.collection.LongSparseArray: java.lang.Object get(long)
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int)
androidx.core.app.ShareCompat$IntentReader: android.net.Uri getStream(int)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment VERTICAL_MIDDLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SCROLL_BACKWARD
org.pytorch.R$attr: int iconifiedByDefault
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalMatchStyle(int,int,int,float)
androidx.core.util.PatternsCompat: java.util.regex.Pattern EMAIL_ADDRESS
androidx.print.PrintHelper: int ORIENTATION_LANDSCAPE
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_download_progress
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Medium
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder setCameraFactory(androidx.camera.core.CameraFactory)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Tooltip
android.support.v4.media.MediaBrowserCompat$SearchCallback: MediaBrowserCompat$SearchCallback()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.camera.core.impl.utils.Threads: void checkMainThread()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.drawerlayout.R$drawable: int notification_bg
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION
androidx.loader.content.Loader: void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
androidx.camera.core.VideoCaptureConfig: int getAudioRecordSource()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void reset()
io.github.prabhuomkar.pytorchandroid.helpers.FragmentHelper: void switchFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManager,java.lang.Boolean)
androidx.legacy.v4.R$styleable: int GradientColor_android_tileMode
org.pytorch.R$styleable: int SearchView_android_maxWidth
org.pytorch.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.recyclerview.R$id: int text2
androidx.concurrent.futures.AbstractResolvableFuture
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetStartWithNavigation
android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDetachedFromWindow()
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams()
okio.Buffer: long readHexadecimalUnsignedLong()
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_material
androidx.viewpager.R$attr: int fontStyle
androidx.camera.camera2.R$dimen: int notification_main_column_padding_top
androidx.appcompat.R$attr: int colorBackgroundFloating
okhttp3.internal.http2.Http2Stream: okio.Timeout readTimeout()
org.pytorch.R$styleable: int PopupWindowBackgroundState_state_above_anchor
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_ONE
org.pytorch.torchvision.R$drawable: int abc_btn_radio_to_on_mtrl_015
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.appcompat.app.ActionBar: void setHomeButtonEnabled(boolean)
androidx.camera.core.SessionConfig$Builder: void setTemplateType(int)
org.pytorch.torchvision.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void select()
androidx.customview.R$layout: int notification_template_custom_big
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_alpha
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int PLAYBACK_TYPE_LOCAL
androidx.camera.camera2.R$attr: int fontProviderFetchStrategy
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,int)
org.pytorch.R$styleable: int AppCompatTheme_colorButtonNormal
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_percent
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_SearchView
org.pytorch.torchvision.R$attr: int tintMode
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.app.ActionBarDrawerToggle
androidx.legacy.coreutils.R$drawable: int notification_bg
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: java.lang.String SPAN_ID
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION_REF
androidx.core.app.FrameMetricsAggregator: int DRAW_DURATION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_LONG
okhttp3.internal.NamedRunnable: java.lang.String name
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_X_RESOLUTION
androidx.legacy.v4.R$styleable: int GradientColor_android_startX
androidx.core.app.ShareCompat$IntentReader: boolean isShareIntent()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontally(int,int)
org.pytorch.torchvision.R$layout: int notification_template_custom_big
okhttp3.internal.Internal: void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean)
androidx.fragment.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
org.pytorch.R$id: int scrollIndicatorUp
androidx.appcompat.R$color: int ripple_material_light
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
androidx.appcompat.R$dimen: int tooltip_margin
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGHEST
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMargin
okhttp3.internal.Internal: boolean equalsNonHost(okhttp3.Address,okhttp3.Address)
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endY
org.pytorch.torchvision.R$dimen: int disabled_alpha_material_dark
androidx.drawerlayout.widget.DrawerLayout: float getDrawerElevation()
org.pytorch.torchvision.R$attr: int popupWindowStyle
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int CHAIN_CONNECTION
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_PLAYLISTS
androidx.appcompat.R$attr: int actionMenuTextColor
okhttp3.internal.tls.CertificateChainCleaner
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawX()
org.pytorch.torchvision.R$attr: int autoSizeStepGranularity
org.pytorch.torchvision.R$styleable: int ActionBar_customNavigationLayout
com.squareup.picasso.Request: float rotationPivotY
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.DialogFragment: int STYLE_NORMAL
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToQueueItem(long)
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: SlidingPaneLayout$SimplePanelSlideListener()
io.github.prabhuomkar.pytorchandroid.R$attr: int dialogPreferredPadding
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback: java.util.List onDisableSession()
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.camera.core.SessionConfig$Builder: void removeSurface(androidx.camera.core.DeferrableSurface)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
org.pytorch.torchvision.R$color: int abc_color_highlight_material
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(int)
androidx.appcompat.R$styleable: int[] View
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_FALLBACK_SCSV
org.pytorch.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.customview.widget.ViewDragHelper: int getViewDragState()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_editTextColor
org.pytorch.R$attr: int background
org.pytorch.R$id: int tag_unhandled_key_event_manager
org.pytorch.torchvision.R$layout: int abc_activity_chooser_view
androidx.customview.widget.ViewDragHelper: void abort()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet)
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_ASYNC
org.pytorch.R$id: int line3
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarItemBackground
com.downloader.request.DownloadRequest: void deliverStartEvent()
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
androidx.camera.camera2.Camera2Config: Camera2Config(androidx.camera.core.Config)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setTag(java.lang.Object)
androidx.appcompat.R$styleable: int StateListDrawableItem_android_drawable
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.auto.value.AutoOneOf: java.lang.Class value()
org.pytorch.R$attr: int fontStyle
androidx.core.R$id: int right_icon
androidx.recyclerview.R$styleable: int GradientColor_android_centerX
org.pytorch.R$attr: int textAppearanceLargePopupMenu
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_APERTURE_PRIORITY
androidx.core.internal.view.SupportMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.camera.core.UseCase: java.lang.String getName()
androidx.camera.core.PreviewConfig: java.util.concurrent.Executor getBackgroundExecutor()
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
androidx.core.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.graphics.ColorUtils: void LABToXYZ(double,double,double,double[])
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
androidx.recyclerview.selection.Selection: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setMoveDuration(long)
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_android_textOn
org.pytorch.torchvision.R$dimen: int notification_right_side_padding_top
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_activity_content
com.squareup.picasso.Request: int resourceId
com.downloader.Constants: int HTTP_PERMANENT_REDIRECT
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
androidx.media.R$drawable: int notification_action_background
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
androidx.customview.R$id: int title
org.pytorch.R$id: int icon
com.downloader.internal.DownloadRequestQueue
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_statusBarBackground
okio.Buffer: long size()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder
org.pytorch.R$style: int Widget_AppCompat_ProgressBar_Horizontal
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_android_gravity
androidx.appcompat.view.menu.ListMenuPresenter: void restoreHierarchyState(android.os.Bundle)
androidx.customview.R$id: int async
androidx.coordinatorlayout.R$styleable: int[] GradientColor
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.print.PrintHelper$OnPrintFinishCallback
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setException(java.lang.Throwable)
androidx.vectordrawable.animated.R$dimen: int compat_button_inset_horizontal_material
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okio.Buffer: long indexOf(okio.ByteString,long)
androidx.camera.core.UseCaseConfig$Builder: java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig)
io.github.prabhuomkar.pytorchandroid.R$id: int showTitle
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUSED
androidx.camera.core.ImageReaderProxy: int getHeight()
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_itemIconDisabledAlpha
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.activity.R$id: int accessibility_custom_action_3
okhttp3.RequestBody: void writeTo(okio.BufferedSink)
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasurementCacheEnabled(boolean)
androidx.legacy.v4.R$styleable: int GradientColor_android_centerColor
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri)
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertNewPositionToOld(int)
io.github.prabhuomkar.pytorchandroid.R$color: int foreground_material_dark
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$ValueType valueType()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA
androidx.core.R$id: int accessibility_custom_action_7
androidx.core.view.ViewCompat: void setRotationY(android.view.View,float)
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_REMOVE
org.pytorch.R$drawable: int abc_btn_default_mtrl_shape
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH
org.pytorch.R$attr: int actionBarDivider
com.facebook.jni.HybridClassBase
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setProgressRotation(float)
androidx.legacy.v4.R$attr: int layout_keyline
androidx.camera.core.impl.utils.futures.AsyncFunction
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.recyclerview.widget.RecyclerView$State: boolean willRunSimpleAnimations()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
androidx.core.R$drawable: int notification_bg_low_pressed
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo()
androidx.core.R$id: int italic
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelClosed(android.view.View)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Toolbar
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope GROUP_ID
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
org.pytorch.R$layout: int abc_list_menu_item_radio
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.app.Person: androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
androidx.camera.core.VideoCaptureConfig: int getAudioSampleRate()
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintHideIcon()
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int)
org.pytorch.torchvision.R$attr: int actionProviderClass
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.graphics.Canvas)
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView: AutoFitTextureView(android.content.Context,android.util.AttributeSet,int)
androidx.camera.core.CaptureProcessor: void onResolutionUpdate(android.util.Size)
io.github.prabhuomkar.pytorchandroid.R$attr: int theme
androidx.drawerlayout.R$styleable: int FontFamilyFont_font
org.pytorch.torchvision.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CAMARA_OWNER_NAME
androidx.media.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
androidx.coordinatorlayout.R$attr: int fontProviderCerts
androidx.recyclerview.R$id: int accessibility_custom_action_21
androidx.core.R$id: int accessibility_custom_action_26
androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.constraintlayout.solver.widgets.Rectangle: int y
org.pytorch.R$style: int TextAppearance_AppCompat_Menu
android.support.v4.media.session.MediaSessionCompat$Token: int describeContents()
androidx.coordinatorlayout.R$style: int Widget_Support_CoordinatorLayout
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
androidx.camera.core.CameraX$LensFacing
androidx.constraintlayout.widget.ConstraintHelper: int[] mIds
androidx.core.view.ViewCompat: float getRotation(android.view.View)
androidx.legacy.v4.R$dimen: int subtitle_outline_width
com.downloader.request.DownloadRequest: void setDirPath(java.lang.String)
org.pytorch.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
io.github.prabhuomkar.pytorchandroid.R$color: int dim_foreground_disabled_material_dark
okhttp3.internal.connection.RealConnection: long idleAtNanos
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Title
com.squareup.picasso.Request: boolean hasRotationPivot
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getTabAt(int)
androidx.recyclerview.R$styleable: int FontFamilyFont_ttcIndex
androidx.camera.camera2.impl.CameraEventCallback: androidx.camera.core.CaptureConfig onPresetSession()
androidx.appcompat.R$id: int info
androidx.core.view.ViewCompat: float getY(android.view.View)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
org.pytorch.DType: org.pytorch.DType UINT8
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: void onSelectionRestored()
org.pytorch.R$dimen: int notification_big_circle_margin
androidx.recyclerview.widget.ItemTouchUIUtil: void onSelected(android.view.View)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)
org.pytorch.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.legacy.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isWidthWrapContent()
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_visible
androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String,android.os.Bundle)
android.support.v4.media.session.PlaybackStateCompat: int STATE_CONNECTING
org.pytorch.R$string: int abc_activity_chooser_view_see_all
androidx.appcompat.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDx
androidx.vectordrawable.R$id: int info
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo
io.github.prabhuomkar.pytorchandroid.R$id: int bottom
okhttp3.MediaType: java.lang.String subtype()
org.pytorch.R$attr: int alertDialogCenterButtons
androidx.camera.core.VideoCapture: void setTargetRotation(int)
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
org.pytorch.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
okhttp3.Request: java.lang.Object tag()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemHeight
io.github.prabhuomkar.pytorchandroid.R$layout: int fragment_task
org.pytorch.R$attr: int alertDialogTheme
androidx.vectordrawable.animated.R$style
androidx.camera.camera2.R$id: int tag_transition_group
okhttp3.internal.io.FileSystem: long size(java.io.File)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable)
androidx.viewpager.R$attr: int fontProviderCerts
org.pytorch.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.core.app.FrameMetricsAggregator: int INPUT_INDEX
androidx.camera.core.UseCaseConfig: androidx.camera.core.Config$Option OPTION_DEFAULT_CAPTURE_CONFIG
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)
org.pytorch.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
androidx.exifinterface.media.ExifInterface
io.github.prabhuomkar.pytorchandroid.R$string: int abc_action_mode_done
com.downloader.request.DownloadRequest: int getReadTimeout()
org.pytorch.torchvision.R$attr: int titleMarginStart
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerY
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
androidx.core.view.inputmethod.EditorInfoCompat: EditorInfoCompat()
androidx.core.view.PointerIconCompat: int TYPE_ALIAS
androidx.camera.core.DeferrableSurface$SurfaceClosedException: androidx.camera.core.DeferrableSurface getDeferrableSurface()
androidx.appcompat.R$style: int Platform_AppCompat_Light
androidx.appcompat.R$dimen: int abc_text_size_medium_material
androidx.vectordrawable.animated.R$attr: int fontWeight
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$id: int split_action_bar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_DES_CBC_SHA
org.pytorch.torchvision.R$dimen: int abc_text_size_subtitle_material_toolbar
org.pytorch.IValue: boolean isTensor()
org.pytorch.torchvision.R$styleable: int[] PopupWindowBackgroundState
androidx.annotation.Size: long max()
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing)
org.pytorch.R$attr: int arrowHeadLength
io.github.prabhuomkar.pytorchandroid.R$drawable: int notify_panel_notification_icon_bg
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType JPEG
org.pytorch.R$string: int abc_shareactionprovider_share_with
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Button
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_1
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.camera.core.UseCaseAttachState: UseCaseAttachState(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_rotation
androidx.appcompat.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
androidx.exifinterface.media.ExifInterface: int ORIENTATION_FLIP_VERTICAL
com.squareup.picasso.LruCache: int evictionCount()
androidx.constraintlayout.widget.ConstraintSet: void setTransformPivotX(int,float)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_subtext_size
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Caption
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat build()
androidx.coordinatorlayout.R$styleable: int[] FontFamily
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
org.pytorch.R$styleable: int MenuGroup_android_enabled
androidx.viewpager.R$id: int line1
androidx.core.R$id
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_panel_menu_list_width
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardMaxElevation
okio.BufferedSource: byte[] readByteArray(long)
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.media.R$id: int icon
androidx.recyclerview.widget.ItemTouchHelper: int UP
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetResolutionNodes()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
org.pytorch.torchvision.R$attr: int panelMenuListTheme
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Line2
androidx.camera.core.R$styleable: int GradientColor_android_endY
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Spinner_DropDown
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_list_menu_item_layout
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
androidx.appcompat.R$attr: int dividerVertical
androidx.annotation.InspectableProperty$EnumEntry: int value()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void resetSolverVariable(androidx.constraintlayout.solver.Cache)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String DOWNLOAD_PROGRESS_STATE_DONE
org.pytorch.R$styleable: int GradientColor_android_startX
io.github.prabhuomkar.pytorchandroid.R$style: int Base_AlertDialog_AppCompat
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.recyclerview.selection.SelectionTracker: void restoreSelection(androidx.recyclerview.selection.Selection)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_CHARACTER
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: java.lang.String toString()
androidx.core.app.NotificationManagerCompat: void cancel(java.lang.String,int)
okhttp3.Handshake: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$attr: int dividerPadding
androidx.swiperefreshlayout.R$color
io.github.prabhuomkar.pytorchandroid.R$id: int search_plate
androidx.recyclerview.widget.RecyclerView$Recycler: void setViewCacheSize(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMarginStart
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.core.view.ViewCompat$NestedScrollType
androidx.appcompat.R$styleable: int AppCompatTheme_colorAccent
org.pytorch.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
androidx.recyclerview.widget.OrientationHelper: int HORIZONTAL
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ListMenuView
androidx.core.R$id: int accessibility_custom_action_21
androidx.fragment.app.DialogFragment: int STYLE_NO_TITLE
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder expiresAt(long)
androidx.slidingpanelayout.R$dimen: int notification_big_circle_margin
androidx.appcompat.R$layout: int notification_template_custom_big
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BOTTOM
androidx.media.R$dimen: int notification_action_text_size
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasObservers()
androidx.customview.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
okhttp3.CertificatePinner: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: PlaybackStateCompat$CustomAction$Builder(java.lang.String,java.lang.CharSequence,int)
okhttp3.internal.http.HttpHeaders: void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers)
androidx.appcompat.R$attr: int fontStyle
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
androidx.coordinatorlayout.R$id: int notification_main_column_container
org.pytorch.torchvision.R$styleable: int SwitchCompat_showText
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LTR
androidx.viewpager.R
okhttp3.Authenticator: okhttp3.Authenticator NONE
androidx.legacy.coreui.R$dimen: int notification_main_column_padding_top
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setAudioMinBufferSize(int)
androidx.appcompat.R$styleable: int SwitchCompat_trackTintMode
androidx.camera.core.PreviewConfig: boolean containsOption(androidx.camera.core.Config$Option)
androidx.fragment.R$dimen: int notification_top_pad_large_text
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Body2
androidx.core.app.RemoteActionCompat: void setShouldShowIcon(boolean)
io.github.prabhuomkar.pytorchandroid.R$font
androidx.core.text.BidiFormatter
androidx.slidingpanelayout.R$dimen: int notification_small_icon_size_as_large
androidx.legacy.coreui.R$styleable: int ColorStateListItem_alpha
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrolled(int,float,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat)
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
android.support.v4.media.session.MediaControllerCompat$TransportControls: void stop()
androidx.camera.core.impl.utils.futures.FutureChain: java.lang.Object get()
androidx.customview.widget.ExploreByTouchHelper: int HOST_ID
org.pytorch.R$layout: int select_dialog_multichoice_material
androidx.customview.R$color
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME_DIGITIZED
androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()
androidx.appcompat.app.AppCompatDelegate: void onStart()
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.recyclerview.selection.DefaultSelectionTracker: void copySelection(androidx.recyclerview.selection.MutableSelection)
androidx.camera.core.CameraCaptureResults: androidx.camera.core.CameraCaptureResult retrieveCameraCaptureResult(androidx.camera.core.ImageInfo)
androidx.core.R$style: int TextAppearance_Compat_Notification_Line2
org.pytorch.torchvision.R$id: int action_menu_divider
androidx.appcompat.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)
androidx.vectordrawable.animated.R$styleable: <clinit>()
okio.BufferedSource: long indexOf(byte,long)
androidx.appcompat.R$dimen: int compat_control_corner_material
org.pytorch.torchvision.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow addEquality(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig build()
androidx.media.R$styleable: int GradientColor_android_centerY
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_ALWAYS
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] PopupWindowBackgroundState
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderAuthority
androidx.legacy.coreui.R$id: int bottom
androidx.camera.core.CameraDeviceSurfaceManager: boolean checkSupported(java.lang.String,java.util.List)
androidx.media.R$layout: int notification_action_tombstone
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_ISO
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat getDescription()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_mode_bar
io.github.prabhuomkar.pytorchandroid.R$id: int tag_accessibility_heading
androidx.exifinterface.media.ExifInterface: long getGpsDateTime()
androidx.camera.core.ImageOutputConfig: android.util.Size getDefaultResolution(android.util.Size)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Info
org.pytorch.torchvision.R$styleable: int MenuView_subMenuArrow
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.appcompat.widget.LinearLayoutCompat: boolean isMeasureWithLargestChildEnabled()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int logo
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchStrategy
org.pytorch.BuildConfig: int VERSION_CODE
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator stableKey(java.lang.String)
androidx.versionedparcelable.ParcelField: int value()
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_android_minWidth
androidx.constraintlayout.widget.ConstraintHelper: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.core.R$attr: int fontWeight
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FILE_SOURCE
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: MediaBrowserCompat$ConnectionCallback()
androidx.core.view.GestureDetectorCompat
androidx.camera.core.R$id: int accessibility_action_clickable_span
com.downloader.request.DownloadRequest: java.lang.String getUrl()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getVerticalBiasPercent()
org.pytorch.R$style: int ThemeOverlay_AppCompat_Dark
androidx.vectordrawable.R$dimen: int notification_main_column_padding_top
androidx.viewpager.R$drawable: int notification_bg_low_normal
okio.Buffer: okio.BufferedSink writeLong(long)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,java.lang.String)
androidx.legacy.coreui.R$id: int tag_unhandled_key_event_manager
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_DOWN
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setInterpolator(android.view.animation.Interpolator)
androidx.recyclerview.selection.ItemDetailsLookup: ItemDetailsLookup()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintGuide_percent
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)
org.pytorch.torchvision.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.camera.core.SurfaceSizeDefinition: android.util.Size getPreviewSize()
org.pytorch.torchvision.R$attr: int dividerHorizontal
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionBar
androidx.legacy.coreui.R$id: int notification_main_column
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonCompat
android.support.v4.media.session.MediaSessionCompat: void setRatingType(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_PopupWindow
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Subhead
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_tooltip
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_elevation
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback)
androidx.camera.core.SurfaceConfig: androidx.camera.core.SurfaceConfig$ConfigSize getConfigSize()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
okhttp3.Cache: int writeSuccessCount()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_POSITION
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
android.support.v4.media.MediaMetadataCompat$Builder
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawHeight()
androidx.vectordrawable.animated.R$dimen
okio.Buffer: okio.Buffer buffer()
androidx.legacy.coreutils.R$dimen: int notification_right_icon_size
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItem
com.downloader.request.DownloadRequest: void setUrl(java.lang.String)
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderQuery
androidx.core.app.FrameMetricsAggregator: int DRAW_INDEX
androidx.appcompat.R$attr: int titleTextStyle
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Media
com.squareup.picasso.Request: boolean onlyScaleDown
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.R$styleable: int StateListDrawable_android_visible
okhttp3.internal.http.HttpCodec
androidx.appcompat.R$id: int accessibility_custom_action_28
androidx.constraintlayout.solver.widgets.ResolutionNode: void resolve()
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
androidx.recyclerview.widget.LinearLayoutManager: int findLastVisibleItemPosition()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V21_Theme_AppCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
org.pytorch.R$style: int Widget_AppCompat_Light_ActionButton
org.pytorch.R$color
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String)
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_100
okio.Buffer: okio.BufferedSink emitCompleteSegments()
okhttp3.EventListener: void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy)
androidx.customview.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.resources.R$styleable: int FontFamilyFont_ttcIndex
androidx.asynclayoutinflater.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textStyle
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean getClipToPadding()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean getArrowEnabled()
okhttp3.Headers: java.util.List values(java.lang.String)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_fontWeight
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_list_padding_top_no_title
org.pytorch.torchvision.R$drawable: int notification_template_icon_low_bg
androidx.camera.camera2.R$id: int accessibility_custom_action_12
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()
org.pytorch.R$styleable: int AppCompatTheme_actionMenuTextColor
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_THUMBS_UP
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_arrowShaftLength
androidx.asynclayoutinflater.R$id: int italic
androidx.legacy.coreui.R$dimen
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_list_item_height_large_material
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetRotation(int)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd
androidx.appcompat.widget.ResourceManagerInternal
org.pytorch.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean)
androidx.constraintlayout.solver.LinearSystem: void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.appcompat.widget.DecorToolbar: android.content.Context getContext()
androidx.camera.camera2.R$drawable: int notification_icon_background
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void pause(java.lang.Object)
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_LOW
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()
androidx.appcompat.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_cab_background_top_material
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)
org.pytorch.torchvision.R$attr: int windowActionBar
org.pytorch.R$style: int ThemeOverlay_AppCompat
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
androidx.asynclayoutinflater.R$dimen: int notification_media_narrow_margin
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
androidx.media.R$id: int notification_main_column_container
androidx.constraintlayout.widget.ConstraintHelper: void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout)
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
androidx.media.R$id: int actions
androidx.recyclerview.widget.LinearLayoutManager: int INVALID_OFFSET
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogCenterButtons
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.appcompat.view.menu.ListMenuItemView
org.pytorch.R$attr: int logoDescription
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintEnd_toEndOf
androidx.recyclerview.selection.DefaultSelectionTracker: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver getAdapterDataObserver()
org.pytorch.torchvision.R$styleable: int AppCompatTextView_fontVariationSettings
androidx.constraintlayout.widget.ConstraintSet: void load(android.content.Context,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
io.github.prabhuomkar.pytorchandroid.R$color: int highlighted_text_material_dark
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
androidx.camera.core.AppConfig: androidx.camera.core.UseCaseConfigFactory getUseCaseConfigRepository(androidx.camera.core.UseCaseConfigFactory)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CompoundButton_buttonTintMode
androidx.constraintlayout.widget.R$id: int right
androidx.coordinatorlayout.R$styleable: int GradientColor_android_tileMode
okhttp3.Authenticator: okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response)
androidx.coordinatorlayout.R$id: int icon
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_SeekBar
androidx.legacy.coreutils.R$styleable: int GradientColor_android_tileMode
androidx.core.internal.view.SupportMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void removeItemDecorationAt(int)
org.pytorch.R$dimen: int abc_action_bar_icon_vertical_padding_material
androidx.recyclerview.selection.DefaultSelectionTracker: androidx.recyclerview.selection.Selection getSelection()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
io.github.prabhuomkar.pytorchandroid.R$id: int app_info_copyright
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STANDARD_OUTPUT_SENSITIVITY
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback getIControllerCallback()
okhttp3.internal.cache.DiskLruCache$Editor: okio.Sink newSink(int)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String BUTTON_STATE_CANCEL
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
androidx.appcompat.view.menu.MenuView$ItemView: void setEnabled(boolean)
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_bias
androidx.core.R$styleable: int[] GradientColorItem
androidx.media.R$id: int chronometer
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_thumbTintMode
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void setSpanGroupIndexCacheEnabled(boolean)
org.pytorch.R$color: int switch_thumb_disabled_material_dark
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetName(java.lang.String)
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
androidx.fragment.app.FragmentTransitionImpl: boolean canHandle(java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontally(int,int,int,int,int,int,int,float)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_control_background_material
org.pytorch.R$dimen: int tooltip_vertical_padding
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToNext(java.lang.Object)
androidx.versionedparcelable.ParcelUtils: void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream)
org.pytorch.R$attr: int windowActionModeOverlay
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments
org.pytorch.torchvision.R$dimen: int abc_disabled_alpha_material_light
androidx.constraintlayout.widget.R$id: int spread
okhttp3.Callback
androidx.appcompat.app.ActionBar: float getElevation()
androidx.camera.core.MeteringPoint
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.fragment.app.FragmentController
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
androidx.camera.core.Exif: int getWidth()
androidx.core.R$styleable: int FontFamilyFont_fontStyle
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
androidx.core.app.NotificationCompat$MessagingStyle: boolean isGroupConversation()
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_7
androidx.appcompat.resources.R$attr: int fontVariationSettings
com.downloader.core.DownloadExecutor: java.util.concurrent.Future submit(java.lang.Runnable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstCompletelyVisibleItemPositions(int[])
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: DrawerArrowDrawable(android.content.Context)
org.pytorch.torchvision.R$attr: int listLayout
androidx.constraintlayout.solver.Metrics: long maxVariables
org.pytorch.R$styleable: int Toolbar_titleMargins
okhttp3.internal.http2.PushObserver
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setPriority(com.downloader.Priority)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ImageButton
androidx.recyclerview.widget.RecyclerView: boolean isLayoutFrozen()
okio.HashingSink: okio.ByteString hash()
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endColor
androidx.core.app.AppOpsManagerCompat: int noteOp(android.content.Context,java.lang.String,int,java.lang.String)
androidx.legacy.v4.R$attr: int fontProviderCerts
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
io.github.prabhuomkar.pytorchandroid.R$layout: int custom_action_bar
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean getReverseLayout()
org.pytorch.R$id: int tabMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] PopupWindow
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endX
androidx.appcompat.widget.DecorContentParent: void saveToolbarHierarchyState(android.util.SparseArray)
androidx.camera.core.R$attr: int alpha
androidx.camera.core.Exif: void flipHorizontally()
androidx.lifecycle.ViewModel: ViewModel()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
androidx.appcompat.view.menu.ActionMenuItem: boolean requiresOverflow()
androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState: androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState[] values()
androidx.appcompat.R$attr: int actionDropDownStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.core.os.MessageCompat
androidx.camera.camera2.R$id: int action_image
androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_DOWN
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
org.pytorch.R$styleable: int AppCompatTheme_actionBarTabTextStyle
androidx.camera.core.ImageProxy: int getWidth()
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
org.pytorch.R$styleable: int ActionBar_titleTextStyle
androidx.customview.widget.ExploreByTouchHelper: void invalidateRoot()
androidx.appcompat.R$anim
androidx.core.view.ViewCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotation
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBaseline_toBaselineOf
com.squareup.picasso.Request: boolean centerInside
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View)
androidx.activity.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.internal.platform.Platform: okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.camera.camera2.impl.Camera2CaptureRequestBuilder: Camera2CaptureRequestBuilder()
io.github.prabhuomkar.pytorchandroid.R$color: int abc_primary_text_material_dark
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
androidx.appcompat.R$styleable: int MenuItem_android_title
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_paper
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.swiperefreshlayout.R$color: int ripple_material_light
androidx.core.R$layout: int notification_template_icon_group
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_Toolbar
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
androidx.recyclerview.selection.DefaultSelectionTracker: void addObserver(androidx.recyclerview.selection.SelectionTracker$SelectionObserver)
androidx.versionedparcelable.VersionedParcel: java.util.Map readMap(java.util.Map,int)
androidx.legacy.coreui.R$styleable: int ColorStateListItem_android_alpha
android.support.v4.media.session.MediaControllerCompat: MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String)
androidx.constraintlayout.solver.widgets.WidgetContainer: void updateDrawPosition()
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback
android.support.v4.media.RatingCompat: int RATING_3_STARS
androidx.constraintlayout.solver.widgets.ChainHead: java.util.ArrayList mWeightedMatchConstraintsWidgets
io.github.prabhuomkar.pytorchandroid.R$id: int start
org.pytorch.torchvision.R$styleable: int AppCompatTheme_editTextBackground
androidx.customview.R$dimen: int notification_action_text_size
okhttp3.Handshake: okhttp3.CipherSuite cipherSuite()
org.pytorch.R$drawable: int notification_bg_low_normal
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
org.pytorch.R$attr: int layout_anchor
org.pytorch.torchvision.R$styleable: int AppCompatTextView_textLocale
androidx.recyclerview.widget.RecyclerView$LayoutManager: void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.ArrayList getVerticalGuidelines()
androidx.swiperefreshlayout.R$attr: int fontProviderQuery
androidx.customview.R$styleable: int[] GradientColor
androidx.loader.R$styleable: int ColorStateListItem_alpha
com.squareup.picasso.RequestHandler: boolean canHandleRequest(com.squareup.picasso.Request)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: int gravity
com.downloader.httpclient.DefaultHttpClient: java.lang.String getResponseHeader(java.lang.String)
com.facebook.jni.HybridData$Destructor
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.MediaMetadataCompat getMetadata()
okhttp3.HttpUrl: java.util.List encodedPathSegments()
androidx.appcompat.resources.R$id: int accessibility_custom_action_10
androidx.camera.core.ImageCaptureConfig: int getSurfaceOccupancyPriority(int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_type
androidx.appcompat.R$id: int accessibility_custom_action_18
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
androidx.legacy.v4.R$id: int forever
androidx.versionedparcelable.VersionedParcel: boolean readBoolean()
androidx.appcompat.R$attr: int showAsAction
androidx.camera.core.R$color: int ripple_material_light
androidx.core.app.NotificationCompat: java.lang.String EXTRA_REMOTE_INPUT_HISTORY
org.pytorch.R$id: int contentPanel
androidx.core.content.pm.ShortcutInfoCompat: java.util.Set getCategories()
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int off
org.pytorch.R$styleable: int MenuView_android_headerBackground
androidx.appcompat.R$styleable: int Spinner_popupTheme
androidx.recyclerview.selection.SelectionTracker: void copySelection(androidx.recyclerview.selection.MutableSelection)
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
org.pytorch.R$string: int abc_searchview_description_query
androidx.camera.core.CaptureStage: androidx.camera.core.CaptureConfig getCaptureConfig()
androidx.recyclerview.widget.SnapHelper: int[] calculateScrollDistance(int,int)
androidx.recyclerview.widget.SortedList$Callback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_ABOVE
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: java.lang.String getAssetModelFilePath(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,java.util.List)
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType PRIV
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int)
androidx.recyclerview.R$styleable
org.pytorch.R$styleable: int FontFamilyFont_font
androidx.appcompat.app.AppCompatDelegate: android.view.MenuInflater getMenuInflater()
com.downloader.internal.DownloadRequestQueue: void finish(com.downloader.request.DownloadRequest)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginLeft
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultWidth
androidx.core.app.ActivityOptionsCompat: void update(androidx.core.app.ActivityOptionsCompat)
androidx.viewpager.widget.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
androidx.appcompat.R$attr: int windowNoTitle
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_pressed_holo_dark
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
org.pytorch.R$dimen: int abc_dialog_padding_top_material
org.pytorch.R$styleable: int ViewStubCompat_android_layout
androidx.coordinatorlayout.R$color: int notification_icon_bg_color
androidx.fragment.R$layout: int notification_template_custom_big
androidx.camera.core.SessionConfig$ValidatingBuilder: SessionConfig$ValidatingBuilder()
okhttp3.internal.http2.ConnectionShutdownException: ConnectionShutdownException()
androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_REFLEX_SCANNER
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)
androidx.core.graphics.drawable.IconCompat: android.os.Bundle toBundle()
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Line2
androidx.media.R$style: int Widget_Compat_NotificationActionContainer
okhttp3.internal.http1.Http1Codec: void flushRequest()
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderCerts
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STRIP_BYTE_COUNTS
okhttp3.Address: java.util.List protocols()
androidx.appcompat.R$styleable: int GradientColor_android_type
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_radio_on_to_off_mtrl_animation
io.github.prabhuomkar.pytorchandroid.R$attr: int state_above_anchor
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
androidx.fragment.app.FragmentTransitionImpl: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.core.app.RemoteInput: boolean getAllowFreeFormInput()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.camera.core.UseCase: void updateSuggestedResolution(java.util.Map)
androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List,java.lang.Runnable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetLeft
org.pytorch.R$style: int Platform_AppCompat
androidx.appcompat.widget.DecorToolbar: void setVisibility(int)
androidx.core.view.ViewCompat: android.graphics.Matrix getMatrix(android.view.View)
androidx.appcompat.R$drawable: int btn_radio_on_mtrl
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getSender()
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
androidx.collection.ArraySet: void clear()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Metrics sMetrics
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_visible
androidx.core.view.MotionEventCompat: int ACTION_MASK
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAllConstraints()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
okhttp3.Dispatcher: int queuedCallsCount()
io.github.prabhuomkar.pytorchandroid.R$string: int abc_shareactionprovider_share_with
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
androidx.recyclerview.R$id: int item_touch_helper_previous_elevation
com.downloader.database.DatabaseOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_POSITIONING
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircleRadius
androidx.slidingpanelayout.R$integer: int status_bar_notification_info_maxnum
org.pytorch.R$attr: int buttonBarNegativeButtonStyle
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawBottom()
com.downloader.PRDownloaderConfig: boolean isDatabaseEnabled()
androidx.appcompat.R$color: int secondary_text_disabled_material_dark
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
org.pytorch.torchvision.R$drawable: int abc_btn_borderless_material
androidx.annotation.RequiresApi: int api()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent)
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
org.pytorch.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.ImageCapture$CaptureMode getCaptureMode(androidx.camera.core.ImageCapture$CaptureMode)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.recyclerview.selection.AutoScroller
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetName(java.lang.String)
androidx.camera.camera2.R$id: int right_side
androidx.camera.core.CaptureConfig: boolean isUseRepeatingSurface()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarDivider
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$id: int app_info_licenses
org.pytorch.R$style: int Base_Widget_AppCompat_ActionMode
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintLeft_toRightOf
androidx.core.app.RemoteInput: java.lang.String getResultKey()
androidx.customview.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ratingbar_material
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener()
androidx.recyclerview.R$styleable: int RecyclerView_android_clipToPadding
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AF_AWB
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.appcompat.R$attr: int background
androidx.camera.camera2.Camera2Config$Builder
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int)
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.coordinatorlayout.R$id: int top
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.torchvision.R$styleable: int AppCompatTextView_lineHeight
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(int)
androidx.recyclerview.widget.OrientationHelper: int getTransformedStartWithDecoration(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_Dark
org.pytorch.R$attr: int windowFixedHeightMajor
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
androidx.core.graphics.ColorUtils: void RGBToLAB(int,int,int,double[])
okhttp3.Dispatcher: Dispatcher(java.util.concurrent.ExecutorService)
androidx.legacy.v4.R$color: int primary_text_default_material_dark
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: android.hardware.camera2.CaptureRequest getSessionParameters()
androidx.core.app.Person
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_1
okhttp3.FormBody
org.pytorch.torchvision.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
io.github.prabhuomkar.pytorchandroid.R$attr: int textColorAlertDialogListItem
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
android.support.v4.media.session.PlaybackStateCompat: int getErrorCode()
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderPackage
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int)
androidx.camera.core.CaptureConfig$Builder
androidx.appcompat.R$styleable: int Spinner_android_prompt
androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.camera.camera2.R$id: int line3
org.pytorch.BuildConfig: java.lang.String FLAVOR
androidx.viewpager.R$id: int right_icon
androidx.constraintlayout.widget.ConstraintSet: int LEFT
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap)
okhttp3.HttpUrl: int port()
androidx.core.app.NotificationCompat$CarExtender: int getColor()
androidx.legacy.coreui.R$dimen: int compat_button_inset_vertical_material
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.recyclerview.widget.SortedList$BatchedCallback: void dispatchLastEvent()
com.downloader.database.DownloadModel: long getLastModifiedAt()
okio.ForwardingSink
androidx.recyclerview.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.app.ActionBar: int getSelectedNavigationIndex()
androidx.constraintlayout.solver.widgets.Helper: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.appcompat.app.ActionBar: void setDisplayShowCustomEnabled(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginRight
org.pytorch.torchvision.R$attr: int icon
androidx.legacy.v4.R$layout: int notification_template_custom_big
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
org.pytorch.R$styleable: int AppCompatTheme_windowActionBarOverlay
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_small_icon_size_as_large
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.media.AudioAttributesCompat: int FLAG_AUDIBILITY_ENFORCED
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$layout: int abc_alert_dialog_material
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
androidx.customview.R$drawable: int notify_panel_notification_icon_bg
org.pytorch.torchvision.R$string: int abc_searchview_description_clear
org.pytorch.R$attr: int layout_behavior
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.vectordrawable.R$layout: int notification_template_part_time
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.camera.camera2.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode ON_CONTINUOUS_AUTO
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_button_inset_horizontal_material
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setParallaxDistance(int)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get()
org.pytorch.R$styleable: int Toolbar_popupTheme
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_thickness
androidx.legacy.v4.R$style: int Widget_Compat_NotificationActionText
io.github.prabhuomkar.pytorchandroid.R$drawable: int pytorch_logo
androidx.appcompat.widget.DecorContentParent
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setMaxResolution(android.util.Size)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display[] getDisplays(java.lang.String)
okhttp3.internal.http.HttpHeaders: boolean hasVaryAll(okhttp3.Response)
androidx.camera.camera2.R$id: int accessibility_custom_action_29
androidx.core.app.RemoteActionCompat: boolean isEnabled()
androidx.media.R$attr: int fontProviderAuthority
org.pytorch.torchvision.R$style: int Widget_AppCompat_CompoundButton_Switch
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
okhttp3.EventListener: void dnsStart(okhttp3.Call,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listMenuViewStyle
androidx.appcompat.R$attr: int windowMinWidthMajor
androidx.camera.camera2.R$dimen: int notification_media_narrow_margin
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.fragment.app.FragmentStatePagerAdapter: android.os.Parcelable saveState()
androidx.camera.core.ImageCapture$CaptureMode: androidx.camera.core.ImageCapture$CaptureMode[] values()
androidx.legacy.v4.R$styleable: int[] GradientColor
androidx.appcompat.R$id: int accessibility_custom_action_15
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View getCustomView()
androidx.core.app.ShareCompat$IntentReader: androidx.core.app.ShareCompat$IntentReader from(android.app.Activity)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setContentType(int)
android.support.v4.media.session.MediaSessionCompat$Token: void setExtraBinder(android.support.v4.media.session.IMediaSession)
androidx.recyclerview.widget.RecyclerView$Orientation
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_WEB_URL
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment TOP
org.pytorch.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void updateItemCount(int,int)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_REWIND
androidx.appcompat.widget.ActionBarContextView: boolean hideOverflowMenu()
androidx.vectordrawable.R$id: int notification_background
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.R$color: int abc_color_highlight_material
androidx.customview.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)
org.pytorch.torchvision.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.camera.camera2.impl.Camera2Initializer: boolean onCreate()
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_KILOMETERS_PER_HOUR
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
androidx.camera.camera2.R$id
androidx.appcompat.app.AppCompatDialog
io.github.prabhuomkar.pytorchandroid.R$attr: int autoSizePresetSizes
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
org.pytorch.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider
androidx.asynclayoutinflater.R$attr: int alpha
io.github.prabhuomkar.pytorchandroid.R$attr: int colorPrimaryDark
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Medium
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
androidx.appcompat.R$attr: int track
io.github.prabhuomkar.pytorchandroid.R$style: int CardView_Dark
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.github.prabhuomkar.pytorchandroid.R$id: int SYM
org.pytorch.torchvision.R$dimen: int tooltip_precise_anchor_threshold
androidx.camera.core.VideoCapture: void startRecording(java.io.File,java.util.concurrent.Executor,androidx.camera.core.VideoCapture$OnVideoSavedListener)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
androidx.drawerlayout.R$id: int icon
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_LEFT
org.pytorch.R$style: int Theme_AppCompat_CompactMenu
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_main_column_padding_top
androidx.fragment.app.FragmentManager: void setFragmentFactory(androidx.fragment.app.FragmentFactory)
androidx.appcompat.R$drawable: int notification_bg_normal
androidx.camera.core.R$styleable: int GradientColor_android_endX
android.support.v4.media.session.MediaControllerCompat: boolean isCaptioningEnabled()
org.pytorch.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.camera.core.impl.utils.futures.FutureChain
androidx.core.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
androidx.appcompat.view.menu.MenuView
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getLeft()
androidx.viewpager.R$string: int status_bar_notification_info_overflow
androidx.media.R$drawable: int notification_bg_normal
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasLogo()
androidx.vectordrawable.R$color
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
androidx.camera.core.DisplayOrientedMeteringPointFactory: DisplayOrientedMeteringPointFactory(android.view.Display,androidx.camera.core.CameraX$LensFacing,float,float)
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle()
androidx.customview.R$string
org.pytorch.R$attr: int actionModeWebSearchDrawable
org.pytorch.R$styleable: int Toolbar_navigationIcon
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState SEARCHING
com.downloader.request.DownloadRequest: void deliverSuccess()
org.pytorch.torchvision.R$layout: int abc_action_mode_close_item_material
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_COLOR_SEQUENTIAL
androidx.vectordrawable.R$id: int accessibility_custom_action_1
androidx.collection.LruCache: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_default
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
org.pytorch.R$attr: int actionBarTheme
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderPackage
androidx.appcompat.R$anim: int abc_fade_out
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View,int)
androidx.appcompat.widget.SwitchCompat: int getThumbTextPadding()
androidx.appcompat.widget.ShareActionProvider
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Display2
io.github.prabhuomkar.pytorchandroid.R$id: int italic
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode HTTP_1_1_REQUIRED
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
androidx.appcompat.app.ActionBar: void hide()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ListPopupWindow
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.constraintlayout.solver.widgets.WidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget[])
okhttp3.internal.http.RetryAndFollowUpInterceptor
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
androidx.coordinatorlayout.R$styleable: int GradientColorItem_android_color
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.camera.core.ImageReaderProxy: void close()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mHead
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetName(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
androidx.camera.core.PreviewConfig: android.util.Rational getTargetAspectRatioCustom()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String capabilityToString(int)
org.pytorch.torchvision.R$styleable: int Toolbar_android_minHeight
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.github.prabhuomkar.pytorchandroid.R$attr: int srcCompat
io.github.prabhuomkar.pytorchandroid.R$string: int cd_pytorch_logo
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isRtl()
androidx.core.graphics.drawable.IconCompat: int mInt2
androidx.fragment.app.FragmentTabHost: void onTabChanged(java.lang.String)
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder setAutoCancelDuration(long,java.util.concurrent.TimeUnit)
androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])
androidx.core.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
org.pytorch.R$styleable: int AppCompatImageView_tint
androidx.legacy.app.ActionBarDrawerToggle: void syncState()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_dialog_material_background
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.lifecycle.ViewModel: void onCleared()
androidx.documentfile.provider.DocumentFile: boolean renameTo(java.lang.String)
androidx.constraintlayout.widget.ConstraintSet: int TOP
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Spinner_Underlined
okhttp3.internal.http2.Http2Codec: void writeRequestHeaders(okhttp3.Request)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: NotificationCompat$CarExtender$UnreadConversation$Builder(java.lang.String)
androidx.appcompat.widget.TintContextWrapper
androidx.camera.core.R$attr: int fontProviderAuthority
okhttp3.internal.cache.CacheInterceptor: CacheInterceptor(okhttp3.internal.cache.InternalCache)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_list_menu_item_checkbox
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
androidx.constraintlayout.widget.R$attr: int layout_goneMarginRight
androidx.camera.core.VideoCapture: void clear()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE_BIG
org.pytorch.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.legacy.v4.R$id: int start
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_SESSION_TOKEN
androidx.appcompat.resources.R$id: int time
androidx.camera.core.R$id: int accessibility_custom_action_21
androidx.loader.R$attr: int fontProviderFetchTimeout
okhttp3.Challenge: int hashCode()
androidx.appcompat.R$attr: int titleMarginEnd
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
org.pytorch.R$styleable: int AppCompatTextView_drawableTint
androidx.media.MediaBrowserProtocol: java.lang.String DATA_ROOT_HINTS
androidx.viewpager.R$id: int info
androidx.collection.ArrayMap
androidx.fragment.app.FragmentActivity: void onResume()
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)
org.pytorch.torchvision.R$styleable: int ActionBar_popupTheme
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
androidx.vectordrawable.R$id: int chronometer
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.ImageAnalysis$ImageReaderMode getImageReaderMode()
okhttp3.Route: okhttp3.Address address()
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_INVALID
android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler)
androidx.appcompat.R$color: int abc_tint_btn_checkable
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
androidx.appcompat.R$id: int checkbox
androidx.appcompat.R$styleable: int ActivityChooserView_initialActivityCount
org.pytorch.R$drawable: int abc_textfield_search_material
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_launcher_background
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
org.pytorch.R$styleable: int MenuView_android_horizontalDivider
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
androidx.loader.R$id: int icon_group
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
com.facebook.jni.IteratorHelper
androidx.appcompat.R$color: int abc_primary_text_material_light
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderPackage
androidx.recyclerview.widget.RecyclerView: void clearOnChildAttachStateChangeListeners()
androidx.drawerlayout.R$string: int status_bar_notification_info_overflow
androidx.appcompat.R$string: int status_bar_notification_info_overflow
org.pytorch.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
androidx.cardview.R$styleable: int CardView_android_minWidth
androidx.camera.camera2.R$style: int Widget_Compat_NotificationActionText
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionButton_CloseMode
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type RIGHT
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
okhttp3.OkHttpClient: boolean retryOnConnectionFailure()
androidx.vectordrawable.R$integer
androidx.camera.core.R$styleable: int GradientColor_android_tileMode
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_SPREAD
androidx.appcompat.R$attr: int editTextColor
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean)
okio.Buffer: int read(java.nio.ByteBuffer)
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetEnd
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.pytorch.torchvision.R$layout: int abc_popup_menu_header_item_layout
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DOWNLOAD_STATUS
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_TITLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_ROW_INT
androidx.fragment.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)
androidx.customview.R$layout: int notification_action
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_STRIP_OFFSETS
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Dialog_Alert
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
org.pytorch.R$dimen: int abc_text_size_display_3_material
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_radio_off_to_on_mtrl_animation
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.vectordrawable.animated.R$id: int text
org.pytorch.torchvision.R$attr: int trackTint
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_300
androidx.constraintlayout.widget.ConstraintSet: void constrainCircle(int,int,int,float)
androidx.activity.R$id: int accessibility_custom_action_6
com.squareup.picasso.BuildConfig: int VERSION_CODE
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBottom()
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetEndWithActions
org.pytorch.R$color: int switch_thumb_material_light
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
androidx.constraintlayout.widget.Group: void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.core.view.DragStartHelper: void getTouchPosition(android.graphics.Point)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
okhttp3.Cookie: java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers)
org.pytorch.R$drawable: int abc_ic_menu_cut_mtrl_alpha
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
androidx.camera.core.ImageCapture$CaptureMode: androidx.camera.core.ImageCapture$CaptureMode MIN_LATENCY
org.pytorch.torchvision.R$dimen: int abc_button_inset_horizontal_material
org.pytorch.R$style: int Platform_Widget_AppCompat_Spinner
androidx.swiperefreshlayout.R$layout: int notification_template_part_chronometer
androidx.camera.core.PreviewConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig()
androidx.media.MediaSessionManager$RemoteUserInfo: int getPid()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.Object clone()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.camera.core.ImageAnalysis$Defaults
androidx.lifecycle.MethodCallsLogger: boolean approveCall(java.lang.String,int)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
io.github.prabhuomkar.pytorchandroid.R$id: int tag_accessibility_pane_title
androidx.camera.camera2.R$dimen: int compat_notification_large_icon_max_height
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintBottom_creator
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: LinearLayoutManager$LayoutChunkResult()
androidx.loader.R$id: int notification_main_column
androidx.camera.core.BaseCamera: androidx.camera.core.Observable getCameraState()
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
androidx.coordinatorlayout.R$dimen: int notification_right_side_padding_top
okhttp3.CookieJar: void saveFromResponse(okhttp3.HttpUrl,java.util.List)
androidx.constraintlayout.solver.widgets.WidgetContainer
androidx.camera.core.R$layout
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder secure()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.session.IMediaSession: void fastForward()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_controlBackground
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BEGIN
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowLowerThan(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)
androidx.activity.R$dimen: int notification_action_icon_size
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
androidx.camera.core.impl.utils.futures.FutureChain: boolean isDone()
org.pytorch.torchvision.R$dimen: int abc_dialog_min_width_minor
androidx.appcompat.R$drawable: int abc_edit_text_material
androidx.media.R$styleable: int GradientColor_android_centerX
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void setAddDuration(long)
androidx.appcompat.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BASELINE
okhttp3.Response: okhttp3.Handshake handshake()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_autoSizePresetSizes
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String,java.lang.String[])
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper: int downloadModel(android.content.Context,android.view.View,java.lang.String,java.lang.String,java.lang.String)
androidx.vectordrawable.animated.R$dimen: int compat_notification_large_icon_max_height
org.pytorch.torchvision.TensorImageUtils: TensorImageUtils()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Subhead
androidx.appcompat.app.WindowDecorActionBar: int getHeight()
androidx.constraintlayout.widget.Constraints: java.lang.String TAG
androidx.appcompat.R$drawable: int abc_ic_star_half_black_48dp
com.downloader.R$string
androidx.cardview.R$styleable: int CardView_cardCornerRadius
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
org.pytorch.R$drawable: int abc_seekbar_thumb_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_spinBars
androidx.appcompat.R$dimen: int abc_action_button_min_height_material
androidx.loader.R$attr: int font
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_10
androidx.appcompat.R$attr: int trackTintMode
androidx.swiperefreshlayout.R$color: int notification_icon_bg_color
androidx.camera.core.ImageAnalysis$ImageReaderMode: androidx.camera.core.ImageAnalysis$ImageReaderMode ACQUIRE_LATEST_IMAGE
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetRotation(int)
androidx.loader.R$styleable: int GradientColor_android_endY
org.pytorch.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
org.pytorch.torchvision.R$style: int Base_V7_Theme_AppCompat_Light
androidx.customview.widget.ExploreByTouchHelper
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
io.github.prabhuomkar.pytorchandroid.BuildConfig: java.lang.String FLAVOR
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)
androidx.appcompat.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)
org.pytorch.torchvision.R$attr: int textAppearanceListItem
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.R$layout: int notification_action_tombstone
androidx.drawerlayout.R$drawable: int notification_bg_low_normal
androidx.media.AudioAttributesCompatParcelizer
androidx.camera.core.PreviewConfig: int getTargetRotation()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_begin
androidx.viewpager.R$dimen: int compat_button_inset_horizontal_material
androidx.core.view.ViewCompat: int LAYER_TYPE_HARDWARE
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,android.view.View)
androidx.constraintlayout.solver.widgets.Barrier: int RIGHT
androidx.vectordrawable.animated.R$layout: int notification_template_part_chronometer
androidx.core.app.ComponentActivity$ExtraData
androidx.appcompat.R$id: int uniform
io.github.prabhuomkar.pytorchandroid.R$attr: int submitBackground
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_rotationX
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
com.downloader.PRDownloaderConfig
androidx.core.R$attr: int fontStyle
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.appcompat.widget.AppCompatEditText
androidx.asynclayoutinflater.R$attr: int fontProviderFetchTimeout
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
okhttp3.internal.connection.RouteSelector: okhttp3.internal.connection.RouteSelector$Selection next()
androidx.camera.camera2.R$styleable: int GradientColor_android_endX
org.pytorch.torchvision.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(int,int)
androidx.exifinterface.media.ExifInterface: java.lang.String LONGITUDE_WEST
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setTransitionStyle(int)
androidx.appcompat.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
org.pytorch.torchvision.R$styleable: <clinit>()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: void resolveLayoutDirection(int)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.appcompat.widget.FitWindowsLinearLayout
io.github.prabhuomkar.pytorchandroid.R$id: int chains
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.vectordrawable.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_shrink_fade_out_from_bottom
org.pytorch.R$anim
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
okhttp3.HttpUrl$Builder$ParseResult: okhttp3.HttpUrl$Builder$ParseResult valueOf(java.lang.String)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionButton
androidx.legacy.coreui.R$styleable: int FontFamilyFont_ttcIndex
androidx.annotation.RequiresPermission: java.lang.String[] allOf()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT
okio.Buffer: boolean isOpen()
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig$Builder setConnectTimeout(int)
androidx.core.widget.AutoScrollHelper: float NO_MAX
androidx.media.MediaBrowserServiceCompat
androidx.core.R$id: int accessibility_custom_action_11
androidx.vectordrawable.animated.R$id: int title
io.github.prabhuomkar.pytorchandroid.R$attr: int iconTint
io.github.prabhuomkar.pytorchandroid.R$attr: int autoSizeMaxTextSize
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.camera.camera2.impl.Camera2CameraControl: Camera2CameraControl(android.hardware.camera2.CameraCharacteristics,androidx.camera.core.CameraControlInternal$ControlUpdateListener,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.Executor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_DOWNLOAD_PROGRESS
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ButtonBar
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_NONE
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getNumCols()
okhttp3.internal.connection.RouteSelector: void connectFailed(okhttp3.Route,java.io.IOException)
androidx.constraintlayout.solver.widgets.ConstraintWidget
org.pytorch.R$styleable: int CompoundButton_buttonTint
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_edit_text_inset_horizontal_material
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)
androidx.appcompat.resources.R$dimen: int compat_notification_large_icon_max_height
androidx.legacy.coreutils.R$attr
androidx.coordinatorlayout.R$drawable: int notification_bg_low_pressed
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleConstraint
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.resources.R$drawable: int notify_panel_notification_icon_bg
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()
androidx.swiperefreshlayout.R$attr: int alpha
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getVerticalDimensionBehaviour()
io.github.prabhuomkar.pytorchandroid.R$id: int content
androidx.annotation.LongDef
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment BEGIN
org.pytorch.R$dimen: int abc_select_dialog_padding_start_material
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
androidx.appcompat.widget.WithHint
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getStartTrim()
okio.Timeout: Timeout()
com.downloader.Error
androidx.constraintlayout.solver.widgets.ResolutionNode: void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
com.facebook.jni.ThreadScopeSupport: ThreadScopeSupport()
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.appcompat.view.SupportActionModeWrapper
androidx.viewpager.R$color
androidx.appcompat.R$styleable: int ActionBar_navigationMode
androidx.asynclayoutinflater.view.AsyncLayoutInflater: AsyncLayoutInflater(android.content.Context)
androidx.camera.core.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,java.util.concurrent.Executor)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_SPREAD_INSIDE
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: RecyclerView$LayoutManager$Properties()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.camera.camera2.impl.ImageAnalysisConfigProvider: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontStyle
android.support.v4.media.session.MediaSessionCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentControllerInfo()
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat: int captureSingleRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle()
androidx.arch.core.util.Function: java.lang.Object apply(java.lang.Object)
androidx.viewpager.widget.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_RIGHT
androidx.legacy.v4.R$layout: int notification_template_part_chronometer
androidx.camera.core.SessionConfig
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVibrate(long[])
org.pytorch.torchvision.R$styleable: int[] MenuItem
okio.Buffer$UnsafeCursor: long offset
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.vectordrawable.R$id: int accessibility_custom_action_20
org.pytorch.torchvision.R$integer: int config_tooltipAnimTime
androidx.appcompat.widget.AppCompatAutoCompleteTextView
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[])
org.pytorch.IValue: org.pytorch.IValue tupleFrom(org.pytorch.IValue[])
org.pytorch.torchvision.R$attr: int windowFixedHeightMajor
androidx.versionedparcelable.VersionedParcel: void writeFloat(float,int)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT_LINES
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_title_divider_material
io.github.prabhuomkar.pytorchandroid.R$attr: int listPopupWindowStyle
androidx.fragment.R$id: int accessibility_custom_action_25
androidx.camera.core.R$id: int accessibility_custom_action_12
androidx.appcompat.R$drawable: int abc_btn_radio_material
org.pytorch.DType: org.pytorch.DType FLOAT64
androidx.loader.content.Loader: void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
org.pytorch.torchvision.R$color: int material_blue_grey_950
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_18
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.camera.camera2.R$id: int tag_accessibility_actions
androidx.slidingpanelayout.widget.SlidingPaneLayout: SlidingPaneLayout(android.content.Context,android.util.AttributeSet,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int elevation
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle)
androidx.viewpager.R$color: int ripple_material_light
androidx.camera.core.ImageProxyBundle
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
androidx.collection.LongSparseArray: LongSparseArray(int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.downloader.database.DbHelper: void remove(int)
org.pytorch.R$styleable: int[] AppCompatTextView
androidx.swiperefreshlayout.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.resources.R$id: int icon
okhttp3.Cache: void initialize()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float)
androidx.camera.core.Exif: long getLastModifiedTimestamp()
androidx.recyclerview.R$dimen: int item_touch_helper_swipe_escape_velocity
org.pytorch.torchvision.R$drawable: int abc_text_cursor_material
androidx.camera.camera2.R$dimen: int notification_large_icon_width
androidx.legacy.v4.R$id: int status_bar_latest_event_content
androidx.legacy.v4.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.camera.camera2.impl.CameraEventCallbacks: androidx.camera.camera2.impl.CameraEventCallbacks createEmptyCallback()
androidx.appcompat.R$styleable: int[] FontFamilyFont
org.pytorch.R$style: int Base_V22_Theme_AppCompat
androidx.appcompat.widget.SwitchCompat: void setTrackResource(int)
androidx.appcompat.view.menu.MenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.collection.CircularArray: CircularArray()
androidx.viewpager.R$drawable: int notify_panel_notification_icon_bg
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.LinearInterpolator mLinearInterpolator
androidx.concurrent.futures.AbstractResolvableFuture: boolean setException(java.lang.Throwable)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getGapStrategy()
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RELATED_SOUND_FILE
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
android.support.v4.media.session.IMediaSession$Stub: IMediaSession$Stub()
io.github.prabhuomkar.pytorchandroid.R$layout: int activity_main
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
org.pytorch.R$attr: int panelMenuListWidth
androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod valueOf(java.lang.String)
okhttp3.Headers: boolean equals(java.lang.Object)
androidx.camera.core.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
androidx.appcompat.resources.R$id: int accessibility_custom_action_8
org.pytorch.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.view.MenuItemCompat: androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem)
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$color: int abc_btn_colored_text_material
androidx.camera.core.ImageCaptureConfig: android.util.Rational getTargetAspectRatioCustom()
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: SelectionTracker$SelectionPredicate()
androidx.appcompat.app.WindowDecorActionBar: int getNavigationItemCount()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMaxWidth()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect)
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.List getOutgoingEdges(java.lang.Object)
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder)
androidx.legacy.coreui.R$attr: int layout_anchorGravity
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_percent
androidx.media.R$drawable: int notification_template_icon_bg
androidx.appcompat.widget.ListPopupWindow: int POSITION_PROMPT_BELOW
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation)
androidx.core.view.ViewCompat: void setTranslationY(android.view.View,float)
androidx.core.util.Preconditions: void checkState(boolean,java.lang.String)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_SeekBar
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_Solid
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)
androidx.annotation.BinderThread
androidx.constraintlayout.solver.SolverVariable: void updateReferencesWithNewDefinition(androidx.constraintlayout.solver.ArrayRow)
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
org.pytorch.torchvision.R$styleable: int ViewBackgroundHelper_backgroundTint
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewDetachedFromWindow(android.view.View)
androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_HIGH_GAIN_UP
androidx.media.R$styleable: int FontFamilyFont_android_font
androidx.camera.core.VideoCapture$Metadata
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope TESTS
okhttp3.EventListener: void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol)
androidx.constraintlayout.widget.R$id: int percent
androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)
org.pytorch.R$id: int split_action_bar
androidx.viewpager.R$style: int Widget_Compat_NotificationActionContainer
androidx.recyclerview.widget.GridLayoutManager: boolean supportsPredictiveItemAnimations()
org.pytorch.R$style: int TextAppearance_AppCompat_Medium
org.pytorch.R$integer: int status_bar_notification_info_maxnum
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
androidx.constraintlayout.widget.R$attr: int layout_constrainedWidth
androidx.media.R$drawable: int notification_bg_low_normal
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_orientation
androidx.loader.content.CursorLoader: void onReset()
okhttp3.internal.http.RealInterceptorChain: int connectTimeoutMillis()
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])
org.pytorch.R$drawable: int notify_panel_notification_icon_bg
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
androidx.appcompat.R$attr: int barLength
androidx.coordinatorlayout.R$id: int action_image
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getX()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.camera.core.R$styleable: int FontFamilyFont_fontVariationSettings
android.support.v4.media.MediaMetadataCompat: int describeContents()
androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
org.pytorch.R$attr: int drawerArrowStyle
androidx.constraintlayout.widget.Barrier: int START
androidx.core.view.MotionEventCompat: int AXIS_RY
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
org.pytorch.R$attr: int alertDialogStyle
okio.BufferedSource: okio.ByteString readByteString()
android.support.v4.media.MediaBrowserCompat$MediaItem$Flags
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context)
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TRACK
com.facebook.soloader.nativeloader.NativeLoaderDelegate: boolean loadLibrary(java.lang.String)
okhttp3.EventListener: void requestBodyEnd(okhttp3.Call,long)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setConnectTimeout(int)
okio.Buffer: long writeAll(okio.Source)
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor)
androidx.appcompat.widget.DecorContentParent: java.lang.CharSequence getTitle()
androidx.core.util.Pair
androidx.fragment.R$attr: int fontStyle
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_EQUALITY
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean getHintLaunchesActivity()
com.downloader.Constants: java.lang.String DEFAULT_USER_AGENT
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.cardview.R$style: int Base_CardView
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstVisibleWidget
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,okio.ByteString)
androidx.constraintlayout.solver.widgets.Helper: Helper()
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getBackgroundThreadExecutor()
androidx.viewpager.widget.PagerTitleStrip: void setTextSize(int,float)
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
androidx.swiperefreshlayout.R$id: int chronometer
androidx.coordinatorlayout.R$id: int icon_group
androidx.appcompat.R$attr: int state_above_anchor
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_control_inset_material
androidx.legacy.v4.R$styleable: int GradientColor_android_type
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void setTag(android.view.View,java.lang.Object)
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.cardview.R$attr: int contentPadding
org.pytorch.R$color: int abc_input_method_navigation_guard
io.github.prabhuomkar.pytorchandroid.R$id: int topPanel
android.support.v4.media.session.MediaControllerCompat$TransportControls: void pause()
okhttp3.HttpUrl: okhttp3.HttpUrl resolve(java.lang.String)
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
androidx.collection.CircularIntArray
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_percent
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator centerInside()
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstVisibleWidget()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void play()
org.pytorch.torchvision.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
org.pytorch.torchvision.R$attr: int ratingBarStyleSmall
com.downloader.utils.Utils: void deleteUnwantedModelsAndTempFiles(int)
androidx.annotation.InspectableProperty$FlagEntry: java.lang.String name()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasAncestor(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ANNOUNCEMENT
androidx.exifinterface.media.ExifInterface: ExifInterface(java.lang.String)
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_Switch
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: int getHeight()
androidx.legacy.v4.R$layout: int notification_template_big_media_narrow
androidx.camera.camera2.Camera2Config
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
okhttp3.internal.http.HttpHeaders: boolean hasBody(okhttp3.Response)
androidx.drawerlayout.R$dimen: int notification_top_pad_large_text
org.pytorch.torchvision.R$id: int action_text
androidx.core.content.res.ResourcesCompat$FontCallback
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constrainedHeight
androidx.camera.core.SurfaceSizeDefinition: androidx.camera.core.SurfaceSizeDefinition create(android.util.Size,android.util.Size,android.util.Size)
androidx.camera.core.Exif: void attachLocation(android.location.Location)
okio.Buffer: byte[] readByteArray()
androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.hardware.display.DisplayManagerCompat: java.lang.String DISPLAY_CATEGORY_PRESENTATION
androidx.recyclerview.widget.DiffUtil$ItemCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
androidx.appcompat.R$styleable: int[] ListPopupWindow
androidx.swiperefreshlayout.R$styleable: int[] GradientColor
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_NONE
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
androidx.core.content.pm.ShortcutInfoCompat: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorControlNormal
androidx.appcompat.app.AlertController$AlertParams: boolean mForceInverseBackground
org.pytorch.torchvision.R$style: int Theme_AppCompat_Dialog_MinWidth
org.pytorch.torchvision.TensorImageUtils: float[] TORCHVISION_NORM_STD_RGB
com.squareup.picasso.Picasso: void invalidate(java.lang.String)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent)
org.pytorch.torchvision.R$dimen: int abc_text_size_display_2_material
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_Switch
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream)
androidx.appcompat.R$dimen: int abc_control_corner_material
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.coordinatorlayout.R$id: int tag_unhandled_key_listeners
io.github.prabhuomkar.pytorchandroid.R$id: int notification_background
androidx.constraintlayout.widget.ConstraintLayout: java.lang.String VERSION
okio.Buffer: void readFully(byte[])
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
androidx.vectordrawable.R$color: int secondary_text_default_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment
org.pytorch.R$id: int activity_chooser_view_content
androidx.viewpager.R$styleable: int GradientColor_android_startX
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat
androidx.appcompat.widget.VectorEnabledTintResources
org.pytorch.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.legacy.v4.R$styleable: int CoordinatorLayout_keylines
okio.Buffer: java.lang.String readUtf8(long)
androidx.appcompat.resources.R$id: int accessibility_custom_action_16
androidx.vectordrawable.graphics.drawable.ArgbEvaluator
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
org.pytorch.R$id: int actions
android.support.v4.media.session.MediaControllerCompat: long getFlags()
com.downloader.Response: boolean isPaused()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Info_Media
androidx.constraintlayout.widget.ConstraintSet: void constrainMaxHeight(int,int)
androidx.viewpager.widget.PagerAdapter: int POSITION_UNCHANGED
androidx.appcompat.app.AppCompatDelegate: boolean requestWindowFeature(int)
com.downloader.database.DatabaseOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
org.pytorch.torchvision.R$attr: int listPreferredItemPaddingRight
org.pytorch.torchvision.R$dimen: int abc_action_button_min_width_material
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
okio.Options: int size()
androidx.legacy.coreui.R$attr: int layout_behavior
okhttp3.OkHttpClient: okhttp3.Dns dns()
androidx.appcompat.view.menu.ListMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_button_min_width_material
androidx.legacy.coreutils.R$styleable: int GradientColor_android_startX
okio.BufferedSource: void readFully(okio.Buffer,long)
androidx.asynclayoutinflater.R$dimen: int notification_subtext_size
io.github.prabhuomkar.pytorchandroid.R$attr: int barrierDirection
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withLayer()
org.pytorch.torchvision.R$bool: int abc_allow_stacked_button_bar
androidx.appcompat.R$attr: int navigationContentDescription
org.pytorch.R$styleable: int AppCompatTextView_textLocale
androidx.core.util.Supplier
androidx.camera.core.R$attr: int fontWeight
androidx.core.view.NestedScrollingParent: boolean onNestedPreFling(android.view.View,float,float)
androidx.camera.camera2.Camera2Config: java.util.Set listOptions()
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] MenuView
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
androidx.recyclerview.widget.RecyclerView: int INVALID_TYPE
okhttp3.internal.Util: boolean equal(java.lang.Object,java.lang.Object)
androidx.core.view.MotionEventCompat: float getX(android.view.MotionEvent,int)
org.pytorch.R$dimen: int disabled_alpha_material_dark
androidx.camera.core.CaptureConfig$Builder: void addAllCameraCaptureCallbacks(java.util.Collection)
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,java.security.cert.X509Certificate)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_switch_track
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_SPREAD
androidx.fragment.app.Fragment: void setSharedElementReturnTransition(java.lang.Object)
androidx.recyclerview.widget.ItemTouchHelper: int RIGHT
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
org.pytorch.R$attr: int listPreferredItemHeightLarge
org.pytorch.torchvision.R$string: int abc_capital_off
org.pytorch.R$color: int ripple_material_dark
androidx.appcompat.view.ActionMode: ActionMode()
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
okhttp3.HttpUrl: int defaultPort(java.lang.String)
androidx.legacy.coreui.R$attr: int fontStyle
androidx.recyclerview.selection.DefaultSelectionTracker: void mergeProvisionalSelection()
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
androidx.appcompat.R$id: int submit_area
androidx.legacy.coreui.R$styleable: int[] CoordinatorLayout_Layout
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.R$attr: int trackTint
okhttp3.Address
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endX
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_MEDIUM
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setImageInfoProcessor(androidx.camera.core.ImageInfoProcessor)
androidx.loader.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()
androidx.versionedparcelable.VersionedParcel: void writeSet(java.util.Set,int)
androidx.core.widget.AutoScrollHelper: boolean isEnabled()
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_OPEN
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS
androidx.appcompat.R$drawable: int btn_radio_on_to_off_mtrl_animation
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.RequestBody)
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getImageLink()
androidx.annotation.XmlRes
androidx.appcompat.R$string: int search_menu_title
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeMoved(int,int,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
org.pytorch.R$string: int abc_search_hint
okio.Buffer: okio.ByteString md5()
androidx.appcompat.R$color: int primary_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setType(java.lang.String)
com.downloader.Constants: java.lang.String RANGE
okhttp3.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY
android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewPosition()
org.pytorch.R$id: int action_divider
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_DESC
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton
androidx.appcompat.widget.SwitchCompat: void toggle()
org.pytorch.torchvision.R$drawable: int abc_list_divider_material
org.pytorch.torchvision.R$style: int Widget_AppCompat_DrawerArrowToggle
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender)
androidx.slidingpanelayout.R$drawable: int notification_action_background
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.appcompat.R$style: int TextAppearance_AppCompat_Inverse
androidx.core.app.SharedElementCallback: void onRejectSharedElements(java.util.List)
androidx.appcompat.R$styleable: int SearchView_queryHint
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ButtonBarLayout
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] FontFamilyFont
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat: int captureBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)
androidx.media.R$style: int TextAppearance_Compat_Notification_Title_Media
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_popup_enter
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.core.view.ViewCompat: void setY(android.view.View,float)
androidx.customview.R$styleable: int GradientColor_android_endX
okio.BufferedSink: okio.BufferedSink write(byte[])
androidx.appcompat.R$attr: int switchStyle
org.pytorch.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.camera.core.VideoCaptureConfig: android.util.Size getTargetResolution()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableLeftCompat
okio.Okio: okio.BufferedSink buffer(okio.Sink)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SPECTRAL_SENSITIVITY
androidx.camera.core.impl.utils.Optional: java.lang.Object get()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_TextView
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_EXPLORATION_GESTURE_START
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_YEARS
androidx.camera.core.CaptureConfig$Builder: void addCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback)
androidx.viewpager.R$dimen
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.appcompat.widget.TintTypedArray: java.lang.String getPositionDescription()
androidx.swiperefreshlayout.R$id: int icon
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
androidx.appcompat.R$id: int accessibility_custom_action_3
androidx.loader.R$id: int icon
org.pytorch.R$dimen: int abc_switch_padding
androidx.appcompat.widget.AppCompatToggleButton
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
org.pytorch.torchvision.R$attr: int progressBarStyle
androidx.appcompat.R$styleable: int AlertDialog_listLayout
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$drawable: int abc_ic_star_black_48dp
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Button
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE
org.pytorch.BuildConfig: boolean DEBUG
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
androidx.appcompat.widget.DecorToolbar: int getVisibility()
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_precise_anchor_threshold
androidx.camera.core.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.R$styleable: int AppCompatTheme_imageButtonStyle
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateDefaultLayoutParams()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.appcompat.widget.ShareActionProvider: boolean hasSubMenu()
okhttp3.CookieJar
com.squareup.picasso.LruCache: int maxSize()
okio.Timeout: void waitUntilNotified(java.lang.Object)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat LOCALE
com.squareup.picasso.NetworkPolicy
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.recyclerview.widget.SortedList$BatchedCallback
org.pytorch.torchvision.R$styleable: int ActionBar_subtitleTextStyle
androidx.customview.R$id: int text
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationY(float)
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_CLOUDY_WEATHER
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Cipher)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
io.github.prabhuomkar.pytorchandroid.R$color: int colorButtonBg
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_LOAD_ERROR
org.pytorch.R$styleable: int SwitchCompat_thumbTint
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_31
okhttp3.internal.platform.ConscryptPlatform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
org.pytorch.torchvision.R$drawable: int abc_ic_arrow_drop_right_black_24dp
io.github.prabhuomkar.pytorchandroid.R$dimen: int highlight_alpha_material_light
androidx.recyclerview.selection.R$drawable: int selection_band_overlay
androidx.slidingpanelayout.R$drawable: int notification_bg_normal
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_slide_out_bottom
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int)
androidx.appcompat.widget.DecorToolbar: void collapseActionView()
androidx.fragment.R$id: int accessibility_custom_action_30
org.pytorch.R$attr: int statusBarBackground
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_tileMode
androidx.cursoradapter.widget.CursorAdapter: int FLAG_AUTO_REQUERY
androidx.appcompat.R$attr: int actionProviderClass
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
androidx.print.PrintHelper: void setScaleMode(int)
androidx.swiperefreshlayout.R$attr: int fontProviderCerts
androidx.camera.core.UseCaseConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.drawerlayout.R$styleable: int GradientColor_android_startX
androidx.appcompat.R$styleable: int AlertDialog_android_layout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo()
io.github.prabhuomkar.pytorchandroid.BuildConfig: java.lang.String BUILD_TYPE
org.pytorch.R$color: int primary_text_default_material_dark
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onError(java.lang.String,android.os.Bundle,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findContainingItemView(android.view.View)
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(javax.crypto.Mac)
androidx.swiperefreshlayout.R$dimen: int compat_button_padding_vertical_material
androidx.customview.R$styleable: int FontFamilyFont_font
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: OutputConfigurationCompat(android.view.Surface)
okhttp3.internal.cache.DiskLruCache$Snapshot: okio.Source getSource(int)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
org.pytorch.R$string: int abc_menu_sym_shortcut_label
okhttp3.internal.cache.DiskLruCache: java.util.Iterator snapshots()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.downloader.database.DbHelper: void updateProgress(int,long,long)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.fragment.R$layout
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getParent()
okhttp3.Dispatcher: int getMaxRequestsPerHost()
androidx.customview.R$id: int blocking
androidx.coordinatorlayout.R$color: int secondary_text_default_material_light
com.downloader.core.ExecutorSupplier: java.util.concurrent.Executor forBackgroundTasks()
androidx.fragment.app.DialogFragment: void onStart()
androidx.camera.core.CaptureConfig$Builder: androidx.camera.core.CaptureConfig$Builder createFrom(androidx.camera.core.UseCaseConfig)
androidx.asynclayoutinflater.R$attr
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_rotationY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence)
androidx.appcompat.app.AlertController$AlertParams: int mIconId
androidx.fragment.R$id: int accessibility_custom_action_24
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context)
org.pytorch.R$attr: int subtitleTextColor
org.pytorch.torchvision.R$attr: int windowMinWidthMinor
org.pytorch.torchvision.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.vectordrawable.animated.R$attr: int fontVariationSettings
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean canScroll(android.view.View,boolean,int,int,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int keyline
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
androidx.appcompat.R$attr: int hideOnContentScroll
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
org.pytorch.R$color: int secondary_text_disabled_material_dark
androidx.vectordrawable.R$id: int line3
androidx.appcompat.R$style: int Theme_AppCompat_Light
androidx.camera.core.SessionConfig$Builder: void addAllRepeatingCameraCaptureCallbacks(java.util.Collection)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isDismissable()
androidx.lifecycle.OnLifecycleEvent: androidx.lifecycle.Lifecycle$Event value()
androidx.recyclerview.widget.ItemTouchUIUtil
androidx.swiperefreshlayout.R$dimen: int notification_large_icon_width
io.github.prabhuomkar.pytorchandroid.R$attr: int suggestionRowLayout
org.pytorch.torchvision.R$dimen: int disabled_alpha_material_light
androidx.recyclerview.widget.SortedList: java.lang.Object removeItemAt(int)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_ALL_MASK
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionDestroyed()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int MATCH_CONNECTION
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_REPEAT_MODE
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToTop
androidx.camera.core.VideoCaptureConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.core.content.pm.PermissionInfoCompat$ProtectionFlags
org.pytorch.torchvision.R$dimen: int abc_button_padding_vertical_material
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES
org.pytorch.R$styleable: int ColorStateListItem_android_color
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_select_dialog_padding_start_material
androidx.fragment.app.FragmentTransitionImpl: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_chainStyle
androidx.asynclayoutinflater.R$id: int text2
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_CURRENT
androidx.slidingpanelayout.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$attr: int tooltipText
androidx.camera.camera2.impl.Camera2CameraControl: androidx.camera.core.FlashMode getFlashMode()
androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(int,int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.camera.core.SurfaceConfig$ConfigType
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.media.AudioAttributesCompat: boolean equals(java.lang.Object)
androidx.camera.core.CameraControlInternal: boolean isTorchOn()
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
org.pytorch.torchvision.R$style: int Animation_AppCompat_Dialog
android.support.v4.media.session.IMediaControllerCallback: void onCaptioningEnabledChanged(boolean)
androidx.core.view.MotionEventCompat: int AXIS_RTRIGGER
org.pytorch.torchvision.R$style: int Theme_AppCompat_CompactMenu
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
androidx.recyclerview.widget.LinearLayoutManager: void setRecycleChildrenOnDetach(boolean)
androidx.customview.R$styleable: int FontFamilyFont_android_font
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
androidx.collection.CircularArray: java.lang.Object get(int)
androidx.fragment.R$id: int notification_main_column
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
androidx.media.R$id: int status_bar_latest_event_content
androidx.core.R$style: int TextAppearance_Compat_Notification_Time
androidx.viewpager.R$styleable: int FontFamily_fontProviderQuery
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
okhttp3.Cache: int hitCount()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[])
org.pytorch.torchvision.R$attr: int splitTrack
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.appcompat.R$styleable: int View_android_theme
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_id
androidx.viewpager.R$drawable: int notification_action_background
androidx.legacy.v4.R$layout: int notification_action_tombstone
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_EVENT
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPRESSED_BITS_PER_PIXEL
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
androidx.appcompat.R$styleable: int[] CompoundButton
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry
androidx.slidingpanelayout.R$drawable: int notification_bg_normal_pressed
androidx.recyclerview.R$color: int notification_icon_bg_color
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState valueOf(java.lang.String)
androidx.recyclerview.selection.ItemDetailsLookup: boolean overItemWithSelectionKey(android.view.MotionEvent)
org.pytorch.R$styleable: int AppCompatSeekBar_android_thumb
androidx.appcompat.R$dimen: int abc_edit_text_inset_top_material
androidx.vectordrawable.R$id: int icon_group
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Info
android.support.v4.media.session.IMediaControllerCallback: void onRepeatModeChanged(int)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.appcompat.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
org.pytorch.torchvision.R$attr: int colorButtonNormal
androidx.appcompat.widget.SwitchCompat: void setThumbTintList(android.content.res.ColorStateList)
org.pytorch.R$style: int AlertDialog_AppCompat
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText
androidx.legacy.coreui.R$id: int right_icon
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRating(android.support.v4.media.RatingCompat,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$attr: int backgroundTintMode
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetAspectRatioCustom(android.util.Rational)
androidx.versionedparcelable.VersionedParcel: void writeInt(int)
org.pytorch.torchvision.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.R$styleable: int AppCompatTextView_android_textAppearance
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabText
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.customview.R$attr: int fontProviderFetchStrategy
androidx.camera.camera2.impl.Camera2Initializer: java.lang.String getType(android.net.Uri)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
org.pytorch.R$string: int status_bar_notification_info_overflow
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator networkPolicy(com.squareup.picasso.NetworkPolicy,com.squareup.picasso.NetworkPolicy[])
androidx.fragment.R$id: int normal
org.pytorch.R$attr: int dropDownListViewStyle
org.pytorch.R$color: int primary_dark_material_dark
androidx.appcompat.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_padding_top_material
androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
org.pytorch.torchvision.R$attr: int actionBarTheme
android.support.v4.media.session.MediaControllerCompat: MediaControllerCompat(android.content.Context,android.support.v4.media.session.MediaSessionCompat)
androidx.recyclerview.selection.OnContextClickListener
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.media.MediaSessionManager$RemoteUserInfo: MediaSessionManager$RemoteUserInfo(java.lang.String,int,int)
okhttp3.OkHttpClient: int writeTimeoutMillis()
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
androidx.constraintlayout.widget.ConstraintLayout: boolean shouldDelayChildPressedState()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.camera.camera2.impl.Camera2CameraControl: void triggerAePrecapture()
androidx.appcompat.app.AppCompatDelegate: void onPostResume()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
androidx.appcompat.resources.R$dimen: int compat_control_corner_material
org.pytorch.torchvision.R$style: int Platform_V21_AppCompat
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,int,boolean)
androidx.camera.core.R$dimen: int notification_top_pad_large_text
androidx.appcompat.resources.R$styleable: int ColorStateListItem_alpha
org.pytorch.R$style: int Widget_AppCompat_ActivityChooserView
androidx.core.app.NotificationCompat: java.lang.String EXTRA_AUDIO_CONTENTS_URI
io.github.prabhuomkar.pytorchandroid.R$color: int primary_material_dark
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
org.pytorch.IValue: org.pytorch.IValue listFrom(org.pytorch.Tensor[])
org.pytorch.R$bool: int abc_config_actionMenuItemAllCaps
androidx.core.text.util.LinkifyCompat$LinkifyMask
okhttp3.ConnectionSpec: int hashCode()
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchTimeout
org.pytorch.torchvision.R$attr: int actionModeBackground
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NOT_NEEDED
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener
androidx.vectordrawable.animated.R
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHeight()
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_X
org.pytorch.torchvision.R$styleable: int ActionMenuItemView_android_minWidth
androidx.appcompat.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_headerBackground
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.fragment.app.FragmentTransaction: int TRANSIT_UNSET
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.camera.core.CameraCaptureFailure
org.pytorch.R$style: int Widget_AppCompat_EditText
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.UseCaseConfig build()
androidx.loader.R$style: int TextAppearance_Compat_Notification
androidx.recyclerview.selection.DefaultSelectionTracker: boolean deselect(java.lang.Object)
okhttp3.internal.cache.DiskLruCache: void initialize()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
okio.Buffer: java.lang.String readUtf8LineStrict(long)
androidx.appcompat.R$id: int tag_transition_group
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_THUMBNAIL_IMAGE_LENGTH
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginTop
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ListPopupWindow
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
androidx.appcompat.R$string: int abc_prepend_shortcut_label
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_THUMBNAIL_IMAGE
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$id: int middle
io.github.prabhuomkar.pytorchandroid.R$dimen: int cardview_compat_inset_shadow
androidx.appcompat.R$layout: int abc_select_dialog_material
okhttp3.internal.cache.DiskLruCache$Snapshot: void close()
androidx.exifinterface.media.ExifInterface: short SHARPNESS_NORMAL
androidx.media.VolumeProviderCompatApi21$Delegate: void onSetVolumeTo(int)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableTintMode
androidx.coordinatorlayout.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
android.support.v4.media.MediaBrowserCompat$MediaItem: boolean isPlayable()
androidx.recyclerview.widget.ItemTouchUIUtil: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
androidx.annotation.VisibleForTesting
org.pytorch.torchvision.R$attr: int actionModeCopyDrawable
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_OUTSIDE
androidx.slidingpanelayout.R$id: int tag_unhandled_key_event_manager
androidx.constraintlayout.widget.Group: Group(android.content.Context)
androidx.appcompat.R$style: int Base_DialogWindowTitle_AppCompat
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,int)
androidx.drawerlayout.R$dimen: int notification_small_icon_background_padding
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getItemCount()
okhttp3.Interceptor$Chain: okhttp3.Request request()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.Headers,okhttp3.RequestBody)
androidx.camera.camera2.Camera2Config: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
org.pytorch.torchvision.R$style: int TextAppearance_Compat_Notification_Line2
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_statusBarBackground
androidx.lifecycle.LifecycleEventObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
okhttp3.internal.connection.RealConnection: boolean isMultiplexed()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintVertical_bias
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button_Small
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle()
androidx.camera.camera2.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
okhttp3.internal.http.RetryAndFollowUpInterceptor: void setCallStackTrace(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar$TabImpl
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_GROUPS
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(long[],long[])
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_button_padding_horizontal_material
androidx.legacy.coreui.R$attr: int fontProviderPackage
org.pytorch.R$styleable: int MenuView_subMenuArrow
androidx.recyclerview.selection.BandPredicate
androidx.loader.R$attr: int fontProviderAuthority
org.pytorch.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.constraintlayout.widget.Barrier: int getType()
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_voiceIcon
org.pytorch.R$id: int checkbox
androidx.cardview.R$color: int cardview_dark_background
androidx.camera.core.R$styleable: int GradientColor_android_type
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.swiperefreshlayout.R$attr: int fontProviderPackage
androidx.core.graphics.ColorUtils: void colorToHSL(int,float[])
androidx.appcompat.R$id: int action_bar_activity_content
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
androidx.loader.app.LoaderManager: void enableDebugLogging(boolean)
androidx.camera.core.ImageAnalysis: void setAnalyzer(java.util.concurrent.Executor,androidx.camera.core.ImageAnalysis$Analyzer)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintWidth_percent
androidx.appcompat.R$style: int Platform_Widget_AppCompat_Spinner
androidx.appcompat.R$style: int Widget_AppCompat_CompoundButton_CheckBox
androidx.vectordrawable.animated.R$id: int tag_accessibility_pane_title
io.github.prabhuomkar.pytorchandroid.R$styleable: int ColorStateListItem_android_alpha
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy: androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okio.BufferedSource: okio.ByteString readByteString(long)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_EXIT
android.support.v4.media.session.MediaSessionCompat
androidx.camera.core.R$styleable: int[] ColorStateListItem
com.squareup.picasso.RequestCreator: void into(android.widget.RemoteViews,int,int,android.app.Notification)
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(int,androidx.constraintlayout.solver.widgets.ResolutionAnchor,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setOrientation(int)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getText()
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
androidx.core.R$styleable: int ColorStateListItem_alpha
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDimensionRatioSide()
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
com.downloader.internal.SynchronousCall: SynchronousCall(com.downloader.request.DownloadRequest)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.appcompat.resources.R
okhttp3.Response$Builder: okhttp3.Response$Builder message(java.lang.String)
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_MEDIA_DESCRIPTION
androidx.drawerlayout.R$drawable: int notification_bg_normal
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noTransform()
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Line2
androidx.fragment.R$id: int accessibility_custom_action_21
org.pytorch.torchvision.R$attr: int actionBarPopupTheme
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
org.pytorch.R$id: int notification_main_column
androidx.core.view.ViewCompat: void setAlpha(android.view.View,float)
org.pytorch.torchvision.R$styleable: int MenuItem_android_icon
androidx.slidingpanelayout.R$styleable: int[] FontFamilyFont
androidx.camera.core.UseCase: androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing)
androidx.camera.camera2.R$id: int icon_group
okhttp3.internal.connection.RealConnection: RealConnection(okhttp3.ConnectionPool,okhttp3.Route)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.appcompat.view.menu.MenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
okhttp3.internal.io.FileSystem: okio.Source source(java.io.File)
io.github.prabhuomkar.pytorchandroid.R$mipmap: int ic_launcher_round
androidx.collection.LruCache: int maxSize()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.collection.SparseArrayCompat: java.lang.Object replace(int,java.lang.Object)
androidx.constraintlayout.solver.widgets.Barrier: boolean allowedInBarrier()
org.pytorch.torchvision.R$style: int Widget_Compat_NotificationActionText
io.github.prabhuomkar.pytorchandroid.R$id: int blocking
androidx.fragment.R$dimen: int notification_subtext_size
androidx.core.os.TraceCompat
androidx.lifecycle.OnLifecycleEvent
androidx.appcompat.R$attr: int drawableEndCompat
androidx.appcompat.resources.R$dimen: int notification_big_circle_margin
androidx.versionedparcelable.CustomVersionedParcelable: void onPreParceling(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintGuide_begin
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_REPLY
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: android.util.Size getPreviewSize()
androidx.media.R$style: int Widget_Compat_NotificationActionText
okhttp3.Request$Builder: okhttp3.Request$Builder delete()
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcelable)
androidx.coordinatorlayout.R$dimen: int notification_action_text_size
org.pytorch.torchvision.R$color: int background_material_dark
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$id: int tag_transition_group
androidx.recyclerview.widget.OrientationHelper: int getTotalSpace()
androidx.lifecycle.ViewModelStoreOwner
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontStyle
okio.ForwardingTimeout
io.github.prabhuomkar.pytorchandroid.R$attr: int queryBackground
androidx.appcompat.view.ActionMode: android.view.Menu getMenu()
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.camera.camera2.R$attr: int fontVariationSettings
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationStart(android.graphics.drawable.Drawable)
androidx.appcompat.R$styleable: int Toolbar_logoDescription
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.recyclerview.R$dimen: int notification_action_text_size
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
androidx.constraintlayout.solver.widgets.ResolutionNode: void invalidate()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
okio.Buffer: okio.Buffer writeInt(int)
okhttp3.CacheControl: int sMaxAgeSeconds()
com.facebook.jni.HybridData: boolean isValid()
androidx.legacy.v4.R$dimen: int notification_large_icon_height
androidx.camera.core.impl.utils.futures.FutureChain: androidx.camera.core.impl.utils.futures.FutureChain transformAsync(androidx.camera.core.impl.utils.futures.AsyncFunction,java.util.concurrent.Executor)
org.pytorch.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.constraintlayout.solver.SolverVariable: java.lang.String toString()
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
androidx.core.view.NestedScrollingChild: boolean isNestedScrollingEnabled()
androidx.camera.core.R$id: int accessibility_custom_action_14
androidx.appcompat.R$color: int abc_input_method_navigation_guard
com.downloader.utils.Utils: int getUniqueId(java.lang.String,java.lang.String,java.lang.String)
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endY
androidx.appcompat.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
androidx.core.view.ViewCompat: void setPivotX(android.view.View,float)
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerOpened(android.view.View)
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
androidx.swiperefreshlayout.R$id: int line1
okio.ByteString: int lastIndexOf(okio.ByteString,int)
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_COMPILATION
androidx.appcompat.R$dimen: int notification_large_icon_width
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
org.pytorch.BuildConfig: BuildConfig()
io.github.prabhuomkar.pytorchandroid.R$attr: int windowFixedWidthMinor
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY
androidx.media.MediaBrowserProtocol: int SERVICE_VERSION_1
okhttp3.internal.cache.DiskLruCache$Snapshot: java.lang.String key()
org.pytorch.R$drawable: int abc_text_select_handle_right_mtrl_dark
org.pytorch.R$styleable: int View_paddingStart
org.pytorch.torchvision.R$anim: int abc_slide_out_bottom
org.pytorch.torchvision.R$attr: int elevation
org.pytorch.R$dimen: int abc_action_bar_default_padding_start_material
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder from(androidx.camera.core.MeteringPoint)
org.pytorch.IValue: java.lang.String toStr()
org.pytorch.R$attr: int overlapAnchor
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe()
androidx.documentfile.provider.DocumentFile: long length()
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getConfirmLabel()
androidx.appcompat.R$id: int tabMode
androidx.activity.R$attr: int fontWeight
androidx.camera.camera2.R$dimen: int compat_notification_large_icon_max_width
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
androidx.appcompat.view.menu.MenuPresenter$Callback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
androidx.recyclerview.widget.LinearSmoothScroller: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
org.pytorch.torchvision.R$attr: int colorControlActivated
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
org.pytorch.torchvision.R$styleable: int ActionBar_background
org.pytorch.torchvision.R$styleable: int[] Toolbar
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.R$id: int action_mode_bar_stub
androidx.vectordrawable.animated.R$dimen: int notification_large_icon_height
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.UseCaseConfig build()
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState[] values()
androidx.appcompat.R$attr: int ratingBarStyleIndicator
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.customview.R$id: int line1
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState
androidx.swiperefreshlayout.R$id: int right_icon
androidx.viewpager.R$attr: int fontProviderFetchStrategy
io.github.prabhuomkar.pytorchandroid.R$attr: int thumbTintMode
com.squareup.picasso.Picasso$Builder: Picasso$Builder(android.content.Context)
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation
androidx.appcompat.widget.ActionMenuView$LayoutParams
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_TRILINEAR
androidx.core.util.Pools
androidx.core.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)
androidx.annotation.AnimRes
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE_RANGE
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper: void updateModelDownloadButton(android.view.View,java.lang.String)
androidx.appcompat.resources.R$drawable
androidx.lifecycle.Lifecycling
okhttp3.CertificatePinner: int hashCode()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.constraintlayout.solver.ArrayLinkedVariables: void clear()
androidx.activity.R$styleable: int GradientColor_android_type
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_LENGTH
androidx.legacy.widget.Space: void onMeasure(int,int)
androidx.appcompat.R$id: int progress_circular
com.downloader.request.DownloadRequest: void setReadTimeout(int)
com.downloader.internal.ComponentHolder: int getReadTimeout()
org.pytorch.R$style: int Widget_AppCompat_ImageButton
androidx.recyclerview.widget.ItemTouchUIUtil: void clearView(android.view.View)
androidx.appcompat.R$string: int abc_searchview_description_voice
org.pytorch.R$id: int action_bar_spinner
androidx.drawerlayout.R$id: int title
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.R$color: int dim_foreground_disabled_material_light
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int UNSET
org.pytorch.R$attr: int dropdownListPreferredItemHeight
androidx.core.util.PatternsCompat: java.util.regex.Pattern WEB_URL
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setExitFadeDuration(int)
androidx.appcompat.resources.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$style: int TextAppearance_AppCompat_Menu
androidx.appcompat.R$color: int abc_color_highlight_material
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String toString()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat
androidx.fragment.app.Fragment: boolean getRetainInstance()
androidx.cardview.widget.CardView: void setPaddingRelative(int,int,int,int)
androidx.appcompat.resources.R$drawable: int notification_bg_normal
org.pytorch.torchvision.R$layout: int notification_template_icon_group
org.pytorch.torchvision.R$styleable: int SwitchCompat_splitTrack
androidx.appcompat.R$styleable: int[] StateListDrawableItem
android.support.v4.media.RatingCompat: int describeContents()
androidx.media.R$style: int TextAppearance_Compat_Notification_Line2_Media
androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener: void onInflateFinished(android.view.View,int,android.view.ViewGroup)
androidx.customview.R$id: int notification_main_column
androidx.drawerlayout.R$attr: int fontProviderQuery
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper: void setupRecyclerView(android.view.View,android.content.Context,int,boolean,androidx.recyclerview.widget.RecyclerView$Adapter)
org.pytorch.R$style: int Base_Widget_AppCompat_ProgressBar
org.pytorch.R$style: int Base_AlertDialog_AppCompat_Light
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.vectordrawable.animated.R$attr: int fontProviderFetchStrategy
androidx.camera.core.CameraXThreads
androidx.recyclerview.R$dimen: int fastscroll_margin
androidx.appcompat.R$attr: int buttonBarButtonStyle
androidx.appcompat.view.StandaloneActionMode: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setSupportedResolutions(java.util.List)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float)
androidx.media.R$layout: int notification_template_big_media_narrow_custom
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
android.support.v4.media.session.MediaControllerCompat: android.app.PendingIntent getSessionActivity()
androidx.slidingpanelayout.R$attr: int fontProviderFetchStrategy
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_font
androidx.camera.core.VideoCaptureConfig: int getIFrameInterval()
androidx.legacy.coreutils.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_translationZ
org.pytorch.R$dimen: int abc_floating_window_z
androidx.core.view.ViewParentCompat: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_min
org.pytorch.R$attr: int suggestionRowLayout
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status PENDING
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStop()
androidx.appcompat.R$attr: int actionModeSplitBackground
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.loader.R$drawable: int notification_action_background
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintDimensionRatio
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
androidx.camera.core.UseCase$EventListener
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.viewpager.R$styleable: int GradientColor_android_endY
androidx.viewpager.R$layout: int notification_action_tombstone
com.downloader.PRDownloaderConfig: void setUserAgent(java.lang.String)
androidx.customview.R$styleable: int ColorStateListItem_android_color
androidx.vectordrawable.R$drawable: int notification_action_background
androidx.vectordrawable.animated.R$color: int ripple_material_light
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
okio.DeflaterSink: void write(okio.Buffer,long)
androidx.coordinatorlayout.R$styleable: int[] GradientColorItem
androidx.recyclerview.widget.ItemTouchHelper: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
org.pytorch.R$drawable: int abc_switch_thumb_material
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton_Overflow
org.pytorch.torchvision.R$drawable: int abc_ic_star_half_black_48dp
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
okhttp3.internal.Util: java.nio.charset.Charset ISO_8859_1
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
okhttp3.internal.http2.Http2Codec: java.util.List http2HeadersList(okhttp3.Request)
io.github.prabhuomkar.pytorchandroid.R$attr: int ratingBarStyleIndicator
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$color: int cardview_light_background
androidx.recyclerview.R$attr: int fastScrollVerticalTrackDrawable
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintSet)
androidx.core.view.InputDeviceCompat: int SOURCE_JOYSTICK
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.appcompat.widget.ToolbarWidgetWrapper: int getVisibility()
androidx.appcompat.R$id: int action_bar_subtitle
org.pytorch.R$style: int TextAppearance_AppCompat_Subhead_Inverse
android.support.v4.media.MediaBrowserCompat$ItemCallback: void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem)
okhttp3.internal.cache.DiskLruCache$Snapshot
androidx.appcompat.R$attr: int listItemLayout
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecycleListView_paddingTopNoTitle
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)
androidx.core.os.BuildCompat: boolean isAtLeastNMR1()
androidx.customview.R$dimen: int notification_right_icon_size
androidx.swiperefreshlayout.R$drawable: int notification_bg_normal_pressed
org.pytorch.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_itemTextAppearance
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_MEDIA_ID
androidx.appcompat.widget.MenuPopupWindow
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonStyleSmall
okio.BufferedSource: long indexOf(okio.ByteString,long)
androidx.loader.content.Loader: void onReset()
androidx.fragment.R$styleable: int ColorStateListItem_android_color
androidx.core.widget.NestedScrollView: boolean isFillViewport()
io.github.prabhuomkar.pytorchandroid.R$attr: int thumbTextPadding
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
androidx.fragment.R$styleable: int[] FontFamilyFont
okhttp3.WebSocket: boolean send(okio.ByteString)
androidx.camera.camera2.R$id: int tag_screen_reader_focusable
androidx.lifecycle.ReportFragment: void onStart()
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
org.pytorch.torchvision.R$styleable: int[] FontFamily
androidx.camera.core.UseCaseGroupLifecycleController: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
androidx.viewpager.R$color: int secondary_text_default_material_light
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
androidx.recyclerview.widget.BatchingListUpdateCallback: void onRemoved(int,int)
androidx.viewpager.widget.PagerTabStrip: void setDrawFullUnderline(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
androidx.drawerlayout.R$dimen: int notification_big_circle_margin
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.MutableConfig getMutableConfig()
okhttp3.MultipartBody: okhttp3.MediaType contentType()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
androidx.camera.camera2.R$id: int accessibility_custom_action_6
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHeight_percent
org.pytorch.R$styleable: int StateListDrawableItem_android_drawable
android.support.v4.media.session.IMediaSession: boolean isCaptioningEnabled()
okhttp3.internal.http.StatusLine: okhttp3.Protocol protocol
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder fromConfig(androidx.camera.core.ImageCaptureConfig)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_android_minHeight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PASTE
okio.Buffer: void clear()
org.pytorch.torchvision.R$styleable: int MenuItem_android_menuCategory
org.pytorch.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.legacy.coreui.R$styleable: int GradientColor_android_startX
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_4
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_DIGITIZED
androidx.slidingpanelayout.R$id: int line3
androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_STANDARD
okhttp3.OkHttpClient: int readTimeoutMillis()
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_PopupWindow
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ART
androidx.appcompat.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.appcompat.resources.R$id: int accessibility_custom_action_24
okio.Buffer: okio.BufferedSink writeInt(int)
androidx.fragment.R$dimen: int notification_right_side_padding_top
org.pytorch.R$styleable: int AppCompatImageView_tintMode
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.view.menu.MenuPresenter: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
io.github.prabhuomkar.pytorchandroid.R$attr: int drawerArrowStyle
org.pytorch.R$styleable: int ActionBar_subtitle
okhttp3.HttpUrl: java.lang.String queryParameterValue(int)
okhttp3.Dispatcher: void setIdleCallback(java.lang.Runnable)
androidx.camera.core.Preview: androidx.camera.core.Preview$PreviewSurfaceCallback getPreviewSurfaceCallback()
androidx.camera.camera2.R$id: int actions
org.pytorch.torchvision.R$attr: int radioButtonStyle
androidx.vectordrawable.R$id: int accessibility_custom_action_3
androidx.collection.CircularArray
io.github.prabhuomkar.pytorchandroid.R$attr: int spinnerDropDownItemStyle
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowPending()
androidx.core.content.res.TypedArrayUtils: int getAttr(android.content.Context,int,int)
io.github.prabhuomkar.pytorchandroid.R$color: int cardview_dark_background
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarSize
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.media.MediaBrowserServiceCompat: void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider: android.graphics.PointF computeScrollVectorForPosition(int)
org.pytorch.R$attr: int actionModeCloseDrawable
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void onBoundsChange(android.graphics.Rect)
androidx.activity.R$drawable: int notify_panel_notification_icon_bg
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_icon
androidx.exifinterface.media.ExifInterface: int DATA_LOSSY_JPEG
androidx.appcompat.R$styleable: int ActionBar_subtitle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()
androidx.appcompat.R$styleable: int[] ActionMenuView
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.core.util.AtomicFile: void delete()
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_DarkActionBar
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState FLASH_REQUIRED
org.pytorch.torchvision.R$attr: int buttonBarNegativeButtonStyle
androidx.media.R$styleable: int FontFamily_fontProviderQuery
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList getVerticalGuidelines()
androidx.legacy.coreui.R$styleable: int[] FontFamily
org.pytorch.torchvision.R$color: int accent_material_light
androidx.camera.core.impl.LiveDataObservable: void addObserver(java.util.concurrent.Executor,androidx.camera.core.Observable$Observer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
org.pytorch.torchvision.R$string: int abc_searchview_description_voice
io.github.prabhuomkar.pytorchandroid.R$attr: int alertDialogTheme
androidx.recyclerview.R$id: int blocking
androidx.media.R$attr: int font
androidx.core.view.ViewCompat: void setOverScrollMode(android.view.View,int)
androidx.recyclerview.widget.SortedList: java.lang.Object get(int)
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URI)
org.pytorch.R$styleable: int MenuGroup_android_orderInCategory
org.pytorch.torchvision.R$id: int checkbox
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
org.pytorch.R$styleable: int Toolbar_contentInsetEnd
androidx.cardview.R$attr: int cardPreventCornerOverlap
androidx.swiperefreshlayout.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$style: int TextAppearance_AppCompat_Large
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SHOW_CHRONOMETER
org.pytorch.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.constraintlayout.solver.Metrics: long slackvariables
androidx.recyclerview.widget.DiffUtil: androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean)
androidx.recyclerview.widget.ListUpdateCallback: void onMoved(int,int)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.loader.R$styleable: int GradientColor_android_startX
com.downloader.Error: boolean isServerError()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.BuildConfig: java.lang.String VERSION_NAME
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_visible
org.pytorch.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
okhttp3.ConnectionPool: int connectionCount()
androidx.collection.SparseArrayCompat: void clear()
io.github.prabhuomkar.pytorchandroid.R$drawable
okhttp3.OkHttpClient: java.net.Proxy proxy()
androidx.camera.core.CameraDeviceStateCallbacks
androidx.camera.core.VideoCaptureConfig: int getAudioChannelCount()
androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int)
org.pytorch.R$attr: int alphabeticModifiers
androidx.legacy.v4.R$attr: int fontWeight
okhttp3.OkHttpClient: okhttp3.CookieJar cookieJar()
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Line2
org.pytorch.R$attr: int switchStyle
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder(android.os.IBinder,int)
org.pytorch.R$styleable: int View_android_theme
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_END
androidx.core.R$styleable: int GradientColorItem_android_offset
androidx.camera.core.ImageAnalysisConfig: java.lang.Class getTargetClass(java.lang.Class)
org.pytorch.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginEnd
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR_OVERLAY
androidx.camera.core.R$drawable: int notification_template_icon_low_bg
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter
androidx.loader.R$styleable: int FontFamilyFont_android_fontWeight
androidx.drawerlayout.R$color
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginRight
androidx.media.R$id: int async
androidx.exifinterface.media.ExifInterface: int DATA_PACK_BITS_COMPRESSED
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalBias
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
com.squareup.picasso.StatsSnapshot: void dump(java.io.PrintWriter)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REPORT_VIEW_IDS
androidx.appcompat.R$attr: int subtitle
okhttp3.internal.http.HttpCodec: okhttp3.Response$Builder readResponseHeaders(boolean)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
androidx.appcompat.R$id: int notification_background
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
org.pytorch.R$string: int abc_action_bar_up_description
androidx.legacy.coreutils.R$layout: int notification_template_custom_big
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.swiperefreshlayout.R$id: int action_container
androidx.recyclerview.selection.DefaultSelectionTracker
androidx.drawerlayout.R$id: int normal
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
androidx.recyclerview.R$style: int Widget_Compat_NotificationActionText
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_NoActionBar
org.pytorch.R$color: int dim_foreground_disabled_material_light
androidx.appcompat.R$id: int search_close_btn
androidx.camera.core.Config$Option: java.lang.Object getToken()
okhttp3.internal.http.HttpHeaders
org.pytorch.torchvision.R$styleable: int AppCompatTheme_popupWindowStyle
androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter: android.hardware.camera2.CaptureResult getCaptureResult(androidx.camera.core.CameraCaptureResult)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
okhttp3.HttpUrl: java.lang.String queryParameter(java.lang.String)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet,int,int)
com.squareup.picasso.Callback$EmptyCallback: void onSuccess()
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_ASSERTIVE
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_weight
okhttp3.internal.http.HttpHeaders: int skipWhitespace(java.lang.String,int)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
org.pytorch.R$styleable: int ActionBar_homeAsUpIndicator
okio.Buffer$UnsafeCursor: boolean readWrite
androidx.appcompat.R$attr: int autoSizeMaxTextSize
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void stop()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.slidingpanelayout.R$layout: int notification_action_tombstone
androidx.appcompat.R$color: int notification_icon_bg_color
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int)
io.github.prabhuomkar.pytorchandroid.R$menu: int menu_main
androidx.camera.core.Config: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.constraintlayout.solver.ArrayRow: void addError(androidx.constraintlayout.solver.SolverVariable)
androidx.core.app.TaskStackBuilder: android.content.Intent editIntentAt(int)
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.swiperefreshlayout.R$drawable: int notification_bg_low
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
androidx.customview.R$styleable: int GradientColor_android_type
org.pytorch.torchvision.R$id: int src_in
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_actionLayout
androidx.vectordrawable.R$styleable: int GradientColor_android_startY
androidx.appcompat.R$dimen: int notification_small_icon_background_padding
androidx.camera.core.UseCaseAttachState: void setUseCaseInactive(androidx.camera.core.UseCase)
androidx.core.R$styleable: int GradientColorItem_android_color
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
androidx.lifecycle.Lifecycle$Event
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator tag(java.lang.Object)
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDx
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_GROUP
androidx.camera.core.CaptureConfig$OptionUnpacker: void unpack(androidx.camera.core.UseCaseConfig,androidx.camera.core.CaptureConfig$Builder)
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getParallaxDistance()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROGRESS
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.camera.core.ImageCapture$CaptureMode
androidx.viewpager.R$styleable
org.pytorch.torchvision.R$id: int scrollView
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.downloader.BuildConfig: java.lang.String APPLICATION_ID
androidx.appcompat.R$attr: int paddingStart
androidx.core.internal.view.SupportMenuItem: android.content.res.ColorStateList getIconTintList()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int UNKNOWN
okio.Buffer: okio.BufferedSink write(byte[])
androidx.viewpager.R$integer: int status_bar_notification_info_maxnum
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_UNAVAILABLE
androidx.asynclayoutinflater.R$attr: int fontVariationSettings
androidx.appcompat.widget.ThemedSpinnerAdapter
androidx.slidingpanelayout.R$layout: int notification_template_icon_group
androidx.viewpager.R$id: int action_image
okhttp3.internal.http.BridgeInterceptor
androidx.core.widget.TintableImageSourceView: android.content.res.ColorStateList getSupportImageTintList()
okhttp3.internal.http2.StreamResetException
org.pytorch.R$dimen: int abc_control_padding_material
androidx.asynclayoutinflater.R$dimen: int compat_notification_large_icon_max_width
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderPackage
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_SUBTREE
io.github.prabhuomkar.pytorchandroid.R$id: int text
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
org.pytorch.R$style: int Base_Widget_AppCompat_PopupMenu
androidx.core.provider.FontsContractCompat$Columns: FontsContractCompat$Columns()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
android.support.v4.media.session.IMediaSession: void play()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String)
androidx.fragment.app.FragmentController: void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap)
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)
org.pytorch.R$layout: int abc_select_dialog_material
okhttp3.internal.cache.CacheInterceptor
org.pytorch.R$drawable: int abc_ratingbar_indicator_material
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
org.pytorch.R$style: int Widget_AppCompat_ActionBar_Solid
okhttp3.Credentials: java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset)
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintVertical_bias
org.pytorch.R$styleable: int StateListDrawable_android_dither
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
org.pytorch.R$attr: int tint
androidx.appcompat.R$attr: int showTitle
androidx.vectordrawable.R$attr: int fontProviderAuthority
org.pytorch.torchvision.R$anim: int abc_popup_exit
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator purgeable()
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.core.app.ActivityCompat
androidx.activity.R$styleable: int GradientColor_android_centerY
org.pytorch.torchvision.R$dimen: int tooltip_y_offset_non_touch
androidx.camera.core.Preview: void setTargetRotation(int)
androidx.recyclerview.R$attr: int fastScrollHorizontalThumbDrawable
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.github.prabhuomkar.pytorchandroid.R$color: int secondary_text_disabled_material_light
androidx.appcompat.resources.R$color: int secondary_text_default_material_light
androidx.appcompat.widget.DecorToolbar: void animateToVisibility(int)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_A
org.pytorch.torchvision.R$attr: int iconTintMode
androidx.lifecycle.MediatorLiveData: void onInactive()
io.github.prabhuomkar.pytorchandroid.R$color: int cardview_shadow_start_color
androidx.appcompat.R$id: int accessibility_custom_action_11
androidx.constraintlayout.widget.ConstraintSet: void constrainMaxWidth(int,int)
okhttp3.Headers: okhttp3.Headers of(java.util.Map)
androidx.annotation.StyleableRes
androidx.core.app.NotificationCompat$InboxStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D50
androidx.appcompat.view.menu.MenuBuilder: void removeItemAt(int)
androidx.core.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_dark
androidx.appcompat.app.WindowDecorActionBar: void setSelectedNavigationItem(int)
androidx.core.app.NotificationCompat: int PRIORITY_MAX
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_elevation
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy NO_CACHE
androidx.vectordrawable.R$id: int tag_screen_reader_focusable
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_scaleY
androidx.core.text.PrecomputedTextCompat: char charAt(int)
org.pytorch.torchvision.R$styleable: int MenuView_android_verticalDivider
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)
org.pytorch.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.core.view.ActionProvider$VisibilityListener: void onActionProviderVisibilityChanged(boolean)
org.pytorch.R$bool
okio.Timeout: void throwIfReached()
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_6
androidx.media.MediaBrowserServiceCompat$BrowserRoot
androidx.loader.R$dimen: int notification_large_icon_height
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.R$styleable: int[] ViewBackgroundHelper
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setBufferFormat(int)
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_small_material
androidx.legacy.coreui.R$attr: int fontWeight
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
org.pytorch.torchvision.R$attr: int fontProviderQuery
org.pytorch.torchvision.R$style: int Widget_AppCompat_CompoundButton_RadioButton
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Display3
androidx.appcompat.R$attr: int alertDialogButtonGroupStyle
androidx.customview.R$layout: int notification_template_part_chronometer
androidx.customview.R$color: int notification_action_color_filter
org.pytorch.torchvision.R$dimen: int hint_pressed_alpha_material_dark
okhttp3.Cookie: java.lang.String value()
androidx.activity.R$dimen: int compat_button_inset_horizontal_material
androidx.core.app.NotificationCompat$Action$WearableExtender
com.downloader.httpclient.HttpClient: int getResponseCode()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
okhttp3.internal.Util: java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception)
androidx.core.view.animation.PathInterpolatorCompat
org.pytorch.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.camera.camera2.impl.ImageAnalysisConfigProvider: ImageAnalysisConfigProvider(androidx.camera.core.CameraFactory,android.content.Context)
org.pytorch.R$style: int Base_Widget_AppCompat_Button_Borderless
okhttp3.ConnectionSpec: boolean isCompatible(javax.net.ssl.SSLSocket)
androidx.appcompat.resources.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
org.pytorch.R$string: int abc_action_mode_done
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.core.app.ActivityCompat: boolean invalidateOptionsMenu(android.app.Activity)
org.pytorch.R$style: int Widget_AppCompat_ActionBar_TabBar
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_notification_large_icon_max_height
androidx.core.view.PointerIconCompat: int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED
androidx.camera.camera2.R$layout: int notification_action_tombstone
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.core.view.ViewCompat: float getRotationY(android.view.View)
androidx.camera.core.UseCaseEventConfig
androidx.core.R$dimen: int notification_media_narrow_margin
androidx.appcompat.view.StandaloneActionMode: boolean isUiFocusable()
androidx.constraintlayout.widget.R$attr: int layout_editor_absoluteY
io.github.prabhuomkar.pytorchandroid.R$styleable: int ColorStateListItem_android_color
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int)
com.squareup.picasso.PicassoProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
androidx.fragment.R$id: int tag_unhandled_key_listeners
org.pytorch.IValue: long[] toLongList()
okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()
androidx.core.R$styleable: int FontFamilyFont_fontWeight
androidx.lifecycle.R
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetEndWithActions
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderFetchStrategy
org.pytorch.R$drawable: int abc_list_focused_holo
io.github.prabhuomkar.pytorchandroid.R$dimen: int fastscroll_minimum_range
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder defaultBitmapConfig(android.graphics.Bitmap$Config)
androidx.viewpager.R$drawable: int notification_bg_low_pressed
okio.GzipSource: long read(okio.Buffer,long)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_enabled
androidx.cursoradapter.R
androidx.constraintlayout.solver.widgets.ConstraintWidget: float DEFAULT_BIAS
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int CHAIN_PACKED
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
androidx.appcompat.app.AppCompatDialogFragment: void setupDialog(android.app.Dialog,int)
androidx.core.app.NotificationCompat: java.util.List getInvisibleActions(android.app.Notification)
org.pytorch.torchvision.R$string: int abc_searchview_description_submit
androidx.activity.R$drawable: int notification_icon_background
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.camera.core.DisplayOrientedMeteringPointFactory: android.graphics.PointF translatePoint(float,float)
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurementInOther(android.view.View)
android.support.v4.media.MediaBrowserCompat: android.content.ComponentName getServiceComponent()
androidx.legacy.v4.R$attr: int fontProviderAuthority
org.pytorch.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.core.app.RemoteInput: java.lang.String EXTRA_RESULTS_DATA
androidx.camera.core.R$id: int accessibility_custom_action_4
androidx.core.view.ViewCompat: int SCROLL_AXIS_NONE
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
org.pytorch.torchvision.R$dimen: int abc_alert_dialog_button_dimen
androidx.activity.R$styleable: int GradientColor_android_endColor
androidx.camera.core.UseCase$StateChangeListener: void onUseCaseReset(androidx.camera.core.UseCase)
androidx.loader.R$id: int action_container
androidx.appcompat.R$attr: int actionBarSplitStyle
androidx.recyclerview.R$id: int accessibility_custom_action_6
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabText
org.pytorch.torchvision.R$styleable: int AppCompatTheme_spinnerStyle
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarWidgetTheme
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActionBar
androidx.core.view.TintableBackgroundView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.recyclerview.R$attr: int fastScrollEnabled
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()
androidx.exifinterface.media.ExifInterface$IfdType
androidx.appcompat.view.menu.MenuPresenter: boolean flagActionItems()
androidx.camera.core.SessionConfig$Builder: void addSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.core.view.NestedScrollingParent: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxWidth
androidx.core.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)
androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_180
org.pytorch.torchvision.R$styleable: int SearchView_defaultQueryHint
androidx.customview.R$styleable: int[] ColorStateListItem
org.pytorch.torchvision.R$attr: int fontProviderAuthority
androidx.recyclerview.selection.BandPredicate: boolean canInitiate(android.view.MotionEvent)
androidx.appcompat.R$id: int accessibility_custom_action_31
androidx.annotation.TransitionRes
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.slidingpanelayout.R$color: int notification_icon_bg_color
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_divider
androidx.vectordrawable.animated.R$color: int notification_action_color_filter
io.github.prabhuomkar.pytorchandroid.R$integer: int abc_config_activityDefaultDur
okhttp3.internal.Internal: void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
androidx.core.app.NotificationCompat: int FLAG_ONGOING_EVENT
androidx.core.app.NotificationCompat$Style: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintAmbientBigPicture()
androidx.recyclerview.widget.LinearLayoutManager: boolean getRecycleChildrenOnDetach()
okio.BufferedSource: boolean exhausted()
androidx.appcompat.R$attr: int actionModeFindDrawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintBottom_toBottomOf
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.versionedparcelable.VersionedParcel: double readDouble()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_android_layout
com.downloader.database.DownloadModel: java.lang.String getFileName()
okio.GzipSink: okio.Timeout timeout()
androidx.core.app.FrameMetricsAggregator
org.pytorch.torchvision.R$drawable: int abc_ratingbar_indicator_material
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.appcompat.R$attr: int searchIcon
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder fromConfig(androidx.camera.core.PreviewConfig)
android.support.v4.media.RatingCompat: int RATING_PERCENTAGE
org.pytorch.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.core.database.DatabaseUtilsCompat: java.lang.String concatenateWhere(java.lang.String,java.lang.String)
androidx.core.view.ViewGroupCompat: int getLayoutMode(android.view.ViewGroup)
org.pytorch.R$styleable: int SearchView_queryBackground
androidx.collection.LongSparseArray: void putAll(androidx.collection.LongSparseArray)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_min_width_minor
androidx.camera.core.R$id: int action_divider
androidx.core.R$styleable: int GradientColor_android_endColor
org.pytorch.torchvision.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AppCompatImageView
androidx.recyclerview.widget.AdapterListUpdateCallback: void onInserted(int,int)
androidx.loader.R$styleable: int GradientColor_android_startY
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig()
org.pytorch.DType: org.pytorch.DType FLOAT32
androidx.core.view.ViewCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
androidx.versionedparcelable.VersionedParcel: java.util.List readList(java.util.List,int)
androidx.constraintlayout.solver.Metrics: long graphOptimizer
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.fragment.app.Fragment: java.lang.Object getHost()
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
org.pytorch.R$attr: int actionBarTabBarStyle
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_24
androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)
com.downloader.request.DownloadRequest: void setTotalBytes(long)
androidx.legacy.v4.R$dimen: int notification_subtext_size
org.pytorch.torchvision.R$styleable: int MenuView_preserveIconSpacing
okio.BufferedSource: long readAll(okio.Sink)
com.downloader.utils.Utils: void deleteTempFileAndDatabaseEntryInBackground(java.lang.String,int)
androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()
androidx.core.widget.AutoScrollHelper: float RELATIVE_UNSPECIFIED
androidx.drawerlayout.R$id: int actions
androidx.appcompat.R$id
android.support.v4.media.session.IMediaSession: void seekTo(long)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_fontFamily
androidx.camera.core.UseCaseGroupLifecycleController: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.constraintlayout.solver.Metrics: long resolvedWidgets
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
androidx.appcompat.view.menu.MenuView$ItemView: void setShortcut(boolean,char)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.core.graphics.BitmapCompat: int getAllocationByteCount(android.graphics.Bitmap)
io.github.prabhuomkar.pytorchandroid.R$attr: int progressBarPadding
org.pytorch.torchvision.R$integer: int abc_config_activityDefaultDur
org.pytorch.torchvision.R$attr: int tooltipFrameBackground
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginRight
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setCenterRadius(float)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUB_TEXT
org.pytorch.torchvision.R$string: int abc_menu_enter_shortcut_label
androidx.cardview.R$styleable: int CardView_cardPreventCornerOverlap
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_margin
androidx.recyclerview.widget.RecyclerView$ItemAnimator
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMinTextSize()
androidx.coordinatorlayout.R$dimen: int notification_large_icon_height
androidx.swiperefreshlayout.R$integer
androidx.recyclerview.R$id: int info
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_android_alpha
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
androidx.recyclerview.widget.GridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.media.VolumeProviderCompat$Callback: VolumeProviderCompat$Callback()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORF_PREVIEW_IMAGE_START
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
org.pytorch.torchvision.R$id: int right_icon
androidx.recyclerview.R$string
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_RTL
androidx.recyclerview.R$layout: int notification_template_part_time
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: MediaSessionCompat$ResultReceiverWrapper(android.os.ResultReceiver)
org.pytorch.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_end
org.pytorch.R$id: int screen
androidx.core.app.SharedElementCallback: void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
androidx.camera.core.ImageOutputConfig: androidx.camera.core.AspectRatio getTargetAspectRatio()
androidx.recyclerview.R$id: int title
androidx.fragment.app.FragmentManager: java.util.List getFragments()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
androidx.camera.core.PreviewConfig: java.lang.Class getTargetClass()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int)
androidx.collection.ArraySet: void addAll(androidx.collection.ArraySet)
androidx.camera.core.R$layout: int custom_dialog
androidx.camera.core.impl.utils.Optional: boolean isPresent()
org.pytorch.R$drawable: int abc_cab_background_top_material
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
androidx.swiperefreshlayout.R$styleable: int[] GradientColorItem
org.pytorch.R$attr: int actionBarTabTextStyle
okhttp3.internal.http2.Http2Connection$Listener: okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_Y
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog
androidx.core.app.NotificationCompat$StreamType
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status RUNNING
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_Dark
okhttp3.internal.cache.InternalCache: void remove(okhttp3.Request)
org.pytorch.R$style: int TextAppearance_AppCompat_Display2
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionMode
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SENSING_METHOD
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_SearchResult_Title
androidx.loader.R$styleable: int FontFamily_fontProviderCerts
androidx.fragment.app.Fragment: void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
androidx.vectordrawable.animated.R$dimen: int notification_small_icon_background_padding
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Inverse
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_commitIcon
org.pytorch.R$attr: int autoSizeStepGranularity
okhttp3.Call: okhttp3.Request request()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int HORIZONTAL
androidx.loader.R$styleable: int[] FontFamilyFont
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_2_score
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
org.pytorch.R$anim: int abc_slide_out_top
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
org.pytorch.R$style: int Widget_AppCompat_CompoundButton_CheckBox
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_NEXT
org.pytorch.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
androidx.camera.core.SurfaceConfig: androidx.camera.core.SurfaceConfig$ConfigType getConfigType()
androidx.camera.core.CameraX: androidx.camera.core.CameraX$LensFacing getDefaultLensFacing()
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_MULTIPLE
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_AUTHOR
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
androidx.viewpager.R$attr: int fontProviderAuthority
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginLeft
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
androidx.camera.core.VideoCapture$Defaults: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.lifecycle.Observer: void onChanged(java.lang.Object)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setImageReaderMode(androidx.camera.core.ImageAnalysis$ImageReaderMode)
androidx.core.provider.FontsContractCompat$FontFamilyResult
androidx.legacy.v4.R$styleable: int[] FontFamilyFont
androidx.appcompat.R$styleable: int SwitchCompat_switchPadding
org.pytorch.torchvision.R$style: int Base_V7_Theme_AppCompat
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder setTargetName(java.lang.String)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEXT
androidx.appcompat.view.menu.CascadingMenuPopup$HorizPosition
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String)
androidx.savedstate.SavedStateRegistryController
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_IN
androidx.appcompat.view.menu.MenuPopupHelper
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.vectordrawable.animated.R$id: int actions
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer(int,int,int,int)
org.pytorch.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.appcompat.R$attr: int overlapAnchor
androidx.appcompat.R$layout: int abc_tooltip
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(java.lang.Object)
androidx.vectordrawable.animated.R$drawable: int notification_template_icon_bg
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_QUEUE_ITEM
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] StateListDrawable
androidx.viewpager.widget.PagerTitleStrip: void onMeasure(int,int)
io.github.prabhuomkar.pytorchandroid.R$layout: int custom_dialog
androidx.swiperefreshlayout.R$dimen: int notification_content_margin_start
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom[] values()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowActionBar
org.pytorch.R$attr: int actionModePasteDrawable
androidx.annotation.RequiresApi: int value()
androidx.core.R$id: int tag_transition_group
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLiveRegion(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_constraint_referenced_ids
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)
androidx.exifinterface.media.ExifInterface: void setGpsInfo(android.location.Location)
androidx.fragment.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.R$dimen: int hint_alpha_material_light
androidx.camera.core.DeferrableSurface: java.lang.String TAG
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newUnratedRating(int)
androidx.core.view.ScrollingView: int computeHorizontalScrollRange()
org.pytorch.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.media.VolumeProviderCompatApi21$Delegate: void onAdjustVolume(int)
com.google.common.util.concurrent.ListenableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)
androidx.appcompat.view.ActionMode: void setSubtitle(int)
androidx.activity.R$id: int accessibility_custom_action_1
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ImageButton
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelSlide(android.view.View,float)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_menu_layout
androidx.swiperefreshlayout.R$id: int time
io.github.prabhuomkar.pytorchandroid.R$attr: int barrierAllowsGoneWidgets
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context)
org.pytorch.torchvision.R$id: int search_mag_icon
androidx.appcompat.R$color: int material_grey_800
org.pytorch.R$color: int abc_search_url_text_pressed
io.github.prabhuomkar.pytorchandroid.R$id: int multiply
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.squareup.picasso.StatsSnapshot: long totalOriginalBitmapSize
okio.ByteString: okio.ByteString read(java.io.InputStream,int)
io.github.prabhuomkar.pytorchandroid.R$font: int worksans_regular
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
androidx.camera.core.BaseCamera
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_ONE_CHIP
org.pytorch.R$attr: int actionOverflowButtonStyle
okhttp3.ConnectionPool: int idleConnectionCount()
okhttp3.internal.http1.Http1Codec: boolean isClosed()
androidx.appcompat.widget.ActionBarOverlayLayout: void restoreToolbarHierarchyState(android.util.SparseArray)
com.squareup.picasso.PicassoProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
io.github.prabhuomkar.pytorchandroid.R$id: int search_button
org.pytorch.R$id: int search_edit_frame
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.media.MediaBrowserServiceCompat$BrowserRoot: MediaBrowserServiceCompat$BrowserRoot(java.lang.String,android.os.Bundle)
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper,android.os.Bundle)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA
androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)
org.pytorch.R$styleable: int[] AppCompatTheme
androidx.camera.camera2.R$id: int dialog_button
okio.BufferedSink: okio.BufferedSink writeIntLe(int)
androidx.exifinterface.media.ExifInterface: short RENDERED_PROCESS_CUSTOM
androidx.legacy.coreui.R$attr: int fontProviderFetchStrategy
androidx.camera.core.SessionConfig$Builder: void addAllDeviceStateCallbacks(java.util.Collection)
io.github.prabhuomkar.pytorchandroid.R$attr: int navigationContentDescription
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_middle_mtrl_dark
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification)
androidx.camera.camera2.R$id: int accessibility_custom_action_13
androidx.coordinatorlayout.R$styleable: int GradientColor_android_type
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: void setDropDownViewTheme(android.content.res.Resources$Theme)
org.pytorch.R$id: int shortcut
org.pytorch.R$style: int Widget_AppCompat_Button
androidx.localbroadcastmanager.content.LocalBroadcastManager
org.pytorch.torchvision.R$drawable: int abc_ic_star_half_black_16dp
okio.BufferedSource: long readLongLe()
okhttp3.HttpUrl: java.lang.String password()
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PLANAR_CONFIGURATION
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[])
androidx.viewpager.R$dimen: int compat_button_padding_vertical_material
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle toBundle()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
androidx.constraintlayout.solver.SolverVariable: int id
androidx.camera.core.SessionConfig$SessionError: androidx.camera.core.SessionConfig$SessionError SESSION_ERROR_UNKNOWN
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dropDownListViewStyle
org.pytorch.R$string: int abc_menu_meta_shortcut_label
androidx.savedstate.SavedStateRegistry$SavedStateProvider
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)
androidx.activity.OnBackPressedCallback
androidx.appcompat.R$styleable: int AlertDialog_showTitle
org.pytorch.R$id: int time
androidx.appcompat.widget.DecorToolbar: void setWindowCallback(android.view.Window$Callback)
androidx.slidingpanelayout.R$attr
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSideAnchor()
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_keylines
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.slidingpanelayout.R$color: int secondary_text_default_material_light
org.pytorch.R$styleable: int[] ListPopupWindow
androidx.lifecycle.LifecycleRegistry: int getObserverCount()
androidx.constraintlayout.widget.R$id: int parent
androidx.appcompat.R$drawable: int abc_vector_test
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.media.MediaBrowserServiceCompat: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle)
com.downloader.internal.stream.FileDownloadOutputStream: void seek(long)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.appcompat.R$id: int accessibility_custom_action_21
androidx.recyclerview.selection.MutableSelection: void copyFrom(androidx.recyclerview.selection.Selection)
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
org.pytorch.R$attr: int dialogCornerRadius
androidx.core.app.ActivityCompat: ActivityCompat()
androidx.camera.core.UseCaseAttachState: androidx.camera.core.SessionConfig$ValidatingBuilder getOnlineBuilder()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
okhttp3.Dispatcher: int getMaxRequests()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
androidx.activity.R$id: int accessibility_action_clickable_span
androidx.appcompat.R$dimen: int abc_dialog_corner_radius_material
okhttp3.Response$Builder: okhttp3.Response$Builder protocol(okhttp3.Protocol)
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int,boolean)
androidx.fragment.app.DialogFragment: void onStop()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowFixedHeightMajor
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat build()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType COLOR
androidx.appcompat.resources.R$drawable: int notification_bg
org.pytorch.torchvision.R$attr: int theme
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_FORCE_ASCII
androidx.constraintlayout.widget.R$id: int gone
androidx.camera.core.UseCaseAttachState: boolean isUseCaseOnline(androidx.camera.core.UseCase)
androidx.constraintlayout.widget.R$styleable: int[] ConstraintSet
androidx.cardview.widget.CardView: int getContentPaddingRight()
io.github.prabhuomkar.pytorchandroid.R$attr: int windowActionBarOverlay
androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.drawerlayout.R$styleable: int[] FontFamily
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetName(java.lang.String)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation()
androidx.core.view.OneShotPreDrawListener: void removeListener()
org.pytorch.torchvision.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
androidx.customview.widget.ViewDragHelper: int getActivePointerId()
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
org.pytorch.torchvision.R$dimen: int abc_text_size_caption_material
androidx.appcompat.app.AppCompatDialogFragment: AppCompatDialogFragment()
okhttp3.Request$Builder: okhttp3.Request$Builder delete(okhttp3.RequestBody)
androidx.camera.core.CameraX: boolean hasCameraWithLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
androidx.camera.camera2.impl.compat.CameraDeviceCompat: int SESSION_OPERATION_MODE_NORMAL
androidx.slidingpanelayout.R$dimen: int compat_button_inset_vertical_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()
okhttp3.CacheControl$Builder: okhttp3.CacheControl build()
androidx.fragment.R$id: int accessibility_custom_action_15
androidx.appcompat.R$attr: int buttonBarNegativeButtonStyle
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
okio.GzipSource
androidx.core.R$styleable: int GradientColor_android_gradientRadius
okhttp3.WebSocketListener: void onOpen(okhttp3.WebSocket,okhttp3.Response)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.github.prabhuomkar.pytorchandroid.R$attr: int collapseContentDescription
androidx.media.R$styleable: int ColorStateListItem_android_color
io.github.prabhuomkar.pytorchandroid.R$string: int abc_searchview_description_submit
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowScale()
org.pytorch.R$dimen: int tooltip_y_offset_touch
androidx.appcompat.R$styleable: int DrawerArrowToggle_spinBars
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_android_color
android.support.v4.media.MediaBrowserCompat$ItemCallback: MediaBrowserCompat$ItemCallback()
androidx.core.view.MotionEventCompat: int ACTION_POINTER_INDEX_MASK
androidx.appcompat.widget.PopupMenu: void dismiss()
okio.Source: void close()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.fragment.R$id: int accessibility_custom_action_9
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
org.pytorch.R$string: int abc_searchview_description_search
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
org.pytorch.torchvision.R$color: int background_floating_material_light
androidx.vectordrawable.R$id: int notification_main_column
okhttp3.internal.http2.Http2Connection$Builder
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
androidx.recyclerview.widget.SortedList$Callback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.asynclayoutinflater.R$drawable: int notification_tile_bg
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$attr: int fontFamily
androidx.appcompat.view.menu.MenuBuilder: void setOptionalIconsVisible(boolean)
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_media_cancel_action
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)
androidx.core.app.NotificationCompat$WearableExtender: int getHintScreenTimeout()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.core.app.NotificationCompat: int VISIBILITY_SECRET
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.camera.core.R$styleable: int ColorStateListItem_android_alpha
androidx.asynclayoutinflater.R$layout: int notification_template_icon_group
androidx.loader.R$id: int right_icon
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_color
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher()
androidx.camera.core.CameraControlInternal: void submitCaptureRequests(java.util.List)
androidx.recyclerview.R$styleable: int ColorStateListItem_alpha
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: boolean inDragRegion(android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_screen_toolbar
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.app.JobIntentService: boolean isStopped()
org.pytorch.R$id: int message
androidx.core.provider.FontsContractCompat: void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action)
io.github.prabhuomkar.pytorchandroid.R$attr: int alpha
androidx.versionedparcelable.VersionedParcel: java.lang.Throwable getRootCause(java.lang.Throwable)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textSize
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.drawerlayout.R$styleable: int GradientColor_android_startColor
androidx.appcompat.R$id: int customPanel
androidx.recyclerview.widget.SortedListAdapterCallback: void onRemoved(int,int)
androidx.appcompat.widget.SwitchCompat: void setSplitTrack(boolean)
androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)
androidx.appcompat.app.WindowDecorActionBar: boolean isShowing()
androidx.fragment.R$styleable
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.asynclayoutinflater.R$dimen: int notification_top_pad
androidx.collection.CircularIntArray: int size()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirst
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimations()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
org.pytorch.torchvision.R$style: int Platform_ThemeOverlay_AppCompat
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_B
okio.Pipe
androidx.appcompat.app.WindowDecorActionBar: int getTabCount()
androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(float)
okio.AsyncTimeout: AsyncTimeout()
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback)
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constrainedHeight
org.pytorch.R$styleable: int MenuView_android_itemTextAppearance
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: java.lang.Object getTag(android.view.View)
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextColor
okhttp3.EventListener: void callStart(okhttp3.Call)
androidx.legacy.coreui.R$attr: int layout_insetEdge
okhttp3.Call: void cancel()
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_FIRED
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_12
androidx.appcompat.R$styleable: int[] Spinner
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getLayer()
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: void setDefaultSwipeDirs(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
androidx.collection.ArraySet: boolean isEmpty()
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonStyleSmall
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDx(int)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_ARTISTS
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder username(java.lang.String)
org.pytorch.Tensor: int[] getDataAsIntArray()
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FLASH
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
okhttp3.Request$Builder: okhttp3.Request build()
org.pytorch.torchvision.R$integer: int abc_config_activityShortDur
org.pytorch.torchvision.R$attr: int autoCompleteTextViewStyle
okhttp3.HttpUrl: java.lang.String encodedPath()
androidx.vectordrawable.R$id: int accessibility_custom_action_27
androidx.collection.SparseArrayCompat: boolean replace(int,java.lang.Object,java.lang.Object)
org.pytorch.torchvision.R$attr: int iconifiedByDefault
androidx.appcompat.R$attr: int subtitleTextStyle
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue peekValue(int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
okhttp3.internal.Util: void closeQuietly(java.net.ServerSocket)
io.github.prabhuomkar.pytorchandroid.R$attr: int colorControlNormal
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderPackage
androidx.fragment.R$id: int accessibility_custom_action_0
androidx.swiperefreshlayout.R$attr: int fontVariationSettings
org.pytorch.R$id: int search_go_btn
androidx.camera.core.SessionConfig$Builder: void setTag(java.lang.Object)
androidx.appcompat.resources.R$styleable: int FontFamilyFont_font
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void stop(java.lang.Object)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_000
okio.BufferedSource: long indexOfElement(okio.ByteString,long)
org.pytorch.R$drawable: int notification_template_icon_bg
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setHeader(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarDivider
androidx.recyclerview.R$dimen: int notification_subtext_size
androidx.collection.CircularArray: java.lang.Object getLast()
okhttp3.internal.connection.StreamAllocation: void streamFinished(boolean,okhttp3.internal.http.HttpCodec,long,java.io.IOException)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setImportant(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_run
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
org.pytorch.torchvision.R$attr: int textAppearanceListItemSecondary
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
okhttp3.CacheControl: boolean noCache()
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setConnectTimeout(int)
androidx.legacy.coreutils.R$id: int line1
androidx.legacy.coreutils.R$id: int line3
org.pytorch.R$styleable: int SwitchCompat_track
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$id: int expanded_menu
com.downloader.httpclient.HttpClient: java.util.Map getHeaderFields()
androidx.appcompat.R$attr: int checkboxStyle
io.github.prabhuomkar.pytorchandroid.R$attr: int cardElevation
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(int)
androidx.versionedparcelable.VersionedParcel$ParcelException: VersionedParcel$ParcelException(java.lang.Throwable)
okio.ByteString: byte[] toByteArray()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setSurfaceOccupancyPriority(int)
androidx.appcompat.widget.DecorContentParent: void initFeature(int)
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.fragment.app.Fragment: int getTargetRequestCode()
androidx.swiperefreshlayout.R$layout: int notification_action
okhttp3.internal.http.RealInterceptorChain: okhttp3.Request request()
androidx.camera.core.R$drawable: int notification_bg
androidx.appcompat.resources.R$drawable: int abc_vector_test
androidx.core.widget.TintableImageSourceView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.camera.core.CameraRepository
org.pytorch.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
io.github.prabhuomkar.pytorchandroid.R$string: int app_info_licenses
io.github.prabhuomkar.pytorchandroid.R$attr: int switchStyle
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getActions()
androidx.fragment.app.FragmentController: java.util.List retainNonConfig()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_GENRE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)
androidx.appcompat.R$attr: int queryHint
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)
org.pytorch.torchvision.R$id: int text
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket)
androidx.appcompat.widget.AbsActionBarView: void animateToVisibility(int)
okhttp3.Cookie: boolean hostOnly()
org.pytorch.R$layout: int abc_cascading_menu_item_layout
androidx.appcompat.R$attr: int panelMenuListWidth
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupWindow
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
androidx.lifecycle.LiveData: boolean hasObservers()
androidx.camera.core.UseCase: void notifyReset()
androidx.appcompat.R$dimen: int abc_dialog_padding_top_material
okhttp3.Protocol: java.lang.String toString()
org.pytorch.torchvision.R$layout: int abc_list_menu_item_radio
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
androidx.collection.CircularArray: CircularArray(int)
okhttp3.internal.cache.CacheStrategy$Factory: CacheStrategy$Factory(long,okhttp3.Request,okhttp3.Response)
okhttp3.internal.http2.Http2Stream: okhttp3.internal.http2.ErrorCode getErrorCode()
androidx.drawerlayout.widget.DrawerLayout: void setChildInsets(java.lang.Object,boolean)
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_keyline
org.pytorch.torchvision.R$styleable: int SwitchCompat_trackTint
org.pytorch.torchvision.R$layout: int abc_list_menu_item_layout
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_DayNight
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)
org.pytorch.R$styleable: int SearchView_suggestionRowLayout
androidx.media.MediaSessionManager$RemoteUserInfo: int getUid()
org.pytorch.torchvision.R$styleable: int View_android_theme
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_arrowShaftLength
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.fragment.app.FragmentTransaction: int TRANSIT_ENTER_MASK
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: androidx.camera.core.SurfaceConfig transformSurfaceConfig(java.lang.String,int,android.util.Size)
androidx.core.view.ActionProvider$SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)
androidx.vectordrawable.R$styleable: int GradientColor_android_endColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowScale(float)
io.github.prabhuomkar.pytorchandroid.R$attr: int listDividerAlertDialog
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerX
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.Constants: java.util.ArrayList tasks
org.pytorch.torchvision.R$integer: int status_bar_notification_info_maxnum
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.internal.connection.StreamAllocation streamAllocation()
androidx.appcompat.widget.ActionBarContextView: void closeMode()
androidx.recyclerview.R$styleable: int FontFamily_fontProviderCerts
androidx.media.R$color: int notification_material_background_media_default_color
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionDestroyed()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.core.app.ComponentActivity$ExtraData: ComponentActivity$ExtraData()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumRows(int)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE
androidx.activity.R$attr: int alpha
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender(androidx.core.app.NotificationCompat$Action)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
android.support.v4.media.session.MediaSessionCompat$Callback: MediaSessionCompat$Callback()
okio.Buffer: void flush()
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String ERR_PERMISSION_TITLE
io.github.prabhuomkar.pytorchandroid.R$attr: int titleTextStyle
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_FOCUS
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)
androidx.media.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.R$attr: int actionModePopupWindowStyle
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.core.os.LocaleListCompat: boolean equals(java.lang.Object)
androidx.vectordrawable.R$layout: int notification_action_tombstone
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.annotation.Dimension: int PX
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object cloneTransition(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintWidth_max
androidx.camera.camera2.R$styleable: int FontFamilyFont_android_fontStyle
androidx.slidingpanelayout.R$id: int action_container
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
androidx.vectordrawable.R$styleable: int GradientColor_android_centerX
org.pytorch.torchvision.R$styleable
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,androidx.core.app.Person)
org.pytorch.torchvision.R$attr: int titleMarginEnd
androidx.camera.core.ImageAnalysis: androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setSupportedResolutions(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
androidx.viewpager.widget.ViewPager$LayoutParams
androidx.appcompat.widget.SwitchCompat: void setThumbDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
com.squareup.picasso.MemoryPolicy
androidx.activity.R$id: int forever
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerX
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int hashCode()
androidx.media.MediaBrowserProtocol: java.lang.String DATA_NOTIFY_CHILDREN_CHANGED_OPTIONS
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.lifecycle.ViewModelProvider$NewInstanceFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.annotation.VisibleForTesting: int PRIVATE
org.pytorch.Tensor: java.nio.LongBuffer allocateLongBuffer(int)
org.pytorch.torchvision.R$styleable: int MenuItem_actionProviderClass
org.pytorch.R$style: int Base_V22_Theme_AppCompat_Light
androidx.camera.core.ImageCapture
org.pytorch.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.loader.R$drawable: int notification_tile_bg
androidx.vectordrawable.R$id: int notification_main_column_container
androidx.camera.camera2.impl.Camera2CameraControl: void enableTorch(boolean)
androidx.slidingpanelayout.R$styleable: int GradientColorItem_android_offset
androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)
androidx.legacy.coreutils.R$styleable: <clinit>()
androidx.core.R$dimen: int notification_right_icon_size
org.pytorch.torchvision.R$styleable: int AppCompatImageView_android_src
androidx.core.os.BuildCompat
androidx.customview.R$styleable: int[] FontFamilyFont
androidx.camera.core.CameraCaptureMetaData$AfMode
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
androidx.activity.R$color: int secondary_text_default_material_light
androidx.customview.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)
org.pytorch.torchvision.R$dimen: int abc_edit_text_inset_bottom_material
androidx.media.R$dimen: int notification_subtext_size
androidx.appcompat.widget.TooltipCompat
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.legacy.v4.R$dimen: int compat_control_corner_material
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder(android.support.v4.media.MediaMetadataCompat,int)
org.pytorch.torchvision.R$dimen: int abc_control_inset_material
androidx.fragment.R$styleable: int GradientColor_android_startY
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getCancelLabel()
androidx.recyclerview.widget.LinearSmoothScroller: int SNAP_TO_ANY
androidx.core.provider.FontsContractCompat: android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[])
org.pytorch.torchvision.R$style: int Base_V26_Theme_AppCompat
okhttp3.internal.tls.BasicCertificateChainCleaner
androidx.activity.R$id: int tag_accessibility_clickable_spans
androidx.fragment.R$styleable: int GradientColor_android_gradientRadius
androidx.camera.camera2.R$attr: int fontProviderAuthority
androidx.media.R$styleable: int FontFamilyFont_android_fontStyle
androidx.camera.core.R$layout: int notification_template_icon_group
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
androidx.constraintlayout.widget.R$attr: int constraint_referenced_ids
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_MEDIUM
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()
androidx.camera.core.ImageAnalysisConfig: java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
androidx.camera.core.CameraFactory: java.util.Set getAvailableCameraIds()
com.facebook.jni.CppException
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
org.pytorch.torchvision.R$styleable: int View_android_focusable
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat build()
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_GET_EXTRA_BINDER
androidx.appcompat.resources.R$dimen: int notification_right_side_padding_top
androidx.recyclerview.selection.Selection: java.lang.String toString()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(android.net.Uri)
io.github.prabhuomkar.pytorchandroid.R$attr: int contentPaddingLeft
androidx.appcompat.R$id: int line3
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean)
org.pytorch.torchvision.R$attr: int fontFamily
com.downloader.PRDownloader: void cancel(int)
androidx.camera.core.PreviewConfig: java.lang.String getTargetName()
org.pytorch.torchvision.R$dimen: int abc_action_button_min_width_overflow_material
androidx.customview.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_expanded_menu_layout
org.pytorch.R$styleable: int MenuView_preserveIconSpacing
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStarted()
androidx.core.graphics.TypefaceCompatApi26Impl
androidx.media.R$color: int secondary_text_default_material_dark
androidx.core.view.MotionEventCompat: int AXIS_PRESSURE
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setBadgeIconType(int)
androidx.vectordrawable.R$id: int accessibility_custom_action_29
androidx.cardview.widget.CardView: void setCardElevation(float)
androidx.media.session.MediaButtonReceiver: MediaButtonReceiver()
io.github.prabhuomkar.pytorchandroid.R$id: int spacer
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AF_AE_AWB
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP_PREFIX
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Bundle getExtras()
okhttp3.Protocol: okhttp3.Protocol HTTP_2
androidx.recyclerview.R$attr: int fontVariationSettings
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_TRACKBALL
androidx.activity.R$drawable: int notification_bg_low_pressed
okhttp3.internal.http2.Header: java.lang.String toString()
androidx.fragment.app.Fragment: void setAllowEnterTransitionOverlap(boolean)
org.pytorch.R$anim: int abc_grow_fade_in_from_bottom
org.pytorch.R$dimen: int abc_dropdownitem_text_padding_left
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_contentPaddingBottom
androidx.appcompat.app.WindowDecorActionBar: void show()
org.pytorch.torchvision.R$styleable: int[] AppCompatSeekBar
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
org.pytorch.torchvision.BuildConfig
androidx.concurrent.futures.ResolvableFuture: boolean set(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED
androidx.appcompat.R$attr: int listPreferredItemHeightSmall
androidx.legacy.v4.R$styleable: int[] GradientColorItem
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
androidx.legacy.coreutils.R$dimen: int notification_right_side_padding_top
androidx.constraintlayout.widget.R$attr: int layout_constraintGuide_begin
org.pytorch.torchvision.R$string: int abc_menu_space_shortcut_label
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)
org.pytorch.R$attr: int colorBackgroundFloating
androidx.cardview.R$styleable: int CardView_cardBackgroundColor
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
androidx.appcompat.R$attr: int buttonTintMode
androidx.constraintlayout.widget.ConstraintHelper: android.content.Context myContext
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_COPY
androidx.appcompat.widget.SearchView$OnCloseListener
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_media_custom
androidx.versionedparcelable.VersionedParcel: float readFloat(float,int)
androidx.constraintlayout.solver.Metrics: Metrics()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_BIAS_VALUE
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
android.support.v4.media.RatingCompat: java.lang.Object getRating()
okhttp3.Headers: java.util.Set names()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.media.R$dimen: int compat_button_inset_horizontal_material
okhttp3.EventListener: void requestHeadersEnd(okhttp3.Call,okhttp3.Request)
com.squareup.picasso.Cache: int size()
androidx.camera.core.R$id: int line3
androidx.slidingpanelayout.R$dimen: int notification_subtext_size
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setHeader(java.lang.String,java.lang.String)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CUSTOM_ACTION_EXTRAS
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_centerX
com.facebook.jni.IteratorHelper: IteratorHelper(java.lang.Iterable)
androidx.core.net.TrafficStatsCompat: void clearThreadStatsTag()
org.pytorch.R$string: int abc_searchview_description_clear
androidx.legacy.coreui.R$styleable: int GradientColorItem_android_offset
io.github.prabhuomkar.pytorchandroid.R$id: int icon
com.downloader.request.DownloadRequest: java.lang.String getDirPath()
org.pytorch.torchvision.R$attr: int actionBarSplitStyle
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
androidx.legacy.coreutils.R$attr: int font
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
androidx.media.AudioAttributesCompat: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_select_dialog_material
org.pytorch.R$dimen: int notification_top_pad
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_SEED_CBC_SHA
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.camera.camera2.R$id: int tag_unhandled_key_event_manager
org.pytorch.R$color: int material_blue_grey_900
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_DISMISS
androidx.annotation.PluralsRes
androidx.vectordrawable.animated.R$attr: int fontProviderPackage
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.core.app.NotificationCompat$WearableExtender: android.app.PendingIntent getDisplayIntent()
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator: void validateRequestPermissionsRequestCode(int)
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
org.pytorch.torchvision.R$id: int radio
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_END
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V23_Theme_AppCompat
androidx.recyclerview.widget.DividerItemDecoration
androidx.camera.core.SingleImageProxyBundle: com.google.common.util.concurrent.ListenableFuture getImageProxy(int)
androidx.loader.R$styleable: <clinit>()
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context)
org.pytorch.R$styleable: int FontFamilyFont_fontVariationSettings
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_MD5
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
androidx.core.app.RemoteInput$Builder: RemoteInput$Builder(java.lang.String)
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State CLOSING
androidx.core.content.res.FontResourcesParserCompat
androidx.appcompat.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.pytorch.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.media.R$styleable: int GradientColor_android_endX
androidx.core.view.WindowCompat: int FEATURE_ACTION_MODE_OVERLAY
okio.Buffer: void require(long)
androidx.appcompat.resources.R$id: int accessibility_action_clickable_span
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetClass(java.lang.Class)
androidx.recyclerview.widget.SnapHelper
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: RecyclerView$SmoothScroller()
org.pytorch.R$drawable: int abc_item_background_holo_dark
org.pytorch.R$dimen: int abc_dialog_fixed_width_major
androidx.camera.core.CameraX$ErrorCode: androidx.camera.core.CameraX$ErrorCode USE_CASE_ERROR
org.pytorch.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount
androidx.drawerlayout.R$id: int right_icon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
androidx.core.provider.FontsContractCompat
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
android.support.v4.media.session.MediaSessionCompat: void setSessionActivity(android.app.PendingIntent)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
androidx.activity.R$integer: int status_bar_notification_info_maxnum
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.core.app.NotificationCompat: int STREAM_DEFAULT
androidx.recyclerview.widget.RecyclerView: int HORIZONTAL
androidx.recyclerview.widget.GridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_android_minHeight
androidx.appcompat.R$dimen: int abc_panel_menu_list_width
androidx.media.app.NotificationCompat$MediaStyle: NotificationCompat$MediaStyle(androidx.core.app.NotificationCompat$Builder)
androidx.activity.R$dimen: int notification_small_icon_background_padding
io.github.prabhuomkar.pytorchandroid.R$dimen: int hint_alpha_material_dark
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.camera.camera2.R$styleable: int FontFamilyFont_font
androidx.activity.R$id: int accessibility_custom_action_25
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String)
org.pytorch.R$dimen: int notification_content_margin_start
org.pytorch.R$color: int abc_tint_spinner
com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(java.io.File)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setFrame(int,int,int,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()
android.support.v4.media.session.PlaybackStateCompat: java.lang.Object getPlaybackState()
androidx.camera.core.R$styleable: int FontFamilyFont_android_fontWeight
androidx.constraintlayout.widget.ConstraintHelper: int mCount
androidx.fragment.app.FragmentTransaction: int TRANSIT_EXIT_MASK
okhttp3.Response: okhttp3.Response cacheResponse()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
org.pytorch.R$styleable: int Toolbar_titleMarginBottom
androidx.constraintlayout.widget.R$id: int wrap
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.CharSequence getText()
androidx.core.view.accessibility.AccessibilityClickableSpanCompat
androidx.legacy.v4.R$layout: int notification_action
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GAMMA
org.pytorch.R$attr: int actionOverflowMenuStyle
org.pytorch.Tensor: long numel()
org.pytorch.torchvision.R$style: int Platform_AppCompat
androidx.appcompat.widget.SwitchCompat: void setTextOn(java.lang.CharSequence)
androidx.appcompat.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_visibility
androidx.drawerlayout.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_NO_FLASH_FUNCTION
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_button_inset_vertical_material
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_action_menu_overflow_description
androidx.recyclerview.selection.SelectionTracker: boolean hasSelection()
androidx.fragment.app.Fragment: java.lang.Object requireHost()
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.camera.camera2.impl.Camera2LensFacingCameraIdFilter: java.util.Set filter(java.util.Set)
org.pytorch.torchvision.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
androidx.core.view.NestedScrollingChildHelper
androidx.activity.R$style: int TextAppearance_Compat_Notification_Line2
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.widget.SwitchCompat: int getSwitchPadding()
androidx.core.graphics.drawable.TintAwareDrawable
androidx.vectordrawable.animated.R$drawable: int notification_bg_low_normal
androidx.core.view.PointerIconCompat: int TYPE_GRAB
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonStyle
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ScrollingTabContainerView: ScrollingTabContainerView(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()
androidx.appcompat.R$attr: int colorSwitchThumbNormal
org.pytorch.R$styleable: int MenuGroup_android_menuCategory
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DURATION
androidx.media.R$attr
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
io.github.prabhuomkar.pytorchandroid.R$attr: int keylines
io.github.prabhuomkar.pytorchandroid.R$attr: int paddingBottomNoButtons
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SERVICE
okio.ByteString: int indexOf(byte[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context)
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()
androidx.recyclerview.R$attr: int fontProviderFetchTimeout
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginBottom
com.downloader.database.DownloadModel: int getId()
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(int)
androidx.loader.R$styleable: int[] GradientColorItem
okhttp3.MultipartBody: java.lang.String boundary()
androidx.recyclerview.widget.SortedList: void replaceAll(java.util.Collection)
okio.BufferedSink: okio.BufferedSink emitCompleteSegments()
androidx.camera.core.CameraX: androidx.camera.core.CameraControl getCameraControl(androidx.camera.core.CameraX$LensFacing)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String)
androidx.appcompat.R$id: int scrollView
org.pytorch.torchvision.R$styleable: int[] SearchView
okhttp3.Headers$Builder: okhttp3.Headers$Builder removeAll(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_DrawerArrowToggle
org.pytorch.IValue: double[] toDoubleList()
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState LOCKED_NOT_FOCUSED
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.coordinatorlayout.R$dimen: int notification_action_icon_size
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_transformPivotY
androidx.appcompat.app.ActionBar: void removeTabAt(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_toLeftOf
androidx.appcompat.view.ActionMode: android.view.View getCustomView()
okhttp3.internal.Util: java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean)
org.pytorch.torchvision.R$dimen: int highlight_alpha_material_colored
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowPending()
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.app.ActionBar: void setHideOffset(int)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
io.github.prabhuomkar.pytorchandroid.R$id: int up
okhttp3.Connection: okhttp3.Handshake handshake()
androidx.fragment.R$id
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mListNextMatchConstraintsWidget
androidx.camera.core.UseCaseConfig: int getSurfaceOccupancyPriority(int)
org.pytorch.R$id: int end
org.pytorch.R$layout: int abc_action_menu_item_layout
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
org.pytorch.R$attr: int thumbTextPadding
android.support.v4.media.MediaBrowserCompat$MediaItem: MediaBrowserCompat$MediaItem(android.support.v4.media.MediaDescriptionCompat,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
androidx.recyclerview.widget.DiffUtil$Callback: DiffUtil$Callback()
androidx.customview.R$drawable: int notification_template_icon_bg
org.pytorch.R$anim: int abc_popup_exit
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
androidx.recyclerview.widget.DiffUtil$DiffResult: int convertOldPositionToNew(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService mainThreadExecutor()
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getPosition()
io.github.prabhuomkar.pytorchandroid.R$attr: int paddingEnd
android.support.v4.media.MediaBrowserCompat$ConnectionCallback: void onConnected()
androidx.slidingpanelayout.R$styleable: int GradientColor_android_gradientRadius
androidx.camera.core.R$dimen: int notification_media_narrow_margin
okhttp3.internal.connection.StreamAllocation: StreamAllocation(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.Call,okhttp3.EventListener,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_template_icon_low_bg
androidx.vectordrawable.animated.R$id: int time
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context,android.util.AttributeSet)
androidx.media.R$styleable: int GradientColor_android_tileMode
androidx.legacy.coreutils.R$id: int right_side
androidx.activity.R$dimen: int notification_small_icon_size_as_large
androidx.core.util.LogWriter
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
org.pytorch.R$style: int Base_Theme_AppCompat_Light_Dialog
androidx.camera.core.CameraX: boolean isBound(androidx.camera.core.UseCase)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.legacy.v4.R$styleable: int GradientColor_android_centerX
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String[] getParticipants()
androidx.constraintlayout.solver.Metrics: long extravariables
androidx.appcompat.R$drawable: int abc_btn_borderless_material
androidx.recyclerview.R$dimen: int compat_button_padding_vertical_material
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)
org.pytorch.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
okio.Buffer: long readLong()
androidx.core.app.ActivityCompat$PermissionCompatDelegate: boolean onActivityResult(android.app.Activity,int,int,android.content.Intent)
androidx.camera.core.R$dimen: int notification_content_margin_start
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker()
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlNormal
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat_Light
okio.ByteString: okio.ByteString toAsciiUppercase()
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker()
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog
androidx.core.view.ViewCompat: void removeAccessibilityAction(android.view.View,int)
okhttp3.Response$Builder: okhttp3.Response$Builder request(okhttp3.Request)
androidx.core.content.pm.ShortcutInfoCompat$Builder
org.pytorch.torchvision.R$anim: int abc_slide_in_top
okio.GzipSink
androidx.vectordrawable.R$id: int accessibility_action_clickable_span
androidx.appcompat.R$attr: int textColorSearchUrl
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.viewpager.widget.PagerTabStrip: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
androidx.customview.R$dimen: int notification_small_icon_background_padding
androidx.customview.widget.ExploreByTouchHelper: void invalidateVirtualView(int,int)
com.downloader.request.DownloadRequest: void setDownloadId(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
androidx.camera.core.ImageAnalysis: java.lang.String toString()
com.squareup.picasso.Target: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)
androidx.camera.core.impl.utils.futures.FutureChain: androidx.camera.core.impl.utils.futures.FutureChain from(com.google.common.util.concurrent.ListenableFuture)
org.pytorch.torchvision.R
androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.Person getPerson()
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper: DownloadHelper()
androidx.appcompat.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)
okhttp3.internal.tls.CertificateChainCleaner: CertificateChainCleaner()
org.pytorch.torchvision.R$layout: int select_dialog_multichoice_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_min
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
org.pytorch.torchvision.R$color: int material_grey_50
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)
androidx.constraintlayout.solver.widgets.Guideline: void setDrawOrigin(int,int)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_INDETERMINATE
io.github.prabhuomkar.pytorchandroid.R$integer
io.github.prabhuomkar.pytorchandroid.BuildConfig: java.lang.String APPLICATION_ID
androidx.appcompat.R$id: int checked
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
androidx.appcompat.widget.AbsActionBarView: void postShowOverflowMenu()
androidx.appcompat.R$styleable: int AppCompatTheme_dropDownListViewStyle
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.appcompat.R$dimen: int abc_edit_text_inset_horizontal_material
org.pytorch.torchvision.R$attr: int buttonPanelSideLayout
androidx.appcompat.R$dimen: int abc_text_size_caption_material
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.squareup.picasso.Callback$EmptyCallback: Callback$EmptyCallback()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.ListView getListView()
androidx.viewpager.widget.ViewPager: void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
org.pytorch.torchvision.R$attr: int titleTextAppearance
okhttp3.MultipartBody: okhttp3.MediaType type()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleRadius
androidx.exifinterface.media.ExifInterface: int getRotationDegrees()
okhttp3.FormBody: java.lang.String value(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.fragment.R$id: int time
androidx.core.os.LocaleListCompat: int size()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.camera.camera2.R$layout
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE
org.pytorch.torchvision.R$styleable: int Toolbar_logoDescription
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder purgeable()
androidx.coordinatorlayout.R$styleable: int[] ColorStateListItem
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
org.pytorch.R$styleable: int[] AlertDialog
io.github.prabhuomkar.pytorchandroid.R$attr: int tickMark
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_barrierAllowsGoneWidgets
androidx.core.graphics.drawable.WrappedDrawable: android.graphics.drawable.Drawable getWrappedDrawable()
okhttp3.internal.http2.Http2Connection$Listener: Http2Connection$Listener()
org.pytorch.torchvision.R$id: int tag_unhandled_key_listeners
androidx.camera.core.ThreadConfig$Builder: java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor)
io.github.prabhuomkar.pytorchandroid.R$id: int wrap
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: boolean checkSupported(java.lang.String,java.util.List)
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AE_ONLY
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onSizeChanged(int,int,int,int)
androidx.drawerlayout.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean viewNeedsUpdate()
com.facebook.fbjni.BuildConfig: java.lang.String FLAVOR
io.github.prabhuomkar.pytorchandroid.R$attr: int subMenuArrow
org.pytorch.R$attr: int switchTextAppearance
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationContentDescription(int)
androidx.camera.core.impl.utils.Optional: java.lang.Object orNull()
androidx.customview.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.R$styleable: int[] DrawerArrowToggle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_default
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle(androidx.core.app.Person)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_bias
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
okhttp3.internal.http.StatusLine: okhttp3.internal.http.StatusLine get(okhttp3.Response)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentInvalid(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.constraintlayout.solver.SolverVariable: void setName(java.lang.String)
androidx.recyclerview.R$styleable: int GradientColor_android_startColor
android.support.v4.media.session.MediaControllerCompat: void removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.core.view.ViewCompat: float getPivotX(android.view.View)
androidx.appcompat.widget.DecorToolbar: boolean hasExpandedActionView()
androidx.appcompat.resources.R$attr: int alpha
androidx.appcompat.R$attr: int title
org.pytorch.IValue: boolean isBool()
androidx.fragment.R$style
okio.ForwardingTimeout: long deadlineNanoTime()
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat$SessionMode
androidx.recyclerview.widget.RecyclerView$SmoothScroller
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.models.Model: int getSize()
org.pytorch.R$styleable: int AlertDialog_buttonIconDimen
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor)
org.pytorch.torchvision.R$id: int icon_group
androidx.appcompat.widget.PopupMenu
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHeight_min
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object[] newArray(int)
androidx.camera.camera2.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.constraintlayout.widget.ConstraintSet: void setTranslationZ(int,float)
org.pytorch.R$style: int TextAppearance_AppCompat_Large_Inverse
org.pytorch.torchvision.R$color: int switch_thumb_disabled_material_light
androidx.core.view.ViewCompat: int TYPE_TOUCH
org.pytorch.R$id: int top
androidx.camera.camera2.R$layout: int notification_template_custom_big
androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.appcompat.resources.R$dimen: int notification_subtext_size
androidx.recyclerview.widget.LinearLayoutManager: int VERTICAL
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setReadTimeout(int)
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void addCancellationListener(java.lang.Runnable,java.util.concurrent.Executor)
org.pytorch.torchvision.R$drawable: int notification_icon_background
androidx.appcompat.resources.R$styleable: int GradientColor_android_endColor
androidx.constraintlayout.solver.widgets.ConstraintWidget: int SOLVER
androidx.camera.core.CameraCaptureCallback: void onCaptureCompleted(androidx.camera.core.CameraCaptureResult)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_DropDownItem_Spinner
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontallyRtl(int,int,int,int,int,int,int,float)
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.constraintlayout.solver.Metrics: long chainConnectionResolved
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okhttp3.Response$Builder: okhttp3.Response$Builder networkResponse(okhttp3.Response)
androidx.appcompat.R$dimen: int tooltip_vertical_padding
androidx.asynclayoutinflater.view.AsyncLayoutInflater: void inflate(int,android.view.ViewGroup,androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_RC4_128_SHA
androidx.core.app.FrameMetricsAggregator$MetricType
androidx.exifinterface.media.ExifInterface: short METERING_MODE_PATTERN
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[])
androidx.appcompat.widget.ViewStubCompat$OnInflateListener: void onInflate(androidx.appcompat.widget.ViewStubCompat,android.view.View)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)
io.github.prabhuomkar.pytorchandroid.R$string: int looking_for_contributions
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerX
androidx.coordinatorlayout.R$id: int blocking
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.collection.CircularIntArray: void addFirst(int)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_RECOMMENDATION
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_PAGE_SIZE
androidx.activity.R$id: int accessibility_custom_action_5
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHeight_max
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$attr: int titleMargin
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
org.pytorch.R$styleable: int ActionBar_height
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
androidx.core.content.PermissionChecker$PermissionResult
okio.Utf8
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.String getName()
androidx.recyclerview.widget.BatchingListUpdateCallback: BatchingListUpdateCallback(androidx.recyclerview.widget.ListUpdateCallback)
androidx.recyclerview.R$id: int italic
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING
androidx.appcompat.view.menu.MenuView: int getWindowAnimations()
com.downloader.request.DownloadRequest: com.downloader.request.DownloadRequest setOnCancelListener(com.downloader.OnCancelListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMax()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setConnectionType(androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType)
org.pytorch.torchvision.R$styleable: int Toolbar_subtitleTextColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetAspectRatioCustom(android.util.Rational)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void reset()
androidx.appcompat.widget.SwitchCompat: int getThumbOffset()
org.pytorch.R$styleable: int GradientColor_android_startY
com.facebook.jni.DestructorThread$Destructor
androidx.fragment.R$attr: int ttcIndex
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.loader.content.CursorLoader: void deliverResult(java.lang.Object)
okhttp3.HttpUrl: boolean equals(java.lang.Object)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createErrorVariable(int,java.lang.String)
androidx.recyclerview.selection.MutableSelection: boolean remove(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
org.pytorch.torchvision.R$attr: int autoSizeMaxTextSize
com.downloader.OnProgressListener
androidx.legacy.coreui.R$layout
io.github.prabhuomkar.pytorchandroid.R$styleable: int Spinner_android_entries
androidx.concurrent.futures.ResolvableFuture: boolean setException(java.lang.Throwable)
android.support.v4.media.session.MediaControllerCompat$Callback: void onExtrasChanged(android.os.Bundle)
androidx.constraintlayout.solver.widgets.ResolutionNode: void reset()
org.pytorch.R$styleable: int ActionMode_subtitleTextStyle
androidx.appcompat.resources.R$styleable: int StateListDrawableItem_android_drawable
androidx.collection.ArraySet: ArraySet(int)
androidx.vectordrawable.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$attr: int checkboxStyle
androidx.appcompat.R$attr: int editTextBackground
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.coordinatorlayout.R$dimen: int notification_right_icon_size
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRootY()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotation(float)
org.pytorch.torchvision.R$attr: int state_above_anchor
androidx.appcompat.R$string: int abc_action_menu_overflow_description
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int UNDEFINED_DURATION
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.collection.SparseArrayCompat: int indexOfKey(int)
org.pytorch.R$dimen: int abc_search_view_preferred_width
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
org.pytorch.R$style: int Theme_AppCompat_Light
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_subtitle_material_toolbar
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbShortTitleRes()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)
androidx.appcompat.R$string: int abc_shareactionprovider_share_with
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
okhttp3.MultipartBody: long contentLength()
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int bottom
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.view.ViewCompat: float getPivotY(android.view.View)
okio.Buffer: long indexOf(okio.ByteString)
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)
androidx.appcompat.R$attr: int paddingBottomNoButtons
androidx.cardview.R$attr: int cardViewStyle
androidx.appcompat.app.ActionBar: void setDisplayShowTitleEnabled(boolean)
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mTo
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor)
androidx.appcompat.R$styleable: int[] RecycleListView
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle)
androidx.swiperefreshlayout.R$id: int blocking
android.support.v4.media.session.MediaControllerCompat: int getShuffleMode()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
okio.ForwardingSink: okio.Timeout timeout()
org.pytorch.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
org.pytorch.R$styleable: int ViewBackgroundHelper_backgroundTint
androidx.core.app.NotificationCompat$Style
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_disabled_alpha_material_light
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback)
okhttp3.internal.http.CallServerInterceptor
androidx.core.view.MotionEventCompat: int AXIS_GAS
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ARTIST
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.core.provider.FontRequest: java.lang.String getIdentifier()
androidx.media.R$styleable: int FontFamily_fontProviderCerts
io.github.prabhuomkar.pytorchandroid.R$id: int gone
androidx.recyclerview.widget.SortedList: void clear()
androidx.collection.CircularIntArray: void removeFromEnd(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
androidx.recyclerview.selection.ItemKeyProvider: int SCOPE_CACHED
androidx.legacy.coreutils.R$id: int right_icon
androidx.appcompat.R$id: int dialog_button
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_ctrl_shortcut_label
androidx.print.PrintHelper: int getColorMode()
androidx.appcompat.widget.ListPopupWindow: int getSoftInputMode()
okio.HashingSink: okio.HashingSink sha256(okio.Sink)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder clearOnlyScaleDown()
org.pytorch.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.appcompat.widget.ViewStubCompat
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[])
androidx.core.app.CoreComponentFactory$CompatWrapped
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
org.pytorch.torchvision.R$attr: int itemPadding
androidx.camera.core.R$style: int TextAppearance_Compat_Notification_Info
androidx.collection.LruCache: LruCache(int)
androidx.camera.core.UseCase: void updateUseCaseConfig(androidx.camera.core.UseCaseConfig)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textColorLink
androidx.swiperefreshlayout.R$styleable: int GradientColorItem_android_offset
okhttp3.internal.http.StatusLine: int code
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig)
okio.ForwardingTimeout: boolean hasDeadline()
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeShortcuts(java.util.List)
androidx.activity.R$styleable: int GradientColor_android_gradientRadius
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorPrimary
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_font
android.support.v4.media.MediaMetadataCompat: java.util.Set keySet()
androidx.camera.core.SessionConfig$Builder: void setImplementationOptions(androidx.camera.core.Config)
androidx.camera.core.CameraX
org.pytorch.torchvision.R$attr: int titleMargins
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_AREA
org.pytorch.torchvision.R$styleable: int GradientColor_android_type
io.github.prabhuomkar.pytorchandroid.R$dimen: int subtitle_shadow_offset
org.pytorch.torchvision.R$dimen: int abc_dialog_corner_radius_material
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
okhttp3.Call: boolean isCanceled()
okhttp3.internal.connection.StreamAllocation: okhttp3.Route route()
org.pytorch.torchvision.R$layout: int abc_action_menu_item_layout
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
androidx.camera.camera2.R$styleable: int FontFamilyFont_fontWeight
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
androidx.camera.core.Preview$PreviewSurfaceCallback
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE
androidx.viewpager.R$drawable: int notification_bg
androidx.recyclerview.widget.SimpleItemAnimator: boolean getSupportsChangeAnimations()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.facebook.jni.ThreadScopeSupport
org.pytorch.R$layout: int abc_screen_toolbar
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_weight
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endX
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setCompanionWidget(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$dimen: int hint_pressed_alpha_material_dark
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean canChildScrollUp()
androidx.appcompat.R$layout: int abc_dialog_title_material
org.pytorch.torchvision.R$styleable: int ActionBar_subtitle
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewStubCompat_android_layout
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toRightOf
androidx.appcompat.widget.DecorToolbar: int getDropdownSelectedPosition()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHorizontal_bias
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceSearchResultTitle
org.pytorch.R$attr: int actionModeSelectAllDrawable
io.github.prabhuomkar.pytorchandroid.R$attr: int arrowShaftLength
androidx.lifecycle.ViewModelProvider
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
org.pytorch.torchvision.R$dimen: int hint_alpha_material_light
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowPending()
androidx.appcompat.resources.R$dimen: int compat_notification_large_icon_max_width
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: int getSurfaceGroupId()
org.pytorch.torchvision.R$attr: int actionModeSplitBackground
androidx.recyclerview.R$attr: int fastScrollHorizontalTrackDrawable
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderQuery
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
android.support.v4.media.session.MediaSessionCompat$QueueItem: long getQueueId()
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginEnd
androidx.recyclerview.widget.RecyclerView: int UNDEFINED_DURATION
androidx.core.util.Pools$Pool
androidx.loader.R
okhttp3.Cookie$Builder: Cookie$Builder()
org.pytorch.torchvision.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withBandPredicate(androidx.recyclerview.selection.BandPredicate)
org.pytorch.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()
okhttp3.Response: okhttp3.ResponseBody peekBody(long)
androidx.recyclerview.R$id: int dialog_button
org.pytorch.R$style: int Base_Widget_AppCompat_ButtonBar
androidx.camera.core.ImageReaderProxy: int getImageFormat()
okio.BufferedSink: okio.BufferedSink writeLong(long)
androidx.slidingpanelayout.R$dimen: int compat_button_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$attr: int font
androidx.activity.R$id: int tag_unhandled_key_listeners
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Line2
androidx.vectordrawable.R$id: int text
org.pytorch.R$drawable
org.pytorch.R$styleable: int[] MenuGroup
androidx.core.app.RemoteActionCompat: RemoteActionCompat(androidx.core.app.RemoteActionCompat)
androidx.drawerlayout.R$id: int action_text
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean)
okhttp3.internal.connection.StreamAllocation: okhttp3.EventListener eventListener
androidx.appcompat.R$dimen: int abc_list_item_height_material
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getCenterRadius()
org.pytorch.R$styleable: int SwitchCompat_thumbTintMode
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.camera.core.CameraX: androidx.camera.core.CameraInfoInternal getCameraInfo(java.lang.String)
org.pytorch.R$styleable: int SwitchCompat_android_thumb
okio.Buffer: okio.BufferedSink writeLongLe(long)
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_keylines
androidx.media.R$styleable: int FontFamily_fontProviderPackage
org.pytorch.torchvision.R$style: int Widget_AppCompat_SeekBar_Discrete
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_barrierAllowsGoneWidgets
com.facebook.jni.UnknownCppException: UnknownCppException(java.lang.String)
androidx.legacy.coreutils.R$id: int blocking
org.pytorch.torchvision.R$drawable: int abc_ic_ab_back_material
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
org.pytorch.torchvision.R$styleable: int CompoundButton_buttonTint
androidx.camera.camera2.impl.VideoCaptureConfigProvider: VideoCaptureConfigProvider(androidx.camera.core.CameraFactory,android.content.Context)
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
org.pytorch.torchvision.R$string: int status_bar_notification_info_overflow
androidx.appcompat.R$styleable: int ColorStateListItem_android_color
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onLoadComplete(androidx.loader.content.Loader,java.lang.Object)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_SERVICE_VERSION
androidx.legacy.v4.R$layout: int notification_template_lines_media
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig$Builder setHttpClient(com.downloader.httpclient.HttpClient)
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.annotation.IntRange
io.github.prabhuomkar.pytorchandroid.R$attr: int iconTintMode
androidx.media.R$styleable: int GradientColor_android_startY
org.pytorch.torchvision.R$styleable: int Spinner_android_popupBackground
org.pytorch.torchvision.R$dimen: int abc_search_view_preferred_height
androidx.fragment.R$id: int accessibility_custom_action_13
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollHorizontally()
androidx.camera.core.CameraCaptureResults
androidx.lifecycle.Transformations: androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)
androidx.appcompat.widget.ScrollingTabContainerView: void removeTabAt(int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerColor
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_material_dark
androidx.coordinatorlayout.R$drawable: int notify_panel_notification_icon_bg
androidx.camera.core.CameraX$ErrorCode: androidx.camera.core.CameraX$ErrorCode CAMERA_STATE_INCONSISTENT
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int bottomToBottom
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_creator
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder)
androidx.camera.camera2.Camera2Config: android.hardware.camera2.CameraCaptureSession$CaptureCallback getSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback)
org.pytorch.torchvision.R$styleable: int ActionMode_titleTextStyle
androidx.fragment.R$id: int accessibility_custom_action_7
androidx.constraintlayout.solver.Metrics: java.lang.String toString()
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
org.pytorch.R$styleable: int Toolbar_buttonGravity
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT_FLUORESCENT
org.pytorch.torchvision.R$styleable: int ColorStateListItem_android_color
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
androidx.appcompat.R$layout: int abc_action_menu_layout
androidx.appcompat.R$interpolator
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.recyclerview.widget.DiffUtil
org.pytorch.torchvision.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.loader.R$id: int action_image
com.squareup.picasso.Picasso: void resumeTag(java.lang.Object)
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
android.support.v4.media.session.MediaSessionCompat$Callback: void onCustomAction(java.lang.String,android.os.Bundle)
org.pytorch.R$attr: int preserveIconSpacing
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getRoleDescription()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.fragment.app.FragmentController: void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.ActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.legacy.coreutils.R$drawable: int notification_bg_low_pressed
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
androidx.core.app.Person: boolean isImportant()
com.downloader.request.DownloadRequest: void setPriority(com.downloader.Priority)
androidx.media.R$id: int action_divider
androidx.legacy.coreui.R$styleable: int GradientColor_android_tileMode
androidx.fragment.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
org.pytorch.torchvision.R$color: int abc_tint_btn_checkable
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ShareActionProvider: android.view.View onCreateActionView()
io.github.prabhuomkar.pytorchandroid.R$id: int listMode
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
com.downloader.httpclient.DefaultHttpClient: java.io.InputStream getInputStream()
androidx.legacy.v4.R$id
org.pytorch.torchvision.R$id: int action_bar
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleTextColor
androidx.appcompat.R$color: int bright_foreground_inverse_material_dark
androidx.legacy.coreui.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.camera.core.ImageCapture$OnImageCapturedListener: void onCaptureSuccess(androidx.camera.core.ImageProxy,int)
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_alertDialogTheme
org.pytorch.torchvision.R$string: int abc_searchview_description_query
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: double EPSILON
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
androidx.vectordrawable.animated.R$drawable: int notification_template_icon_low_bg
com.downloader.request.DownloadRequest: com.downloader.request.DownloadRequest setOnPauseListener(com.downloader.OnPauseListener)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeCopyDrawable
androidx.core.widget.NestedScrollView$OnScrollChangeListener
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] RecycleListView
org.pytorch.R$styleable: int AlertDialog_listItemLayout
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize valueOf(java.lang.String)
org.pytorch.torchvision.R$id: int text2
androidx.customview.R$dimen: int notification_large_icon_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getError()
okio.AsyncTimeout: void timedOut()
androidx.fragment.app.FragmentTransitionImpl: void addTarget(java.lang.Object,android.view.View)
androidx.fragment.R$color
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.legacy.coreutils.R$dimen: int notification_action_icon_size
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
androidx.vectordrawable.R$id: int async
androidx.recyclerview.widget.SortedList$Callback: SortedList$Callback()
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: DirectedAcyclicGraph()
androidx.appcompat.widget.ActivityChooserView: void setInitialActivityCount(int)
androidx.recyclerview.widget.OrientationHelper: int getDecoratedStart(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: void setLogo(android.graphics.drawable.Drawable)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAY_WHITE_FLUORESCENT
okhttp3.internal.connection.RealConnection: okhttp3.Protocol protocol()
androidx.collection.SparseArrayCompat: int keyAt(int)
androidx.appcompat.app.WindowDecorActionBar: boolean requestFocus()
okio.Buffer$UnsafeCursor: int next()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_default
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_STATUS
androidx.loader.content.Loader: void forceLoad()
okio.ByteString
androidx.fragment.R$styleable: int GradientColor_android_endX
androidx.localbroadcastmanager.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)
androidx.core.content.IntentCompat: java.lang.String EXTRA_HTML_TEXT
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.media.R$id: int action0
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
org.pytorch.R$style: int Base_Widget_AppCompat_ActionBar_TabText
org.pytorch.torchvision.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
androidx.core.os.CancellationSignal
androidx.collection.SimpleArrayMap: boolean isEmpty()
androidx.appcompat.R$attr: int commitIcon
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationZ
okhttp3.OkHttpClient: int pingIntervalMillis()
androidx.coordinatorlayout.R$drawable: int notification_icon_background
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setNumericShortcut(char,int)
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()
androidx.appcompat.R$style: int Base_V26_Widget_AppCompat_Toolbar
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState valueOf(java.lang.String)
org.pytorch.R$dimen: int abc_edit_text_inset_top_material
androidx.loader.content.Loader$OnLoadCanceledListener
androidx.appcompat.R$string: int abc_searchview_description_submit
androidx.customview.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)
androidx.loader.R$styleable: int FontFamilyFont_ttcIndex
okhttp3.ConnectionPool: ConnectionPool()
androidx.slidingpanelayout.R$id: int tag_transition_group
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollVertically()
okhttp3.Response: okhttp3.Response priorResponse()
okhttp3.internal.Util: void closeQuietly(java.net.Socket)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
androidx.core.view.ViewCompat: int getLabelFor(android.view.View)
okhttp3.Response$Builder: okhttp3.Response$Builder headers(okhttp3.Headers)
androidx.vectordrawable.R$drawable: int notification_tile_bg
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
org.pytorch.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence)
androidx.appcompat.R$dimen: int abc_button_inset_vertical_material
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SKIP_AD
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getHeight()
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.appcompat.R$id: int accessibility_action_clickable_span
androidx.camera.camera2.R$id: int accessibility_custom_action_15
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.media.R$style: int TextAppearance_Compat_Notification_Time
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawableItem_android_drawable
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.vectordrawable.R$dimen: int compat_button_padding_horizontal_material
androidx.slidingpanelayout.R$id
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.coordinatorlayout.R$dimen: int notification_media_narrow_margin
org.pytorch.torchvision.R$styleable: int ActionBar_itemPadding
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setParent(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageSelected(int)
androidx.appcompat.R$attr: int subtitleTextColor
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
androidx.appcompat.R$color: int material_grey_100
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
org.pytorch.torchvision.R$drawable: int abc_control_background_material
androidx.core.app.NotificationCompat: int VISIBILITY_PUBLIC
androidx.vectordrawable.animated.R$id: int tag_accessibility_clickable_spans
androidx.camera.core.R$id: int accessibility_custom_action_28
androidx.recyclerview.selection.SelectionTracker$SelectionObserver
androidx.vectordrawable.animated.R$dimen: int compat_control_corner_material
org.pytorch.R$styleable: int SearchView_android_inputType
org.pytorch.R$styleable: int AppCompatTheme_actionModeSplitBackground
androidx.appcompat.resources.R$styleable: int GradientColor_android_type
org.pytorch.R$styleable: int SwitchCompat_switchTextAppearance
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope SUBCLASSES
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
androidx.vectordrawable.R$drawable: int notification_bg_normal
androidx.legacy.coreutils.R$id: int icon
okhttp3.Request$Builder
androidx.core.app.NotificationCompat$MessagingStyle$Message: NotificationCompat$MessagingStyle$Message(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.vectordrawable.animated.R$id: int tag_accessibility_actions
org.pytorch.R$style: int Base_Widget_AppCompat_SearchView
androidx.recyclerview.widget.ListAdapter: java.lang.Object getItem(int)
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
androidx.activity.R$id: int accessibility_custom_action_12
androidx.camera.camera2.Camera2Config: java.lang.String CAPTURE_REQUEST_ID_STEM
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
androidx.core.util.LogWriter: void flush()
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SOFTWARE
androidx.core.view.NestedScrollingParent2: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
org.pytorch.torchvision.R$color: int abc_tint_switch_track
androidx.appcompat.widget.PopupMenu: android.view.View$OnTouchListener getDragToOpenListener()
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context)
androidx.camera.core.AppConfig$Builder: androidx.camera.core.MutableConfig getMutableConfig()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Caption
androidx.recyclerview.widget.SimpleItemAnimator: void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_INDEX
androidx.appcompat.R$attr: int borderlessButtonStyle
androidx.viewpager.R$id: int icon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA
androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideClosed()
androidx.core.content.pm.ShortcutInfoCompat
okio.AsyncTimeout: void enter()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.activity.R$styleable: int[] GradientColor
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeCopyDrawable
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MODEL
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_SHADE
org.pytorch.R$attr: int titleMargin
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWrapHeight()
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: int hashCode()
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListTheme
androidx.appcompat.R$styleable: int AppCompatTheme_actionButtonStyle
org.pytorch.torchvision.R$styleable: int ActionBar_title
androidx.core.app.ActivityOptionsCompat: android.os.Bundle toBundle()
androidx.fragment.R$id: int accessibility_custom_action_22
androidx.appcompat.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.camera.camera2.R$id: int tag_accessibility_heading
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity)
androidx.camera.core.R$drawable: int notification_bg_low_normal
androidx.asynclayoutinflater.R$id: int title
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderFetchStrategy
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorAccent
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)
androidx.camera.core.R$attr: int fontProviderFetchStrategy
androidx.coordinatorlayout.R$attr: int fontProviderAuthority
io.github.prabhuomkar.pytorchandroid.R$attr: int subtitleTextStyle
androidx.loader.content.Loader: int getId()
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
org.pytorch.R$style: int Platform_ThemeOverlay_AppCompat_Dark
androidx.asynclayoutinflater.R$drawable: int notify_panel_notification_icon_bg
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.camera.camera2.R$styleable: int ColorStateListItem_alpha
androidx.vectordrawable.R$styleable: int FontFamilyFont_font
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.loader.content.Loader: void reset()
androidx.fragment.app.Fragment: boolean isRemoving()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int,int)
org.pytorch.R$string: int app_name
androidx.recyclerview.widget.ItemTouchHelper: int START
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
org.pytorch.torchvision.R$styleable: int ActionMode_subtitleTextStyle
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_large_material
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
com.downloader.PRDownloaderConfig: java.lang.String getUserAgent()
okhttp3.CacheControl: boolean mustRevalidate()
androidx.appcompat.R$attr: int actionBarTheme
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_IMG_DIRECTION
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_REMINDER
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepare(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_menu_item_layout
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
org.pytorch.torchvision.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connectCircularConstraint(androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
androidx.appcompat.R$drawable: int notification_bg_low
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.fragment.R$layout: int notification_action_tombstone
androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_IDLE
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.customview.R$styleable: int ColorStateListItem_alpha
org.pytorch.torchvision.R$color: int switch_thumb_material_light
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_TextView
androidx.appcompat.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_SPEECH
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LIGHT_SOURCE
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.net.Uri)
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat
io.github.prabhuomkar.pytorchandroid.R$id: int tag_screen_reader_focusable
org.pytorch.R$dimen: int abc_dialog_min_width_major
org.pytorch.R$attr: int searchIcon
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetName(java.lang.String)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginStart
androidx.appcompat.resources.R$styleable: int FontFamilyFont_fontWeight
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$attr: int windowFixedHeightMajor
android.support.v4.media.RatingCompat: int RATING_NONE
org.pytorch.R$styleable: int FontFamilyFont_android_font
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionStart()
io.github.prabhuomkar.pytorchandroid.R$style: int Animation_AppCompat_Tooltip
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.fragment.app.FragmentManager: FragmentManager()
androidx.cardview.R$attr: int contentPaddingRight
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit)
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int)
org.pytorch.R$style: int TextAppearance_AppCompat_Display4
androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)
androidx.appcompat.R$color: int abc_secondary_text_material_dark
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetStart
androidx.core.app.NotificationCompat$MessagingStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V26_Widget_AppCompat_Toolbar
org.pytorch.R$attr: int hideOnContentScroll
androidx.appcompat.widget.ScrollingTabContainerView: void animateToVisibility(int)
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_CONNECT
androidx.recyclerview.widget.RecyclerView: int NO_POSITION
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMarginStart
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_light
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_EXPAND
androidx.recyclerview.widget.StaggeredGridLayoutManager: int VERTICAL
okhttp3.Protocol
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startX
okio.HashingSink
okio.Buffer: int read(byte[],int,int)
androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_LOW_GAIN_DOWN
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
okhttp3.Dispatcher: java.util.concurrent.ExecutorService executorService()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.resources.R$id: int notification_background
androidx.appcompat.R$attr: int listPreferredItemHeightLarge
androidx.appcompat.R$style
androidx.appcompat.R$drawable: int tooltip_frame_dark
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder setDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SATELLITES
okhttp3.internal.http.RealResponseBody: okhttp3.MediaType contentType()
androidx.asynclayoutinflater.R$attr: int fontProviderFetchStrategy
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_23
org.pytorch.torchvision.R$attr
android.support.v4.media.session.MediaSessionCompat$Token: int hashCode()
com.downloader.request.DownloadRequest: java.util.concurrent.Future getFuture()
okhttp3.internal.cache.DiskLruCache: void evictAll()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Menu
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.viewpager.R$dimen: int compat_button_padding_horizontal_material
org.pytorch.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.R$attr: int colorPrimaryDark
com.squareup.picasso.Request: float rotationPivotX
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startColor
org.pytorch.R$attr: int textAllCaps
android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
androidx.vectordrawable.R$id: int forever
org.pytorch.R$styleable: int AppCompatTheme_panelBackground
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_WHITE_BALANCE
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_SUPPORTED_RESOLUTIONS
androidx.exifinterface.media.ExifInterface: int DATA_DEFLATE_ZIP
okhttp3.internal.connection.RealConnection: boolean supportsUrl(okhttp3.HttpUrl)
androidx.camera.core.ImageCaptureConfig: java.lang.String getTargetName()
org.pytorch.torchvision.R$styleable: int SearchView_android_maxWidth
androidx.appcompat.R$id: int accessibility_custom_action_16
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
okhttp3.internal.Util: boolean isAndroidGetsocknameError(java.lang.AssertionError)
androidx.appcompat.widget.Toolbar: void setContentInsetsAbsolute(int,int)
androidx.media.MediaBrowserServiceCompat$Result: void detach()
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State RELEASED
androidx.media.MediaBrowserServiceCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
com.squareup.picasso.Request: int targetWidth
org.pytorch.torchvision.BuildConfig: java.lang.String VERSION_NAME
androidx.appcompat.app.AppCompatDelegate: int FEATURE_ACTION_MODE_OVERLAY
androidx.asynclayoutinflater.R$id
okhttp3.internal.connection.RouteSelector$Selection: java.util.List getAll()
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService myLooperExecutor()
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_showDividers
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
androidx.core.R$styleable: int GradientColor_android_centerY
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_9
org.pytorch.torchvision.R$styleable: int CompoundButton_buttonTintMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
androidx.legacy.v4.R$id: int top
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setGapSize(float)
androidx.core.view.ViewCompat: void offsetTopAndBottom(android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toBottomOf
androidx.appcompat.view.ActionMode: void setCustomView(android.view.View)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
android.support.v4.media.session.MediaControllerCompat$Callback: void onShuffleModeChanged(int)
androidx.fragment.R$id: int accessibility_custom_action_4
io.github.prabhuomkar.pytorchandroid.R$bool: int abc_config_actionMenuItemAllCaps
androidx.activity.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.R$styleable: int[] ActivityChooserView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
androidx.appcompat.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput)
okhttp3.Interceptor
androidx.media.AudioAttributesCompat: int USAGE_MEDIA
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findFirstVisibleItemPositions(int[])
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_subtitle
android.support.v4.media.MediaBrowserCompat$MediaItem: int FLAG_BROWSABLE
androidx.fragment.R$layout: int notification_template_part_chronometer
androidx.recyclerview.selection.GridModel$SelectionObserver: GridModel$SelectionObserver()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_textfield_search_material
androidx.core.app.ServiceCompat: int STOP_FOREGROUND_DETACH
okhttp3.Response: java.util.List headers(java.lang.String)
org.pytorch.torchvision.R$attr: int tickMarkTint
androidx.viewpager.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.resources.R$id: int accessibility_custom_action_21
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
androidx.appcompat.widget.TintInfo: boolean mHasTintList
androidx.legacy.v4.R$attr: int alpha
okhttp3.Cookie: boolean matches(okhttp3.HttpUrl)
androidx.media.R$id: int title
androidx.legacy.coreui.R$id: int actions
androidx.camera.camera2.R$color
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
org.pytorch.torchvision.R$attr: int drawerArrowStyle
io.github.prabhuomkar.pytorchandroid.R$attr: int itemPadding
androidx.annotation.AnyThread
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
androidx.constraintlayout.widget.ConstraintHelper: androidx.constraintlayout.solver.widgets.Helper mHelperWidget
androidx.core.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
androidx.fragment.app.Fragment: void setRetainInstance(boolean)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: RecyclerView$ItemAnimator()
androidx.camera.core.CameraIdFilter: java.util.Set filter(java.util.Set)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String ERR_PERMISSION_MESSAGE
okhttp3.Cache: long maxSize()
io.github.prabhuomkar.pytorchandroid.R$attr: int textAllCaps
org.pytorch.torchvision.R$id: int start
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void play(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintWidth_min
androidx.viewpager.widget.PagerTabStrip: boolean getDrawFullUnderline()
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailBcc()
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_6
androidx.recyclerview.R$dimen: int notification_right_icon_size
org.pytorch.torchvision.R$drawable: int abc_list_pressed_holo_light
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
androidx.core.view.NestedScrollingChild3: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PICTURE
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface,int)
androidx.constraintlayout.widget.Guideline: void onMeasure(int,int)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean removeCallbacks(java.lang.Runnable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceListItem
io.github.prabhuomkar.pytorchandroid.R$id: int search_badge
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_action_tombstone
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.appcompat.resources.R$styleable: int ColorStateListItem_android_alpha
androidx.camera.core.DeferrableSurface: int getAttachedCount()
org.pytorch.torchvision.R$attr: int titleMargin
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_24
okhttp3.internal.http2.Http2Connection$Builder: Http2Connection$Builder(boolean)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)
androidx.collection.ArrayMap: ArrayMap(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.R$styleable: int MenuItem_showAsAction
androidx.core.content.IntentCompat: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)
androidx.recyclerview.selection.AutoScroller: void reset()
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult
org.pytorch.torchvision.R$dimen: int abc_action_bar_stacked_max_height
androidx.appcompat.app.ActionBar: void setDisplayOptions(int)
androidx.recyclerview.R$dimen
okio.Buffer: long read(okio.Buffer,long)
org.pytorch.R$id: int progress_horizontal
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_search_view
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onDataRefresh()
androidx.recyclerview.widget.GridLayoutManager: boolean isUsingSpansToEstimateScrollbarDimensions()
okhttp3.internal.Internal: Internal()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchors(int)
androidx.core.content.MimeTypeFilter: java.lang.String matches(java.lang.String[],java.lang.String)
androidx.camera.core.ImageCapture$Defaults: ImageCapture$Defaults()
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR
org.pytorch.R$attr: int numericModifiers
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Large
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
org.pytorch.R$style: int Widget_AppCompat_SearchView
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.recyclerview.widget.OrientationHelper: int getDecoratedEnd(android.view.View)
com.downloader.core.DownloadExecutor
org.pytorch.BuildConfig
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endY
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
org.pytorch.R$color: int material_deep_teal_500
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderQuery
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_endColor
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()
androidx.collection.CircularArray: void addFirst(java.lang.Object)
androidx.collection.ArrayMap: java.util.Set entrySet()
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
org.pytorch.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.asynclayoutinflater.R$id: int right_side
androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)
androidx.media.R$dimen: int notification_top_pad_large_text
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments
org.pytorch.R$layout: int notification_template_part_time
androidx.core.R$id: int accessibility_custom_action_22
androidx.customview.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
androidx.activity.R$attr: int fontStyle
okio.Buffer: java.lang.String readUtf8()
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okhttp3.Cache: boolean isClosed()
androidx.appcompat.R$id: int notification_main_column_container
okio.InflaterSource
androidx.drawerlayout.R$styleable: int GradientColor_android_startY
androidx.annotation.Dimension
org.pytorch.R$color: int tooltip_background_light
androidx.recyclerview.R$id: int accessibility_custom_action_14
org.pytorch.R$layout: int notification_action_tombstone
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Caption
org.pytorch.R$attr: int controlBackground
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
androidx.appcompat.R$drawable: int abc_ic_star_black_36dp
androidx.appcompat.R$attr: int switchPadding
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
androidx.core.view.ViewCompat: float getTranslationX(android.view.View)
androidx.appcompat.view.menu.ListMenuPresenter: void setId(int)
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity: boolean onCreateOptionsMenu(android.view.Menu)
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
androidx.camera.camera2.R$id: int accessibility_custom_action_27
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.viewpager.R$dimen: int notification_small_icon_background_padding
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
androidx.asynclayoutinflater.R$dimen: int notification_action_icon_size
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type LEFT
androidx.fragment.app.Fragment$SavedState
androidx.appcompat.R$dimen: int abc_action_bar_content_inset_with_nav
androidx.appcompat.R$id: int async
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter()
androidx.collection.ArraySet: java.lang.String toString()
androidx.recyclerview.widget.SortedList$BatchedCallback: boolean areContentsTheSame(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void onDestroy()
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$drawable: int tooltip_frame_dark
org.pytorch.R$attr: int alpha
androidx.camera.core.CaptureProcessor: void onOutputSurface(android.view.Surface,int)
androidx.vectordrawable.animated.R$drawable: int notification_action_background
com.downloader.internal.stream.FileDownloadRandomAccessFile: void write(byte[],int,int)
androidx.viewpager.widget.ViewPager$DecorView
androidx.media.R$styleable: int FontFamily_fontProviderFetchStrategy
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.appcompat.R$styleable: <clinit>()
androidx.customview.R$dimen: int compat_notification_large_icon_max_height
androidx.legacy.coreutils.R$id: int actions
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.camera.camera2.R$id: int accessibility_custom_action_3
io.github.prabhuomkar.pytorchandroid.R$attr: int trackTint
org.pytorch.torchvision.R$styleable: int AppCompatTextView_autoSizePresetSizes
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
androidx.core.R$string
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
okio.Buffer: long completeSegmentByteCount()
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.camera.core.R$id: int dialog_button
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_barrierDirection
androidx.core.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.appcompat.R$attr: int titleTextAppearance
io.github.prabhuomkar.pytorchandroid.R$attr: int maxButtonHeight
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_21
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_NONE
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetName(java.lang.String)
org.pytorch.R$id: int action_bar_title
androidx.recyclerview.selection.StorageStrategy
androidx.drawerlayout.R$attr: int fontProviderPackage
androidx.slidingpanelayout.R$color: int ripple_material_light
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: RecyclerViewAccessibilityDelegate$ItemDelegate(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.core.text.TextDirectionHeuristicCompat
androidx.core.content.res.TypedArrayUtils: int getInt(android.content.res.TypedArray,int,int,int)
org.pytorch.torchvision.R$attr: int editTextColor
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastVisibleItemPositions(int[])
androidx.vectordrawable.R$id: int right_side
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_ASSIST_READING_CONTEXT
org.pytorch.R$attr: int contentInsetLeft
androidx.legacy.v4.R$dimen: int notification_media_narrow_margin
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder clearCenterCrop()
androidx.drawerlayout.widget.DrawerLayout$SavedState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
okhttp3.internal.tls.BasicTrustRootIndex
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Time
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.media.session.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Time
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetRotation(int)
androidx.camera.core.R$style: int TextAppearance_Compat_Notification_Title
androidx.recyclerview.widget.RecyclerView$State: boolean willRunPredictiveAnimations()
androidx.constraintlayout.solver.Metrics: long additionalMeasures
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator resize(int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
android.support.v4.media.session.MediaSessionCompat$Token: void setSessionToken2Bundle(android.os.Bundle)
okhttp3.CookieJar: java.util.List loadForRequest(okhttp3.HttpUrl)
com.squareup.picasso.Picasso: void setLoggingEnabled(boolean)
androidx.core.content.pm.PackageInfoCompat
androidx.camera.core.ImageOutputConfig$RotationValue
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.core.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.internal.connection.RealConnection: java.lang.String toString()
androidx.constraintlayout.widget.ConstraintLayout: android.view.View getViewById(int)
org.pytorch.torchvision.R$attr: int searchHintIcon
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.appcompat.R$id: int text
androidx.loader.content.AsyncTaskLoader: void waitForLoader()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setDirection(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
okhttp3.internal.http.RequestLine
android.support.v4.media.session.IMediaSession: void next()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMarginEnd
org.pytorch.R$style: int Theme_AppCompat_Dialog_MinWidth
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean isRunning()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASHPIX_VERSION
androidx.appcompat.R$style: int Platform_V21_AppCompat
androidx.vectordrawable.animated.R$styleable
androidx.camera.core.VideoCaptureConfig: int getTargetRotation(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Spinner_android_popupBackground
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_INFO_TEXT
okhttp3.CertificatePinner: okhttp3.CertificatePinner DEFAULT
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_switchMinWidth
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mMinHeight
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
android.support.v4.media.session.MediaControllerCompat: int getRatingType()
androidx.camera.core.Config: java.util.Set listOptions()
androidx.appcompat.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_weight
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredWidth(android.view.View)
androidx.activity.R$attr: int fontProviderPackage
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
org.pytorch.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] Spinner
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_item_background_holo_dark
org.pytorch.torchvision.R$styleable: int MenuGroup_android_enabled
org.pytorch.torchvision.R$drawable: int abc_cab_background_top_mtrl_alpha
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target: int IMAGE_WIDTH
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_panelMenuListWidth
org.pytorch.torchvision.R$attr: int switchStyle
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
androidx.camera.camera2.impl.CameraEventCallback: androidx.camera.core.CaptureConfig onEnableSession()
androidx.exifinterface.media.ExifInterface: short GPS_MEASUREMENT_NO_DIFFERENTIAL
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
androidx.appcompat.app.AppCompatDelegate: void installViewFactory()
org.pytorch.R$attr: int actionModeCopyDrawable
androidx.appcompat.resources.R$layout: int notification_template_part_time
androidx.core.internal.view.SupportMenuItem: boolean collapseActionView()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.loader.R$dimen: int compat_button_inset_vertical_material
org.pytorch.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.vectordrawable.R$layout
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
okhttp3.internal.http2.PushObserver: okhttp3.internal.http2.PushObserver CANCEL
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_body_2_material
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ProgressBar
androidx.core.app.NotificationCompat$BigPictureStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
org.pytorch.R$styleable: int StateListDrawable_android_constantSize
okhttp3.ResponseBody: byte[] bytes()
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DEVICE_SETTING_DESCRIPTION
org.pytorch.torchvision.R$id: int notification_main_column
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
org.pytorch.torchvision.R$dimen: int abc_action_bar_default_padding_start_material
org.pytorch.R$string: int abc_menu_space_shortcut_label
okio.BufferedSource: java.lang.String readUtf8Line()
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment: TaskFragment()
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_15
androidx.core.app.NotificationCompat: int FLAG_ONLY_ALERT_ONCE
androidx.appcompat.R$string: int abc_capital_off
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_min
androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)
org.pytorch.torchvision.R$attr: int backgroundSplit
android.support.v4.media.MediaDescriptionCompat: android.os.Bundle getExtras()
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_ALL
androidx.camera.core.CameraInfoUnavailableException
androidx.coordinatorlayout.R$attr: int coordinatorLayoutStyle
okhttp3.internal.http2.PushObserver: boolean onHeaders(int,java.util.List,boolean)
androidx.appcompat.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
okhttp3.Call: void enqueue(okhttp3.Callback)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActionBarLayout
androidx.fragment.app.ListFragment: ListFragment()
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent getIntent()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onNestedFling(android.view.View,float,float,boolean)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ADVERTISEMENT
io.github.prabhuomkar.pytorchandroid.R$id: int action_divider
org.pytorch.torchvision.R$styleable: int AppCompatTheme_toolbarStyle
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getAlpha()
androidx.camera.core.R$id: int accessibility_custom_action_13
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$attr: int switchTextAppearance
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constrainedWidth
androidx.exifinterface.media.ExifInterface: short SHARPNESS_SOFT
android.support.v4.media.session.PlaybackStateCompat: int STATE_STOPPED
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayLinkedVariables variables
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getDebugName()
androidx.camera.core.ImageCapture$Defaults: androidx.camera.core.ImageCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.core.view.ViewCompat: void setZ(android.view.View,float)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBFILE_TYPE
androidx.media.R$styleable: int[] GradientColor
org.pytorch.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: boolean equals(java.lang.Object)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.recyclerview.widget.RecyclerView$SavedState: void writeToParcel(android.os.Parcel,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_width
androidx.constraintlayout.widget.Constraints$LayoutParams
androidx.camera.core.CameraRepository: void init(androidx.camera.core.CameraFactory)
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetClass(java.lang.Class)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dialogTheme
androidx.camera.core.AppConfig: androidx.camera.core.CameraDeviceSurfaceManager getDeviceSurfaceManager(androidx.camera.core.CameraDeviceSurfaceManager)
org.pytorch.torchvision.R$attr: int divider
androidx.appcompat.R$styleable: int SwitchCompat_android_thumb
androidx.concurrent.futures.AbstractResolvableFuture: boolean set(java.lang.Object)
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE
com.downloader.PRDownloaderConfig: void setReadTimeout(int)
androidx.appcompat.widget.SwitchCompat: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.pytorch.torchvision.R$styleable: int ViewStubCompat_android_layout
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Info
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingEnd()
androidx.annotation.RawRes
androidx.appcompat.R$styleable: int MenuGroup_android_id
io.github.prabhuomkar.pytorchandroid.R$attr: int lineHeight
androidx.core.app.NotificationCompat: int GROUP_ALERT_SUMMARY
okhttp3.Cookie
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getCurrentVolume()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()
androidx.appcompat.R$attr: int windowActionModeOverlay
io.github.prabhuomkar.pytorchandroid.R$attr: int trackTintMode
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
androidx.appcompat.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display4
org.pytorch.R$styleable: int SearchView_android_imeOptions
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.core.view.ViewConfigurationCompat: boolean hasPermanentMenuKey(android.view.ViewConfiguration)
io.github.prabhuomkar.pytorchandroid.R$attr: int contentPadding
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
androidx.core.app.FrameMetricsAggregator: int LAYOUT_MEASURE_DURATION
androidx.legacy.coreui.R$styleable: int GradientColor_android_gradientRadius
androidx.cursoradapter.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])
androidx.recyclerview.widget.LinearLayoutManager: void prepareForDrop(android.view.View,android.view.View,int,int)
org.pytorch.R$styleable: int SwitchCompat_android_textOff
androidx.core.widget.AutoScrollHelper
androidx.camera.core.ImageReaderProxy$OnImageAvailableListener: void onImageAvailable(androidx.camera.core.ImageReaderProxy)
androidx.camera.core.AppConfig: java.lang.Class getTargetClass(java.lang.Class)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SKIP_TO_QUEUE_ITEM
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
okhttp3.Handshake: java.security.Principal peerPrincipal()
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeShortcuts(java.util.List)
androidx.media.AudioAttributesCompat$AttributeContentType
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
org.pytorch.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_PREVIOUS
androidx.media.R$layout: int notification_media_cancel_action
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_DISCONNECT
org.pytorch.torchvision.R$drawable: int notify_panel_notification_icon_bg
io.github.prabhuomkar.pytorchandroid.R$id: int time
androidx.appcompat.R$attr: int tickMarkTintMode
org.pytorch.torchvision.R$styleable: int MenuView_android_horizontalDivider
androidx.cardview.widget.CardView: float getRadius()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
androidx.legacy.coreutils.R$id: int info
okio.Buffer: java.lang.String readUtf8LineStrict()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_closeItemLayout
androidx.appcompat.R$dimen: int disabled_alpha_material_dark
org.pytorch.R$styleable: int GradientColor_android_type
androidx.camera.core.VideoCapture: androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing)
androidx.media.R$styleable: int[] FontFamily
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
org.pytorch.torchvision.R$attr: int lastBaselineToBottomHeight
org.pytorch.torchvision.R$attr: int actionModeCloseDrawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int ColorStateListItem_alpha
org.pytorch.torchvision.R$attr: int actionModeSelectAllDrawable
androidx.camera.core.PreviewConfig: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.constraintlayout.solver.LinearSystem: void displayVariablesReadableRows()
okhttp3.Request$Builder: okhttp3.Request$Builder tag(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
androidx.fragment.R$styleable: int GradientColor_android_type
androidx.swiperefreshlayout.R$drawable: int notification_bg_normal
androidx.collection.LruCache: java.util.Map snapshot()
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
androidx.fragment.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.customview.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)
androidx.fragment.R$id: int accessibility_custom_action_17
io.github.prabhuomkar.pytorchandroid.R$id: int clip_vertical
androidx.camera.core.CaptureConfig$Builder: void setTag(java.lang.Object)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
com.squareup.picasso.BuildConfig: java.lang.String APPLICATION_ID
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableBottomCompat
io.github.prabhuomkar.pytorchandroid.R$color: int dim_foreground_material_dark
okhttp3.internal.connection.RealConnection
androidx.fragment.R$styleable: int FontFamilyFont_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$id: int search_edit_frame
androidx.lifecycle.LifecycleObserver
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu_Overflow
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_top_pad
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.camera.core.SessionConfig: androidx.camera.core.SessionConfig defaultEmptySessionConfig()
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontStyle
androidx.fragment.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.R$id: int notification_main_column
androidx.core.graphics.ColorUtils: void XYZToLAB(double,double,double,double[])
androidx.fragment.app.DialogFragment: void onDetach()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_button_padding_vertical_material
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
okhttp3.WebSocketListener: void onMessage(okhttp3.WebSocket,java.lang.String)
androidx.core.app.NotificationCompat$Action$Builder: android.os.Bundle getExtras()
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.activity.R$styleable: int GradientColorItem_android_offset
androidx.appcompat.widget.ListPopupWindow: int WRAP_CONTENT
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView: void onClick(android.view.View)
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_right
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.vectordrawable.R$id: int dialog_button
androidx.recyclerview.widget.AsyncListUtil: AsyncListUtil(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback)
androidx.camera.core.DeferrableSurface: com.google.common.util.concurrent.ListenableFuture getSurface()
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()
android.support.v4.media.session.MediaSessionCompat$Callback: void onPause()
androidx.core.view.WindowInsetsCompat: boolean hasStableInsets()
androidx.annotation.VisibleForTesting: int PROTECTED
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DNG_VERSION
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build()
androidx.recyclerview.selection.ItemKeyProvider: int SCOPE_MAPPED
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
okhttp3.Protocol: okhttp3.Protocol HTTP_1_1
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$id: int search_src_text
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
okio.Buffer: okio.ByteString snapshot()
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Dialog
androidx.core.widget.CompoundButtonCompat
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener)
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_max
androidx.appcompat.R$drawable: int notification_action_background
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.core.app.AppLaunchChecker
org.pytorch.IValue: boolean isString()
androidx.core.widget.EdgeEffectCompat: boolean isFinished()
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person)
androidx.collection.SimpleArrayMap: int size()
androidx.appcompat.widget.ActivityChooserModel$ActivitySorter
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SMALL_ICON
android.support.v4.media.session.IMediaSession: android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
androidx.camera.core.ImageAnalysisConfig$Builder
androidx.recyclerview.selection.ItemKeyProvider: ItemKeyProvider(int)
android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap getIconBitmap()
org.pytorch.R$layout: int abc_alert_dialog_material
io.github.prabhuomkar.pytorchandroid.R$layout: int list_task_item
androidx.camera.camera2.impl.CameraBurstCaptureCallback
android.support.v4.media.session.ParcelableVolumeInfo: int audioStream
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_percent
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.core.view.ViewCompat: int ACCESSIBILITY_LIVE_REGION_NONE
androidx.core.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)
org.pytorch.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_constantSize
io.github.prabhuomkar.pytorchandroid.R$id: int ALT
android.support.v4.media.session.PlaybackStateCompat: long getBufferedPosition()
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.legacy.coreui.R$integer
androidx.appcompat.R$attr: int colorControlHighlight
okhttp3.internal.http2.Header: okio.ByteString value
com.downloader.core.ExecutorSupplier: com.downloader.core.DownloadExecutor forDownloadTasks()
androidx.camera.core.DeviceProperties
androidx.camera.core.UseCase$StateChangeListener: void onUseCaseActive(androidx.camera.core.UseCase)
androidx.core.view.MotionEventCompat: int AXIS_BRAKE
com.downloader.BuildConfig: int VERSION_CODE
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableTop
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_RATING
androidx.recyclerview.R$id: int accessibility_custom_action_31
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.R$attr: int actionModeStyle
androidx.core.graphics.PathParser$PathDataNode
androidx.appcompat.R$attr: int suggestionRowLayout
okio.BufferedSource: int readInt()
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_goIcon
androidx.camera.core.ImageCapture$Metadata
androidx.recyclerview.widget.SortedList: int add(java.lang.Object)
org.pytorch.torchvision.R$attr: int collapseContentDescription
androidx.media.AudioAttributesCompat: android.os.Bundle toBundle()
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String,java.lang.String)
androidx.annotation.IntRange: long from()
androidx.loader.content.CursorLoader: void setUri(android.net.Uri)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
okhttp3.MultipartBody$Part
org.pytorch.R$attr: int panelBackground
androidx.loader.content.Loader: void rollbackContentChanged()
androidx.activity.R$dimen
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$attr: int cardPreventCornerOverlap
androidx.customview.R$layout
org.pytorch.torchvision.R$drawable: int tooltip_frame_dark
androidx.legacy.v4.R$id: int bottom
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureResult create()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_PopupMenu
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_WRITER
org.pytorch.torchvision.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintDimensionRatio
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.constraintlayout.solver.widgets.Rectangle: boolean contains(int,int)
androidx.recyclerview.widget.RecyclerView: int VERTICAL
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setBackgroundColor(int)
androidx.loader.R$drawable: int notification_template_icon_bg
androidx.appcompat.R$dimen: int notification_action_icon_size
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.camera.camera2.impl.Camera2CaptureCallbacks
androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)
android.support.v4.media.MediaDescriptionCompat: java.lang.String EXTRA_DOWNLOAD_STATUS
androidx.constraintlayout.solver.widgets.Rectangle: int x
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(android.view.View)
org.pytorch.torchvision.R$style: int Animation_AppCompat_Tooltip
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
org.pytorch.torchvision.R$attr: int buttonStyleSmall
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.activity.OnBackPressedCallback: void remove()
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int guideBegin
androidx.fragment.app.Fragment: boolean isAdded()
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean)
androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_2
androidx.camera.core.ImageCapture$ImageCaptureError: androidx.camera.core.ImageCapture$ImageCaptureError valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence()
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
org.pytorch.R$color: int highlighted_text_material_dark
androidx.legacy.v4.R$styleable: <clinit>()
androidx.legacy.coreutils.R$style: int Widget_Compat_NotificationActionContainer
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_shift_shortcut_label
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)
androidx.camera.camera2.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.app.AppCompatActivity: void onDestroy()
okhttp3.OkHttpClient$Builder: java.util.List networkInterceptors()
androidx.camera.core.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
org.pytorch.R$styleable: int AppCompatTheme_colorPrimary
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int)
androidx.core.text.PrecomputedTextCompat: int getParagraphCount()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
androidx.media.R$style: int TextAppearance_Compat_Notification_Media
io.github.prabhuomkar.pytorchandroid.R$styleable: int View_paddingStart
androidx.core.view.ViewCompat: boolean isOpaque(android.view.View)
androidx.slidingpanelayout.R$id: int text
org.pytorch.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig()
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_font
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
androidx.camera.core.VideoCaptureConfig: java.lang.Class getTargetClass()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.os.Parcelable onSaveInstanceState()
org.pytorch.R$styleable: int ActionMode_background
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toEndOf
androidx.camera.core.R$drawable: int notification_action_background
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
androidx.activity.R$id: int time
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.FragmentActivity: void onStop()
androidx.camera.camera2.impl.CaptureSession$State: androidx.camera.camera2.impl.CaptureSession$State[] values()
androidx.core.content.pm.ActivityInfoCompat
com.downloader.database.DownloadModel: void setTotalBytes(long)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.List mWidgetGroups
okhttp3.ResponseBody: java.io.Reader charStream()
android.support.v4.media.session.IMediaSession: void prepare()
androidx.cardview.R$color: int cardview_shadow_end_color
androidx.camera.camera2.R$id: int accessibility_custom_action_10
io.github.prabhuomkar.pytorchandroid.R$dimen: int item_touch_helper_swipe_escape_max_velocity
androidx.coordinatorlayout.R$string: int status_bar_notification_info_overflow
org.pytorch.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
org.pytorch.torchvision.R$style: int Base_V28_Theme_AppCompat
androidx.camera.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
org.pytorch.R$color: int material_grey_900
org.pytorch.R$attr: int titleTextStyle
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$drawable: int abc_dialog_material_background
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
org.pytorch.torchvision.R$attr: int selectableItemBackgroundBorderless
com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour FIXED
okio.Buffer: okio.ByteString hmacSha512(okio.ByteString)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener)
com.downloader.PRDownloaderConfig: void setHttpClient(com.downloader.httpclient.HttpClient)
io.github.prabhuomkar.pytorchandroid.R$color: int primary_text_disabled_material_dark
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Medium
org.pytorch.Tensor: long[] getDataAsLongArray()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.core.view.WindowInsetsCompat: int getStableInsetLeft()
androidx.swiperefreshlayout.R$id: int italic
org.pytorch.R$dimen: int notification_right_side_padding_top
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToLeft
androidx.fragment.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.vectordrawable.R$id: int accessibility_custom_action_5
org.pytorch.torchvision.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable)
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.fragment.app.FragmentController: void doLoaderRetain()
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToAbsoluteDirection(int,int)
org.pytorch.torchvision.R$layout: int abc_action_menu_layout
androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()
androidx.camera.camera2.R$id: int accessibility_custom_action_16
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
androidx.core.app.FrameMetricsAggregator: int TOTAL_DURATION
androidx.recyclerview.widget.DiffUtil$Callback: boolean areItemsTheSame(int,int)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_SET_SHUFFLE_MODE
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: java.util.List transformFromCompat(java.util.List)
androidx.recyclerview.widget.ListUpdateCallback
androidx.fragment.R$attr: int fontProviderFetchStrategy
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)
android.support.v4.media.session.MediaSessionCompat: void setShuffleMode(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintTop_toTopOf
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_NoActionBar
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.AsyncListDiffer: java.util.List getCurrentList()
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
androidx.appcompat.R$layout: int select_dialog_item_material
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener: void onAnimationsFinished()
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
androidx.documentfile.provider.DocumentFile: boolean isVirtual()
androidx.camera.core.ImageAnalysis$ImageReaderMode: androidx.camera.core.ImageAnalysis$ImageReaderMode[] values()
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_dark
androidx.loader.content.CursorLoader: java.lang.String getSortOrder()
androidx.appcompat.widget.DecorToolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.camera.core.UseCaseGroupLifecycleController: void onStart(androidx.lifecycle.LifecycleOwner)
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat
androidx.cursoradapter.widget.SimpleCursorAdapter
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList getChildren()
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream,long)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.annotation.IdRes
androidx.recyclerview.widget.RecyclerView$Adapter: void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder addPoint(androidx.camera.core.MeteringPoint)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)
okio.ByteString: okio.ByteString hmacSha256(okio.ByteString)
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
okhttp3.internal.http2.Http2Connection: int openStreamCount()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
org.pytorch.R$styleable: int Spinner_android_dropDownWidth
androidx.appcompat.app.ActionBar: void setSubtitle(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_TOP
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: AsyncDifferConfig$Builder(androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.core.app.FrameMetricsAggregator: int COMMAND_DURATION
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_DELAYED
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)
androidx.legacy.v4.R$id: int line1
androidx.legacy.coreui.R$dimen: int notification_media_narrow_margin
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelSlide(android.view.View,float)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.R$attr: int contentInsetRight
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
androidx.core.content.res.FontResourcesParserCompat: int FETCH_STRATEGY_BLOCKING
androidx.appcompat.view.menu.ListMenuPresenter: java.lang.String VIEWS_TAG
com.downloader.internal.DownloadRequestQueue: void cancelAll()
androidx.recyclerview.widget.RecyclerView$RecyclerListener: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: java.util.List mConstrainedGroup
androidx.core.app.JobIntentService: JobIntentService()
io.github.prabhuomkar.pytorchandroid.R$id: int src_atop
androidx.fragment.app.DialogFragment: boolean getShowsDialog()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarPopupTheme
com.downloader.PRDownloader
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
org.pytorch.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender clone()
androidx.appcompat.R$id: int multiply
androidx.customview.widget.ExploreByTouchHelper: int getKeyboardFocusedVirtualViewId()
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderQuery
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_INVALID
org.pytorch.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator resizeDimen(int,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LONGITUDE_REF
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: int getGranularity()
androidx.media.R$attr: int fontProviderFetchStrategy
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
okhttp3.internal.cache.DiskLruCache: long getMaxSize()
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isScrollable()
android.support.v4.media.RatingCompat: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$id: int topPanel
org.pytorch.torchvision.R$dimen: int compat_notification_large_icon_max_width
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_orderInCategory
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String)
androidx.core.view.MarginLayoutParamsCompat: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.MotionEventCompat: int AXIS_Y
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context)
androidx.core.graphics.ColorUtils: void colorToLAB(int,double[])
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startColor
androidx.core.widget.TextViewCompat: int getMinLines(android.widget.TextView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Line2
androidx.asynclayoutinflater.R$dimen: int compat_button_inset_horizontal_material
org.pytorch.torchvision.R$drawable: int abc_seekbar_tick_mark_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
okio.ByteString: java.lang.String hex()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(java.lang.Object)
androidx.legacy.coreutils.R$drawable: int notification_icon_background
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisible(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
androidx.recyclerview.widget.DiffUtil$Callback: int getNewListSize()
androidx.camera.core.MeteringPoint: void setWeight(float)
com.facebook.soloader.nativeloader.NativeLoader
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
okhttp3.internal.http2.Http2Stream: boolean isOpen()
org.pytorch.torchvision.BuildConfig: int VERSION_CODE
androidx.camera.camera2.R$layout: int notification_action
androidx.camera.core.R$id: int async
androidx.appcompat.view.ActionMode
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
androidx.appcompat.app.ActionBar: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
androidx.recyclerview.widget.RecyclerView$SavedState
androidx.core.app.ShareCompat$IntentReader
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_font
okhttp3.Headers: java.lang.String name(int)
androidx.fragment.R$dimen: int notification_top_pad
androidx.appcompat.R$styleable: int SwitchCompat_switchMinWidth
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Large
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.loader.content.Loader: void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener)
androidx.asynclayoutinflater.R$color
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationX
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Title
org.pytorch.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
androidx.asynclayoutinflater.R$dimen: int compat_control_corner_material
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int)
androidx.appcompat.R$styleable: int GradientColor_android_startX
androidx.customview.widget.ViewDragHelper
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
org.pytorch.torchvision.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_toTopOf
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
androidx.fragment.app.FragmentController: void doLoaderStop(boolean)
androidx.recyclerview.widget.DiffUtil$ItemCallback: boolean areItemsTheSame(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)
androidx.appcompat.app.AlertDialog: android.widget.Button getButton(int)
androidx.appcompat.R$id: int accessibility_custom_action_8
com.downloader.Priority: com.downloader.Priority HIGH
androidx.appcompat.R$drawable: int abc_btn_colored_material
com.squareup.picasso.RequestCreator: void into(android.widget.RemoteViews,int,int,android.app.Notification,java.lang.String,com.squareup.picasso.Callback)
androidx.core.view.MarginLayoutParamsCompat: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
androidx.core.view.ViewParentCompat
androidx.recyclerview.selection.Selection
org.pytorch.torchvision.R$layout: int select_dialog_item_material
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setupDimensionRatio(boolean,boolean,boolean,boolean)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
androidx.media.R$dimen: int subtitle_shadow_radius
androidx.appcompat.R$attr: int toolbarStyle
androidx.core.R$styleable: int GradientColor_android_tileMode
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasDefinedWeights
androidx.core.app.ActivityOptionsCompat: android.graphics.Rect getLaunchBounds()
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_NOT_DEFINED
io.github.prabhuomkar.pytorchandroid.R$attr: int panelMenuListWidth
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withGestureTooltypes(int[])
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
androidx.drawerlayout.R$dimen: int notification_right_icon_size
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.lang.String getType()
androidx.camera.core.ImageAnalysisConfig$Builder: ImageAnalysisConfig$Builder()
okio.Buffer: short readShort()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder()
android.support.v4.media.session.MediaControllerCompat: int getRepeatMode()
androidx.camera.core.CaptureConfig$Builder: androidx.camera.core.Config getImplementationOptions()
androidx.legacy.v4.R$id: int actions
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
com.downloader.OnDownloadListener: void onError(com.downloader.Error)
androidx.swiperefreshlayout.R$dimen: int compat_button_padding_horizontal_material
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.slidingpanelayout.R$dimen: int notification_large_icon_width
androidx.appcompat.R$id: int accessibility_custom_action_7
androidx.recyclerview.R$id: int accessibility_custom_action_18
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.asynclayoutinflater.R$styleable: int[] GradientColor
androidx.camera.core.R$id: int notification_background
androidx.camera.camera2.R$id: int accessibility_custom_action_31
androidx.legacy.coreutils.R$dimen
com.downloader.database.DbHelper: com.downloader.database.DownloadModel find(int)
androidx.camera.core.R$id: int accessibility_custom_action_1
org.pytorch.torchvision.R$color: int switch_thumb_normal_material_dark
androidx.viewpager.R$style
androidx.core.app.NotificationCompat: java.lang.String EXTRA_CONVERSATION_TITLE
androidx.constraintlayout.widget.ConstraintSet: int CHAIN_SPREAD_INSIDE
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)
org.pytorch.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.recyclerview.widget.LinearSmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.camera.core.ImageProxy$PlaneProxy: java.nio.ByteBuffer getBuffer()
androidx.legacy.v4.R$id: int chronometer
com.downloader.internal.ComponentHolder: java.lang.String getUserAgent()
androidx.camera.camera2.R$id: int action_container
androidx.camera.core.DeviceProperties: androidx.camera.core.DeviceProperties create(java.lang.String,java.lang.String,int)
androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.core.os.OperationCanceledException: OperationCanceledException(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_font
androidx.customview.widget.ViewDragHelper: boolean settleCapturedViewAt(int,int)
androidx.activity.R$dimen: int compat_button_padding_vertical_material
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_minHeight
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener: void onDetachedFromWindow()
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.camera.core.CameraIdFilterSet: java.util.Set filter(java.util.Set)
io.github.prabhuomkar.pytorchandroid.R$attr: int textColorSearchUrl
androidx.activity.ComponentActivity: ComponentActivity(int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_menu_header_material
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelClosed(android.view.View)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerColor
androidx.legacy.v4.R$color: int secondary_text_default_material_dark
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout(int,int,int,int)
androidx.fragment.app.Fragment: android.os.Bundle getArguments()
org.pytorch.R$styleable: int MenuItem_iconTintMode
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: WindowDecorActionBar$TabImpl(androidx.appcompat.app.WindowDecorActionBar)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
androidx.appcompat.R$styleable: int[] SearchView
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
org.pytorch.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener)
org.pytorch.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody build()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(float[],long[])
androidx.appcompat.widget.MenuItemHoverListener: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
okhttp3.Response: long receivedResponseAtMillis()
org.pytorch.R$color: int material_blue_grey_950
androidx.appcompat.R$styleable: int ActionBar_height
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_textfield_search_default_mtrl_alpha
android.support.v4.media.session.PlaybackStateCompat: java.lang.String toString()
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference: java.lang.Object callStackTrace
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegate: void setCompatVectorFromResourcesEnabled(boolean)
androidx.camera.core.CameraControl: void cancelFocusAndMetering()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.camera.core.CaptureConfig$Builder: void addSurface(androidx.camera.core.DeferrableSurface)
androidx.core.view.NestedScrollingParent2: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.camera.core.SurfaceConfig: boolean isSupported(androidx.camera.core.SurfaceConfig)
androidx.media.R$id: int line1
androidx.loader.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.R$attr: int listMenuViewStyle
org.pytorch.R$style: int ThemeOverlay_AppCompat_ActionBar
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)
android.support.v4.media.session.ParcelableVolumeInfo: int describeContents()
androidx.appcompat.app.AppCompatDelegate: void setContentView(int)
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetEnd
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
io.github.prabhuomkar.pytorchandroid.R$dimen: int highlight_alpha_material_dark
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
org.pytorch.torchvision.R$attr: int listPreferredItemHeightSmall
androidx.camera.camera2.R$id: int line1
org.pytorch.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonStyle
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderFetchTimeout
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
com.google.auto.value.AutoValue$CopyAnnotations: java.lang.Class[] exclude()
okio.GzipSource: void close()
androidx.core.R$id: int text2
androidx.concurrent.futures.CallbackToFutureAdapter
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_DESCRIPTION
androidx.drawerlayout.R$id: int line3
org.pytorch.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
androidx.drawerlayout.R$drawable: int notification_tile_bg
androidx.constraintlayout.solver.widgets.ResolutionNode: int REMOVED
androidx.camera.core.FocusMeteringAction: boolean isAutoCancelEnabled()
androidx.core.view.ViewCompat: void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
androidx.vectordrawable.animated.R$string
androidx.appcompat.view.ViewPropertyAnimatorCompatSet
okio.Buffer: okio.ByteString sha256()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinHeight
com.downloader.request.DownloadRequest: void setDownloadedBytes(long)
okhttp3.Handshake: java.util.List peerCertificates()
androidx.appcompat.R$drawable: int abc_ratingbar_material
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_visible
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: void setAnchorId(int)
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_dither
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
androidx.camera.core.FocusMeteringAction: java.util.List getMeteringPointsAWB()
androidx.recyclerview.widget.SortedListAdapterCallback: void onInserted(int,int)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
org.pytorch.torchvision.R$styleable: int MenuItem_contentDescription
org.pytorch.R$styleable: int AppCompatTheme_ratingBarStyleSmall
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_seekbar_thumb_material
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.recyclerview.selection.OnDragInitiatedListener: boolean onDragInitiated(android.view.MotionEvent)
android.support.v4.media.session.IMediaControllerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
androidx.constraintlayout.solver.widgets.Barrier: void setBarrierType(int)
androidx.appcompat.R$id: int search_go_btn
androidx.core.graphics.TypefaceCompat
org.pytorch.torchvision.R$style: int Widget_Compat_NotificationActionContainer
androidx.media.VolumeProviderCompat: void setCurrentVolume(int)
io.github.prabhuomkar.pytorchandroid.R$anim
androidx.versionedparcelable.VersionedParcel: void writeSparseBooleanArray(android.util.SparseBooleanArray,int)
androidx.legacy.v4.R$drawable: int notification_bg_normal_pressed
org.pytorch.R$attr: int colorControlNormal
androidx.recyclerview.widget.PagerSnapHelper
org.pytorch.R$style: int Widget_AppCompat_Toolbar
androidx.core.app.RemoteInput: boolean isDataOnly()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
androidx.appcompat.view.ActionMode$Callback: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.core.app.FrameMetricsAggregator: int EVERY_DURATION
androidx.constraintlayout.widget.ConstraintSet: void clone(android.content.Context,int)
androidx.appcompat.R$styleable: int MenuItem_android_id
androidx.legacy.coreui.R$styleable: int GradientColor_android_endY
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_27
com.squareup.picasso.Downloader: void shutdown()
okhttp3.internal.Util: boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_GET_MEDIA_ITEM
org.pytorch.torchvision.R$attr: int contentDescription
org.pytorch.torchvision.R$attr: int buttonBarButtonStyle
org.pytorch.R$id: int add
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_26
androidx.versionedparcelable.VersionedParcel: void writeSerializable(java.io.Serializable,int)
org.pytorch.R$attr: int listPopupWindowStyle
androidx.fragment.app.ListFragment: void setListShownNoAnimation(boolean)
okhttp3.Address: okhttp3.CertificatePinner certificatePinner()
androidx.legacy.v4.R$styleable: int[] CoordinatorLayout
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepare()
androidx.appcompat.resources.R$dimen: int notification_top_pad_large_text
androidx.constraintlayout.solver.widgets.Guideline: void updateFromSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.camera.core.CaptureStage$DefaultCaptureStage: androidx.camera.core.CaptureConfig getCaptureConfig()
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setImageQueueDepth(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult
androidx.camera.core.SensorOrientedMeteringPointFactory: SensorOrientedMeteringPointFactory(float,float)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_half_black_48dp
androidx.camera.core.PreviewConfig: int getSurfaceOccupancyPriority()
androidx.appcompat.widget.SwitchCompat: void setThumbTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_trackTint
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_LEFT
okhttp3.internal.http1.Http1Codec: okhttp3.Response$Builder readResponseHeaders(boolean)
org.pytorch.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
org.pytorch.R$color: int background_floating_material_light
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
org.pytorch.R$id: int start
androidx.constraintlayout.widget.ConstraintLayout: int DESIGN_INFO_ID
io.github.prabhuomkar.pytorchandroid.R$attr: int autoCompleteTextViewStyle
androidx.legacy.coreui.R$id: int icon
androidx.appcompat.graphics.drawable.DrawerArrowDrawable$ArrowDirection
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.customview.R$dimen: int notification_content_margin_start
org.pytorch.R$attr: int itemPadding
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()
androidx.camera.core.CameraControlInternal$ControlUpdateListener: void onCameraControlCaptureRequests(java.util.List)
androidx.media.R$id: int text2
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_max
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.camera.core.CameraX: void unbind(androidx.camera.core.UseCase[])
androidx.viewpager.widget.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.annotation.AnimatorRes
androidx.vectordrawable.animated.R$id: int notification_main_column
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer getRootConstraintContainer()
androidx.appcompat.R$style: int Widget_AppCompat_Spinner
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.appcompat.R$drawable: int abc_list_focused_holo
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat build()
androidx.exifinterface.media.ExifInterface: void setDateTime(long)
androidx.appcompat.view.menu.MenuView$ItemView: void setTitle(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatSeekBar_tickMarkTint
org.pytorch.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.downloader.Error: void setResponseCode(int)
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(java.io.File,long)
androidx.loader.content.AsyncTaskLoader: void onCanceled(java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.appcompat.widget.FitWindowsViewGroup
androidx.fragment.R$dimen
androidx.media.R$styleable: int FontFamilyFont_fontWeight
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
org.pytorch.torchvision.R$color: int switch_thumb_disabled_material_dark
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: java.util.Map getSuggestedResolutions(java.lang.String,java.util.List,java.util.List)
androidx.core.os.LocaleListCompat: int hashCode()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowNoTitle
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActionMenuView
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
org.pytorch.R$styleable: int MenuView_android_windowAnimationStyle
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
androidx.appcompat.app.ActionBar: void setHideOnContentScrollEnabled(boolean)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float horizontalBias
androidx.media.R$dimen: int notification_right_icon_size
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
androidx.appcompat.R$drawable: int notification_bg
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int describeContents()
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontStyle
androidx.activity.R$id: int tag_screen_reader_focusable
androidx.core.app.NotificationManagerCompat
io.github.prabhuomkar.pytorchandroid.R$string: int menu_app_info
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap)
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_endX
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_searchIcon
org.pytorch.torchvision.R$attr: int actionBarSize
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_dither
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile findFile(java.lang.String)
androidx.camera.core.R$styleable: int GradientColor_android_gradientRadius
org.pytorch.torchvision.R$color: int secondary_text_disabled_material_dark
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)
androidx.fragment.R$styleable: int FontFamilyFont_ttcIndex
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$id: int titleDividerNoCustom
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(int,java.lang.CharSequence)
androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_PORTRAIT
androidx.appcompat.widget.ToolbarWidgetWrapper
androidx.core.R$id: int accessibility_custom_action_4
okhttp3.internal.connection.RouteSelector
androidx.activity.R$dimen: int compat_control_corner_material
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
okio.BufferedSource: long readLong()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
androidx.core.graphics.drawable.IconCompat: int TYPE_UNKNOWN
androidx.core.view.DragStartHelper: DragStartHelper(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener)
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
org.pytorch.torchvision.R$styleable: int[] AppCompatTextView
androidx.annotation.RequiresFeature: java.lang.String enforcement()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
okhttp3.OkHttpClient: OkHttpClient()
io.github.prabhuomkar.pytorchandroid.R$attr: int colorPrimary
okhttp3.internal.http2.Http2Stream: int getId()
androidx.appcompat.resources.R$id
okio.ByteString: okio.ByteString hmacSha512(okio.ByteString)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.recyclerview.widget.OrientationHelper: void offsetChild(android.view.View,int)
androidx.activity.R$styleable: int[] FontFamilyFont
androidx.vectordrawable.animated.R$attr: int fontStyle
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_NoActionBar
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionInfo(java.lang.Object)
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor directExecutor()
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setReadTimeout(int)
com.squareup.picasso.Picasso$RequestTransformer
androidx.appcompat.view.menu.ListMenuPresenter
androidx.camera.core.ImageCaptureConfig: int getTargetRotation()
androidx.appcompat.view.SupportActionModeWrapper: void finish()
org.pytorch.torchvision.R$attr: int windowMinWidthMajor
androidx.recyclerview.widget.PagerSnapHelper: PagerSnapHelper()
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_action_background
com.squareup.picasso.Transformation
androidx.appcompat.resources.R$id: int accessibility_custom_action_1
androidx.activity.R$layout
androidx.arch.core.executor.DefaultTaskExecutor
androidx.lifecycle.MediatorLiveData: void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateDrawPosition()
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
org.pytorch.torchvision.R$style: int Base_V21_Theme_AppCompat_Dialog
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWidthWrapContent(boolean)
androidx.legacy.v4.R$dimen: int notification_content_margin_start
androidx.versionedparcelable.VersionedParcel: long[] readLongArray(long[],int)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void dispatchAnimationsFinished()
io.github.prabhuomkar.pytorchandroid.R$color: int material_blue_grey_900
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toRightOf
androidx.swiperefreshlayout.R$style
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.vectordrawable.R$id: int action_image
io.github.prabhuomkar.pytorchandroid.R$id: int app_info_version
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[])
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback
androidx.loader.content.Loader: boolean takeContentChanged()
androidx.camera.camera2.R$id: int tag_accessibility_pane_title
androidx.recyclerview.widget.DiffUtil$Callback: boolean areContentsTheSame(int,int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerX
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontStyle
androidx.legacy.coreui.R$string: int status_bar_notification_info_overflow
androidx.constraintlayout.solver.LinearSystem: int getObjectVariableValue(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemHeightSmall
androidx.core.app.Person$Builder: androidx.core.app.Person build()
org.pytorch.torchvision.R$attr: int contentInsetStartWithNavigation
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
org.pytorch.torchvision.R$style: int Base_Animation_AppCompat_Tooltip
io.github.prabhuomkar.pytorchandroid.R$color: int background_floating_material_light
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean)
okio.ByteString: int lastIndexOf(byte[])
io.github.prabhuomkar.pytorchandroid.R$attr: int icon
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_25
androidx.camera.core.UseCaseAttachState: void updateUseCase(androidx.camera.core.UseCase)
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.RatingCompat getRating(java.lang.String)
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_RatingBar
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
androidx.constraintlayout.solver.widgets.ResolutionNode: void invalidateAnchors()
org.pytorch.R$attr: int colorSwitchThumbNormal
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.core.app.NotificationCompat: int PRIORITY_LOW
androidx.fragment.R$id: int accessibility_custom_action_19
androidx.legacy.coreutils.R$attr: int fontProviderCerts
org.pytorch.torchvision.R$style: int TextAppearance_Compat_Notification_Info
org.pytorch.torchvision.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDuration()
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColorItem_android_color
org.pytorch.R$attr: int progressBarPadding
androidx.camera.core.ImageProxy
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_percent
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar
androidx.appcompat.view.ActionMode: void setSubtitle(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMargin
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
androidx.appcompat.widget.AppCompatImageButton
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_big_media_narrow
androidx.appcompat.resources.R$dimen: int notification_small_icon_background_padding
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[],int)
okhttp3.internal.http2.Http2Connection: void shutdown(okhttp3.internal.http2.ErrorCode)
io.github.prabhuomkar.pytorchandroid.R$id: int tag_unhandled_key_listeners
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerOpened(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_statusBarBackground
okio.BufferedSource: long readHexadecimalUnsignedLong()
androidx.slidingpanelayout.R$id: int italic
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.widget.LinearLayoutCompat$OrientationMode
androidx.camera.camera2.R$attr: int ttcIndex
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)
org.pytorch.torchvision.R$color: int material_grey_900
androidx.recyclerview.widget.RecyclerView: long NO_ID
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
okhttp3.Request: java.lang.String toString()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Response proceed(okhttp3.Request)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)
androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)
androidx.appcompat.R$attr: int buttonGravity
androidx.exifinterface.media.ExifInterface: void saveAttributes()
androidx.camera.camera2.R$id: int accessibility_custom_action_8
androidx.core.graphics.drawable.TintAwareDrawable: void setTintList(android.content.res.ColorStateList)
androidx.camera.core.CameraCaptureSessionStateCallbacks: android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(android.hardware.camera2.CameraCaptureSession$StateCallback[])
androidx.appcompat.view.ActionMode$Callback: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.camera.core.CameraDeviceSurfaceManager: boolean requiresCorrectedAspectRatio(androidx.camera.core.UseCaseConfig)
okio.ByteString: okio.ByteString md5()
androidx.camera.camera2.impl.Camera2CaptureCallbacks: android.hardware.camera2.CameraCaptureSession$CaptureCallback createComboCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback[])
androidx.core.content.res.ResourcesCompat$FontCallback: void onFontRetrieved(android.graphics.Typeface)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.recyclerview.widget.LinearSmoothScroller: void onStop()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceRight(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Display1
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: int getItemCount()
okhttp3.internal.platform.Platform: java.util.List alpnProtocolNames(java.util.List)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_FROM_MEDIA_ID
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String PUBLIC_SUFFIX_RESOURCE
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.core.view.MotionEventCompat: int AXIS_HAT_X
androidx.appcompat.resources.R$style: int Widget_Compat_NotificationActionContainer
androidx.core.app.NotificationCompat$Action$WearableExtender: java.lang.CharSequence getInProgressLabel()
androidx.appcompat.app.WindowDecorActionBar: java.lang.CharSequence getTitle()
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder setUri(android.net.Uri)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_centerColor
org.pytorch.torchvision.R$attr: int searchViewStyle
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour getHorizontalDimensionBehaviour()
androidx.slidingpanelayout.R$id: int right_icon
okio.HashingSource: okio.HashingSource sha256(okio.Source)
org.pytorch.R$attr: int subtitle
androidx.appcompat.R$attr: int lineHeight
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
org.pytorch.torchvision.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.recyclerview.R$color: int secondary_text_default_material_light
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_seekbar_track_material
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
org.pytorch.R$attr: int buttonIconDimen
org.pytorch.R$anim: int abc_popup_enter
androidx.camera.camera2.Camera2Config: android.hardware.camera2.CameraCaptureSession$StateCallback getSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback)
androidx.camera.core.CameraX: androidx.camera.core.CameraDeviceSurfaceManager getSurfaceManager()
androidx.media.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$styleable: int MenuView_android_verticalDivider
okhttp3.internal.ws.RealWebSocket$Streams
androidx.camera.core.ImageAnalysisConfig: int getImageQueueDepth(int)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void normalize(android.graphics.PointF)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_textLocale
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_TEXT
androidx.viewpager.R$dimen: int notification_top_pad_large_text
androidx.fragment.app.FragmentStatePagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.annotation.RequiresApi
androidx.viewpager.R$id: int action_container
androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int,androidx.constraintlayout.solver.widgets.ResolutionDimension)
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: int hashCode()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
okhttp3.internal.tls.OkHostnameVerifier: boolean verifyHostname(java.lang.String,java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_TOP
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView: TaskListAdapter$TaskView(io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter,android.view.View,io.github.prabhuomkar.pytorchandroid.ui.adapters.RecyclerViewClickListener)
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
io.github.prabhuomkar.pytorchandroid.R$string: int abc_activitychooserview_choose_application
androidx.camera.core.BaseCamera$State
androidx.constraintlayout.solver.widgets.Helper
androidx.appcompat.R$styleable: int AppCompatTheme_colorPrimary
okio.Buffer: okio.Buffer readFrom(java.io.InputStream)
androidx.appcompat.R$dimen: int disabled_alpha_material_light
okhttp3.Headers: int size()
androidx.camera.core.Preview$UseCaseError
androidx.activity.R$id: int line1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
com.downloader.internal.stream.FileDownloadRandomAccessFile
org.pytorch.torchvision.R$dimen: int notification_top_pad_large_text
androidx.core.R$id: int text
androidx.appcompat.R$color: int background_material_dark
androidx.media.R$id: int normal
androidx.core.util.TimeUtils: int HUNDRED_DAY_FIELD_LEN
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
org.pytorch.torchvision.R$attr: int popupTheme
androidx.recyclerview.widget.ListUpdateCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDropdownItemCount()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
org.pytorch.R$style: int ThemeOverlay_AppCompat_Light
org.pytorch.R$style: int Widget_AppCompat_ActionButton_Overflow
androidx.customview.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry
androidx.annotation.UiThread
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_barrierDirection
androidx.drawerlayout.R$attr
org.pytorch.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.customview.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.R$attr: int switchPadding
androidx.appcompat.R$style: int Base_Animation_AppCompat_DropDownUp
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AppCompatSeekBar
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target: int IMAGE_HEIGHT
okhttp3.Protocol: okhttp3.Protocol HTTP_1_0
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintWidth_percent
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_5
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.recyclerview.widget.AsyncListUtil: int getItemCount()
androidx.camera.core.PreviewConfig: android.util.Size getDefaultResolution(android.util.Size)
androidx.camera.core.ImageAnalysisConfig: android.util.Size getMaxResolution(android.util.Size)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromUri(android.net.Uri,android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_INTEROPERABILITY_INDEX
androidx.camera.core.impl.LiveDataObservable$Result
org.pytorch.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActivityChooserView
androidx.media.MediaBrowserServiceCompat: void attachToBaseContext(android.content.Context)
org.pytorch.torchvision.R$style: int Widget_AppCompat_RatingBar_Indicator
android.support.v4.media.session.MediaSessionCompat$Callback: void onRemoveQueueItemAt(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginTop
androidx.loader.content.Loader$ForceLoadContentObserver
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
androidx.legacy.v4.R$styleable: int GradientColorItem_android_offset
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionButton_Overflow
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setAudioChannelCount(int)
androidx.appcompat.R$attr: int ratingBarStyleSmall
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
androidx.asynclayoutinflater.R$id: int chronometer
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource()
androidx.media.VolumeProviderCompat: void setCallback(androidx.media.VolumeProviderCompat$Callback)
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderQuery
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.appcompat.app.ActionBarDrawerToggle: boolean isDrawerSlideAnimationEnabled()
android.support.v4.media.session.MediaSessionCompat$Callback: void onRewind()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_tab_indicator_material
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.customview.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.squareup.picasso.NetworkPolicy: boolean isOfflineOnly(int)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.core.view.NestedScrollingParent2
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$FlashState getFlashState()
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
okhttp3.internal.cache.InternalCache: okhttp3.Response get(okhttp3.Request)
androidx.drawerlayout.R$attr: int fontProviderFetchStrategy
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.recyclerview.widget.DividerItemDecoration: int VERTICAL
okhttp3.Interceptor$Chain: int writeTimeoutMillis()
okio.HashingSink: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener)
androidx.activity.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$styleable: int TextAppearance_textLocale
io.github.prabhuomkar.pytorchandroid.BuildConfig
androidx.media.MediaBrowserServiceCompat: MediaBrowserServiceCompat()
okhttp3.HttpUrl: boolean isHttps()
io.github.prabhuomkar.pytorchandroid.R$dimen: int hint_pressed_alpha_material_light
androidx.camera.core.LensFacingCameraIdFilter: androidx.camera.core.LensFacingCameraIdFilter createLensFacingCameraIdFilterWithIdSet(androidx.camera.core.CameraX$LensFacing,java.util.Set)
androidx.core.content.res.ConfigurationHelper
androidx.appcompat.view.menu.ActionMenuItem: boolean invoke()
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
org.pytorch.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerColor
androidx.fragment.app.FragmentContainer: FragmentContainer()
androidx.exifinterface.media.ExifInterface: int DATA_JPEG_COMPRESSED
androidx.recyclerview.widget.SortedListAdapterCallback: void onChanged(int,int)
org.pytorch.R$dimen: int abc_alert_dialog_button_bar_height
io.github.prabhuomkar.pytorchandroid.R$attr: int fastScrollVerticalThumbDrawable
androidx.loader.content.AsyncTaskLoader: void onForceLoad()
androidx.camera.core.Config$ExtendableBuilder: androidx.camera.core.MutableConfig getMutableConfig()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_edit_text_inset_bottom_material
androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
org.pytorch.R$style: int Widget_AppCompat_DropDownItem_Spinner
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationY
androidx.recyclerview.widget.LinearSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.camera.camera2.R$drawable: int notify_panel_notification_icon_bg
org.pytorch.torchvision.R$styleable: int AlertDialog_listLayout
okhttp3.Dispatcher
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
androidx.core.app.ShareCompat$IntentReader: java.lang.String getType()
org.pytorch.R$anim: int abc_fade_out
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_color
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder resize(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int getType()
androidx.constraintlayout.widget.ConstraintSet: void removeFromHorizontalChain(int)
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_toBottomOf
androidx.camera.core.impl.utils.futures.Futures: java.lang.Object getDone(java.util.concurrent.Future)
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void update(int,int,int,android.view.animation.Interpolator)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
org.pytorch.torchvision.R$id: int action_menu_presenter
androidx.exifinterface.media.ExifInterface: int ORIENTATION_NORMAL
androidx.constraintlayout.solver.widgets.Guideline: void setGuideEnd(int)
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setSurfaceOccupancyPriority(int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_H_POSITIONING_ERROR
androidx.appcompat.R$styleable: int[] ActionMode
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setEnterFadeDuration(int)
androidx.vectordrawable.animated.R$dimen: int notification_action_icon_size
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int,int)
androidx.core.widget.ScrollerCompat: boolean isOverScrolled()
androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)
androidx.camera.core.CameraControl
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View,boolean)
androidx.swiperefreshlayout.R$id: int info
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder rotate(float,float,float)
androidx.collection.LruCache: int size()
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
org.pytorch.IValue: org.pytorch.IValue listFrom(long[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintRight_creator
androidx.core.R$id: int tag_unhandled_key_listeners
androidx.viewpager.widget.ViewPager: void fakeDragBy(float)
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RED_EYE_SUPPORTED
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority[] values()
org.pytorch.R$styleable: int Toolbar_titleMarginEnd
androidx.fragment.R$dimen: int notification_right_icon_size
androidx.drawerlayout.R
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getMaxVolume(java.lang.Object)
androidx.core.view.ViewCompat: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowHomeEnabled(boolean)
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler: void prepareForDrop(android.view.View,android.view.View,int,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int textLocale
androidx.core.app.NotificationCompat$WearableExtender: boolean getContentIntentAvailableOffline()
androidx.constraintlayout.widget.R$attr: int layout_goneMarginEnd
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintWidget getOwner()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV
org.pytorch.torchvision.R$styleable: int ActionBar_titleTextStyle
androidx.recyclerview.R$id: int accessibility_custom_action_8
androidx.appcompat.widget.ActivityChooserView
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderFetchStrategy
io.github.prabhuomkar.pytorchandroid.R$attr: int popupTheme
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int,int,int)
okhttp3.internal.Internal: boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
androidx.appcompat.widget.DecorToolbar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.viewpager.widget.PagerTitleStrip: void setGravity(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: java.security.Signature getSignature()
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
org.pytorch.Module: void destroy()
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider
androidx.activity.R$id: int italic
androidx.camera.core.ImageAnalysisConfig: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStopped()
androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionMenuTextColor
org.pytorch.torchvision.R$attr: int toolbarStyle
androidx.media.AudioAttributesCompat$Builder
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCornerRadius(float)
androidx.appcompat.widget.LinearLayoutCompat$DividerMode
org.pytorch.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.activity.R$attr: int ttcIndex
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer()
androidx.core.R$styleable: int GradientColor_android_startColor
androidx.activity.R$drawable
androidx.camera.core.SessionConfig$OptionUnpacker: void unpack(androidx.camera.core.UseCaseConfig,androidx.camera.core.SessionConfig$Builder)
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(int)
androidx.vectordrawable.R$dimen: int notification_content_margin_start
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(java.util.Locale)
io.github.prabhuomkar.pytorchandroid.R$id: int end_padder
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setTag(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_showText
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
io.github.prabhuomkar.pytorchandroid.R$attr: int actionViewClass
okio.ForwardingSource: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_ACTION
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Large_Inverse
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_EXTRA_BINDER
io.github.prabhuomkar.pytorchandroid.R$attr: int arrowHeadLength
androidx.loader.R$string
org.pytorch.R$style: int Platform_V21_AppCompat
androidx.camera.camera2.R$styleable: int GradientColor_android_centerY
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.viewpager.R$attr: int fontVariationSettings
androidx.recyclerview.R$dimen: int compat_button_inset_vertical_material
org.pytorch.torchvision.R$styleable: int[] View
androidx.appcompat.app.ActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View,int,int,int)
androidx.appcompat.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.coordinatorlayout.R$color
androidx.fragment.R$dimen: int notification_large_icon_height
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
androidx.camera.core.OptionsBundle: androidx.camera.core.OptionsBundle emptyBundle()
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator memoryPolicy(com.squareup.picasso.MemoryPolicy,com.squareup.picasso.MemoryPolicy[])
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.core.view.ViewCompat: int MEASURED_SIZE_MASK
androidx.legacy.v4.R$dimen: int notification_big_circle_margin
androidx.customview.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$color: int highlighted_text_material_light
okhttp3.Request: boolean isHttps()
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
org.pytorch.torchvision.R$attr: int textAppearanceSmallPopupMenu
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_SHUFFLE_MODE
org.pytorch.R$styleable: int CoordinatorLayout_keylines
androidx.appcompat.widget.ListPopupWindow: void setHeight(int)
androidx.recyclerview.R$styleable: int GradientColor_android_centerY
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_half_black_36dp
androidx.camera.core.CameraX$ErrorCode: androidx.camera.core.CameraX$ErrorCode[] values()
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.appcompat.resources.R$styleable: int GradientColor_android_startColor
androidx.vectordrawable.R$layout: int notification_template_part_chronometer
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.customview.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.R$style: int Base_Widget_AppCompat_Spinner
androidx.legacy.coreui.R$id: int left
androidx.recyclerview.selection.BandPredicate: BandPredicate()
androidx.recyclerview.widget.DividerItemDecoration: android.graphics.drawable.Drawable getDrawable()
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.recyclerview.R$id: int accessibility_custom_action_25
org.pytorch.R$id: int blocking
io.github.prabhuomkar.pytorchandroid.R$styleable: int ButtonBarLayout_allowStacking
android.support.v4.media.MediaMetadataCompat
io.github.prabhuomkar.pytorchandroid.R$id: int spread
org.pytorch.R$style: int Base_Widget_AppCompat_EditText
androidx.legacy.coreui.R$color
androidx.constraintlayout.widget.ConstraintSet: int BOTTOM
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_STATUS
androidx.asynclayoutinflater.R$string
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[])
com.downloader.internal.DownloadRequestQueue: void cancel(java.lang.Object)
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INT_FLAG
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)
androidx.camera.camera2.Camera2Config: androidx.camera.core.Config$Option CAMERA_EVENT_CALLBACK_OPTION
androidx.appcompat.resources.R$dimen: int notification_content_margin_start
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] CoordinatorLayout_Layout
androidx.appcompat.resources.R$id: int accessibility_custom_action_11
org.pytorch.R$attr: int editTextColor
androidx.appcompat.R$dimen: int abc_button_padding_horizontal_material
androidx.camera.core.ImageCapture$ImageCaptureError
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getGapSize()
androidx.recyclerview.widget.RecyclerView$Recycler: void bindViewToPosition(android.view.View,int)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
com.squareup.picasso.Request: java.util.List transformations
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: FingerprintManagerCompat$CryptoObject(java.security.Signature)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_3
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)
org.pytorch.R$id: int scrollIndicatorDown
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_29
io.github.prabhuomkar.pytorchandroid.R$id: int home
androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)
androidx.slidingpanelayout.widget.SlidingPaneLayout
androidx.appcompat.widget.ListPopupWindow: boolean performItemClick(int)
androidx.constraintlayout.widget.R$attr
androidx.core.app.FrameMetricsAggregator: int COMMAND_INDEX
org.pytorch.R$dimen: int abc_button_inset_vertical_material
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(int,int)
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
io.github.prabhuomkar.pytorchandroid.R$id: int dialog_button
androidx.constraintlayout.solver.widgets.Guideline: boolean allowedInBarrier()
androidx.fragment.app.DialogFragment: void dismiss()
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_LARGE
androidx.appcompat.R$styleable: int View_android_focusable
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintWidth_default
androidx.camera.camera2.impl.ImageCaptureConfigProvider: androidx.camera.core.ImageCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.activity.R$attr: int fontProviderQuery
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
org.pytorch.torchvision.R$attr: int actionBarTabBarStyle
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.camera.core.SessionConfig$Builder: void clearSurfaces()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
io.github.prabhuomkar.pytorchandroid.R$id: int packed
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceListItem
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
org.pytorch.torchvision.R$style: int Base_AlertDialog_AppCompat
androidx.core.app.RemoteInput: java.lang.CharSequence[] getChoices()
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()
androidx.core.os.EnvironmentCompat: java.lang.String MEDIA_UNKNOWN
androidx.legacy.v4.R$styleable: int[] CoordinatorLayout_Layout
androidx.core.content.res.TypedArrayUtils: java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int dialogCornerRadius
okio.DeflaterSink
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
org.pytorch.R$attr: int layout
androidx.appcompat.R$anim: int abc_slide_out_bottom
androidx.vectordrawable.animated.R$styleable: int GradientColorItem_android_offset
androidx.vectordrawable.R$id: int tag_accessibility_clickable_spans
org.pytorch.R$drawable: int tooltip_frame_dark
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationEnd(android.view.View)
androidx.camera.core.R$id: int tag_unhandled_key_listeners
androidx.customview.R$styleable
androidx.viewpager.R$styleable: int GradientColor_android_centerColor
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_y_offset_non_touch
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyle
androidx.recyclerview.selection.DefaultSelectionTracker: void onRestoreInstanceState(android.os.Bundle)
androidx.media.R$integer
androidx.fragment.R$attr: int fontWeight
androidx.activity.R$styleable: int[] GradientColorItem
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[])
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_ALTITUDE
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
androidx.media.AudioAttributesCompat: int getFlags()
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_minor
androidx.constraintlayout.solver.widgets.ConstraintWidget: void createObjectVariables(androidx.constraintlayout.solver.LinearSystem)
androidx.media.MediaSessionManager$RemoteUserInfo: MediaSessionManager$RemoteUserInfo(android.media.session.MediaSessionManager$RemoteUserInfo)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startColor
androidx.activity.R$styleable: int GradientColor_android_endY
androidx.appcompat.R$attr: int navigationIcon
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.annotation.InspectableProperty$EnumEntry
okhttp3.internal.platform.Platform: Platform()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getOpposite()
androidx.viewpager.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
androidx.recyclerview.R$id: int accessibility_custom_action_3
androidx.asynclayoutinflater.R$dimen: int notification_small_icon_size_as_large
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int DIRECT_CONNECTION
androidx.swiperefreshlayout.R$drawable: int notification_template_icon_bg
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PIXEL_Y_DIMENSION
androidx.camera.core.UseCaseConfig$Builder: java.lang.Object setSurfaceOccupancyPriority(int)
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromUri(java.lang.Object,android.net.Uri,android.os.Bundle)
androidx.versionedparcelable.VersionedParcel: void writeDoubleArray(double[],int)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.fragment.app.FragmentContainer
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
androidx.core.app.NotificationCompat
okhttp3.internal.http2.Http2Codec: void finishRequest()
android.support.v4.media.MediaMetadataCompatApi21$Builder: java.lang.Object newInstance()
androidx.versionedparcelable.VersionedParcel$ParcelException
androidx.camera.core.R$id: int action_container
androidx.core.R$id: int forever
androidx.recyclerview.widget.OrientationHelper: int getEndAfterPadding()
org.pytorch.torchvision.R$styleable: int SwitchCompat_trackTintMode
okhttp3.TlsVersion: okhttp3.TlsVersion SSL_3_0
androidx.core.text.HtmlCompat: int FROM_HTML_MODE_COMPACT
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getDirection()
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_height
androidx.versionedparcelable.VersionedParcel: android.os.Bundle readBundle(android.os.Bundle,int)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowFixedHeightMajor
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintGuide_end
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_ACCESSIBILITY_FOCUS
org.pytorch.R$styleable: int AppCompatTheme_actionModeStyle
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String)
androidx.appcompat.R$dimen: int abc_seekbar_track_progress_height_material
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_toBottomOf
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Info
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.pytorch.torchvision.R$styleable: int[] GradientColorItem
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.camera.core.SessionConfig$ValidatingBuilder: androidx.camera.core.SessionConfig build()
androidx.fragment.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
androidx.core.view.ActionProvider: void refreshVisibility()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
androidx.asynclayoutinflater.R$drawable: int notification_bg_normal_pressed
android.support.v4.media.MediaBrowserCompat: MediaBrowserCompat(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearActions()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
androidx.camera.core.R$id: int icon
androidx.constraintlayout.solver.widgets.Snapshot: void applyTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
org.pytorch.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.slidingpanelayout.R$id: int text2
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderQuery
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()
org.pytorch.torchvision.R$attr: int actionDropDownStyle
androidx.camera.core.DeferrableSurface$SurfaceClosedException: DeferrableSurface$SurfaceClosedException(java.lang.String,java.lang.Throwable,androidx.camera.core.DeferrableSurface)
androidx.constraintlayout.solver.SolverVariable: java.lang.String getName()
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontWeight
androidx.camera.camera2.R$styleable: int[] GradientColorItem
org.pytorch.R$styleable: int[] AppCompatSeekBar
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
androidx.camera.core.Config: boolean containsOption(androidx.camera.core.Config$Option)
androidx.appcompat.widget.ListPopupWindow: int getInputMethodMode()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.appcompat.R$id: int search_src_text
org.pytorch.R$drawable: int notification_bg_normal_pressed
com.downloader.request.RequestBuilder: com.downloader.request.RequestBuilder setHeader(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)
org.pytorch.torchvision.R$id: int multiply
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_spinner_mtrl_am_alpha
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableStartCompat
androidx.asynclayoutinflater.R$id: int time
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemInserted(int)
androidx.core.R$drawable: int notification_bg
org.pytorch.R$styleable: int AppCompatTheme_editTextStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ColorStateListItem
androidx.legacy.v4.R$id: int action_divider
io.github.prabhuomkar.pytorchandroid.R$attr: int ttcIndex
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.camera.core.CameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AfMode getAfMode()
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener
androidx.appcompat.R$style: int Widget_AppCompat_Button_Colored
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getOpacity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)
androidx.loader.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context)
androidx.print.PrintHelper: int COLOR_MODE_MONOCHROME
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
okhttp3.internal.cache.DiskLruCache: java.io.File getDirectory()
com.downloader.internal.stream.FileDownloadOutputStream: void close()
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderFetchTimeout
org.pytorch.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.core.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_AVERAGE
org.pytorch.torchvision.R$attr: int expandActivityOverflowButtonDrawable
androidx.versionedparcelable.VersionedParcel: android.os.IBinder readStrongBinder()
org.pytorch.IValue: org.pytorch.IValue dictLongKeyFrom(java.util.Map)
androidx.appcompat.R$dimen: int abc_action_bar_default_height_material
android.support.v4.media.session.MediaControllerCompat$Callback: void binderDied()
androidx.fragment.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.loader.R$id: int tag_unhandled_key_event_manager
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.github.prabhuomkar.pytorchandroid.ui.fragments.HomeFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.camera.core.R$style: int TextAppearance_Compat_Notification
okio.Buffer: okio.BufferedSink writeUtf8CodePoint(int)
org.pytorch.R$drawable: int abc_ic_menu_overflow_material
androidx.media.VolumeProviderCompat: int getMaxVolume()
androidx.drawerlayout.R$styleable: int GradientColor_android_endY
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.recyclerview.widget.ItemTouchUIUtil: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean)
androidx.drawerlayout.widget.DrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.camera.camera2.impl.Camera2CaptureRequestBuilder: android.hardware.camera2.CaptureRequest buildWithoutTarget(androidx.camera.core.CaptureConfig,android.hardware.camera2.CameraDevice)
androidx.core.view.accessibility.AccessibilityRecordCompat: int getItemCount()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorControlActivated
okhttp3.internal.connection.RealConnection: java.util.List allocations
org.pytorch.R$styleable: int PopupWindow_android_popupBackground
androidx.constraintlayout.widget.ConstraintSet: void setTranslation(int,float,float)
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHPAD
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.media.MediaBrowserServiceCompat$Result: void sendProgressUpdate(android.os.Bundle)
android.support.v4.media.MediaDescriptionCompat: long STATUS_NOT_DOWNLOADED
androidx.drawerlayout.widget.DrawerLayout: void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int BOTTOM
androidx.appcompat.resources.R$layout: int custom_dialog
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.vectordrawable.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.core.app.NotificationCompat$Action$WearableExtender: NotificationCompat$Action$WearableExtender()
androidx.fragment.R$id: int accessibility_custom_action_2
androidx.drawerlayout.R$attr: int ttcIndex
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: int[] mGroupDimensions
androidx.media.R$dimen: int subtitle_corner_radius
org.pytorch.R$dimen: int notification_top_pad_large_text
org.pytorch.torchvision.R$dimen: int abc_edit_text_inset_horizontal_material
com.downloader.database.AppDbHelper: void insert(com.downloader.database.DownloadModel)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile getParentFile()
androidx.versionedparcelable.VersionedParcelize: java.lang.Class factory()
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_TITLES
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_background
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_SERIAL_NUMBER
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.savedstate.SavedStateRegistry: void unregisterSavedStateProvider(java.lang.String)
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.app.AppCompatDelegate: void setHandleNativeActionModesEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowActionBar
org.pytorch.R$attr: int textAppearanceListItemSmall
androidx.recyclerview.R$id: int accessibility_custom_action_13
androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)
com.downloader.database.DownloadModel: java.lang.String getUrl()
androidx.camera.core.R$style: int TextAppearance_Compat_Notification_Line2
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
androidx.camera.core.SessionConfig$SessionError
okio.HashingSink: void write(okio.Buffer,long)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.recyclerview.widget.RecyclerView$Recycler: RecyclerView$Recycler(androidx.recyclerview.widget.RecyclerView)
org.pytorch.R$style: int Widget_AppCompat_Button_Borderless
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActivityChooserView: void setProvider(androidx.core.view.ActionProvider)
androidx.activity.R$id: int actions
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getGravity()
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat
com.squareup.picasso.OkHttp3Downloader: okhttp3.Response load(okhttp3.Request)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_MESSENGER_BINDER
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
com.downloader.Status: com.downloader.Status CANCELLED
androidx.exifinterface.media.ExifInterface: short Y_CB_CR_POSITIONING_CO_SITED
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow addError(androidx.constraintlayout.solver.LinearSystem,int)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.activity.R$layout: int notification_template_icon_group
androidx.appcompat.app.WindowDecorActionBar
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getChildCount()
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceListItemSecondary
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_BOTTOM
okhttp3.FormBody: okhttp3.MediaType contentType()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent)
androidx.appcompat.R$attr: int closeItemLayout
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteY
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLast
org.pytorch.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)
androidx.media.session.MediaButtonReceiver: android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context)
androidx.core.widget.TextViewCompat
androidx.appcompat.app.ActionBar$OnNavigationListener
androidx.appcompat.R$color: int foreground_material_dark
androidx.camera.core.CameraControlInternal
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_Button
androidx.legacy.coreui.R$styleable: int[] CoordinatorLayout
androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor highPriorityExecutor()
androidx.constraintlayout.solver.SolverVariable: void reset()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.core.app.Person: android.app.Person toAndroidPerson()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
org.pytorch.torchvision.R$styleable: int[] TextAppearance
androidx.recyclerview.selection.SelectionTracker: void extendRange(int)
org.pytorch.torchvision.R$styleable: int View_paddingStart
androidx.constraintlayout.solver.widgets.ConstraintAnchor: ConstraintAnchor(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type)
okhttp3.internal.http2.Http2Codec: okhttp3.Response$Builder readHttp2HeadersList(java.util.List)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256
androidx.camera.core.CameraIdFilter
okhttp3.internal.tls.CertificateChainCleaner: java.util.List clean(java.util.List,java.lang.String)
androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)
android.support.v4.media.session.IMediaSession$Stub: android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_chainUseRtl
androidx.constraintlayout.solver.widgets.Optimizer
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
androidx.appcompat.widget.AbsActionBarView: boolean hideOverflowMenu()
androidx.appcompat.R$attr: int actionModeCloseDrawable
okhttp3.Response$Builder: okhttp3.Response$Builder cacheResponse(okhttp3.Response)
androidx.camera.core.AppConfig: java.lang.String getTargetName()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHorizontal_weight
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView: AutoFitTextureView(android.content.Context)
androidx.camera.camera2.impl.compat.CameraDeviceCompat
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_BOTTOM
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_7
androidx.appcompat.app.AppCompatActivity
androidx.vectordrawable.animated.R$attr: int font
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)
androidx.appcompat.R$id: int message
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePasteDrawable
androidx.drawerlayout.widget.DrawerLayout: void setDrawerLockMode(int,int)
androidx.core.widget.ContentLoadingProgressBar: void hide()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_SPREAD_INSIDE
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
androidx.collection.LongSparseArray: void remove(long)
androidx.appcompat.widget.TintTypedArray: int getIndexCount()
org.pytorch.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
androidx.constraintlayout.widget.Constraints$LayoutParams: boolean applyElevation
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowNoTitle
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.camera.core.ImageAnalysisConfig: java.lang.String getTargetName()
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
org.pytorch.R$styleable: int Toolbar_android_gravity
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.coordinatorlayout.R$id: int right_icon
androidx.vectordrawable.animated.R$id: int notification_main_column_container
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_optimizationLevel
androidx.camera.core.MeteringPointFactory: android.graphics.PointF translatePoint(float,float)
org.pytorch.torchvision.R$id: int blocking
org.pytorch.R$attr: int toolbarNavigationButtonStyle
io.github.prabhuomkar.pytorchandroid.R$attr: int queryHint
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarStyle
io.github.prabhuomkar.pytorchandroid.R$color: int abc_background_cache_hint_selector_material_dark
androidx.constraintlayout.solver.ArrayRow: ArrayRow(androidx.constraintlayout.solver.Cache)
androidx.appcompat.R$drawable: int abc_switch_thumb_material
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
org.pytorch.R$style: int TextAppearance_AppCompat_Small
androidx.activity.OnBackPressedDispatcherOwner
androidx.core.view.MenuItemCompat: boolean expandActionView(android.view.MenuItem)
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_variablePadding
androidx.media.R$dimen: int notification_big_circle_margin
androidx.appcompat.R$drawable: int abc_list_pressed_holo_light
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INADEQUATE_SECURITY
androidx.vectordrawable.graphics.drawable.Animatable2Compat: void clearAnimationCallbacks()
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy[] values()
androidx.camera.core.PreviewConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter()
androidx.legacy.coreui.R$drawable: int notification_bg_low_normal
org.pytorch.R$attr: int viewInflaterClass
android.support.v4.media.session.PlaybackStateCompat: int describeContents()
androidx.camera.core.impl.utils.Threads: void checkBackgroundThread()
androidx.appcompat.widget.ListPopupWindow: int INPUT_METHOD_NEEDED
androidx.activity.R$id: int accessibility_custom_action_19
com.squareup.picasso.LruCache: LruCache(int)
androidx.core.util.ObjectsCompat: int hashCode(java.lang.Object)
androidx.vectordrawable.animated.R$id: int icon
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
com.facebook.jni.CppSystemErrorException
okhttp3.Dispatcher: void setMaxRequestsPerHost(int)
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withReadTimeout(int,java.util.concurrent.TimeUnit)
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getDownloadLink()
androidx.appcompat.R$attr: int dropDownListViewStyle
android.support.v4.media.session.MediaControllerCompat: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)
androidx.core.R$layout: int custom_dialog
androidx.recyclerview.selection.FocusDelegate: int getFocusedPosition()
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_NONE
androidx.recyclerview.widget.OrientationHelper: int getMode()
androidx.camera.core.CameraCaptureSessionStateCallbacks: android.hardware.camera2.CameraCaptureSession$StateCallback createComboCallback(java.util.List)
androidx.camera.core.CameraXThreads: java.lang.String TAG
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToPrevious()
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constrainedWidth
androidx.appcompat.widget.SwitchCompat: int getThumbScrollRange()
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.app.TaskStackBuilder: android.content.Intent getIntent(int)
android.support.v4.media.session.IMediaSession: java.lang.CharSequence getQueueTitle()
androidx.core.app.ServiceCompat
com.downloader.R$string: int app_name
androidx.constraintlayout.widget.R$attr: int barrierDirection
okio.InflaterSource: void close()
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
androidx.customview.R$styleable: int GradientColor_android_startY
androidx.asynclayoutinflater.R$drawable: int notification_template_icon_bg
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat
androidx.camera.core.ImageCaptureConfig: java.util.concurrent.Executor getBackgroundExecutor()
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig()
org.pytorch.torchvision.R$id: int expand_activities_button
android.support.v4.media.MediaBrowserCompat$ItemCallback
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()
androidx.core.widget.NestedScrollView
androidx.core.os.ParcelableCompat: android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks)
okhttp3.EventListener: void connectionAcquired(okhttp3.Call,okhttp3.Connection)
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANCE_NAVIGATION_GUIDANCE
androidx.collection.ArraySet: int hashCode()
org.pytorch.R$style: int Base_V21_Theme_AppCompat_Light
androidx.camera.camera2.impl.CamcorderProfileHelper: boolean hasProfile(int,int)
androidx.constraintlayout.widget.ConstraintSet: int GONE
okio.ByteString: boolean equals(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.util.ArrayList getHorizontalGuidelines()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
androidx.loader.R$dimen: int compat_button_padding_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_5
android.support.v4.media.session.IMediaControllerCallback: void onEvent(java.lang.String,android.os.Bundle)
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
androidx.recyclerview.R$drawable: int notification_bg_normal_pressed
androidx.loader.R$id
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
okhttp3.internal.http2.Header: Header(okio.ByteString,okio.ByteString)
androidx.legacy.v4.R$styleable: int FontFamilyFont_font
androidx.collection.ArraySet: ArraySet(androidx.collection.ArraySet)
org.pytorch.torchvision.R$attr: int track
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg_low_pressed
androidx.coordinatorlayout.R$dimen: int compat_notification_large_icon_max_height
org.pytorch.R$styleable: int LinearLayoutCompat_android_orientation
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalChainStyle(int,int)
androidx.viewpager.R$drawable: int notification_bg_normal_pressed
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_CompoundButton_Switch
io.github.prabhuomkar.pytorchandroid.R$styleable
org.pytorch.R$dimen: int abc_dialog_list_padding_top_no_title
androidx.camera.core.DeferrableSurfaces: java.util.List surfaceList(java.util.Collection)
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_ITEM_ID
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableTint
okhttp3.TlsVersion: okhttp3.TlsVersion forJavaName(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeNoException()
androidx.core.view.ViewCompat: int getPaddingStart(android.view.View)
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.appcompat.widget.ScrollingTabContainerView: android.view.ViewPropertyAnimator mVisibilityAnim
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.Constraints$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.SearchView$OnCloseListener: boolean onClose()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.fragment.app.FragmentManager$BackStackEntry
androidx.recyclerview.R$id: int normal
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.camera.core.ImageUtil$CodecFailedException$FailureType: androidx.camera.core.ImageUtil$CodecFailedException$FailureType[] values()
okhttp3.internal.Util: int skipLeadingAsciiWhitespace(java.lang.String,int,int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setDebugSolverName(androidx.constraintlayout.solver.LinearSystem,java.lang.String)
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_ACTIVITY_INTEROP
android.support.v4.media.session.MediaControllerCompat$TransportControls: void seekTo(long)
org.pytorch.R$style: int TextAppearance_AppCompat_Large
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnSpan()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_APPEARED_IN_PRE_LAYOUT
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener
androidx.constraintlayout.solver.widgets.ConstraintWidget: int VISIBLE
androidx.drawerlayout.R$styleable: int ColorStateListItem_alpha
okhttp3.Dispatcher: java.util.List runningCalls()
androidx.appcompat.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_ISO_SPEED
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setConnectionCreator(int)
androidx.core.os.CancellationSignal: void throwIfCanceled()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginEnd
androidx.camera.core.UseCaseGroupRepository$2: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.vectordrawable.animated.R$id: int italic
io.github.prabhuomkar.pytorchandroid.R$attr: int commitIcon
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
androidx.core.R$id: int accessibility_custom_action_0
androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_270
android.support.v4.media.session.ParcelableVolumeInfo: int controlType
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDebugName(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
androidx.drawerlayout.R$id: int async
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface,int)
org.pytorch.R$style: int Base_Widget_AppCompat_ActionBar
androidx.appcompat.widget.DecorToolbar: void setLogo(int)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.slidingpanelayout.R$style: int Widget_Compat_NotificationActionContainer
androidx.recyclerview.widget.SnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
androidx.constraintlayout.widget.ConstraintSet: void centerHorizontallyRtl(int,int)
androidx.appcompat.R$styleable: int Toolbar_android_gravity
androidx.recyclerview.widget.ItemTouchHelper$Callback
org.pytorch.torchvision.R$id: int src_atop
androidx.coordinatorlayout.widget.CoordinatorLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.camera.core.R$style
org.pytorch.R$drawable: int abc_vector_test
androidx.appcompat.R$styleable: int[] Toolbar
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
androidx.media.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.R$attr: int textAppearanceListItemSecondary
androidx.camera.core.R$styleable: int FontFamilyFont_font
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_constraintSet
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
androidx.coordinatorlayout.R$drawable: int notification_template_icon_low_bg
okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier()
androidx.core.R$drawable: int notification_template_icon_low_bg
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintRight_toRightOf
androidx.core.app.TaskStackBuilder
androidx.camera.core.ImageCaptureConfig: java.util.List getSupportedResolutions(java.util.List)
androidx.appcompat.R$color: int bright_foreground_inverse_material_light
org.pytorch.torchvision.R$attr: int firstBaselineToTopHeight
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
io.github.prabhuomkar.pytorchandroid.R$id: int app_info_image
androidx.appcompat.widget.PopupMenu: void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_activity_chooser_view_list_item
androidx.viewpager.widget.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
androidx.viewpager.widget.ViewPager
androidx.drawerlayout.widget.DrawerLayout$SavedState: DrawerLayout$SavedState(android.os.Parcelable)
io.github.prabhuomkar.pytorchandroid.R$color: int background_material_dark
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
androidx.recyclerview.R$styleable: int RecyclerView_android_orientation
android.support.v4.media.session.PlaybackStateCompat: android.os.Bundle getExtras()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonBarButtonStyle
okhttp3.internal.cache.InternalCache: void trackResponse(okhttp3.internal.cache.CacheStrategy)
org.pytorch.R$attr: int actionModeCutDrawable
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory)
androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.fragment.app.FragmentFactory: FragmentFactory()
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalBias(int,float)
com.downloader.PRDownloader: com.downloader.Status getStatus(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarDivider
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_trackTintMode
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_RATINGS
androidx.camera.core.ImageProxy$PlaneProxy
androidx.coordinatorlayout.R$id: int actions
org.pytorch.torchvision.R$style: int Theme_AppCompat
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_SHUFFLE_MODE_ENABLED
androidx.appcompat.R$style: int Base_Widget_AppCompat_TextView
io.github.prabhuomkar.pytorchandroid.R$attr: int contentPaddingRight
androidx.core.app.RemoteActionCompat
org.pytorch.R$attr: int actionMenuTextColor
org.pytorch.R$style: int Widget_AppCompat_PopupMenu
androidx.camera.core.DeferrableSurface: DeferrableSurface()
com.downloader.Error: void setConnectionException(java.lang.Throwable)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.viewpager.widget.ViewPager: boolean isFakeDragging()
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.camera.core.UseCaseConfig$Builder: java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.coordinatorlayout.R$id: int bottom
org.pytorch.torchvision.R$drawable: int notification_bg_low_pressed
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
okhttp3.FormBody: long contentLength()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_radio_material
androidx.fragment.R$attr: int fontProviderQuery
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_CONSTRAINT
androidx.appcompat.R$attr: int displayOptions
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void reset()
androidx.coordinatorlayout.R$style
io.github.prabhuomkar.pytorchandroid.R$attr: int windowFixedHeightMinor
androidx.recyclerview.R$id: int accessibility_custom_action_23
androidx.camera.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.widget.SwitchCompat: void setTrackDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.R$style: int Theme_AppCompat_Light_NoActionBar
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo
okio.BufferedSource: void require(long)
androidx.appcompat.resources.R$styleable: int GradientColor_android_endX
androidx.recyclerview.widget.RecyclerView: void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.core.view.GestureDetectorCompat: boolean isLongpressEnabled()
androidx.loader.R$dimen: int notification_big_circle_margin
androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.provider.FontRequest: java.util.List getCertificates()
androidx.camera.core.FocusMeteringAction: java.util.List getMeteringPointsAF()
androidx.camera.core.MeteringPointFactory: MeteringPointFactory()
org.pytorch.R$style: int TextAppearance_AppCompat_Display1
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
org.pytorch.R$styleable: int MenuItem_alphabeticModifiers
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo()
org.pytorch.R$style: int Widget_AppCompat_DrawerArrowToggle
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
com.downloader.internal.DownloadRequestQueue: com.downloader.internal.DownloadRequestQueue getInstance()
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls: void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$dimen: int fastscroll_margin
com.downloader.request.DownloadRequestBuilder: DownloadRequestBuilder(java.lang.String,java.lang.String,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_longpressed_holo
androidx.camera.core.Preview: void removePreviewOutputListener()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_LAZY
org.pytorch.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
org.pytorch.torchvision.R$color: int tooltip_background_light
androidx.drawerlayout.widget.DrawerLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener)
androidx.camera.core.SessionConfig: java.util.List getRepeatingCameraCaptureCallbacks()
androidx.camera.core.CameraInfo: int getSensorRotationDegrees(int)
org.pytorch.torchvision.TensorImageUtils
androidx.appcompat.R$attr: int colorPrimary
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
okhttp3.TlsVersion: java.lang.String javaName()
androidx.camera.core.UseCaseEventConfig: androidx.camera.core.Config$Option OPTION_USE_CASE_EVENT_LISTENER
androidx.drawerlayout.R$string
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.appcompat.widget.DropDownListView: int NO_POSITION
org.pytorch.torchvision.R$color: int primary_text_disabled_material_light
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.appcompat.app.AlertDialog$Builder
okio.Buffer: okio.Buffer writeShort(int)
android.support.v4.media.session.MediaSessionCompat$Callback: void onStop()
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback: java.util.List getCallbacks()
androidx.recyclerview.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.media.R$layout: int notification_template_big_media_custom
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()
androidx.legacy.coreutils.R$color: int notification_icon_bg_color
org.pytorch.R$attr: int buttonGravity
androidx.coordinatorlayout.R$drawable: int notification_bg_normal_pressed
androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)
androidx.asynclayoutinflater.R$attr: int fontStyle
org.pytorch.R$styleable: int AppCompatTheme_actionBarSplitStyle
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_centerY
com.downloader.Progress
org.pytorch.R$styleable: int AppCompatTheme_colorControlNormal
androidx.asynclayoutinflater.R$attr: int fontProviderQuery
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ActionProvider: android.content.Context getContext()
org.pytorch.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setTargetAspectRatioCustom(android.util.Rational)
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerX
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
org.pytorch.torchvision.R$id: int search_src_text
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View)
androidx.loader.R$dimen: int notification_media_narrow_margin
androidx.exifinterface.media.ExifInterface: short SATURATION_LOW
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_icon
androidx.constraintlayout.solver.LinearSystem: boolean graphOptimizer
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ratingbar_indicator_material
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionBar_TabText
androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String LEGACY_CONTROLLER
androidx.appcompat.app.AppCompatDialogFragment
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_IN_PROGRESS
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarSplitStyle
androidx.viewpager.R$style: int Widget_Compat_NotificationActionText
androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_Layout
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: void onItemLoaded(int)
androidx.camera.core.R$styleable: int ColorStateListItem_android_color
androidx.recyclerview.selection.BandPredicate$NonDraggableArea: BandPredicate$NonDraggableArea(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.ItemDetailsLookup)
okhttp3.internal.platform.ConscryptPlatform: void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
androidx.constraintlayout.solver.widgets.Guideline: float getRelativePercent()
androidx.appcompat.R$dimen: int abc_text_size_body_1_material
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
org.pytorch.R$attr: int popupMenuStyle
org.pytorch.torchvision.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.camera.camera2.impl.Camera2CameraControl: void setFlashMode(androidx.camera.core.FlashMode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_max
androidx.core.view.DragAndDropPermissionsCompat: void release()
androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat
androidx.appcompat.R$attr: int showText
androidx.appcompat.app.AppCompatActivity: void onStop()
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
org.pytorch.R$dimen: int abc_action_button_min_height_material
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer
androidx.appcompat.R$style: int Theme_AppCompat_Dialog
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_alpha
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarItemBackground
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.R$color: int material_blue_grey_950
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.camera.core.UseCase: void onBind()
okhttp3.CipherSuite
org.pytorch.torchvision.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
org.pytorch.R$id: int src_in
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.resources.R$attr: int fontProviderQuery
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
org.pytorch.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.resources.R$id: int text2
androidx.appcompat.app.AppCompatDelegate: void onSaveInstanceState(android.os.Bundle)
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder query(java.lang.String)
org.pytorch.R$dimen: int notification_action_text_size
org.pytorch.torchvision.R$layout: int abc_search_dropdown_item_icons_2line
okhttp3.CertificatePinner$Builder: CertificatePinner$Builder()
androidx.core.R$id: int accessibility_custom_action_2
androidx.vectordrawable.R$id: int accessibility_custom_action_19
androidx.camera.core.SessionConfig$Builder: void addAllCameraCaptureCallbacks(java.util.Collection)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)
androidx.constraintlayout.widget.R$id: int spread_inside
org.pytorch.torchvision.R$styleable: int Toolbar_menu
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(java.io.File)
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
androidx.appcompat.R$color: int button_material_light
okhttp3.internal.connection.ConnectInterceptor: ConnectInterceptor(okhttp3.OkHttpClient)
androidx.appcompat.resources.R$layout: int notification_action
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToNext()
androidx.cardview.R$styleable: int CardView_contentPadding
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button_Borderless
androidx.appcompat.R$attr: int closeIcon
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setY(int)
androidx.camera.core.Exif: void removeLocation()
androidx.appcompat.app.ActionBar: int getHeight()
org.pytorch.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.swiperefreshlayout.R$dimen: int notification_top_pad
okhttp3.internal.Util
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getLength(int)
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
okio.Okio
org.pytorch.torchvision.R$drawable: int abc_ic_go_search_api_material
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
okio.Buffer: long readAll(okio.Sink)
androidx.appcompat.R$dimen: int abc_dialog_fixed_width_major
androidx.constraintlayout.widget.ConstraintSet: int PARENT_ID
androidx.core.graphics.PathSegment: float getStartFraction()
androidx.appcompat.R$id: int action_mode_close_button
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.core.R$attr
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.core.graphics.drawable.RoundedBitmapDrawable
androidx.constraintlayout.solver.Metrics: long tableSizeIncrease
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
androidx.media.VolumeProviderCompatApi21$Delegate
org.pytorch.torchvision.R$styleable: int[] AnimatedStateListDrawableItem
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActivityChooserView
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void updateChildrenFromSolver(androidx.constraintlayout.solver.LinearSystem,boolean[])
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarTabBarStyle
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void setMaxRecycledViews(int,int)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_MULTI_SPOT
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_UNSPECIFIED
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setCircular(boolean)
com.downloader.database.NoOpsDbHelper: void insert(com.downloader.database.DownloadModel)
androidx.fragment.app.ListFragment: void onDestroyView()
org.pytorch.R$drawable: int abc_list_divider_material
androidx.legacy.coreutils.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_screen_simple
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isLongPressDragEnabled()
androidx.appcompat.resources.R$id: int dialog_button
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] FontFamily
com.downloader.PRDownloaderConfig$Builder
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
org.pytorch.torchvision.R$integer: int cancel_button_image_alpha
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int SCOUT_CREATOR
org.pytorch.torchvision.R$anim: int abc_slide_out_top
androidx.constraintlayout.widget.ConstraintSet: void constrainDefaultWidth(int,int)
org.pytorch.torchvision.R$attr: int alertDialogCenterButtons
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionBar_Solid
androidx.appcompat.view.menu.MenuPresenter$Callback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode ENHANCE_YOUR_CALM
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
com.squareup.picasso.StatsSnapshot: int maxSize
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle(androidx.core.app.NotificationCompat$Builder)
org.pytorch.torchvision.R$color: int dim_foreground_disabled_material_dark
androidx.core.util.LogWriter: void close()
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
androidx.coordinatorlayout.R$id: int text2
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
androidx.core.util.AtomicFile: byte[] readFully()
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,int)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isPassword()
androidx.vectordrawable.animated.R$attr: int fontProviderQuery
org.pytorch.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
androidx.appcompat.view.menu.ActionMenuItem
androidx.lifecycle.MethodCallsLogger
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
androidx.asynclayoutinflater.R$style: int Widget_Compat_NotificationActionText
org.pytorch.torchvision.R$styleable: int ButtonBarLayout_allowStacking
org.pytorch.torchvision.R$color: int ripple_material_dark
androidx.recyclerview.widget.LinearSmoothScroller: float calculateSpeedPerPixel(android.util.DisplayMetrics)
org.pytorch.torchvision.R$id: int top
com.squareup.picasso.Request$Builder: Request$Builder(android.net.Uri)
androidx.legacy.coreui.R$id: int end
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.fragment.app.Fragment: void onStop()
org.pytorch.torchvision.R$string: int abc_menu_alt_shortcut_label
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.R$attr: int buttonStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.recyclerview.selection.DefaultSelectionTracker: void endRange()
androidx.core.app.FrameMetricsAggregator: int SWAP_INDEX
android.support.v4.media.session.MediaSessionCompat$Callback: void onSkipToPrevious()
androidx.recyclerview.R$layout: int notification_action
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)
androidx.camera.core.Observable
androidx.recyclerview.widget.AdapterListUpdateCallback: AdapterListUpdateCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.view.menu.ShowableListMenu: boolean isShowing()
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.R$style: int Widget_AppCompat_SearchView
androidx.camera.camera2.R$id: int icon
org.pytorch.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.slidingpanelayout.R$id: int line1
android.support.v4.media.session.MediaSessionCompat$Callback: void onFastForward()
androidx.annotation.NonNull
okio.ForwardingTimeout: okio.Timeout clearTimeout()
androidx.appcompat.app.AlertDialog: void setIconAttribute(int)
androidx.activity.R$id: int accessibility_custom_action_29
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void refresh(int)
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_CLOSE
androidx.cursoradapter.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.loader.R$color: int secondary_text_default_material_light
org.pytorch.R$styleable: int ActionBar_backgroundStacked
androidx.core.widget.ScrollerCompat: boolean springBack(int,int,int,int,int,int)
androidx.camera.core.Exif: void save()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean)
androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.camera.core.ImageAnalysisConfig: int getTargetRotation()
androidx.appcompat.resources.R$id: int info
androidx.viewpager.R$styleable: int[] GradientColorItem
androidx.camera.core.FocusMeteringAction$OnAutoFocusListener: void onFocusCompleted(boolean)
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.camera.core.CameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AwbState getAwbState()
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_prepend_shortcut_label
io.github.prabhuomkar.pytorchandroid.R$attr: int customNavigationLayout
androidx.lifecycle.MediatorLiveData: void removeSource(androidx.lifecycle.LiveData)
org.pytorch.R$attr: int autoCompleteTextViewStyle
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_floating_window_z
androidx.appcompat.R$styleable: int ActionBar_logo
android.support.v4.media.session.MediaControllerCompat: void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat)
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowDimensionPercent(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,boolean)
androidx.versionedparcelable.ParcelUtils: android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence)
com.google.auto.value.AutoAnnotation
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int fastscroll_default_thickness
androidx.appcompat.R$styleable: int AppCompatTheme_searchViewStyle
androidx.drawerlayout.widget.DrawerLayout: void addFocusables(java.util.ArrayList,int,int)
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_search_view_preferred_height
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context)
androidx.appcompat.resources.R$drawable: int notification_bg_low_pressed
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerColor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BITS_PER_SAMPLE
androidx.appcompat.R$attr: int backgroundTint
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
androidx.legacy.v4.R$layout: int notification_template_media_custom
androidx.appcompat.R$drawable: int abc_ic_voice_search_api_material
androidx.fragment.app.Fragment: java.lang.String toString()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
org.pytorch.R$string: int abc_toolbar_collapse_description
androidx.annotation.Size: long value()
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget(int,int,int,int)
androidx.collection.ArraySet: boolean contains(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorUpdateListener: void onAnimationUpdate(android.view.View)
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
org.pytorch.R$attr: int queryBackground
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button_Borderless_Colored
okhttp3.Interceptor$Chain: int connectTimeoutMillis()
okhttp3.Request$Builder: okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
okio.Timeout: okio.Timeout NONE
androidx.appcompat.R$string: int abc_shareactionprovider_share_with_application
androidx.legacy.coreutils.R$string: int status_bar_notification_info_overflow
okhttp3.Address: java.net.Proxy proxy()
androidx.camera.core.DisplayOrientedMeteringPointFactory
androidx.vectordrawable.R$layout: int notification_action
org.pytorch.R$drawable: int abc_control_background_material
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.camera.core.ImageCapture: void setFlashMode(androidx.camera.core.FlashMode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_switchPadding
com.downloader.internal.stream.FileDownloadOutputStream: void flushAndSync()
androidx.core.internal.view.SupportMenu
androidx.camera.camera2.R$id: int accessibility_custom_action_19
org.pytorch.torchvision.R$styleable: int Toolbar_navigationIcon
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder scheme(java.lang.String)
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_Y
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.squareup.picasso.Cache
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getHeadsUpContentView()
com.downloader.httpclient.DefaultHttpClient: com.downloader.httpclient.HttpClient clone()
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_toLeftOf
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetRotation(int)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.constraintlayout.widget.Barrier: int RIGHT
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int describeContents()
androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod: androidx.camera.core.ImageProxyDownsampler$DownsamplingMethod[] values()
androidx.core.view.ViewGroupCompat: int LAYOUT_MODE_CLIP_BOUNDS
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_menu_material
androidx.appcompat.resources.R$dimen: int notification_large_icon_height
androidx.constraintlayout.solver.widgets.ResolutionDimension
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean allowedInBarrier()
org.pytorch.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
androidx.constraintlayout.widget.R$styleable
androidx.core.app.NotificationCompat$WearableExtender: int getContentAction()
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_android_descendantFocusability
io.github.prabhuomkar.pytorchandroid.R$id: int tag_accessibility_actions
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender clearPages()
androidx.core.view.MenuCompat
androidx.viewpager.R$layout: int notification_template_custom_big
androidx.appcompat.widget.VectorEnabledTintResources: int MAX_SDK_WHERE_REQUIRED
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onChanged()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour
io.github.prabhuomkar.pytorchandroid.R$id: int homeAsUp
androidx.camera.core.UseCase$State: androidx.camera.core.UseCase$State valueOf(java.lang.String)
androidx.camera.core.CaptureConfig$Builder: androidx.camera.core.CaptureConfig$Builder from(androidx.camera.core.CaptureConfig)
androidx.camera.core.DisplayOrientedMeteringPointFactory: DisplayOrientedMeteringPointFactory(android.content.Context,androidx.camera.core.CameraX$LensFacing,float,float)
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
com.squareup.picasso.BuildConfig: boolean DEBUG
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap)
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode OFF
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_precise_anchor_extra_offset
org.pytorch.R$styleable: int SwitchCompat_thumbTextPadding
androidx.camera.camera2.R$drawable: int notification_action_background
io.github.prabhuomkar.pytorchandroid.R$style: int CardView
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
androidx.recyclerview.widget.RecyclerView$State: java.lang.Object get(int)
androidx.appcompat.resources.R$attr: int fontProviderPackage
androidx.cardview.widget.CardView: CardView(android.content.Context,android.util.AttributeSet,int)
androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)
okio.Buffer: void skip(long)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: okhttp3.internal.publicsuffix.PublicSuffixDatabase get()
androidx.appcompat.R$drawable: int tooltip_frame_light
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.util.Preconditions
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.legacy.v4.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$attr: int actionLayout
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetRotation(int)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_HEADING
androidx.loader.R$id: int text2
androidx.core.view.accessibility.AccessibilityRecordCompat: java.util.List getText()
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.Config$Option OPTION_LENS_FACING
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void removeTile(int,int)
androidx.appcompat.R$attr: int goIcon
org.pytorch.R$attr: int colorError
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Headline
com.squareup.picasso.Picasso: void setSingletonInstance(com.squareup.picasso.Picasso)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
androidx.camera.core.Exif: int getRotation()
androidx.camera.camera2.Camera2AppConfig: androidx.camera.core.AppConfig create(android.content.Context)
okhttp3.ResponseBody: ResponseBody()
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionMode
okio.Buffer: byte readByte()
org.pytorch.torchvision.R$drawable: int abc_switch_thumb_material
androidx.media.R$styleable: int GradientColor_android_startColor
androidx.appcompat.R$dimen: int abc_text_size_subhead_material
com.downloader.database.AppDbHelper: java.lang.String TABLE_NAME
androidx.camera.core.Preview$Defaults: androidx.camera.core.PreviewConfig getConfig(androidx.camera.core.CameraX$LensFacing)
io.github.prabhuomkar.pytorchandroid.R$attr: int indeterminateProgressStyle
androidx.constraintlayout.solver.Metrics: long oldresolvedWidgets
androidx.core.R$id: int line1
androidx.camera.camera2.R$dimen: int compat_control_corner_material
io.github.prabhuomkar.pytorchandroid.R$attr: int editTextBackground
android.support.v4.media.MediaBrowserCompat$MediaItem: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
androidx.core.util.Consumer
org.pytorch.Tensor: java.nio.IntBuffer allocateIntBuffer(int)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int verticalChainStyle
androidx.core.widget.AutoSizeableTextView: int getAutoSizeStepGranularity()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_TOUCH_EXPLORATION_MODE
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent()
okhttp3.internal.connection.StreamAllocation: java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder
androidx.recyclerview.R$drawable: int notification_icon_background
androidx.media.R$layout: int notification_template_big_media
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
okhttp3.Cache
okhttp3.internal.http2.Settings: Settings()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowSpan()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textColorLink
androidx.slidingpanelayout.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
org.pytorch.torchvision.R$layout: int abc_alert_dialog_title_material
okio.BufferedSink: okio.BufferedSink writeShort(int)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.fragment.R$drawable: int notification_template_icon_bg
androidx.recyclerview.widget.ItemTouchHelper$Callback: long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float)
androidx.vectordrawable.R$styleable: int FontFamilyFont_fontStyle
org.pytorch.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
org.pytorch.R$styleable: int FontFamilyFont_fontWeight
androidx.vectordrawable.animated.R$id: int info
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
org.pytorch.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.appcompat.R$attr: int colorControlActivated
androidx.camera.core.ImageProxy: void close()
androidx.coordinatorlayout.R$dimen: int notification_main_column_padding_top
androidx.asynclayoutinflater.R$layout: int notification_template_custom_big
org.pytorch.torchvision.R$color: int button_material_light
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE_REF
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.appcompat.R$attr: int tickMarkTint
androidx.recyclerview.widget.LinearSmoothScroller: int calculateDyToMakeVisible(android.view.View,int)
androidx.recyclerview.widget.LinearLayoutManager: int HORIZONTAL
androidx.versionedparcelable.VersionedParcel: long readLong(long,int)
androidx.drawerlayout.R$id: int line1
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isMultiLine()
androidx.appcompat.R$dimen: int abc_disabled_alpha_material_light
androidx.core.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.core.view.ViewCompat: float getRotationX(android.view.View)
androidx.camera.core.ImageAnalysisConfig: java.util.List getSupportedResolutions(java.util.List)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
io.github.prabhuomkar.pytorchandroid.R$layout: int select_dialog_singlechoice_material
androidx.camera.core.ImageSaver$OnImageSavedListener: void onError(androidx.camera.core.ImageSaver$SaveError,java.lang.String,java.lang.Throwable)
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_MIDDLE
androidx.appcompat.R$anim: int abc_slide_out_top
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_ENABLED
com.squareup.picasso.Transformation: java.lang.String key()
org.pytorch.torchvision.R$drawable: int abc_list_selector_disabled_holo_light
androidx.fragment.app.FragmentController: int getActiveFragmentsCount()
org.pytorch.torchvision.R$styleable: int MenuItem_android_enabled
androidx.drawerlayout.R$dimen: int notification_small_icon_size_as_large
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: void onRequestDisallowInterceptTouchEvent(boolean)
androidx.core.internal.view.SupportMenuItem
org.pytorch.R$attr: int voiceIcon
androidx.constraintlayout.solver.widgets.ResolutionDimension: void resolve(int)
io.github.prabhuomkar.pytorchandroid.ui.fragments.AppInfoFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_SEARCH
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(android.os.Parcel)
androidx.core.view.InputDeviceCompat: int SOURCE_ANY
androidx.fragment.R$attr: int font
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCH_NAVIGATION
androidx.camera.core.ConfigProvider
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_windowAnimationStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_min
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.core.view.InputDeviceCompat: int SOURCE_TOUCHSCREEN
androidx.loader.R$attr
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
androidx.camera.core.ImageCaptureConfig: java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor)
androidx.activity.R$drawable: int notification_tile_bg
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.constraintlayout.solver.ArrayLinkedVariables: float get(androidx.constraintlayout.solver.SolverVariable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
android.support.v4.media.RatingCompat: int RATING_HEART
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int)
androidx.appcompat.view.menu.MenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)
androidx.loader.R$attr: int fontWeight
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SHARPNESS
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls: void prepareFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.asynclayoutinflater.R$layout: int notification_action_tombstone
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRating(android.support.v4.media.RatingCompat,android.os.Bundle)
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()
androidx.vectordrawable.R$drawable: int notify_panel_notification_icon_bg
androidx.activity.R$id: int notification_main_column
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)
androidx.core.os.LocaleListCompat
okio.BufferedSource: long readDecimalLong()
androidx.media.R$layout: int notification_template_media_custom
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet,int)
org.pytorch.R$dimen: int notification_small_icon_background_padding
androidx.appcompat.R$attr: int dialogTheme
com.downloader.database.DownloadModel: void setId(int)
androidx.swiperefreshlayout.R$id: int normal
androidx.core.widget.PopupMenuCompat
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
org.pytorch.torchvision.R$id: int expanded_menu
org.pytorch.R$id: int action_bar_subtitle
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
org.pytorch.torchvision.R$attr: int windowFixedWidthMajor
org.pytorch.R$color: int material_grey_300
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isHeightMeasuredTooSmall()
androidx.appcompat.R$styleable: int FontFamily_fontProviderQuery
io.github.prabhuomkar.pytorchandroid.R$id: int wrap_content
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_homeLayout
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.graphics.ColorUtils: void colorToXYZ(int,double[])
androidx.core.app.AppComponentFactory: android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
org.pytorch.torchvision.R$styleable: int GradientColor_android_endX
androidx.camera.core.R$id: int chronometer
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setFilterBitmap(boolean)
androidx.legacy.coreutils.R$attr: int fontProviderQuery
androidx.constraintlayout.solver.SolverVariable: int usageInRowCount
androidx.core.view.MotionEventCompat: int ACTION_POINTER_DOWN
androidx.media.MediaBrowserProtocol: java.lang.String DATA_SEARCH_EXTRAS
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$styleable: int[] ActionMenuItemView
androidx.appcompat.app.AppCompatDelegate
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
org.pytorch.R$attr: int contentInsetStart
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setGravity(int)
androidx.core.view.inputmethod.InputConnectionCompat: int INPUT_CONTENT_GRANT_READ_URI_PERMISSION
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
androidx.recyclerview.widget.ItemTouchHelper: int LEFT
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.http.HttpCodec codec()
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabText
androidx.appcompat.R$id: int action_mode_bar
androidx.constraintlayout.solver.Metrics: long nonresolvedWidgets
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetAspectRatioCustom(android.util.Rational)
androidx.appcompat.widget.ActivityChooserView: void onMeasure(int,int)
androidx.fragment.R$layout: int notification_template_part_time
androidx.appcompat.widget.SwitchCompat: int[] onCreateDrawableState(int)
com.squareup.picasso.Request: int centerCropGravity
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetRight
androidx.customview.R$id: int actions
org.pytorch.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewEndTarget(boolean,int)
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_fontWeight
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
androidx.constraintlayout.solver.widgets.Guideline: void setOrientation(int)
androidx.media.R$dimen: int notification_right_side_padding_top
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_SHUFFLE_MODE
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void setDuration(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
okhttp3.internal.io.FileSystem: void delete(java.io.File)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.core.app.ActivityManagerCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_variablePadding
io.github.prabhuomkar.pytorchandroid.R$attr: int alertDialogButtonGroupStyle
org.pytorch.torchvision.R$id: int left
org.pytorch.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ActivityChooserModel getDataModel()
org.pytorch.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetShuffleMode(int)
org.pytorch.R$attr: int displayOptions
org.pytorch.torchvision.R$dimen: int abc_text_size_display_3_material
androidx.appcompat.widget.AppCompatRadioButton
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)
androidx.constraintlayout.solver.widgets.Guideline: float mRelativePercent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_WORD
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_checkableBehavior
org.pytorch.Tensor: java.nio.FloatBuffer allocateFloatBuffer(int)
androidx.loader.content.Loader: void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.legacy.coreutils.R$drawable: int notification_bg_normal_pressed
androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)
com.downloader.PRDownloader: void shutDown()
androidx.recyclerview.R$attr: int spanCount
androidx.legacy.coreutils.R$id: int chronometer
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Title
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorControlActivated
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowHeadLength(float)
androidx.appcompat.R$attr: int titleMarginBottom
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
androidx.camera.core.DeferrableSurface$OnSurfaceDetachedListener: void onSurfaceDetached()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA256
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionMode
androidx.appcompat.widget.ListPopupWindow: void show()
androidx.appcompat.app.WindowDecorActionBar: void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.camera.camera2.Camera2Config$Builder: androidx.camera.core.MutableConfig getMutableConfig()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_UNKNOWN
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.media.R$layout: int notification_template_big_media_narrow
org.pytorch.R$drawable: int abc_ic_arrow_drop_right_black_24dp
org.pytorch.R$attr: int toolbarStyle
okhttp3.internal.connection.RouteException
org.pytorch.R$attr: int icon
okio.Buffer: okio.BufferedSink writeIntLe(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_textAllCaps
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_thickness
org.pytorch.R$styleable: int TextAppearance_android_textSize
androidx.core.R$attr: int fontProviderQuery
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setProgress(float)
androidx.drawerlayout.R$drawable: int notification_icon_background
androidx.appcompat.R$styleable: int[] AppCompatImageView
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$dimen: int notification_right_side_padding_top
org.pytorch.torchvision.R$attr: int actionModeShareDrawable
androidx.core.R$id: int accessibility_custom_action_28
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
androidx.legacy.coreui.R$styleable: int GradientColor_android_startY
androidx.camera.camera2.impl.ImageCaptureConfigProvider: ImageCaptureConfigProvider(androidx.camera.core.CameraFactory,android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.R$attr: int autoSizePresetSizes
androidx.fragment.app.DialogFragment: void setCancelable(boolean)
org.pytorch.torchvision.R$styleable: int MenuView_android_itemBackground
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.camera.core.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_visible
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink)
okio.BufferedSource: long indexOf(byte)
androidx.legacy.coreutils.R$dimen: int notification_big_circle_margin
androidx.appcompat.view.menu.MenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_keyline
org.pytorch.torchvision.R$id: int list_item
com.downloader.core.DefaultExecutorSupplier: java.util.concurrent.Executor forBackgroundTasks()
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.lang.String)
org.pytorch.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.camera.core.ImmediateSurface
io.github.prabhuomkar.pytorchandroid.R$attr: int homeLayout
io.github.prabhuomkar.pytorchandroid.R$attr: int colorButtonNormal
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
androidx.fragment.app.Fragment: void onLowMemory()
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.app.ActionBar: void setIcon(int)
androidx.appcompat.resources.R$integer
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object removeAllShortcuts()
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_model_name
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
androidx.loader.R$style
io.github.prabhuomkar.pytorchandroid.R$color: int abc_primary_text_disable_only_material_dark
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerX
androidx.appcompat.R$attr: int actionBarPopupTheme
androidx.appcompat.widget.DecorToolbar: boolean hideOverflowMenu()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeStyle
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: CoordinatorLayout$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.media.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.R$attr: int ratingBarStyle
org.pytorch.torchvision.R$string: int abc_menu_delete_shortcut_label
androidx.camera.camera2.impl.Camera2CameraFactory: Camera2CameraFactory(android.content.Context)
okhttp3.FormBody: int size()
org.pytorch.torchvision.R$styleable: int Toolbar_titleTextAppearance
androidx.appcompat.R$style: int ThemeOverlay_AppCompat
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State[] values()
org.pytorch.R$attr: int ratingBarStyleSmall
org.pytorch.R$styleable: int AppCompatTheme_windowFixedWidthMajor
org.pytorch.torchvision.R$drawable: int abc_tab_indicator_mtrl_alpha
org.pytorch.torchvision.R$styleable: int SearchView_closeIcon
androidx.appcompat.R$styleable: int MenuItem_contentDescription
okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory)
org.pytorch.R$dimen: int hint_pressed_alpha_material_dark
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalThumbDrawable
androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.resources.R$id: int tag_unhandled_key_listeners
org.pytorch.R$drawable: int notification_action_background
androidx.appcompat.R$attr: int fontProviderCerts
androidx.appcompat.R$attr: int titleMarginStart
androidx.media.R$id: int line3
okhttp3.internal.http.HttpHeaders: okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback)
androidx.recyclerview.R$styleable: int GradientColor_android_endX
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display3
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEditable()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.viewpager.widget.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Response)
androidx.savedstate.SavedStateRegistry: boolean isRestored()
org.pytorch.R$attr: int iconTint
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_editTextBackground
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onScrollStateChanged(int)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig build()
androidx.appcompat.widget.ActivityChooserView: boolean dismissPopup()
androidx.exifinterface.media.ExifInterface: short FORMAT_CHUNKY
okhttp3.ConnectionSpec: java.lang.String toString()
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)
androidx.drawerlayout.R$id: int right_side
okhttp3.internal.io.FileSystem: void deleteContents(java.io.File)
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: java.lang.String getDownloadDirPath(android.content.Context)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_LOCAL_ONLY
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: java.util.List getOutputConfigurations()
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
androidx.viewpager.widget.PagerTitleStrip: void setTextColor(int)
androidx.appcompat.resources.R$dimen: int notification_main_column_padding_top
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
okhttp3.EventListener: void responseBodyEnd(okhttp3.Call,long)
io.github.prabhuomkar.pytorchandroid.R$color: int accent_material_dark
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withFocusDelegate(androidx.recyclerview.selection.FocusDelegate)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String flagToString(int)
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent[] getIntents()
androidx.fragment.R$attr: int fontProviderPackage
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_android_minWidth
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder loggingEnabled(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
androidx.exifinterface.media.ExifInterface: boolean isThumbnailCompressed()
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
com.downloader.internal.stream.FileDownloadRandomAccessFile: void flushAndSync()
com.downloader.database.AppDbHelper: void remove(int)
io.github.prabhuomkar.pytorchandroid.R$id: int left
androidx.appcompat.R$attr: int listLayout
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int getIcon()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
androidx.recyclerview.widget.SortedList: SortedList(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int)
androidx.appcompat.app.ActionBar: boolean isTitleTruncated()
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
androidx.appcompat.R$styleable: int ActionBar_contentInsetRight
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
com.downloader.Constants
androidx.constraintlayout.widget.ConstraintSet: void clear(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
okio.Okio: okio.Sink appendingSink(java.io.File)
androidx.appcompat.resources.R$id: int tag_screen_reader_focusable
io.github.prabhuomkar.pytorchandroid.R$drawable: int task_image_classification
androidx.legacy.coreutils.R$layout: int notification_template_part_time
androidx.customview.widget.ViewDragHelper: int getEdgeSize()
androidx.fragment.app.FragmentActivity: void onDestroy()
org.pytorch.torchvision.R$styleable: int SwitchCompat_thumbTextPadding
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_cab_background_top_mtrl_alpha
okhttp3.internal.http.CallServerInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener: void onPanelOpened(android.view.View)
androidx.recyclerview.selection.OperationMonitor: OperationMonitor()
org.pytorch.torchvision.R$styleable: int SearchView_queryBackground
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_edit_text_material
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMarginTop
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeCloseDrawable
androidx.arch.core.executor.TaskExecutor: void executeOnDiskIO(java.lang.Runnable)
okhttp3.Response
okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory()
androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_radio_material_anim
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mX
androidx.appcompat.R$attr: int defaultQueryHint
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
org.pytorch.R$style: int Widget_AppCompat_CompoundButton_Switch
androidx.activity.R$dimen: int notification_top_pad
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Subhead
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.content.Context,android.os.Handler,int)
androidx.recyclerview.selection.StableIdKeyProvider: int getPosition(java.lang.Object)
androidx.vectordrawable.animated.R$style: int Widget_Compat_NotificationActionText
androidx.camera.core.ImageCapture$OnImageCapturedListener: ImageCapture$OnImageCapturedListener()
androidx.appcompat.R$dimen: int abc_action_bar_elevation_material
okio.ByteString: int hashCode()
androidx.vectordrawable.animated.R$id: int blocking
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
androidx.core.app.NotificationCompat$MessagingStyle$Message: java.lang.String getDataMimeType()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_NONE
android.support.v4.media.session.MediaSessionCompat: boolean isActive()
com.downloader.request.DownloadRequest: int start(com.downloader.OnDownloadListener)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.swiperefreshlayout.widget.CircularProgressDrawable
androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig()
okhttp3.internal.http.StatusLine: int HTTP_CONTINUE
androidx.swiperefreshlayout.R$id: int async
org.pytorch.R$attr: int titleMarginEnd
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
androidx.camera.core.ImageSaver$OnImageSavedListener
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_visible
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.app.NotificationCompat: int FLAG_HIGH_PRIORITY
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.MediaSessionCompat$QueueItem: int describeContents()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)
org.pytorch.R$styleable: int MenuItem_android_checked
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabBarStyle
androidx.swiperefreshlayout.R$integer: int status_bar_notification_info_maxnum
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderCerts
androidx.constraintlayout.widget.ConstraintSet: int END
androidx.camera.camera2.impl.compat.CameraManagerCompat: void registerAvailabilityCallback(java.util.concurrent.Executor,android.hardware.camera2.CameraManager$AvailabilityCallback)
org.pytorch.torchvision.BuildConfig: java.lang.String BUILD_TYPE
androidx.fragment.R$id: int line1
org.pytorch.torchvision.R$style: int Base_V23_Theme_AppCompat
androidx.appcompat.R$dimen: int abc_select_dialog_padding_start_material
androidx.core.graphics.drawable.IconCompat$IconType
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: int getWidth()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
androidx.drawerlayout.R$drawable: int notification_template_icon_bg
okhttp3.Call: okhttp3.Response execute()
androidx.appcompat.R$dimen: int abc_text_size_title_material
androidx.activity.R$dimen: int compat_button_padding_horizontal_material
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetAspectRatioCustom(android.util.Rational)
androidx.camera.core.DeferrableSurface
io.github.prabhuomkar.pytorchandroid.R$attr: int tint
androidx.viewpager.R$drawable: int notification_bg_low
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
okio.Source
androidx.vectordrawable.R$id
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setBackgroundExecutor(java.util.concurrent.Executor)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
okhttp3.internal.cache.InternalCache: void update(okhttp3.Response,okhttp3.Response)
androidx.recyclerview.selection.ItemDetailsLookup: androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails getItemDetails(android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$color: int abc_secondary_text_material_light
androidx.appcompat.R$id: int forever
org.pytorch.R$style: int Widget_AppCompat_PopupMenu_Overflow
org.pytorch.torchvision.R$id: int action_bar_spinner
androidx.core.R$dimen: int notification_small_icon_background_padding
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.ColorFilter getColorFilter()
androidx.legacy.v4.R$id: int tag_unhandled_key_event_manager
androidx.camera.core.impl.utils.futures.Futures
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Title
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
androidx.camera.core.SurfaceCombination: java.util.List getSurfaceConfigList()
org.pytorch.R$id: int info
com.downloader.database.DownloadModel: void setDirPath(java.lang.String)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.appcompat.widget.DecorToolbar: void setCustomView(android.view.View)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ISO_SPEED_LATITUDE_ZZZ
androidx.versionedparcelable.VersionedParcel: boolean isStream()
androidx.appcompat.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
androidx.camera.camera2.impl.CameraEventCallback: androidx.camera.core.CaptureConfig onRepeating()
androidx.media.MediaBrowserServiceCompat: android.os.Bundle getBrowserRootHints()
org.pytorch.R$styleable: int Toolbar_navigationContentDescription
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_MAP_DATUM
org.pytorch.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.core.app.NotificationCompat: int GROUP_ALERT_ALL
androidx.recyclerview.R$attr: int fontProviderPackage
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
androidx.camera.core.FlashMode: androidx.camera.core.FlashMode[] values()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap)
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)
androidx.appcompat.R$attr: int isLightTheme
io.github.prabhuomkar.pytorchandroid.R$mipmap: int ic_launcher_foreground
androidx.media.R$drawable: int notification_tile_bg
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
androidx.constraintlayout.solver.GoalRow
androidx.core.graphics.PathSegment: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_search_view_preferred_width
okhttp3.Handshake: okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
io.github.prabhuomkar.pytorchandroid.R$attr: int colorAccent
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontWeight
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.legacy.v4.R$layout: int notification_template_big_media_narrow_custom
androidx.constraintlayout.widget.ConstraintHelper: void onDraw(android.graphics.Canvas)
androidx.recyclerview.widget.ViewBoundsCheck$ViewBounds
com.downloader.Progress: Progress(long,long)
androidx.constraintlayout.widget.ConstraintSet: void createHorizontalChain(int,int,int,int,int[],float[],int)
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context,android.util.AttributeSet)
androidx.legacy.coreui.R$attr: int fontProviderFetchTimeout
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: java.lang.Object getTag()
org.pytorch.torchvision.TensorImageUtils: void imageYUV420CenterCropToFloatBuffer(android.media.Image,int,int,int,float[],float[],java.nio.FloatBuffer,int)
org.pytorch.R$dimen: int hint_alpha_material_dark
okio.Buffer$UnsafeCursor
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_checked
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_1
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.camera.core.AppConfig: androidx.camera.core.CameraFactory getCameraFactory(androidx.camera.core.CameraFactory)
androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.recyclerview.widget.GridLayoutManager: int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.legacy.coreutils.R$color: int notification_action_color_filter
androidx.recyclerview.widget.AsyncListUtil$DataCallback: AsyncListUtil$DataCallback()
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.fragment.app.FragmentTabHost: void setup()
androidx.core.view.ViewCompat: void setX(android.view.View,float)
androidx.recyclerview.widget.StaggeredGridLayoutManager
org.pytorch.R$styleable: int AppCompatTheme_colorPrimaryDark
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setStrength(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength)
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_LIST
androidx.appcompat.R$styleable: int View_paddingEnd
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.R$id: int normal
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.fragment.app.FragmentController: void dispatchLowMemory()
androidx.recyclerview.widget.SortedList$BatchedCallback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
org.pytorch.torchvision.R$attr: int searchIcon
androidx.vectordrawable.R$id: int accessibility_custom_action_17
com.squareup.picasso.StatsSnapshot: long cacheMisses
androidx.core.R$id: int accessibility_custom_action_16
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.camera.camera2.R$dimen: int notification_content_margin_start
androidx.core.R$attr: int alpha
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache$Editor edit(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: java.lang.Object getSelectionKey()
org.pytorch.torchvision.R$id: int time
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_REI_AND_ISO
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments
org.pytorch.torchvision.R$styleable: int[] ActionMenuView
androidx.core.app.NotificationCompat: int DEFAULT_LIGHTS
org.pytorch.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence)
okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)
org.pytorch.torchvision.R$styleable: int AlertDialog_buttonIconDimen
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_MODE
org.pytorch.torchvision.R$styleable: int Spinner_android_prompt
org.pytorch.torchvision.R$attr: int indeterminateProgressStyle
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder from(androidx.camera.core.MeteringPoint,androidx.camera.core.FocusMeteringAction$MeteringMode)
com.squareup.picasso.Callback$EmptyCallback
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.camera.core.impl.utils.Threads
org.pytorch.R$attr: int spinnerDropDownItemStyle
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)
androidx.media.MediaBrowserProtocol
com.facebook.fbjni.BuildConfig: int VERSION_CODE
androidx.legacy.v4.R$id: int icon_group
androidx.vectordrawable.R$drawable: int notification_icon_background
androidx.core.app.NotificationCompat$Action
org.pytorch.torchvision.R$styleable: int AppCompatTheme_searchViewStyle
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetCaptioningEnabled(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int activity_chooser_view_content
okhttp3.Address: okhttp3.HttpUrl url()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintTop_creator
org.pytorch.R$attr: int actionModeStyle
org.pytorch.R$style: int Base_Widget_AppCompat_RatingBar_Small
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_CAPTIONING_ENABLED
org.pytorch.R$style: int Widget_AppCompat_ListPopupWindow
androidx.camera.core.UseCaseConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
android.support.v4.media.session.IMediaSession: int getRepeatMode()
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getThumbTintMode()
org.pytorch.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
androidx.camera.camera2.impl.CameraEventCallback
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.slidingpanelayout.R$dimen: int notification_large_icon_height
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.constraintlayout.solver.Metrics: long minimizeGoal
okhttp3.Response$Builder: okhttp3.Response$Builder removeHeader(java.lang.String)
org.pytorch.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()
com.downloader.core.PriorityThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: androidx.camera.camera2.impl.compat.params.InputConfigurationCompat wrap(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ScrollingTabContainerView: void removeAllTabs()
io.github.prabhuomkar.pytorchandroid.R$attr: int numericModifiers
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context)
androidx.activity.R$styleable: int ColorStateListItem_android_alpha
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
androidx.appcompat.app.AlertDialog: void setCustomTitle(android.view.View)
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable)
androidx.camera.core.CameraDeviceStateCallbacks: android.hardware.camera2.CameraDevice$StateCallback createComboCallback(android.hardware.camera2.CameraDevice$StateCallback[])
okhttp3.MultipartBody$Part: okhttp3.RequestBody body()
androidx.vectordrawable.animated.R$id: int action_container
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getSpanCount()
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor)
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.appcompat.R$color: int switch_thumb_disabled_material_light
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg_low
org.pytorch.torchvision.R$id: int chronometer
org.pytorch.R$color: int abc_secondary_text_material_light
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$id: int src_in
androidx.core.app.FrameMetricsAggregator: int SWAP_DURATION
io.github.prabhuomkar.pytorchandroid.R$color: int abc_input_method_navigation_guard
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$attr: int cardMaxElevation
androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_LANDSCAPE
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder stableKey(java.lang.String)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_textAllCaps
okhttp3.HttpUrl: int pathSize()
org.pytorch.R$attr: int contentInsetRight
androidx.appcompat.widget.SwitchCompat
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Time
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_android_imeOptions
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toLeftOf
androidx.loader.content.CursorLoader: void cancelLoadInBackground()
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_medium_material
okio.HashingSource: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)
androidx.media.MediaBrowserProtocol: java.lang.String EXTRA_SESSION_BINDER
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.loader.R$styleable: int GradientColor_android_centerX
androidx.appcompat.R$color: int dim_foreground_disabled_material_dark
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.downloader.core.ExecutorSupplier: java.util.concurrent.Executor forMainThreadTasks()
org.pytorch.torchvision.R$string: int abc_action_menu_overflow_description
androidx.constraintlayout.widget.ConstraintLayout: void dispatchDraw(android.graphics.Canvas)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String PLACEHOLDER_IMAGE_NAME
android.support.v4.media.session.PlaybackStateCompat$CustomAction: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.DefaultItemAnimator
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
org.pytorch.torchvision.R$string: int search_menu_title
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.core.R$id: int action_text
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_LEFT
androidx.camera.core.impl.utils.futures.AsyncFunction: com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object)
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.ActionBar: boolean isHideOnContentScrollEnabled()
androidx.appcompat.R$attr: int tint
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.DiffUtil$ItemCallback)
org.pytorch.torchvision.R$styleable: int MenuGroup_android_checkableBehavior
androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)
androidx.constraintlayout.solver.widgets.Snapshot: void updateFrom(androidx.constraintlayout.solver.widgets.ConstraintWidget)
org.pytorch.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.core.content.res.ConfigurationHelper: int getDensityDpi(android.content.res.Resources)
org.pytorch.R$string: int abc_prepend_shortcut_label
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LONGITUDE_REF
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginStart
androidx.appcompat.R$styleable: int[] AppCompatTheme
okhttp3.internal.platform.Platform: void afterHandshake(javax.net.ssl.SSLSocket)
androidx.recyclerview.widget.ItemTouchHelper: void onChildViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.media.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$styleable: int FontFamily_fontProviderAuthority
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AppCompatTextHelper
org.pytorch.torchvision.R$attr: int viewInflaterClass
androidx.core.widget.TintableCompoundDrawablesView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_30
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.exifinterface.media.ExifInterface: short CONTRAST_HARD
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
androidx.activity.R$attr: int fontProviderFetchTimeout
androidx.appcompat.widget.DecorContentParent: void dismissPopups()
androidx.collection.CircularIntArray: int get(int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_middle_mtrl_dark
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_ActionBar
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintRight_toRightOf
androidx.cursoradapter.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_UNMUTE
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintStart_toEndOf
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_Dialog
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
org.pytorch.R$styleable: int Toolbar_contentInsetStart
okio.BufferedSource: java.lang.String readString(java.nio.charset.Charset)
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
io.github.prabhuomkar.pytorchandroid.R$color: int colorPrimaryDark
androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)
okio.DeflaterSink: okio.Timeout timeout()
androidx.customview.R$attr: int fontVariationSettings
androidx.appcompat.R$style: int Widget_AppCompat_TextView_SpinnerItem
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DATE
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_android_clipToPadding
androidx.fragment.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
org.pytorch.R$color: int abc_primary_text_material_dark
androidx.loader.content.Loader: boolean isReset()
org.pytorch.torchvision.R$dimen: int notification_subtext_size
androidx.appcompat.R$style: int Widget_AppCompat_EditText
androidx.slidingpanelayout.R$dimen: int compat_notification_large_icon_max_height
io.github.prabhuomkar.pytorchandroid.R$layout: int select_dialog_multichoice_material
androidx.vectordrawable.R$string: int status_bar_notification_info_overflow
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
androidx.appcompat.R$attr: int splitTrack
okhttp3.Handshake: okhttp3.Handshake get(javax.net.ssl.SSLSession)
io.github.prabhuomkar.pytorchandroid.R$id: int never
androidx.asynclayoutinflater.R$styleable: int[] GradientColorItem
io.github.prabhuomkar.pytorchandroid.R$layout
androidx.recyclerview.R$dimen: int notification_big_circle_margin
org.pytorch.R$id: int action_bar_activity_content
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.recyclerview.widget.RecyclerView$State: java.lang.String toString()
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int)
androidx.core.telephony.mbms.MbmsHelper
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
androidx.camera.core.R$attr: int fontStyle
androidx.appcompat.app.ActionBar$TabListener: void onTabSelected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
androidx.camera.camera2.R$styleable: int GradientColor_android_startX
androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.camera.core.Exif: java.lang.String toString()
androidx.appcompat.R$id: int actions
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.drawerlayout.R$attr: int fontVariationSettings
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
android.support.v4.media.session.PlaybackStateCompat: int STATE_PLAYING
androidx.appcompat.view.menu.ListMenuPresenter: int getId()
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(java.lang.CharSequence,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getFocusedChild()
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback
androidx.core.hardware.display.DisplayManagerCompat: android.view.Display getDisplay(int)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int RESULT_OK
org.pytorch.R$drawable: int abc_ic_star_black_36dp
androidx.drawerlayout.R$attr: int fontProviderCerts
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: int getMaxSharedSurfaceCount()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.pytorch.DType: org.pytorch.DType INT32
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_PopupMenu_Overflow
androidx.camera.core.Exif: androidx.camera.core.Exif createFromInputStream(java.io.InputStream)
androidx.concurrent.futures.CallbackToFutureAdapter: com.google.common.util.concurrent.ListenableFuture getFuture(androidx.concurrent.futures.CallbackToFutureAdapter$Resolver)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_ALBUM
androidx.constraintlayout.widget.ConstraintSet: void center(int,int,int,int,int,int,int,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
okhttp3.WebSocket$Factory: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.constraintlayout.widget.Barrier: void init(android.util.AttributeSet)
androidx.camera.core.ImageCaptureConfig: int getMaxCaptureStages()
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
androidx.appcompat.app.ActionBar: android.view.View getCustomView()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
okhttp3.internal.http2.Header: okio.ByteString name
org.pytorch.R$styleable: int FontFamily_fontProviderPackage
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AnimatedStateListDrawableItem
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.pytorch.torchvision.R$id: int listMode
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_toRightOf
androidx.camera.core.UseCaseConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker()
androidx.constraintlayout.solver.widgets.ResolutionNode: void didResolve()
org.pytorch.torchvision.R$id: int action_bar_subtitle
androidx.appcompat.app.ActionBarDrawerToggle: void setDrawerSlideAnimationEnabled(boolean)
okio.ForwardingSource: ForwardingSource(okio.Source)
org.pytorch.R$attr: int dividerHorizontal
org.pytorch.R$drawable: int notification_bg
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.camera.core.TargetConfig: java.lang.String getTargetName()
org.pytorch.torchvision.R$id: int action_bar_title
androidx.vectordrawable.R$styleable: int ColorStateListItem_alpha
org.pytorch.torchvision.R$id: int search_close_btn
com.squareup.picasso.Request
androidx.fragment.R$styleable: int FontFamilyFont_fontWeight
androidx.core.app.ShareCompat$IntentReader: java.lang.CharSequence getText()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
androidx.appcompat.app.AppCompatDelegate: void onConfigurationChanged(android.content.res.Configuration)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResource(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
android.support.v4.media.RatingCompat
androidx.cardview.R$attr: int cardCornerRadius
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.media.R$layout: int notification_template_lines_media
androidx.recyclerview.widget.LinearLayoutManager: int getInitialPrefetchItemCount()
okhttp3.internal.http.RealInterceptorChain: okhttp3.EventListener eventListener()
org.pytorch.R$styleable: int Toolbar_contentInsetEndWithActions
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequestBuilder setUserAgent(java.lang.String)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.legacy.v4.R$styleable: int GradientColor_android_startColor
androidx.asynclayoutinflater.R$id: int text
okhttp3.CookieJar: okhttp3.CookieJar NO_COOKIES
androidx.appcompat.R$id: int normal
androidx.appcompat.widget.DecorToolbar
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState
org.pytorch.R$attr: int buttonPanelSideLayout
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode[] values()
androidx.customview.R$layout: int notification_template_part_time
okhttp3.internal.Internal: void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.cache.InternalCache)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
org.pytorch.torchvision.R$layout: int abc_select_dialog_material
org.pytorch.R$styleable: int[] MenuItem
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_y_offset_touch
io.github.prabhuomkar.pytorchandroid.R$mipmap
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState CONVERGED
androidx.cardview.R$styleable: int CardView_cardUseCompatPadding
android.support.v4.media.session.MediaControllerCompat$Callback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
androidx.fragment.R$styleable: int FontFamilyFont_font
com.google.auto.value.AutoValue
androidx.camera.camera2.R$style
androidx.constraintlayout.solver.widgets.ChainHead: ChainHead(androidx.constraintlayout.solver.widgets.ConstraintWidget,int,boolean)
androidx.recyclerview.widget.TileList$Tile: java.lang.Object[] mItems
okhttp3.ConnectionSpec
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
androidx.camera.camera2.R$id: int notification_main_column_container
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanIndex(int,int)
okhttp3.internal.ws.RealWebSocket
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_scaleY
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
org.pytorch.R$style: int Widget_AppCompat_Light_PopupMenu
androidx.loader.R$drawable: int notification_template_icon_low_bg
androidx.appcompat.R$color: int material_grey_900
io.github.prabhuomkar.pytorchandroid.R$attr: int iconifiedByDefault
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void recycle()
io.github.prabhuomkar.pytorchandroid.R$attr: int singleChoiceItemLayout
androidx.core.app.ShareCompat$IntentReader: boolean isSingleShare()
androidx.legacy.coreui.R$id: int text2
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollVertical()
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_image
org.pytorch.R$style: int Widget_AppCompat_RatingBar_Indicator
org.pytorch.R$color: int bright_foreground_disabled_material_dark
io.github.prabhuomkar.pytorchandroid.R$id: int chronometer
org.pytorch.R$layout: int select_dialog_singlechoice_material
okhttp3.OkHttpClient: okhttp3.CertificatePinner certificatePinner()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalDimension(int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_creator
okhttp3.Headers: okhttp3.Headers$Builder newBuilder()
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
org.pytorch.torchvision.R$color: int switch_thumb_material_dark
org.pytorch.torchvision.R$styleable: int ActionBar_icon
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.documentfile.provider.DocumentFile: boolean isDirectory()
androidx.core.provider.FontsContractCompat$Columns: int RESULT_CODE_FONT_NOT_FOUND
androidx.appcompat.app.ActionBar: void removeAllTabs()
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.camera.core.SensorOrientedMeteringPointFactory
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
androidx.activity.R$integer
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneBottomMargin
androidx.legacy.coreutils.R$string
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_editor_absoluteX
androidx.appcompat.R$styleable: int SwitchCompat_thumbTintMode
com.squareup.picasso.Callback
androidx.cardview.R$style: int CardView_Dark
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int)
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig$Builder setUserAgent(java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(androidx.core.content.pm.ShortcutInfoCompat)
io.github.prabhuomkar.pytorchandroid.R$style: int CardView_Light
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)
com.squareup.picasso.LruCache: int size()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Headline
androidx.viewpager.R$styleable: int GradientColor_android_endX
androidx.appcompat.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.camera.core.UseCaseGroup: UseCaseGroup()
androidx.loader.R$attr: int ttcIndex
org.pytorch.torchvision.R$layout: int notification_template_part_chronometer
org.pytorch.torchvision.R$styleable: int GradientColor_android_startX
androidx.drawerlayout.R$attr: int fontWeight
androidx.collection.LongSparseArray: int size()
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_NEVER
com.squareup.picasso.PicassoProvider: PicassoProvider()
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MARK_AS_UNREAD
androidx.appcompat.R$id: int line1
androidx.appcompat.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.core.view.GravityCompat: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)
androidx.appcompat.widget.ListPopupWindow: void setPromptView(android.view.View)
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle,int)
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
androidx.camera.core.Preview$Defaults: Preview$Defaults()
org.pytorch.R$attr: int fontVariationSettings
androidx.appcompat.R$styleable: int ActionMode_height
androidx.legacy.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()
org.pytorch.R$styleable: int Toolbar_subtitleTextColor
androidx.legacy.coreutils.R$styleable: int GradientColor_android_centerY
org.pytorch.R$integer: int abc_config_activityShortDur
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_LEFT
okhttp3.internal.Version
androidx.core.graphics.ColorUtils: int calculateMinimumAlpha(int,int,float)
androidx.core.R$id: int accessibility_custom_action_14
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_900
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int UNCONNECTED
androidx.appcompat.resources.R$integer: int status_bar_notification_info_maxnum
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
org.pytorch.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.legacy.coreutils.R$id
org.pytorch.R$styleable: int SwitchCompat_switchMinWidth
androidx.core.view.LayoutInflaterCompat: void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory)
com.downloader.request.DownloadRequest: void setSequenceNumber(int)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.camera.core.CameraCaptureCallback: void onCaptureFailed(androidx.camera.core.CameraCaptureFailure)
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
io.github.prabhuomkar.pytorchandroid.R$id: int actions
okio.Pipe: Pipe(long)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.appcompat.R$attr: int textColorAlertDialogListItem
org.pytorch.R$attr: int selectableItemBackgroundBorderless
okhttp3.MultipartBody: okhttp3.MediaType PARALLEL
androidx.recyclerview.widget.RecyclerView: int getBaseline()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_stacked_max_height
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorControlHighlight
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_spanCount
org.pytorch.R$styleable: int ActionBar_popupTheme
androidx.appcompat.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
androidx.legacy.content.WakefulBroadcastReceiver
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.AspectRatio getTargetAspectRatio()
androidx.appcompat.R$styleable: int FontFamilyFont_fontStyle
androidx.core.view.ViewCompat: void setActivated(android.view.View,boolean)
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
org.pytorch.torchvision.R$string: int abc_activity_chooser_view_see_all
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.downloader.core.ExecutorSupplier
androidx.legacy.coreui.R$id: int icon_group
androidx.fragment.app.DialogFragment: void onDestroyView()
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAntiAlias(boolean)
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.core.view.ViewCompat: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginTop
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.core.app.ShareCompat: void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder)
androidx.appcompat.R$styleable: int SearchView_submitBackground
okhttp3.internal.http2.Http2Stream: okio.Timeout writeTimeout()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
org.pytorch.R$styleable: int[] ColorStateListItem
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_FLOAT
androidx.camera.camera2.impl.Camera$InternalState: androidx.camera.camera2.impl.Camera$InternalState[] values()
org.pytorch.R$styleable: int GradientColor_android_centerColor
androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Action$Extender
androidx.appcompat.R$layout: int abc_list_menu_item_radio
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA
androidx.camera.core.R$dimen: int compat_notification_large_icon_max_width
androidx.recyclerview.widget.RecyclerView: int SCROLL_STATE_DRAGGING
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
androidx.camera.core.PreviewConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
okhttp3.internal.http1.Http1Codec: okio.Source newFixedLengthSource(long)
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_LOW
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int rightToRight
androidx.swiperefreshlayout.R$dimen: int compat_notification_large_icon_max_height
androidx.vectordrawable.R$id: int title
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Small_Inverse
androidx.loader.content.CursorLoader: java.lang.Object loadInBackground()
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
androidx.fragment.app.Fragment: android.view.View getView()
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
org.pytorch.R$styleable: int ActionBar_backgroundSplit
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
org.pytorch.R$styleable: int[] ViewStubCompat
androidx.media.R$id: int text
androidx.fragment.app.Fragment: void setTargetFragment(androidx.fragment.app.Fragment,int)
org.pytorch.torchvision.R$styleable: int ActionBar_hideOnContentScroll
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_maxHeight
androidx.appcompat.R$id: int home
androidx.versionedparcelable.VersionedParcel: java.util.Set readSet(java.util.Set,int)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FLUORESCENT
androidx.appcompat.resources.R$id: int accessibility_custom_action_22
androidx.camera.core.VideoCapture: VideoCapture(androidx.camera.core.VideoCaptureConfig)
androidx.media.R$styleable: int[] GradientColorItem
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)
androidx.media.R$attr: int fontProviderPackage
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesCompat wrap(java.lang.Object)
androidx.loader.app.LoaderManager: LoaderManager()
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSink sink
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
androidx.camera.core.SessionConfig$Builder: void addAllSessionStateCallbacks(java.util.List)
androidx.fragment.app.FragmentTabHost: FragmentTabHost(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
androidx.camera.core.MeteringPointFactory: float DEFAULT_WEIGHT
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display1
org.pytorch.torchvision.R$styleable: int[] LinearLayoutCompat
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_type
androidx.core.net.TrafficStatsCompat: int getThreadStatsTag()
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor ioExecutor()
okhttp3.internal.cache.DiskLruCache$Editor: okio.Source newSource(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int paddingTopNoTitle
androidx.core.view.NestedScrollingChild2: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
androidx.activity.R$id: int dialog_button
org.pytorch.R$styleable: int AppCompatTheme_imageButtonStyle
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.collection.LongSparseArray: void setValueAt(int,java.lang.Object)
androidx.annotation.IntDef: boolean flag()
androidx.appcompat.R$color: int error_color_material_light
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()
androidx.media.AudioAttributesCompat: int FLAG_HW_AV_SYNC
androidx.core.app.NotificationCompat$Action$Builder: androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput)
androidx.fragment.R$id: int text2
androidx.core.provider.FontsContractCompat$Columns
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_media_action
okhttp3.internal.connection.StreamAllocation: java.lang.String toString()
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.appcompat.app.ActionBarDrawerToggle: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.media.MediaBrowserServiceCompat: int RESULT_PROGRESS_UPDATE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)
androidx.camera.camera2.R$dimen
okio.BufferedSink: okio.BufferedSink writeInt(int)
androidx.vectordrawable.animated.R$dimen: int compat_button_inset_vertical_material
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.R$id: int search_edit_frame
androidx.camera.core.MultiValueSet: androidx.camera.core.MultiValueSet clone()
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
org.pytorch.torchvision.R$attr: int panelMenuListWidth
androidx.customview.widget.ViewDragHelper: android.view.View getCapturedView()
androidx.appcompat.R$style: int Theme_AppCompat_DayNight
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_25
androidx.camera.core.SessionConfig$Builder: void addRepeatingCameraCaptureCallback(androidx.camera.core.CameraCaptureCallback)
androidx.camera.camera2.impl.compat.CameraDeviceCompat: void createCaptureSession(android.hardware.camera2.CameraDevice,androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat)
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedQuery(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
com.squareup.picasso.Picasso: void invalidate(android.net.Uri)
androidx.appcompat.app.AppCompatCallback: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.AppCompatDrawableManager
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_SPREAD
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_INDIVIDUAL
androidx.drawerlayout.R$dimen: int notification_right_side_padding_top
androidx.appcompat.resources.R$drawable: int notification_action_background
org.pytorch.R$drawable: int abc_seekbar_track_material
androidx.core.view.ViewCompat: float getScaleY(android.view.View)
okio.ByteString: boolean endsWith(okio.ByteString)
org.pytorch.R$attr: int closeItemLayout
androidx.activity.R$dimen: int notification_right_side_padding_top
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.content.Context getActionBarThemedContext()
androidx.core.view.MotionEventCompat: int AXIS_VSCROLL
androidx.constraintlayout.solver.widgets.Guideline: java.util.ArrayList getAnchors()
org.pytorch.torchvision.R$style: int Widget_AppCompat_PopupMenu_Overflow
org.pytorch.torchvision.R$attr: int actionModeCloseButtonStyle
androidx.recyclerview.R$drawable: int notification_template_icon_low_bg
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)
androidx.customview.R$color: int secondary_text_default_material_light
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_creator
androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO
androidx.appcompat.R$id: int accessibility_custom_action_4
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
okio.Okio: okio.Sink sink(java.io.File)
okhttp3.internal.platform.Platform: java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket)
androidx.camera.core.CameraOrientationUtil: int surfaceRotationToDegrees(int)
org.pytorch.R$styleable: int MenuView_android_verticalDivider
org.pytorch.torchvision.R$attr: int subtitleTextAppearance
org.pytorch.R$dimen: int abc_seekbar_track_background_height_material
androidx.appcompat.R$id: int progress_horizontal
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
androidx.camera.core.Config$Option: java.lang.String getId()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
org.pytorch.torchvision.R$styleable: int[] ButtonBarLayout
org.pytorch.R$style: int Base_Widget_AppCompat_Button_Small
org.pytorch.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.camera.core.UseCaseGroupRepository$2: void onDestroy(androidx.lifecycle.LifecycleOwner)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_meta_shortcut_label
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity(int)
androidx.drawerlayout.R$id: int blocking
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(android.content.Context,long)
androidx.appcompat.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_LONG_CLICK
androidx.activity.R$styleable: int GradientColorItem_android_color
androidx.core.R$id: int tag_accessibility_actions
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_Light
okio.HashingSink: okio.HashingSink sha1(okio.Sink)
androidx.versionedparcelable.VersionedParcel: void writeBundle(android.os.Bundle)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.customview.R$drawable: int notification_bg
org.pytorch.R$styleable: int ViewStubCompat_android_inflatedId
com.downloader.PRDownloaderConfig: com.downloader.PRDownloaderConfig$Builder newBuilder()
okio.Source: long read(okio.Buffer,long)
androidx.core.view.MotionEventCompat: int getSource(android.view.MotionEvent)
org.pytorch.torchvision.R$color: int abc_hint_foreground_material_dark
androidx.appcompat.app.WindowDecorActionBar: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.camera.core.R$id: int action_image
androidx.annotation.RequiresPermission: java.lang.String[] anyOf()
androidx.versionedparcelable.VersionedParcel: int[] readIntArray()
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
androidx.camera.camera2.R$id: int notification_background
androidx.appcompat.R$attr: int actionOverflowMenuStyle
okio.Buffer: int readUtf8CodePoint()
androidx.loader.R$drawable: int notification_icon_background
okhttp3.ConnectionSpec$Builder: ConnectionSpec$Builder(okhttp3.ConnectionSpec)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
org.pytorch.torchvision.R$style: int Animation_AppCompat_DropDownUp
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.UseCaseConfig build()
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_20
com.downloader.utils.Utils: void renameFileName(java.lang.String,java.lang.String)
androidx.appcompat.R$styleable: int MenuItem_tooltipText
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.customview.R$attr: int font
org.pytorch.torchvision.R$id: int decor_content_parent
androidx.fragment.app.FragmentManager$BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()
androidx.slidingpanelayout.R$id: int right_side
org.pytorch.torchvision.R$styleable: int GradientColor_android_endY
io.github.prabhuomkar.pytorchandroid.R$attr: int voiceIcon
io.github.prabhuomkar.pytorchandroid.R$color: int abc_search_url_text
androidx.viewpager.R$drawable
androidx.constraintlayout.solver.LinearSystem: int getNumVariables()
okhttp3.internal.cache.DiskLruCache
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToStart
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionBar_TabView
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_creator
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_backgroundSplit
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInVerticalChain()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.core.view.MotionEventCompat: float getY(android.view.MotionEvent,int)
androidx.appcompat.R$attr: int autoSizeMinTextSize
org.pytorch.torchvision.R$styleable: int[] AnimatedStateListDrawableCompat
org.pytorch.torchvision.R$id: int split_action_bar
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
com.squareup.picasso.Cache: int maxSize()
androidx.core.view.InputDeviceCompat: int SOURCE_MOUSE
androidx.constraintlayout.widget.R$id: int end
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderAuthority
androidx.camera.core.SessionConfig$Builder
androidx.activity.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.fragment.R$styleable: int FontFamilyFont_fontStyle
androidx.asynclayoutinflater.R$attr: int font
androidx.legacy.v4.R$styleable: int[] ColorStateListItem
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
org.pytorch.torchvision.R$id: int src_over
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_SHA
org.pytorch.R$attr: int listChoiceBackgroundIndicator
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)
androidx.legacy.coreutils.R$layout: int notification_action
org.pytorch.R$styleable: int TextAppearance_android_textColorHint
androidx.collection.CircularIntArray: int popFirst()
androidx.camera.camera2.R$styleable: int GradientColor_android_startY
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
org.pytorch.R$attr: int dialogTheme
androidx.core.app.NotificationCompat$WearableExtender: int SCREEN_TIMEOUT_SHORT
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Subhead_Inverse
org.pytorch.torchvision.R$styleable: int AppCompatTheme_panelBackground
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String)
androidx.appcompat.R$string
androidx.viewpager.R$styleable: <clinit>()
androidx.core.app.NotificationCompat: int GROUP_ALERT_CHILDREN
androidx.recyclerview.R$style: int Widget_Compat_NotificationActionContainer
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_METERING_MODE
androidx.media.R$string
android.support.v4.media.RatingCompat$Style
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionBar_TabText
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy OFFLINE
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_contentPaddingTop
androidx.core.view.MotionEventCompat: int BUTTON_PRIMARY
androidx.camera.core.CameraCaptureCallbacks: androidx.camera.core.CameraCaptureCallback createNoOpCallback()
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView
androidx.camera.core.R$styleable: int FontFamily_fontProviderCerts
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_shadowColor
androidx.exifinterface.media.ExifInterface: short SATURATION_NORMAL
androidx.recyclerview.R$styleable: int GradientColor_android_endColor
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
androidx.viewpager.R$id: int actions
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: android.content.pm.ResolveInfo resolveInfo
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_UNKNWON
androidx.appcompat.widget.SwitchCompat: void drawableHotspotChanged(float,float)
androidx.legacy.coreui.R$layout: int notification_template_part_time
androidx.camera.core.ImageCapture$CaptureCallbackChecker$CaptureResultChecker: java.lang.Object check(androidx.camera.core.CameraCaptureResult)
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory: androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_PACKED
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneLeftMargin
androidx.core.R$drawable: int notification_bg_low_normal
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
org.pytorch.R$styleable: int ActionMode_closeItemLayout
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
android.support.v4.media.session.ParcelableVolumeInfo
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context)
org.pytorch.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
org.pytorch.R$color: int accent_material_dark
org.pytorch.torchvision.R$dimen: int highlight_alpha_material_light
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.fragment.R$id: int accessibility_custom_action_26
okhttp3.CertificatePinner: java.lang.String pin(java.security.cert.Certificate)
okhttp3.internal.http2.Http2Stream
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int,int,boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVisibility(int)
org.pytorch.R$styleable: int[] ActionMenuView
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.core.view.ViewCompat: void setLayoutDirection(android.view.View,int)
androidx.core.math.MathUtils: float clamp(float,float,float)
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasComplexMatchWeights
androidx.appcompat.app.AlertDialog: void setIcon(int)
org.pytorch.torchvision.R$attr: int showText
androidx.camera.core.impl.utils.executor.CameraXExecutors: boolean isSequentialExecutor(java.util.concurrent.Executor)
androidx.media.MediaBrowserProtocol: java.lang.String DATA_PACKAGE_NAME
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
org.pytorch.R$color: int bright_foreground_disabled_material_light
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: void addSurface(android.view.Surface)
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.appcompat.widget.ActionBarContextView: void animateToVisibility(int)
androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.media.MediaSessionManager: androidx.media.MediaSessionManager getSessionManager(android.content.Context)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig$Builder setDatabaseEnabled(boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonTintMode
androidx.customview.R
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontStyle
androidx.camera.core.BaseCamera: void addOnlineUseCase(java.util.Collection)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionBar
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.core.view.ViewCompat: int TYPE_NON_TOUCH
androidx.core.R$dimen: int compat_notification_large_icon_max_height
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
androidx.constraintlayout.widget.ConstraintSet
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_LINE
androidx.camera.core.R$id: int accessibility_custom_action_5
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarWidgetTheme
org.pytorch.R$string: int abc_menu_enter_shortcut_label
androidx.viewpager.R$id: int italic
androidx.core.app.NotificationCompat$MessagingStyle: void restoreFromCompatExtras(android.os.Bundle)
androidx.customview.widget.ViewDragHelper: void setMinVelocity(float)
androidx.cursoradapter.widget.ResourceCursorAdapter: void setViewResource(int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabStyle
androidx.recyclerview.widget.RecyclerView$ItemDecoration
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
okhttp3.Credentials
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.loader.R$id: int action_text
androidx.slidingpanelayout.R$attr: int fontProviderPackage
androidx.core.app.RemoteActionCompat: void setEnabled(boolean)
androidx.loader.R$id: int async
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List)
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_android_color
org.pytorch.R$styleable: int Toolbar_maxButtonHeight
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: RecyclerViewAccessibilityDelegate(androidx.recyclerview.widget.RecyclerView)
androidx.camera.core.PreviewConfig: java.util.List getSupportedResolutions()
okhttp3.Handshake: okhttp3.TlsVersion tlsVersion()
okio.Buffer: int hashCode()
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.camera.core.UseCase$EventListener: void onUnbind()
androidx.camera.core.CameraIdFilterSet: void addCameraIdFilter(androidx.camera.core.CameraIdFilter)
okhttp3.Response: okhttp3.ResponseBody body()
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.camera.core.ImageCaptureConfig: int getTargetRotation(int)
androidx.customview.widget.ViewDragHelper: int STATE_DRAGGING
androidx.cardview.R$style: int CardView
org.pytorch.R$drawable: int abc_ic_clear_material
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementCacheEnabled()
androidx.customview.view.AbsSavedState
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_LOCATION
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry
androidx.asynclayoutinflater.view.AsyncLayoutInflater
androidx.camera.core.R$id: int notification_main_column
androidx.core.widget.TextViewCompat: void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
androidx.appcompat.R$attr: int contentInsetLeft
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.slidingpanelayout.R$dimen: int notification_right_icon_size
androidx.fragment.R$dimen: int compat_notification_large_icon_max_height
androidx.recyclerview.widget.AsyncDifferConfig: androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback()
androidx.camera.core.R$id: int accessibility_custom_action_19
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getPlaybackType()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
androidx.appcompat.R$attr: int listChoiceIndicatorSingleAnimated
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Display1
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Small
androidx.media.R$style: int TextAppearance_Compat_Notification_Info_Media
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
com.squareup.picasso.Request: boolean centerCrop
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getCoveredFadeColor()
androidx.constraintlayout.widget.ConstraintHelper: boolean mUseViewMeasure
androidx.constraintlayout.solver.LinearSystem: void fillMetrics(androidx.constraintlayout.solver.Metrics)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.vectordrawable.animated.R$drawable
androidx.drawerlayout.R$drawable: int notification_bg_low
org.pytorch.torchvision.R$color: int material_grey_100
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_toTopOf
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture allAsList(java.util.Collection)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.appcompat.view.CollapsibleActionView: void onActionViewExpanded()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarPopupTheme
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.collection.CircularIntArray: int popLast()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_18
androidx.camera.camera2.impl.VideoCaptureConfigProvider
androidx.appcompat.widget.DecorContentParent: void setIcon(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.lifecycle.MediatorLiveData: void onActive()
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withOnDragInitiatedListener(androidx.recyclerview.selection.OnDragInitiatedListener)
org.pytorch.R$styleable: int SearchView_closeIcon
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int colorControlActivated
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: boolean equals(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.appcompat.R$id: int accessibility_custom_action_23
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerClosed(android.view.View)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void smoothSlideOpen()
androidx.camera.core.MutableOptionsBundle
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String BUTTON_STATE_DOWNLOAD
androidx.constraintlayout.solver.Metrics: void reset()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHeight_default
androidx.core.graphics.TypefaceCompatUtil
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getHead()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.recyclerview.R$attr: int ttcIndex
androidx.legacy.coreutils.R$styleable: int GradientColor_android_type
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
androidx.core.view.AccessibilityDelegateCompat
androidx.appcompat.R$layout: int abc_expanded_menu_layout
androidx.core.app.ShareCompat$IntentBuilder
androidx.fragment.app.Fragment: void setHasOptionsMenu(boolean)
androidx.recyclerview.R$drawable: int notification_bg_low_normal
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int RIGHT
okio.Buffer: okio.Buffer clone()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBJECT_DISTANCE
androidx.appcompat.widget.TintTypedArray
org.pytorch.torchvision.R$styleable: int ActionBarLayout_android_layout_gravity
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
okio.Pipe: okio.Source source()
androidx.fragment.app.FragmentTabHost: void setup(android.content.Context,androidx.fragment.app.FragmentManager)
androidx.camera.core.CameraX$LensFacing: androidx.camera.core.CameraX$LensFacing BACK
androidx.appcompat.R$drawable: int abc_btn_check_material
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setShuffleMode(int)
androidx.fragment.app.Fragment: boolean isResumed()
androidx.camera.core.UseCaseEventConfig$Builder: java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
androidx.appcompat.R$styleable: int ColorStateListItem_alpha
androidx.recyclerview.widget.RecyclerView$SmoothScroller$ScrollVectorProvider
androidx.recyclerview.selection.OnContextClickListener: boolean onContextClick(android.view.MotionEvent)
androidx.fragment.R$styleable: int GradientColor_android_centerY
androidx.loader.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View)
androidx.core.view.ViewCompat: void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean)
androidx.recyclerview.widget.ItemTouchHelper$Callback: int convertToRelativeDirection(int,int)
org.pytorch.R$layout: int abc_action_bar_up_container
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
org.pytorch.torchvision.R$style: int Widget_AppCompat_PopupMenu
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab newTab()
androidx.collection.SparseArrayCompat
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_28
androidx.vectordrawable.R$id: int accessibility_custom_action_31
androidx.collection.CircularArray: void removeFromEnd(int)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri)
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
org.pytorch.R$attr: int checkedTextViewStyle
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
androidx.legacy.v4.R$id: int right
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.appcompat.R$color: int primary_text_default_material_dark
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
org.pytorch.torchvision.R$attr: int windowFixedWidthMinor
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMaxHeight()
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: int getY()
android.support.v4.media.session.MediaControllerCompat$TransportControls: void prepareFromMediaId(java.lang.String,android.os.Bundle)
androidx.recyclerview.widget.SnapHelper: boolean onFling(int,int)
androidx.annotation.FloatRange: boolean toInclusive()
androidx.viewpager.R$string
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View)
androidx.camera.core.OptionsBundle
org.pytorch.R$style: int Base_Animation_AppCompat_DropDownUp
androidx.camera.camera2.impl.Camera2CameraFactory: androidx.camera.core.LensFacingCameraIdFilter getLensFacingCameraIdFilter(androidx.camera.core.CameraX$LensFacing)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_PERCENT
androidx.swiperefreshlayout.widget.CircularProgressDrawable: boolean isRunning()
androidx.camera.core.ImageCapture: void onCameraControlReady(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dividerHorizontal
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginBottom
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ListPopupWindow
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
com.downloader.internal.DownloadRunnable
org.pytorch.R$attr: int colorControlActivated
androidx.core.view.accessibility.AccessibilityRecordCompat: int getWindowId()
okio.BufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
io.github.prabhuomkar.pytorchandroid.R$mipmap: int ic_launcher
androidx.recyclerview.widget.LinearSmoothScroller: int calculateTimeForDeceleration(int)
okhttp3.Cookie: boolean secure()
androidx.media.MediaBrowserProtocol: int CLIENT_VERSION_1
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.core.internal.view.SupportMenu: int SUPPORTED_MODIFIERS_MASK
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00001
androidx.appcompat.R$attr: int fontProviderPackage
androidx.camera.core.CameraInfoInternal: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.appcompat.widget.SwitchCompat: void draw(android.graphics.Canvas)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_WIDTH
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_alpha
androidx.core.widget.PopupWindowCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
androidx.appcompat.R$dimen: int abc_text_size_display_2_material
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
androidx.camera.core.R$styleable: int[] GradientColor
org.pytorch.torchvision.R$attr: int keylines
androidx.cardview.R$dimen: int cardview_default_elevation
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.RequestBody)
com.downloader.database.DbHelper: java.util.List getUnwantedModels(int)
okhttp3.internal.http1.Http1Codec: void cancel()
androidx.recyclerview.widget.SnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
androidx.core.os.BuildCompat: boolean isAtLeastO()
org.pytorch.IValue: boolean isNull()
androidx.core.widget.ScrollerCompat: void abortAnimation()
org.pytorch.R$bool: int abc_action_bar_embed_tabs
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_WRONG_CERTIFICATES
androidx.appcompat.R$id: int off
org.pytorch.torchvision.R$attr: int actionMenuTextColor
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_PopupWindow
androidx.appcompat.R$attr: int dialogPreferredPadding
org.pytorch.R$style: int Base_Animation_AppCompat_Tooltip
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.recyclerview.R$id: int accessibility_custom_action_17
org.pytorch.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
androidx.annotation.Size: long multiple()
org.pytorch.R$drawable: int abc_list_selector_holo_dark
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.fragment.R$id: int tag_screen_reader_focusable
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
androidx.appcompat.resources.R$id: int accessibility_custom_action_12
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)
org.pytorch.torchvision.R$dimen: int abc_seekbar_track_progress_height_material
androidx.appcompat.resources.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
android.support.v4.media.MediaDescriptionCompat$Builder: MediaDescriptionCompat$Builder()
androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)
androidx.asynclayoutinflater.R$id: int right_icon
okhttp3.OkHttpClient: okhttp3.EventListener$Factory eventListenerFactory()
androidx.viewpager.widget.PagerTabStrip: int getTabIndicatorColor()
okhttp3.internal.publicsuffix.PublicSuffixDatabase: java.lang.String getEffectiveTldPlusOne(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.recyclerview.R$layout: int notification_template_custom_big
androidx.appcompat.R$color: int abc_search_url_text_selected
org.pytorch.torchvision.R$id: int message
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
org.pytorch.R$styleable: int AppCompatTextView_drawableTopCompat
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
org.pytorch.torchvision.R$id: int custom
androidx.core.view.OneShotPreDrawListener
okio.HashingSource
io.github.prabhuomkar.pytorchandroid.R$layout: int fragment_app_info
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_2
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void smoothScrollToPosition(int)
okhttp3.internal.Util: boolean discard(okio.Source,int,java.util.concurrent.TimeUnit)
androidx.appcompat.widget.ActivityChooserView: androidx.appcompat.widget.ListPopupWindow getListPopupWindow()
org.pytorch.torchvision.R$color: int notification_icon_bg_color
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment END
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: java.util.List getSurfaces()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setAlpha(int)
org.pytorch.R$style: int TextAppearance_Compat_Notification
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.view.View getCustomView()
androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)
org.pytorch.BuildConfig: java.lang.String VERSION_NAME
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
org.pytorch.R$style: int TextAppearance_AppCompat_Button
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
androidx.appcompat.R$styleable: int FontFamilyFont_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Medium
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowDimensions(float,float)
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
com.downloader.database.DbHelper: void insert(com.downloader.database.DownloadModel)
com.downloader.Response: void setSuccessful(boolean)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_14
okhttp3.internal.connection.RouteDatabase: RouteDatabase()
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerStateChanged(int)
org.pytorch.torchvision.R$attr: int tint
androidx.legacy.v4.R$color: int secondary_text_default_material_light
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int)
org.pytorch.R$style: int Widget_AppCompat_ActionBar_TabView
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_chainUseRtl
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_DRAG
org.pytorch.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.appcompat.R$styleable: int GradientColor_android_endY
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator rotate(float)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
androidx.camera.core.Preview: boolean isTorchOn()
androidx.slidingpanelayout.R$layout: int notification_template_custom_big
androidx.camera.camera2.R
org.pytorch.torchvision.R$color: int foreground_material_light
androidx.constraintlayout.solver.LinearSystem: void addRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float,int)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder password(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDismissable(boolean)
androidx.vectordrawable.animated.R$color
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_font
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
androidx.legacy.coreui.R$id: int action_container
okhttp3.internal.platform.Platform: java.lang.String getPrefix()
org.pytorch.torchvision.R$id: int select_dialog_listview
okhttp3.HttpUrl: java.lang.String query()
androidx.camera.core.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context)
org.pytorch.torchvision.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.R$styleable: int AppCompatTheme_dialogCornerRadius
okio.Buffer$UnsafeCursor: int seek(long)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ProgressBar
org.pytorch.R$attr: int listMenuViewStyle
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void clear()
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.core.view.ScaleGestureDetectorCompat: void setQuickScaleEnabled(java.lang.Object,boolean)
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.recyclerview.widget.RecyclerView: void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Runner
androidx.annotation.MenuRes
androidx.camera.core.ImageReaderProxys: androidx.camera.core.ImageReaderProxy createIsolatedReader(int,int,int,int)
android.support.v4.media.session.PlaybackStateCompat: int REPEAT_MODE_NONE
androidx.constraintlayout.solver.widgets.ResolutionNode: boolean isResolved()
androidx.recyclerview.selection.MutableSelection: MutableSelection()
org.pytorch.R$styleable: int ActionBar_icon
org.pytorch.R$styleable: int MenuView_android_itemIconDisabledAlpha
org.pytorch.torchvision.R$dimen: int abc_list_item_padding_horizontal_material
androidx.camera.core.Config$Option: androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class,java.lang.Object)
androidx.camera.core.DeferrableSurface$SurfaceClosedException: DeferrableSurface$SurfaceClosedException(java.lang.String,androidx.camera.core.DeferrableSurface)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_COMPACT_ACTIONS
androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$id: int clip_horizontal
androidx.core.view.MenuItemCompat: boolean collapseActionView(android.view.MenuItem)
org.pytorch.R$style: int Base_V7_Theme_AppCompat
androidx.appcompat.resources.R$id: int blocking
androidx.legacy.coreui.R$attr: int font
androidx.legacy.coreui.R$dimen: int notification_top_pad_large_text
androidx.recyclerview.R$id: int accessibility_custom_action_12
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_NONE
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
androidx.core.text.BidiFormatter$Builder: BidiFormatter$Builder(java.util.Locale)
androidx.camera.core.impl.utils.futures.Futures: java.lang.Object getUninterruptibly(java.util.concurrent.Future)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
androidx.constraintlayout.widget.R$attr: int layout_constraintEnd_toEndOf
androidx.media.MediaBrowserServiceCompat: void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result)
org.pytorch.R$string: int abc_searchview_description_submit
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
okhttp3.internal.cache.DiskLruCache: boolean isClosed()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)
org.pytorch.R$styleable: int[] PopupWindowBackgroundState
io.github.prabhuomkar.pytorchandroid.R$bool: int abc_action_bar_embed_tabs
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startX
org.pytorch.torchvision.R$string: int abc_action_bar_up_description
androidx.coordinatorlayout.R$attr: int layout_behavior
androidx.recyclerview.widget.AdapterListUpdateCallback: void onRemoved(int,int)
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.constraintlayout.widget.R$attr: int layout_constraintRight_creator
org.pytorch.R$styleable: int Toolbar_subtitleTextAppearance
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
org.pytorch.torchvision.R$id: int action_container
androidx.camera.core.R$color: int notification_action_color_filter
androidx.coordinatorlayout.R$layout: int notification_template_part_chronometer
androidx.versionedparcelable.VersionedParcelize: boolean allowSerialization()
androidx.collection.SimpleArrayMap: int hashCode()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
androidx.appcompat.resources.R$drawable: int notification_bg_low_normal
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatImageView_android_src
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderPackage
androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()
androidx.asynclayoutinflater.R$id: int normal
androidx.camera.core.CameraRepository: androidx.camera.core.BaseCamera getCamera(java.lang.String)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeCutDrawable
com.downloader.Constants: int UPDATE
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
androidx.camera.camera2.R$id: int accessibility_custom_action_2
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginTop
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList findWidgets(int,int,int,int)
androidx.media.R$drawable: int notification_template_icon_low_bg
com.downloader.httpclient.HttpClient: java.io.InputStream getInputStream()
com.downloader.request.DownloadRequest: int getSequenceNumber()
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_CUSTOM
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS_MAX
androidx.recyclerview.widget.SimpleItemAnimator: void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.legacy.coreui.R$drawable: int notification_tile_bg
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_barrierDirection
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_2_class
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_SeekBar
androidx.versionedparcelable.VersionedParcel: int[] readIntArray(int[],int)
org.pytorch.R$id: int listMode
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_RatingBar_Indicator
androidx.camera.core.ImageCapture$OnImageCapturedListener: void onError(androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable)
androidx.loader.R$styleable: int GradientColor_android_gradientRadius
androidx.fragment.R$attr: int fontProviderCerts
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
androidx.legacy.v4.R$dimen
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeStyle
androidx.loader.R$style: int Widget_Compat_NotificationActionText
org.pytorch.R$styleable: int AppCompatTheme_dialogTheme
io.github.prabhuomkar.pytorchandroid.R$style: int AlertDialog_AppCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
okhttp3.internal.http.RealInterceptorChain: int readTimeoutMillis()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour WRAP_CONTENT
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
androidx.constraintlayout.solver.widgets.Guideline
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_QUEUE_COMMANDS
org.pytorch.torchvision.R$id: int group_divider
androidx.recyclerview.widget.RecyclerView: boolean hasFixedSize()
androidx.coordinatorlayout.R$drawable: int notification_template_icon_bg
okhttp3.internal.connection.StreamAllocation$StreamAllocationReference
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.camera.core.AspectRatio: androidx.camera.core.AspectRatio[] values()
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$id: int action_mode_close_button
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
androidx.legacy.coreui.R$id: int forever
org.pytorch.R$color: int primary_material_dark
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginEnd
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardPreventCornerOverlap
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.activity.R$styleable: int FontFamilyFont_font
androidx.core.app.Person: android.os.PersistableBundle toPersistableBundle()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeightWrapContent(boolean)
androidx.core.R$dimen: int notification_large_icon_height
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemPaddingRight
androidx.appcompat.R$drawable: int abc_list_selector_background_transition_holo_light
android.support.v4.media.session.IMediaSession: void rate(android.support.v4.media.RatingCompat)
androidx.viewpager.R$id: int forever
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String)
org.pytorch.torchvision.R$attr: int switchPadding
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_RETURN_LIGHT_DETECTED
androidx.vectordrawable.R$styleable: int FontFamilyFont_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_download
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
androidx.camera.camera2.R$id: int accessibility_custom_action_11
okhttp3.Response$Builder: okhttp3.Response$Builder sentRequestAtMillis(long)
androidx.loader.app.LoaderManager$LoaderCallbacks: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)
androidx.core.view.ViewCompat: void setScreenReaderFocusable(android.view.View,boolean)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
androidx.camera.camera2.impl.Camera2CameraControl: void submitCaptureRequests(java.util.List)
org.pytorch.torchvision.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorPrimary
io.github.prabhuomkar.pytorchandroid.R$attr: int editTextStyle
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
androidx.appcompat.widget.ActionBarContainer
android.support.v4.media.session.MediaSessionCompat: void setMediaButtonReceiver(android.app.PendingIntent)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$layout: int list_model_item
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_control_corner_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_android_orientation
okio.Okio: okio.Source source(java.net.Socket)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.app.RemoteActionCompat: android.app.PendingIntent getActionIntent()
androidx.core.provider.FontRequest: java.lang.String toString()
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.R$drawable: int notification_template_icon_low_bg
androidx.loader.content.AsyncTaskLoader: AsyncTaskLoader(android.content.Context)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
androidx.appcompat.R$attr: int textAppearanceSmallPopupMenu
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
androidx.camera.core.R$id: int accessibility_custom_action_20
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.camera.core.SurfaceConfig: androidx.camera.core.SurfaceConfig create(androidx.camera.core.SurfaceConfig$ConfigType,androidx.camera.core.SurfaceConfig$ConfigSize)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List)
androidx.appcompat.R$drawable: int notification_icon_background
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()
io.github.prabhuomkar.pytorchandroid.R$attr: int titleMarginEnd
androidx.media.MediaBrowserCompatUtils: boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle)
androidx.vectordrawable.R$dimen: int notification_top_pad_large_text
androidx.appcompat.R$styleable: int SwitchCompat_android_textOn
org.pytorch.R$dimen: int abc_text_size_subhead_material
com.squareup.picasso.Target: void onPrepareLoad(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$attr: int lastBaselineToBottomHeight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)
androidx.appcompat.widget.SwitchCompat: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.versionedparcelable.VersionedParcelize: int[] deprecatedIds()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.loader.app.LoaderManager: void markForRedelivery()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA
androidx.core.view.MotionEventCompat: float getAxisValue(android.view.MotionEvent,int,int)
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int,java.lang.Object)
okhttp3.internal.Util: java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[])
android.support.v4.media.session.IMediaSession$Stub
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.appcompat.R$style: int Base_DialogWindowTitleBackground_AppCompat
androidx.activity.R$drawable: int notification_template_icon_low_bg
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationX(float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator error(int)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
org.pytorch.torchvision.R$attr: int multiChoiceItemLayout
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_alpha
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListView_DropDown
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowDimensionRatio(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
androidx.core.view.PointerIconCompat: int TYPE_CROSSHAIR
androidx.core.util.Pair: boolean equals(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5
androidx.viewpager.widget.PagerAdapter: android.os.Parcelable saveState()
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
org.pytorch.torchvision.R$drawable: int notification_bg_low_normal
androidx.vectordrawable.R$dimen: int compat_button_inset_horizontal_material
androidx.constraintlayout.solver.widgets.Barrier: void resetResolutionNodes()
androidx.activity.R$id: int line3
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DIRECTION_MAGNETIC
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean)
androidx.loader.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
org.pytorch.torchvision.R$attr: int numericModifiers
androidx.appcompat.widget.TintTypedArray: int getType(int)
org.pytorch.R$style: int Animation_AppCompat_DropDownUp
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getCurrent()
androidx.legacy.coreui.R$id: int italic
android.support.v4.media.MediaMetadataCompat$RatingKey
androidx.camera.core.R$drawable: int notification_bg_normal
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int getOptimizationLevel()
androidx.vectordrawable.R$drawable: int notification_bg
androidx.legacy.v4.R$id: int line3
android.support.v4.media.session.MediaSessionCompatApi23$Callback
androidx.core.R$dimen: int notification_top_pad_large_text
androidx.constraintlayout.widget.ConstraintSet: void constrainPercentHeight(int,float)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
org.pytorch.torchvision.R$id: int right
androidx.appcompat.app.AppCompatDelegate: android.view.View findViewById(int)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.recyclerview.widget.LinearSmoothScroller
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
org.pytorch.R$attr: int showText
androidx.viewpager.widget.PagerTitleStrip: void onLayout(boolean,int,int,int,int)
androidx.core.view.ViewCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_borderlessButtonStyle
androidx.recyclerview.widget.RecyclerView$LayoutManager: void ignoreView(android.view.View)
androidx.core.R$id: int normal
androidx.appcompat.app.AppCompatDelegate: void onPostCreate(android.os.Bundle)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
org.pytorch.R$attr: int fontFamily
io.github.prabhuomkar.pytorchandroid.R$dimen: int item_touch_helper_swipe_escape_velocity
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_constantSize
com.downloader.httpclient.HttpClient
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceSearchResultSubtitle
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_TITLE
io.github.prabhuomkar.pytorchandroid.BuildConfig: BuildConfig()
androidx.appcompat.R$layout: int custom_dialog
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
androidx.recyclerview.selection.FocusDelegate
androidx.media.AudioAttributesCompat: int USAGE_ASSISTANT
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError CROP_FAILED
androidx.constraintlayout.solver.Metrics: long matchConnectionResolved
androidx.collection.CircularArray: java.lang.Object popLast()
androidx.appcompat.R$color: int dim_foreground_material_dark
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)
org.pytorch.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
org.pytorch.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.constraintlayout.solver.widgets.Guideline: void analyze(int)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.constraintlayout.solver.ArrayLinkedVariables: void display()
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.core.view.ViewCompat: int generateViewId()
okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)
androidx.collection.SparseArrayCompat: int size()
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_ttcIndex
androidx.camera.core.ImageCaptureConfig$Builder
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
org.pytorch.R$layout: int abc_dialog_title_material
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_RIGHT_BORDER
androidx.appcompat.R$id: int accessibility_custom_action_12
androidx.vectordrawable.R$id: int accessibility_custom_action_18
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_barrierAllowsGoneWidgets
androidx.appcompat.R$style: int Base_AlertDialog_AppCompat_Light
io.github.prabhuomkar.pytorchandroid.R$style: int Animation_AppCompat_Dialog
org.pytorch.torchvision.R$attr: int seekBarStyle
androidx.fragment.app.Fragment: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.recyclerview.widget.RecyclerView: void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration)
androidx.customview.widget.ViewDragHelper: int EDGE_ALL
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
org.pytorch.R$styleable: int ActionBar_divider
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
androidx.recyclerview.selection.SelectionTracker: java.lang.String SELECTION_CHANGED_MARKER
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
androidx.recyclerview.R$color: int notification_action_color_filter
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor)
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values()
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.core.util.Pair: androidx.core.util.Pair create(java.lang.Object,java.lang.Object)
okhttp3.CacheControl$Builder
com.downloader.core.DefaultExecutorSupplier
io.github.prabhuomkar.pytorchandroid.R$id: int contentPanel
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getTrackTintList()
androidx.camera.core.PreviewConfig: android.util.Size getMaxResolution()
com.squareup.picasso.RequestHandler
io.github.prabhuomkar.pytorchandroid.R$id: int item_touch_helper_previous_elevation
androidx.appcompat.widget.ActionBarContextView: void dismissPopupMenus()
org.pytorch.torchvision.R$id: int search_edit_frame
androidx.camera.core.OptionsBundle: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.appcompat.R$color: int foreground_material_light
androidx.constraintlayout.solver.widgets.Rectangle
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.recyclerview.selection.DefaultSelectionTracker: boolean clearSelection()
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
androidx.documentfile.provider.DocumentFile: boolean canRead()
org.pytorch.R$styleable: int AppCompatTheme_listMenuViewStyle
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder centerInside()
androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarDescription(int)
androidx.core.R$id: int accessibility_custom_action_3
androidx.camera.core.ImageCaptureConfig: java.util.Set listOptions()
androidx.recyclerview.selection.BandPredicate$NonDraggableArea: boolean canInitiate(android.view.MotionEvent)
android.support.v4.media.session.PlaybackStateCompat: int getState()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isStateful()
org.pytorch.torchvision.R$layout: int abc_screen_simple
androidx.fragment.R$id: int forever
androidx.legacy.coreutils.R$dimen: int notification_main_column_padding_top
androidx.camera.core.CameraCaptureFailure: CameraCaptureFailure(androidx.camera.core.CameraCaptureFailure$Reason)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_TITLE
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_toRightOf
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_switch_to_on_mtrl_00001
io.github.prabhuomkar.pytorchandroid.R$attr: int subtitle
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ButtonBar
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableEndCompat
androidx.legacy.coreui.R$id: int top
androidx.customview.widget.ViewDragHelper: int EDGE_LEFT
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeWebSearchDrawable
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.loader.R$dimen: int notification_action_icon_size
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.annotation.ColorLong
org.pytorch.R$style: int Platform_V25_AppCompat_Light
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
androidx.camera.core.ImageAnalysisConfig
androidx.constraintlayout.widget.ConstraintLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
androidx.customview.R$dimen: int notification_large_icon_height
androidx.appcompat.R$drawable: int abc_ic_arrow_drop_right_black_24dp
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(java.lang.String,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA
androidx.customview.R$dimen: int compat_button_padding_horizontal_material
androidx.legacy.coreui.R$dimen: int notification_content_margin_start
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder pingInterval(long,java.util.concurrent.TimeUnit)
okhttp3.internal.io.FileSystem: okhttp3.internal.io.FileSystem SYSTEM
androidx.recyclerview.widget.SortedList: void recalculatePositionOfItemAt(int)
org.pytorch.R$attr: int textAppearancePopupMenuHeader
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: int hashCode()
androidx.core.R$id: int dialog_button
androidx.cursoradapter.widget.CursorAdapter: int getCount()
androidx.appcompat.R$attr: int progressBarPadding
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_anchor
org.pytorch.R$layout: int abc_action_menu_layout
androidx.swiperefreshlayout.R$dimen: int notification_right_side_padding_top
androidx.core.R$color: int secondary_text_default_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int)
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
io.github.prabhuomkar.pytorchandroid.R$color: int abc_primary_text_material_light
androidx.asynclayoutinflater.R$layout
androidx.constraintlayout.solver.widgets.ConstraintWidget: int INVISIBLE
androidx.recyclerview.R$styleable: int RecyclerView_spanCount
org.pytorch.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd
androidx.recyclerview.widget.LinearSmoothScroller: void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
okhttp3.Dns
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
androidx.annotation.GuardedBy
androidx.fragment.R$id: int action_image
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_EXTRAS
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
okhttp3.internal.http2.Header: Header(java.lang.String,java.lang.String)
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontStyle
org.pytorch.R$attr: int subtitleTextStyle
androidx.appcompat.resources.R$color: int notification_icon_bg_color
org.pytorch.R$dimen: int abc_dialog_corner_radius_material
androidx.swiperefreshlayout.R$drawable: int notification_bg_low_pressed
org.pytorch.torchvision.R$dimen: int notification_small_icon_size_as_large
com.downloader.PRDownloader: void cleanUp(int)
androidx.appcompat.app.AppCompatActivity: void onStart()
org.pytorch.torchvision.R$id: int contentPanel
org.pytorch.torchvision.R$attr: int layout_insetEdge
androidx.fragment.app.FragmentController: void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type CONSTANT
androidx.legacy.coreui.R$styleable: int[] GradientColor
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.widget.ContentLoadingProgressBar: void onDetachedFromWindow()
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_LENGTH
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.activity.R$id: int accessibility_custom_action_2
androidx.camera.core.VideoCaptureConfig: int getAudioSampleRate(int)
org.pytorch.R$styleable: int TextAppearance_fontVariationSettings
org.pytorch.R$attr: int dividerPadding
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
androidx.camera.core.AppConfig: java.util.Set listOptions()
org.pytorch.R$styleable: int Toolbar_android_minHeight
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_edittext
androidx.appcompat.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AppCompatTextView
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_percent
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromUri(android.net.Uri,android.os.Bundle)
okhttp3.WebSocket: long queueSize()
androidx.appcompat.widget.ViewStubCompat$OnInflateListener
androidx.loader.app.LoaderManager
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
androidx.core.view.PointerIconCompat: int TYPE_ZOOM_OUT
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.customview.R$id: int action_text
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()
com.downloader.internal.DownloadTask
com.downloader.core.DownloadFutureTask: int compareTo(com.downloader.core.DownloadFutureTask)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toTopOf
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
androidx.annotation.IntegerRes
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setLensFacing(androidx.camera.core.CameraX$LensFacing)
org.pytorch.R$styleable: int ActionBar_title
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Title
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableTint
androidx.core.text.TextUtilsCompat
org.pytorch.R$id: int expanded_menu
androidx.constraintlayout.solver.widgets.Analyzer
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.activity.R$styleable: int FontFamilyFont_fontWeight
androidx.activity.R$id: int accessibility_custom_action_4
androidx.appcompat.R$style: int Theme_AppCompat
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
androidx.core.view.ViewCompat: void setPivotY(android.view.View,float)
androidx.drawerlayout.R$layout: int notification_template_custom_big
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
io.github.prabhuomkar.pytorchandroid.R$styleable: int PopupWindow_android_popupAnimationStyle
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.ScheduledExecutorService newHandlerExecutor(android.os.Handler)
androidx.core.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.R$attr: int textAppearanceLargePopupMenu
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintVertical_chainStyle
org.pytorch.R$drawable: int abc_edit_text_material
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getShortLabel()
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
androidx.coordinatorlayout.R$styleable: int ColorStateListItem_android_alpha
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToQueueItem(long)
org.pytorch.R$styleable: int CoordinatorLayout_statusBarBackground
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_material_dark
org.pytorch.torchvision.R$drawable: int abc_seekbar_track_material
androidx.camera.core.UseCaseConfig
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
androidx.legacy.content.WakefulBroadcastReceiver: boolean completeWakefulIntent(android.content.Intent)
androidx.legacy.coreutils.R$attr: int fontStyle
androidx.vectordrawable.animated.R$id: int text2
androidx.appcompat.R$id: int accessibility_custom_action_22
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Line2
okhttp3.Challenge: java.lang.String realm()
androidx.coordinatorlayout.R$string
okhttp3.CacheControl: java.lang.String toString()
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.content.res.Resources$Theme getDropDownViewTheme()
org.pytorch.torchvision.R$color: int dim_foreground_disabled_material_light
org.pytorch.R$style: int Widget_AppCompat_SeekBar
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
okhttp3.internal.connection.RouteSelector$Selection
androidx.recyclerview.selection.SelectionTracker$Builder: SelectionTracker$Builder(java.lang.String,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.ItemDetailsLookup,androidx.recyclerview.selection.StorageStrategy)
androidx.core.view.InputDeviceCompat: int SOURCE_ROTARY_ENCODER
org.pytorch.torchvision.R$attr: int subMenuArrow
org.pytorch.R$id: int textSpacerNoTitle
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardUseCompatPadding
org.pytorch.R$styleable: int SearchView_submitBackground
androidx.legacy.v4.R$drawable: int notification_bg_normal
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: void removeSurface(android.view.Surface)
androidx.legacy.coreutils.R$id: int action_container
org.pytorch.torchvision.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.legacy.app.ActionBarDrawerToggle
com.downloader.request.DownloadRequest: com.downloader.Status getStatus()
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginRight
com.facebook.jni.UnknownCppException
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SHUTTER_SPEED_VALUE
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
androidx.annotation.RequiresPermission: boolean conditional()
androidx.media.AudioAttributesCompat: int USAGE_VOICE_COMMUNICATION
androidx.core.app.NotificationManagerCompat: void cancelAll()
org.pytorch.R$dimen: int abc_text_size_display_2_material
androidx.collection.LruCache: void trimToSize(int)
org.pytorch.R$style: int Base_V7_Widget_AppCompat_Toolbar
androidx.camera.camera2.impl.Camera2CameraControl: void setPreviewAspectRatio(android.util.Rational)
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_startX
androidx.loader.R$layout: int notification_template_part_chronometer
androidx.camera.core.ImageAnalysis
org.pytorch.R$dimen: int hint_pressed_alpha_material_light
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerX
androidx.legacy.coreutils.R$drawable: int notification_template_icon_low_bg
okhttp3.internal.tls.BasicCertificateChainCleaner: boolean equals(java.lang.Object)
okhttp3.Address: java.lang.String toString()
androidx.appcompat.R$attr: int actionBarSize
androidx.viewpager.R$id: int action_divider
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_weight
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int controlBackground
androidx.constraintlayout.solver.Metrics: long barrierConnectionResolved
androidx.versionedparcelable.VersionedParcel: int readInt()
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
androidx.camera.core.AppConfig$Builder: java.lang.Object setTargetName(java.lang.String)
okhttp3.OkHttpClient: java.net.ProxySelector proxySelector()
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
androidx.core.app.FrameMetricsAggregator: int SYNC_DURATION
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments
androidx.recyclerview.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.camera.camera2.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.R$styleable: int GradientColorItem_android_color
okhttp3.internal.Util: java.lang.String canonicalizeHost(java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerTitle(int,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
org.pytorch.R$layout: int abc_list_menu_item_icon
androidx.appcompat.R$color: int material_grey_300
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.R$styleable: int FontFamily_fontProviderCerts
okio.HashingSink: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.WidgetContainer: void setOffset(int,int)
androidx.recyclerview.widget.DefaultItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List)
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.legacy.coreutils.R
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
org.pytorch.torchvision.R$drawable: int abc_ratingbar_small_material
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
androidx.customview.widget.ViewDragHelper: boolean checkTouchSlop(int)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarTheme
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(int,int)
androidx.slidingpanelayout.R$integer
androidx.appcompat.R$dimen: int abc_seekbar_track_background_height_material
okhttp3.Connection
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance(boolean)
com.squareup.picasso.LruCache
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setUsage(int)
androidx.camera.camera2.R$id: int tag_accessibility_clickable_spans
androidx.viewpager.widget.ViewPager: boolean beginFakeDrag()
android.support.v4.os.IResultReceiver
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMarginBottom
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DIGITAL_ZOOM_RATIO
org.pytorch.torchvision.R$styleable: int FontFamilyFont_android_fontWeight
androidx.interpolator.view.animation.FastOutLinearInInterpolator
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
androidx.activity.R$dimen: int notification_large_icon_height
androidx.core.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)
androidx.core.view.InputDeviceCompat
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: CameraCaptureResult$EmptyCameraCaptureResult()
android.support.v4.media.session.IMediaSession$Stub: android.os.IBinder asBinder()
androidx.core.R$id: int chronometer
androidx.appcompat.widget.DecorToolbar: boolean isOverflowMenuShowing()
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_PARENTAL_CONTROL_RESTRICTED
androidx.appcompat.R$dimen: int compat_notification_large_icon_max_width
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getOpacity()
androidx.activity.R$id: int text2
io.github.prabhuomkar.pytorchandroid.R$id: int collapseActionView
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(int,int)
com.downloader.database.DbHelper: void clear()
io.github.prabhuomkar.pytorchandroid.R$id: int uniform
androidx.appcompat.widget.ShareActionProvider: java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME
androidx.constraintlayout.widget.ConstraintSet: void constrainDefaultHeight(int,int)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
androidx.appcompat.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
org.pytorch.torchvision.R$color: int material_grey_600
androidx.constraintlayout.solver.widgets.ResolutionNode: int RESOLVED
okio.BufferedSource: boolean request(long)
androidx.legacy.v4.R$layout: int notification_template_big_media
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintLeft_toLeftOf
org.pytorch.R$color: int material_blue_grey_800
androidx.appcompat.R$id: int accessibility_custom_action_20
androidx.viewpager.widget.PagerTabStrip: void setPadding(int,int,int,int)
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target
androidx.appcompat.resources.R$id: int accessibility_custom_action_2
androidx.exifinterface.media.ExifInterface: long[] getThumbnailRange()
org.pytorch.torchvision.R$style: int Base_V28_Theme_AppCompat_Light
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy NO_STORE
org.pytorch.R$styleable: int AlertDialog_listLayout
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.recyclerview.widget.GridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int,android.view.animation.Interpolator)
androidx.appcompat.R$styleable: int AppCompatTextView_textAllCaps
androidx.appcompat.R$styleable: int MenuItem_android_icon
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)
androidx.asynclayoutinflater.R$attr: int ttcIndex
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
org.pytorch.torchvision.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker()
org.pytorch.R$attr: int customNavigationLayout
androidx.camera.core.CameraIdFilterSet: CameraIdFilterSet()
androidx.core.app.Person: boolean isBot()
com.downloader.request.DownloadRequestBuilder
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: boolean canSetStateForKey(java.lang.Object,boolean)
androidx.fragment.app.FragmentStatePagerAdapter: int BEHAVIOR_SET_USER_VISIBLE_HINT
androidx.appcompat.R$styleable: int MenuItem_iconTint
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
androidx.camera.core.R$drawable: int notification_template_icon_bg
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
androidx.core.app.AppLaunchChecker: AppLaunchChecker()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
androidx.core.R$id: int title
androidx.fragment.app.FragmentHostCallback: boolean onShouldShowRequestPermissionRationale(java.lang.String)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
org.pytorch.torchvision.R$drawable: int abc_list_selector_holo_dark
androidx.versionedparcelable.ParcelImpl: ParcelImpl(androidx.versionedparcelable.VersionedParcelable)
androidx.core.R$string: int status_bar_notification_info_overflow
androidx.viewpager.widget.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.vectordrawable.R$id: int accessibility_custom_action_0
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_cursor_material
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getBigContentView()
androidx.constraintlayout.widget.Group: void init(android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textFontWeight
org.pytorch.R$styleable: int Toolbar_menu
org.pytorch.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Display4
io.github.prabhuomkar.pytorchandroid.R$attr: int listChoiceIndicatorSingleAnimated
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder setUseCaseConfigFactory(androidx.camera.core.UseCaseConfigFactory)
androidx.core.app.ActivityOptionsCompat: java.lang.String EXTRA_USAGE_TIME_REPORT
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener: void onFitSystemWindows(android.graphics.Rect)
androidx.recyclerview.selection.StorageStrategy: android.os.Bundle asBundle(androidx.recyclerview.selection.Selection)
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
org.pytorch.torchvision.R$attr: int buttonStyle
androidx.appcompat.app.WindowDecorActionBar: int getHideOffset()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE_REF
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean refresh()
okhttp3.OkHttpClient$Builder: java.util.List interceptors()
androidx.camera.camera2.impl.Camera2LensFacingCameraIdFilter
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[])
androidx.appcompat.R$styleable: int AppCompatTheme_seekBarStyle
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.camera.core.SurfaceCombination: boolean removeSurfaceConfig(androidx.camera.core.SurfaceConfig)
androidx.cardview.R$color: int cardview_light_background
org.pytorch.R$color: int switch_thumb_normal_material_light
androidx.slidingpanelayout.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.appcompat.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
androidx.legacy.v4.R$id: int blocking
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
org.pytorch.torchvision.R$style: int Platform_ThemeOverlay_AppCompat_Dark
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ViewStubCompat
org.pytorch.R$attr: int alertDialogButtonGroupStyle
androidx.core.view.GravityCompat: int START
androidx.camera.core.CameraX: void postError(androidx.camera.core.CameraX$ErrorCode,java.lang.String)
androidx.appcompat.R$styleable: int SwitchCompat_thumbTint
org.pytorch.torchvision.R$dimen: int abc_control_corner_material
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
org.pytorch.R$styleable: int SearchView_commitIcon
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasMipMap()
androidx.asynclayoutinflater.R$id: int icon
androidx.asynclayoutinflater.R$color: int notification_icon_bg_color
androidx.appcompat.R$drawable: int notification_bg_normal_pressed
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)
androidx.appcompat.text.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_searchViewStyle
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_item_background_holo_light
androidx.annotation.StringDef
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_ACTION_ABORTED
androidx.coordinatorlayout.R$dimen: int compat_button_padding_horizontal_material
androidx.swiperefreshlayout.R$id: int action_divider
org.pytorch.torchvision.R$styleable: int AppCompatTextView_android_textAppearance
androidx.annotation.GuardedBy: java.lang.String value()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat_Light
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_height
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Subhead_Inverse
androidx.loader.content.Loader: void onStopLoading()
org.pytorch.torchvision.R$attr: int colorControlHighlight
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(int,int)
androidx.viewpager.widget.PagerTitleStrip: void setTextSpacing(int)
androidx.core.R$id: int icon_group
androidx.recyclerview.R$attr: int recyclerViewStyle
io.github.prabhuomkar.pytorchandroid.R$id: int right_icon
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.lifecycle.viewmodel.R
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
io.github.prabhuomkar.pytorchandroid.R$attr: int fastScrollHorizontalTrackDrawable
androidx.recyclerview.widget.ListUpdateCallback: void onRemoved(int,int)
androidx.recyclerview.widget.RecyclerView$Recycler: int convertPreLayoutPositionToPostLayout(int)
androidx.camera.core.ExtendableUseCaseConfigFactory: androidx.camera.core.UseCaseConfig getConfig(java.lang.Class,androidx.camera.core.CameraX$LensFacing)
okhttp3.CertificatePinner$Builder: okhttp3.CertificatePinner build()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener)
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder setAutoFocusCallback(androidx.camera.core.FocusMeteringAction$OnAutoFocusListener)
org.pytorch.R$color: int error_color_material_dark
androidx.recyclerview.widget.TileList$Tile
okhttp3.Headers: okhttp3.Headers of(java.lang.String[])
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DATESTAMP
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.appcompat.R$drawable: int abc_tab_indicator_mtrl_alpha
android.support.v4.media.MediaDescriptionCompat: android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object)
androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)
androidx.coordinatorlayout.R$dimen: int compat_control_corner_material
androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)
okhttp3.internal.http1.Http1Codec
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
androidx.core.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object)
androidx.appcompat.app.ActionBar: int DISPLAY_SHOW_HOME
org.pytorch.R$styleable: int AppCompatTheme_alertDialogCenterButtons
androidx.core.app.RemoteInput: int SOURCE_CHOICE
androidx.lifecycle.AndroidViewModel: AndroidViewModel(android.app.Application)
org.pytorch.torchvision.R$styleable: int Toolbar_maxButtonHeight
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody)
androidx.core.content.res.ColorStateListInflaterCompat
androidx.core.R$id: int notification_main_column
androidx.legacy.v4.R$styleable: int FontFamilyFont_ttcIndex
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: CircularProgressDrawable(android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalWeight(float)
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent)
androidx.activity.R$id: int blocking
androidx.appcompat.widget.ActionMenuView
com.squareup.picasso.Transformation: android.graphics.Bitmap transform(android.graphics.Bitmap)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_subtitleTextStyle
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_normal_material_light
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.core.view.ViewCompat: int getMeasuredHeightAndState(android.view.View)
android.support.v4.media.session.MediaSessionCompat: MediaSessionCompat(android.content.Context,java.lang.String,android.content.ComponentName,android.app.PendingIntent)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getRow()
androidx.exifinterface.media.ExifInterface: short WHITE_BALANCE_MANUAL
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetLeft
com.downloader.request.DownloadRequest: void setConnectTimeout(int)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGING_STYLE_USER
androidx.appcompat.R$color: int primary_text_disabled_material_light
androidx.core.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)
org.pytorch.torchvision.R$attr: int textColorSearchUrl
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
androidx.appcompat.R$styleable: int SearchView_closeIcon
androidx.appcompat.app.WindowDecorActionBar: int getSelectedNavigationIndex()
androidx.core.app.NotificationCompat$Action$Extender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
androidx.camera.core.R
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintStart_toStartOf
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_bias
androidx.savedstate.R
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
org.pytorch.R$id: int decor_content_parent
androidx.customview.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String getRootId()
okhttp3.Headers$Builder
android.support.v4.media.RatingCompat: boolean hasHeart()
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.String)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type UNKNOWN
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.versionedparcelable.VersionedParcel: void writeCharArray(char[],int)
androidx.fragment.app.FragmentController: void doLoaderDestroy()
androidx.constraintlayout.widget.ConstraintSet: void setGoneMargin(int,int,int)
org.pytorch.torchvision.R$styleable: int[] ViewBackgroundHelper
androidx.camera.core.CameraCaptureMetaData
okhttp3.OkHttpClient: okhttp3.ConnectionPool connectionPool()
androidx.core.view.ViewCompat$ScrollAxis
okhttp3.internal.http.RequestLine: java.lang.String requestPath(okhttp3.HttpUrl)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Menu getMenu()
androidx.annotation.InspectableProperty$ValueType
androidx.core.app.Person: java.lang.CharSequence getName()
okhttp3.internal.Util: java.lang.String trimSubstring(java.lang.String,int,int)
androidx.constraintlayout.solver.ArrayLinkedVariables: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.core.R$id: int accessibility_custom_action_29
com.squareup.picasso.LruCache: void clearKeyUri(java.lang.String)
androidx.appcompat.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName)
androidx.annotation.VisibleForTesting: int otherwise()
okhttp3.internal.connection.StreamAllocation: okhttp3.Address address
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
androidx.constraintlayout.widget.ConstraintSet: int VERTICAL_GUIDELINE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
org.pytorch.R$attr: int editTextBackground
okio.Buffer: okio.Buffer write(byte[],int,int)
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontWeight
androidx.recyclerview.widget.ItemTouchHelper: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.appcompat.R$id: int search_voice_btn
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: boolean equals(java.lang.Object)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
androidx.media.MediaBrowserProtocol: java.lang.String DATA_RESULT_RECEIVER
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_button_min_height_material
androidx.camera.core.FlashMode: androidx.camera.core.FlashMode AUTO
androidx.core.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)
androidx.camera.core.R$styleable: int FontFamilyFont_android_fontStyle
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_paperlink
androidx.legacy.coreui.R$dimen: int notification_large_icon_width
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void remove(androidx.constraintlayout.solver.widgets.ResolutionDimension)
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_constantSize
androidx.activity.R$dimen: int notification_action_text_size
org.pytorch.torchvision.R$color: int abc_secondary_text_material_dark
androidx.media.AudioAttributesCompat: int USAGE_ALARM
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toEndOf
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
okio.Buffer: okio.Buffer writeIntLe(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
androidx.appcompat.R$dimen: int highlight_alpha_material_light
okhttp3.internal.http2.Http2Codec: okio.Sink createRequestBody(okhttp3.Request,long)
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
androidx.legacy.coreui.R$id: int start
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_CALL
androidx.constraintlayout.widget.ConstraintSet: void setVerticalWeight(int,float)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationMode(int)
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback: void onCaptureCompleted(androidx.camera.core.CameraCaptureResult)
com.downloader.Error: Error()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_ratingBarStyle
io.github.prabhuomkar.pytorchandroid.R$attr: int popupMenuStyle
androidx.camera.core.Config$OptionMatcher
okio.HashingSink: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)
androidx.core.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.constraintlayout.solver.widgets.Rectangle: int getCenterX()
org.pytorch.R$attr: int colorPrimary
org.pytorch.R$id: int text2
androidx.loader.R$drawable: int notification_bg
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
io.github.prabhuomkar.pytorchandroid.R$dimen
okio.GzipSink: void write(okio.Buffer,long)
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.camera.core.CaptureStage
androidx.viewpager.R$dimen: int notification_subtext_size
androidx.camera.core.PreviewConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker()
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemCount()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation
androidx.recyclerview.widget.RecyclerView$SmoothScroller: android.view.View findViewByPosition(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int spinnerStyle
io.github.prabhuomkar.pytorchandroid.R$id: int spread_inside
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_NoActionBar
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_NEW_SUBFILE_TYPE
androidx.appcompat.R$style: int TextAppearance_Compat_Notification
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isFullScreen()
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
androidx.core.os.ParcelableCompatCreatorCallbacks: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoaderReset(androidx.loader.content.Loader)
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_MOVIE
androidx.camera.core.TargetConfig: androidx.camera.core.Config$Option OPTION_TARGET_NAME
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$color: int primary_text_default_material_light
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getOpacity()
org.pytorch.torchvision.R$id: int line1
org.pytorch.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.widget.ActionBarContextView: boolean canShowOverflowMenu()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withBandOverlay(int)
androidx.loader.content.Loader: void onContentChanged()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)
androidx.camera.core.R$id: int notification_main_column_container
androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: NotificationCompat$DecoratedMediaCustomViewStyle()
androidx.appcompat.resources.R$styleable: int GradientColor_android_startX
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int)
org.pytorch.R$dimen: int tooltip_precise_anchor_extra_offset
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatSeekBar_android_thumb
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
okio.BufferedSource: java.lang.String readUtf8LineStrict(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
org.pytorch.torchvision.R$styleable: int MenuItem_android_orderInCategory
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.annotation.AttrRes
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_list_menu_item_icon
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.loader.R$styleable: int GradientColor_android_type
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
androidx.recyclerview.selection.Selection: int hashCode()
androidx.fragment.R$id: int action_container
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager)
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_END
androidx.fragment.app.DialogFragment
org.pytorch.R$id: int custom
io.github.prabhuomkar.pytorchandroid.R$id: int list_task_item_description
androidx.appcompat.resources.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.MenuAdapter: boolean getForceShowIcon()
androidx.appcompat.R$attr: int divider
org.pytorch.torchvision.R$id: int end
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type BOTTOM
androidx.appcompat.view.menu.ActionMenuItem: boolean requiresActionButton()
androidx.constraintlayout.widget.ConstraintSet: void setTranslationY(int,float)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarWidgetTheme
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_MOVE_WINDOW_Y
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback: void addTile(int,androidx.recyclerview.widget.TileList$Tile)
androidx.drawerlayout.R$id: int tag_transition_group
com.downloader.utils.Utils
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.appcompat.R$drawable: int abc_control_background_material
androidx.camera.core.R$style: int TextAppearance_Compat_Notification_Time
okio.HashingSource: long read(okio.Buffer,long)
androidx.vectordrawable.R$id: int accessibility_custom_action_21
androidx.camera.core.R$id: int normal
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
androidx.camera.camera2.R$id: int accessibility_custom_action_23
androidx.fragment.app.FragmentManager: int POP_BACK_STACK_INCLUSIVE
androidx.constraintlayout.widget.R$attr: int chainUseRtl
androidx.legacy.coreutils.R$id: int notification_main_column_container
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.ActionProvider$VisibilityListener
androidx.recyclerview.widget.RecyclerView$State: boolean isPreLayout()
androidx.recyclerview.R$attr: int layoutManager
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: float getMin()
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.legacy.coreui.R$id: int tag_transition_group
okhttp3.ConnectionPool: void evictAll()
com.squareup.picasso.MemoryPolicy: com.squareup.picasso.MemoryPolicy NO_CACHE
org.pytorch.R$styleable: int SearchView_searchHintIcon
androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)
androidx.core.app.NotificationCompat: int BADGE_ICON_SMALL
androidx.core.hardware.fingerprint.FingerprintManagerCompat
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int top
androidx.legacy.v4.R$styleable: int FontFamilyFont_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatImageView_tintMode
okhttp3.internal.http2.ErrorCode
androidx.slidingpanelayout.R$drawable: int notification_bg_low_pressed
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.drawerlayout.R$layout: int notification_template_icon_group
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Caption
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarTabTextStyle
androidx.appcompat.widget.SwitchCompat: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_checkbox_checked_mtrl
androidx.camera.core.impl.utils.Optional: java.lang.Object or(java.lang.Object)
androidx.appcompat.R$attr
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: androidx.camera.camera2.impl.compat.params.InputConfigurationCompat getInputConfiguration()
androidx.appcompat.R$attr: int buttonIconDimen
org.pytorch.torchvision.R$attr: int fontProviderFetchStrategy
androidx.camera.camera2.R$styleable: int[] FontFamily
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
org.pytorch.torchvision.R$drawable: int abc_btn_radio_material
org.pytorch.R$styleable: int ActionBar_contentInsetStart
androidx.legacy.v4.R$attr: int layout_anchorGravity
okhttp3.internal.Internal: okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route)
androidx.fragment.R$dimen: int notification_large_icon_width
org.pytorch.R$styleable: int MenuItem_android_checkable
androidx.appcompat.R$dimen: int notification_subtext_size
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionClick(int)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteX
androidx.camera.core.Preview$PreviewOutput: int getRotationDegrees()
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_1
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: android.view.Surface getSurface()
okhttp3.internal.cache.CacheInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.recyclerview.selection.FocusDelegate: void clearFocus()
io.github.prabhuomkar.pytorchandroid.R$id: int ifRoom
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.downloader.request.DownloadRequest: void cancel()
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker()
androidx.asynclayoutinflater.R$id: int async
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: SelectionTracker$SelectionObserver()
androidx.camera.core.ImageCapture: androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing)
com.downloader.database.AppDbHelper: AppDbHelper(android.content.Context)
org.pytorch.R$color: int foreground_material_light
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)
org.pytorch.R$integer: int cancel_button_image_alpha
androidx.fragment.R$id: int icon
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_padding_material
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setAudioSampleRate(int)
org.pytorch.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
okio.ForwardingSink: void write(okio.Buffer,long)
android.support.v4.os.ResultReceiver: void send(int,android.os.Bundle)
androidx.coordinatorlayout.R$layout: int notification_action
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)
androidx.slidingpanelayout.R$drawable: int notification_tile_bg
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
androidx.core.view.ViewCompat: void offsetLeftAndRight(android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Theme_AppCompat
androidx.loader.content.Loader: void abandon()
androidx.viewpager.widget.PagerTabStrip
com.facebook.fbjni.BuildConfig
androidx.recyclerview.widget.LinearSmoothScroller: LinearSmoothScroller(android.content.Context)
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.appcompat.R$styleable: int ActionBar_title
androidx.media.R$styleable: int[] FontFamilyFont
androidx.legacy.v4.R$id: int action_container
com.facebook.fbjni.BuildConfig: BuildConfig()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_cut_mtrl_alpha
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_vector_test
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
org.pytorch.R$attr: int collapseContentDescription
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_NONE
androidx.camera.core.CameraInfo: int getSensorRotationDegrees()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetLeft
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V26_Theme_AppCompat_Light
okhttp3.MultipartBody: java.util.List parts()
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LTR
androidx.camera.core.ImageCaptureConfig
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
androidx.appcompat.R$dimen: int abc_alert_dialog_button_bar_height
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
androidx.fragment.R$drawable: int notification_bg_low_normal
okhttp3.EventListener: void requestHeadersStart(okhttp3.Call)
org.pytorch.R$styleable: int SwitchCompat_showText
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment END
androidx.swiperefreshlayout.R$layout: int notification_template_custom_big
androidx.appcompat.app.AppCompatDelegate: boolean isHandleNativeActionModesEnabled()
com.downloader.PRDownloaderConfig: int getConnectTimeout()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
org.pytorch.R$attr: int thumbTint
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_ABSOLUTE
androidx.loader.R$styleable
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setSpinEnabled(boolean)
okhttp3.WebSocket: boolean send(java.lang.String)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
org.pytorch.R$attr: int navigationIcon
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_CENTER_WEIGHT_AVERAGE
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[])
androidx.drawerlayout.R$styleable: int GradientColor_android_type
androidx.camera.core.BaseCamera: void removeOnlineUseCase(java.util.Collection)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarTheme
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.collection.LongSparseArray: boolean replace(long,java.lang.Object,java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMaxHeight
androidx.vectordrawable.animated.R$drawable: int notification_icon_background
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
androidx.constraintlayout.widget.ConstraintSet: int WRAP_CONTENT
com.squareup.picasso.Target: void onBitmapFailed(java.lang.Exception,android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.core.app.NotificationCompat: int FLAG_NO_CLEAR
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(int)
androidx.loader.R$style: int TextAppearance_Compat_Notification_Time
androidx.camera.core.CaptureConfig$Builder: androidx.camera.core.CaptureConfig build()
androidx.appcompat.R$style: int Widget_AppCompat_AutoCompleteTextView
androidx.constraintlayout.solver.widgets.Rectangle: int width
com.downloader.utils.Utils: java.lang.String getTempPath(java.lang.String,java.lang.String)
androidx.customview.R$styleable: int GradientColor_android_endColor
androidx.vectordrawable.R$integer: int status_bar_notification_info_maxnum
androidx.camera.core.UseCaseConfig$Builder
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_inverse_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_contentDescription
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_list_item_height_small_material
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.camera.core.CameraDeviceConfig$Builder: java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.fragment.R$styleable: <clinit>()
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
io.github.prabhuomkar.pytorchandroid.R$style: int Base_AlertDialog_AppCompat_Light
org.pytorch.R$attr: int height
androidx.appcompat.app.ActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_dither
okhttp3.internal.platform.Platform: void connectSocket(java.net.Socket,java.net.InetSocketAddress,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
androidx.constraintlayout.widget.ConstraintSet: void connect(int,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.legacy.coreutils.R$dimen: int compat_button_padding_horizontal_material
org.pytorch.R$style: int Theme_AppCompat_DayNight_NoActionBar
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
androidx.appcompat.app.ActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.appcompat.R$drawable: int abc_cab_background_top_material
android.support.v4.media.session.MediaControllerCompat: java.lang.Object getMediaController()
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.Fragment: void onStart()
androidx.vectordrawable.R$dimen
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.appcompat.app.ActionBar$TabListener: void onTabUnselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
org.pytorch.torchvision.R$styleable: int MenuGroup_android_visible
androidx.drawerlayout.R$layout
androidx.appcompat.widget.SwitchCompat: void setThumbPosition(float)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.annotation.InspectableProperty$FlagEntry: int mask()
io.github.prabhuomkar.pytorchandroid.R$color: int abc_btn_colored_text_material
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.camera.core.DeferrableSurface: void notifySurfaceDetached()
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void rewind(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.appcompat.widget.AppCompatCheckBox
android.support.v4.media.session.MediaControllerCompat$TransportControls: java.lang.String EXTRA_LEGACY_STREAM_TYPE
androidx.vectordrawable.R$id: int accessibility_custom_action_23
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
org.pytorch.torchvision.R$color: int abc_search_url_text_pressed
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
androidx.core.internal.view.SupportMenu: int USER_SHIFT
com.squareup.picasso.Request: com.squareup.picasso.Picasso$Priority priority
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_anchorGravity
io.github.prabhuomkar.pytorchandroid.R$attr: int activityChooserViewStyle
org.pytorch.R$color: int switch_thumb_normal_material_dark
androidx.vectordrawable.R$id: int tag_accessibility_pane_title
okhttp3.internal.connection.RealConnection: int allocationLimit
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Small
org.pytorch.R$drawable: int abc_text_cursor_material
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
okio.Timeout: okio.Timeout clearTimeout()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minHeight
androidx.recyclerview.R$styleable: int GradientColor_android_startX
androidx.appcompat.widget.ForwardingListener
androidx.appcompat.widget.ActionMenuPresenter$SavedState: android.os.Parcelable$Creator CREATOR
androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_MANUAL
okio.Okio: okio.Sink sink(java.net.Socket)
androidx.appcompat.R$color: int abc_tint_spinner
androidx.core.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)
androidx.media.session.MediaButtonReceiver: android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent)
androidx.appcompat.R$dimen
org.pytorch.R$dimen: int abc_action_bar_default_height_material
androidx.fragment.R$dimen: int compat_button_padding_horizontal_material
androidx.fragment.app.FragmentManager: void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
io.github.prabhuomkar.pytorchandroid.R$id: int on
androidx.camera.camera2.impl.compat.CameraDeviceCompat: int SESSION_OPERATION_MODE_CONSTRAINED_HIGH_SPEED
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
androidx.media.R$dimen: int notification_small_icon_background_padding
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_top_pad_large_text
androidx.core.view.DragStartHelper: void attach()
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CONTRAST
androidx.lifecycle.Lifecycle: androidx.lifecycle.Lifecycle$State getCurrentState()
androidx.appcompat.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMaxWidth(int)
org.pytorch.R$id: int bottom
okhttp3.internal.http2.Header: okio.ByteString PSEUDO_PREFIX
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getHorizontalChainControlWidget()
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_ADD_SUBSCRIPTION
com.downloader.database.DownloadModel: void setUrl(java.lang.String)
androidx.appcompat.R$drawable: int btn_checkbox_unchecked_mtrl
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getStrokeWidth()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHeight_percent
org.pytorch.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(android.graphics.Rect,java.util.List)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)
androidx.versionedparcelable.VersionedParcelize
org.pytorch.R$attr: int actionButtonStyle
androidx.camera.core.FocusMeteringAction: java.util.List getMeteringPointsAE()
androidx.concurrent.futures.AbstractResolvableFuture: void afterDone()
org.pytorch.R$attr: int homeAsUpIndicator
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotationX
androidx.appcompat.widget.AppCompatButton
androidx.core.widget.NestedScrollView: void fling(int)
androidx.fragment.app.FragmentContainer: boolean onHasView()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.core.view.ViewCompat: void setLabelFor(android.view.View,int)
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.appcompat.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.core.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)
androidx.appcompat.R$attr: int viewInflaterClass
androidx.core.util.PatternsCompat: java.util.regex.Pattern AUTOLINK_EMAIL_ADDRESS
androidx.asynclayoutinflater.R$dimen: int notification_right_icon_size
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_11
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderCerts
androidx.core.util.Preconditions: void checkArgument(boolean,java.lang.Object)
org.pytorch.torchvision.R$style: int Theme_AppCompat_DialogWhenLarge
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Line2
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment: void onCreate(android.os.Bundle)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollEnabled
org.pytorch.R$styleable: int AppCompatTheme_actionBarDivider
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_850
androidx.viewpager.R$styleable: int FontFamilyFont_fontWeight
com.squareup.picasso.Request: android.net.Uri uri
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
org.pytorch.torchvision.BuildConfig: BuildConfig()
androidx.media.AudioAttributesCompat: int USAGE_VOICE_COMMUNICATION_SIGNALLING
io.github.prabhuomkar.pytorchandroid.R$attr: int contentPaddingTop
okhttp3.internal.http.HttpMethod: boolean invalidatesCache(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] StateListDrawableItem
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
androidx.camera.core.UseCaseConfig: androidx.camera.core.Config$Option OPTION_DEFAULT_SESSION_CONFIG
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] RecyclerView
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
org.pytorch.torchvision.R$attr: int colorError
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_SUPPRESSION
okhttp3.WebSocketListener
okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)
io.github.prabhuomkar.pytorchandroid.R$attr: int showText
androidx.camera.core.VideoCaptureConfig: int getVideoFrameRate()
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
org.pytorch.torchvision.R$styleable: int AlertDialog_showTitle
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonBarStyle
androidx.asynclayoutinflater.R$id: int notification_main_column
androidx.core.widget.TintableCompoundDrawablesView
androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_MACRO
androidx.camera.core.ImageCapture$Defaults: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
org.pytorch.torchvision.R$dimen: int notification_action_icon_size
androidx.appcompat.view.ContextThemeWrapper
org.pytorch.R$styleable: int SearchView_android_focusable
io.github.prabhuomkar.pytorchandroid.R$color: int material_blue_grey_950
org.pytorch.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.legacy.v4.R$integer: int status_bar_notification_info_maxnum
okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)
androidx.constraintlayout.solver.Metrics: long fullySolved
androidx.appcompat.app.ActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.appcompat.resources.R$dimen: int notification_action_text_size
okhttp3.MediaType: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void registerForContextMenu(android.view.View)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int)
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onError(java.lang.String)
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter)
org.pytorch.R$drawable: int abc_tab_indicator_material
okhttp3.EventListener: void responseHeadersStart(okhttp3.Call)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.media.MediaBrowserServiceCompat: java.lang.String KEY_SEARCH_RESULTS
androidx.core.app.NotificationCompatSideChannelService: android.os.IBinder onBind(android.content.Intent)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder protocols(java.util.List)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionLayout
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.core.widget.TintableImageSourceView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
androidx.core.R$id: int tag_accessibility_clickable_spans
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.collection.ArrayMap: boolean containsAll(java.util.Collection)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isSimilarDimensionConnection(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: int gravity
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_major
org.pytorch.torchvision.R$attr: int overlapAnchor
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager,int)
androidx.appcompat.R$attr: int fontWeight
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetName(java.lang.String)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_cab_background_internal_bg
org.pytorch.torchvision.R$attr: int actionMenuTextAppearance
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener)
androidx.appcompat.R$attr: int thumbTextPadding
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setSupportedResolutions(java.util.List)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: float getProgress()
androidx.appcompat.R$attr: int windowFixedWidthMinor
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_popup_exit
androidx.collection.CircularArray: boolean isEmpty()
androidx.constraintlayout.solver.ArrayLinkedVariables: float remove(androidx.constraintlayout.solver.SolverVariable,boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.R$attr: int panelBackground
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabText
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean contains(java.lang.Object)
androidx.concurrent.futures.DirectExecutor: androidx.concurrent.futures.DirectExecutor[] values()
androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)
androidx.collection.CircularIntArray: boolean isEmpty()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.legacy.coreutils.R$styleable: int[] FontFamily
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_TOP_BORDER
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_menuCategory
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)
io.github.prabhuomkar.pytorchandroid.R$string: int search_menu_title
androidx.camera.core.MeteringPoint: float getNormalizedCropRegionY()
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlActivated
org.pytorch.R$attr: int ratingBarStyleIndicator
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
androidx.camera.core.UseCase$StateChangeListener: void onUseCaseInactive(androidx.camera.core.UseCase)
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope[] values()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_alertDialogCenterButtons
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatImageView_srcCompat
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredHeight(android.view.View)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
androidx.constraintlayout.widget.ConstraintSet: void setTranslationX(int,float)
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
com.downloader.httpclient.HttpClient: java.lang.String getResponseHeader(java.lang.String)
org.pytorch.IValue: boolean isDictStringKey()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.camera.core.R$dimen: int notification_top_pad
androidx.coordinatorlayout.R$dimen
org.pytorch.R$drawable: int notification_bg_normal
android.support.v4.media.session.MediaControllerCompat: void setVolumeTo(int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
androidx.legacy.coreui.R$styleable: int GradientColor_android_endX
androidx.camera.core.ImageAnalysis$Defaults: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_seek_thumb
androidx.asynclayoutinflater.R$id: int tag_unhandled_key_event_manager
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
org.pytorch.R$styleable: int Toolbar_subtitle
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: int getColumn()
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat RTL
androidx.camera.core.ImageCapture$Metadata: ImageCapture$Metadata()
androidx.appcompat.app.AlertController$RecycleListView
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
androidx.vectordrawable.animated.R$id: int tag_screen_reader_focusable
androidx.recyclerview.selection.OperationMonitor: void addListener(androidx.recyclerview.selection.OperationMonitor$OnChangeListener)
android.support.v4.media.session.PlaybackStateCompat
androidx.appcompat.R$style: int Widget_AppCompat_ListView
androidx.legacy.coreui.R$id: int normal
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
com.squareup.picasso.Request: int targetHeight
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.os.BuildCompat: boolean isAtLeastOMR1()
androidx.appcompat.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.coordinatorlayout.R$style: int TextAppearance_Compat_Notification_Title
androidx.recyclerview.R$attr: int reverseLayout
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startY
okhttp3.internal.cache.CacheRequest: void abort()
org.pytorch.torchvision.R$dimen: int abc_action_bar_content_inset_material
io.github.prabhuomkar.pytorchandroid.models.Task: java.lang.String getDescription()
io.github.prabhuomkar.pytorchandroid.R$string: int abc_action_bar_home_description
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
org.pytorch.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
androidx.lifecycle.Lifecycle: Lifecycle()
okio.Timeout: long timeoutNanos()
org.pytorch.R$style: int TextAppearance_AppCompat_Inverse
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_CB_CR_SUB_SAMPLING
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalMatchStyle(int,int,int,float)
androidx.core.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)
androidx.core.view.ViewCompat$FocusRealDirection
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind: com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] TextAppearance
org.pytorch.torchvision.R$id: int async
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Button
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority LOW
androidx.core.view.ScrollingView: int computeVerticalScrollOffset()
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object addShortcuts(java.util.List)
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat_Light
androidx.fragment.R$id: int text
androidx.appcompat.app.ActionBar$Tab: android.graphics.drawable.Drawable getIcon()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TEMPLATE
androidx.annotation.VisibleForTesting: int NONE
okhttp3.internal.http2.Http2Stream: java.util.List takeResponseHeaders()
androidx.core.widget.TintableCompoundDrawablesView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.media.session.MediaButtonReceiver: android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)
io.github.prabhuomkar.pytorchandroid.R$color: int ic_launcher_background
org.pytorch.R$layout: int notification_template_icon_group
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_actionViewClass
okio.ByteString: okio.ByteString sha256()
androidx.fragment.app.DialogFragment: DialogFragment()
org.pytorch.R$layout: int abc_action_mode_bar
androidx.camera.core.UseCase: void attachCameraControl(java.lang.String,androidx.camera.core.CameraControlInternal)
org.pytorch.R$style: int Widget_AppCompat_RatingBar_Small
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Caption
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_PAGING
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
okhttp3.HttpUrl: java.lang.String redact()
androidx.constraintlayout.solver.widgets.Guideline: int HORIZONTAL
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
okhttp3.internal.http2.Header: Header(okio.ByteString,java.lang.String)
org.pytorch.torchvision.R$attr: int listMenuViewStyle
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
io.github.prabhuomkar.pytorchandroid.R$attr: int switchMinWidth
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
androidx.viewpager.R$layout: int notification_action
androidx.slidingpanelayout.R$styleable
org.pytorch.R$style: int Theme_AppCompat
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: java.lang.String getParticipant()
androidx.appcompat.R$id: int accessibility_custom_action_5
androidx.camera.core.UseCaseAttachState: androidx.camera.core.SessionConfig getUseCaseSessionConfig(androidx.camera.core.UseCase)
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar
okhttp3.Cache: int requestCount()
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
org.pytorch.torchvision.R$attr: int coordinatorLayoutStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
okhttp3.Request: okhttp3.CacheControl cacheControl()
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
androidx.camera.core.impl.utils.futures.FutureChain: boolean cancel(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean isWidthMeasuredTooSmall()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getArrowWidth()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
okio.Timeout
androidx.core.view.ViewCompat: void enableAccessibleClickableSpanSupport(android.view.View)
androidx.versionedparcelable.VersionedParcel: void writeException(java.lang.Exception,int)
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.appcompat.resources.R$styleable: int GradientColorItem_android_offset
io.github.prabhuomkar.pytorchandroid.R$color: int background_floating_material_dark
androidx.core.content.res.ComplexColorCompat: void setColor(int)
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
org.pytorch.torchvision.R$styleable: int GradientColor_android_endColor
org.pytorch.torchvision.R$styleable: int SearchView_searchIcon
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteY
org.pytorch.torchvision.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
org.pytorch.torchvision.R$id: int search_button
androidx.coordinatorlayout.R$attr
androidx.fragment.R$drawable: int notification_bg_low
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dropdownitem_text_padding_left
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
org.pytorch.torchvision.R$id: int activity_chooser_view_content
androidx.core.view.NestedScrollingParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.legacy.v4.R$id: int text
android.support.v4.media.session.IMediaSession: android.app.PendingIntent getLaunchPendingIntent()
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)
org.pytorch.torchvision.R$color: int accent_material_dark
androidx.recyclerview.widget.AdapterListUpdateCallback: void onMoved(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void fillData(java.lang.Object[],int,int)
androidx.core.app.AppOpsManagerCompat: int MODE_ERRORED
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStrokeWidth(float)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.downloader.internal.SynchronousCall: com.downloader.Response execute()
androidx.media.R$layout: int notification_media_action
okio.ByteString: int indexOf(okio.ByteString)
org.pytorch.R$styleable: int AlertDialog_android_layout
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
androidx.core.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)
android.support.v4.media.session.PlaybackStateCompat$Actions
androidx.appcompat.widget.AppCompatImageView
androidx.activity.R$id: int info
androidx.camera.core.CameraControlInternal$ControlUpdateListener
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_Compat_NotificationActionText
androidx.activity.R$id: int accessibility_custom_action_20
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
androidx.viewpager.R$attr: int alpha
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat: int setSingleRepeatingRequest(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int CENTER_CONNECTION
androidx.core.content.pm.ShortcutInfoCompatSaver: java.lang.Object addShortcuts(java.util.List)
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueChanged(java.util.List)
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getSubtitle()
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: ItemTouchHelper$SimpleCallback(int,int)
androidx.core.view.inputmethod.InputContentInfoCompat: void releasePermission()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.viewpager.R$styleable: int GradientColor_android_centerY
okio.BufferedSource: int select(okio.Options)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_SPECIFICATION
androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy
okhttp3.internal.io.FileSystem: boolean exists(java.io.File)
androidx.core.widget.ScrollerCompat: int getFinalY()
androidx.camera.core.Exif: android.location.Location getLocation()
androidx.appcompat.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
androidx.recyclerview.widget.SimpleItemAnimator: void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_ALWAYS
androidx.appcompat.R$drawable: int abc_list_divider_material
androidx.fragment.R$style: int TextAppearance_Compat_Notification
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
okhttp3.internal.http.HttpMethod: boolean requiresRequestBody(java.lang.String)
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect getEpicenterBounds()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationFailed()
androidx.collection.SparseArrayCompat: boolean isEmpty()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.vectordrawable.animated.R$integer
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintStart_toEndOf
androidx.constraintlayout.solver.Metrics: long constraints
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
org.pytorch.torchvision.R$drawable: int abc_ic_menu_cut_mtrl_alpha
org.pytorch.R$color: int primary_material_light
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
androidx.versionedparcelable.VersionedParcelize: java.lang.String jetifyAs()
androidx.swiperefreshlayout.R$id: int text2
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toEndOf
androidx.swiperefreshlayout.R$dimen: int notification_small_icon_background_padding
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
androidx.appcompat.R$layout: int abc_action_bar_up_container
androidx.camera.core.CameraControlInternal$ControlUpdateListener: void onCameraControlUpdateSessionConfig(androidx.camera.core.SessionConfig)
androidx.asynclayoutinflater.R$id: int actions
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextEntryKey()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
androidx.appcompat.widget.DecorToolbar: void initProgress()
androidx.customview.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
org.pytorch.R$color: int abc_tint_edittext
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
okhttp3.internal.connection.StreamAllocation: void noNewStreams()
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetEnd
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_color
androidx.camera.core.R$id: int tag_accessibility_pane_title
androidx.drawerlayout.widget.DrawerLayout$LayoutParams
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.savedstate.SavedStateRegistryOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.graphics.PathSegment: android.graphics.PointF getStart()
io.github.prabhuomkar.pytorchandroid.R$attr: int allowStacking
androidx.slidingpanelayout.R$id: int tag_unhandled_key_listeners
androidx.camera.core.SingleImageProxyBundle
androidx.recyclerview.widget.OrientationHelper: int getDecoratedMeasurement(android.view.View)
androidx.legacy.v4.R$drawable: int notification_template_icon_low_bg
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_container
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment TOP
android.support.v4.media.session.IMediaSession: void playFromMediaId(java.lang.String,android.os.Bundle)
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
android.support.v4.media.session.PlaybackStateCompat$ErrorCode
org.pytorch.torchvision.R$attr: int measureWithLargestChild
android.support.v4.media.session.IMediaSession: void setVolumeTo(int,int,java.lang.String)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_LATITUDE_REF
org.pytorch.R$styleable: int Toolbar_titleTextAppearance
androidx.collection.SparseArrayCompat: void putAll(androidx.collection.SparseArrayCompat)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_closeIcon
io.github.prabhuomkar.pytorchandroid.R$attr: int windowMinWidthMinor
okhttp3.Response$Builder
androidx.loader.R$styleable: int GradientColorItem_android_offset
androidx.constraintlayout.widget.R$attr: int emptyVisibility
androidx.appcompat.widget.ListPopupWindow: void setWindowLayoutType(int)
androidx.camera.core.ImageCapture$Defaults
androidx.recyclerview.R$id: int tag_accessibility_pane_title
io.github.prabhuomkar.pytorchandroid.R$attr: int layoutManager
androidx.drawerlayout.widget.DrawerLayout: void computeScroll()
androidx.core.view.MotionEventCompat: int AXIS_SCROLL
okhttp3.internal.Internal: okhttp3.internal.connection.StreamAllocation streamAllocation(okhttp3.Call)
androidx.legacy.v4.R$styleable: int GradientColor_android_gradientRadius
androidx.customview.widget.FocusStrategy$CollectionAdapter: int size(java.lang.Object)
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
androidx.camera.core.ImageCaptureConfig$Builder: ImageCaptureConfig$Builder()
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.Fragment: void setReenterTransition(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
androidx.appcompat.widget.SwitchCompat: void setSwitchTextAppearance(android.content.Context,int)
okio.ByteString: int size()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Display1
androidx.legacy.v4.R$dimen: int notification_right_side_padding_top
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
androidx.camera.camera2.Camera2Config: androidx.camera.camera2.impl.CameraEventCallbacks getCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks)
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Indicator
androidx.core.R$dimen: int notification_subtext_size
androidx.drawerlayout.R$id: int action_image
org.pytorch.torchvision.R$dimen: int abc_dropdownitem_text_padding_right
androidx.camera.core.ImageProxy: androidx.camera.core.ImageInfo getImageInfo()
androidx.activity.R$dimen: int notification_subtext_size
okhttp3.HttpUrl: java.lang.String fragment()
androidx.appcompat.R$dimen: int abc_progress_bar_height_material
androidx.camera.camera2.R$id: int accessibility_custom_action_24
androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper: void updateModelDownloadProgress(android.view.View,java.lang.String)
androidx.appcompat.R$styleable: int ActionBar_itemPadding
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintDimensionRatio
androidx.camera.core.ImageAnalysisConfig: android.util.Rational getTargetAspectRatioCustom(android.util.Rational)
androidx.camera.core.R$layout: int notification_template_part_time
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
io.github.prabhuomkar.pytorchandroid.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.recyclerview.widget.OrientationHelper: int getEnd()
androidx.customview.R$styleable: int FontFamily_fontProviderCerts
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActivityChooserView
androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)
androidx.recyclerview.R$id: int accessibility_custom_action_0
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.recyclerview.R$styleable: int GradientColor_android_type
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setSurfaceOccupancyPriority(int)
androidx.drawerlayout.R$id: int italic
org.pytorch.R$style: int TextAppearance_AppCompat_Headline
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.camera.core.AppConfig$Builder
androidx.appcompat.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)
androidx.coordinatorlayout.R$drawable: int notification_bg
okhttp3.internal.connection.RouteException: RouteException(java.io.IOException)
androidx.appcompat.resources.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$layout: int activity_image_classification
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_MIN
androidx.drawerlayout.widget.DrawerLayout: boolean onKeyDown(int,android.view.KeyEvent)
androidx.camera.camera2.R$id: int blocking
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowFixedHeightMinor
org.pytorch.R$styleable: int AppCompatTextView_android_textAppearance
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_width
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setSessionCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLast()
androidx.lifecycle.ComputableLiveData: void invalidate()
androidx.media.MediaSessionManager$RemoteUserInfo: boolean equals(java.lang.Object)
androidx.viewpager.R$id: int notification_main_column
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
org.pytorch.torchvision.R$styleable: int TextAppearance_fontVariationSettings
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()
androidx.appcompat.R$attr: int textAppearanceSearchResultSubtitle
org.pytorch.R$style: int Widget_AppCompat_Button_Colored
androidx.camera.core.impl.utils.Optional: java.lang.Object or(androidx.core.util.Supplier)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeSplitBackground
com.downloader.Error: java.lang.String getServerErrorMessage()
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder setAutoFocusCallback(java.util.concurrent.Executor,androidx.camera.core.FocusMeteringAction$OnAutoFocusListener)
okhttp3.EventListener$Factory: okhttp3.EventListener create(okhttp3.Call)
com.downloader.Response: void setCancelled(boolean)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int mMargin
android.support.v4.media.session.PlaybackStateCompat: long getActiveQueueItemId()
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.app.NavUtils: java.lang.String PARENT_ACTIVITY
androidx.constraintlayout.solver.widgets.WidgetContainer: void remove(androidx.constraintlayout.solver.widgets.ConstraintWidget)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Display3
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_JPG_FROM_RAW
org.pytorch.torchvision.R$dimen: int abc_search_view_preferred_width
org.pytorch.R$dimen: int highlight_alpha_material_light
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(int)
android.support.v4.media.session.MediaControllerCompat: java.lang.String getPackageName()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawWidth()
androidx.core.app.ShareCompat$IntentReader: java.lang.String getSubject()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
androidx.media.R$drawable
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
androidx.fragment.R$dimen: int notification_action_text_size
androidx.core.view.PointerIconCompat: int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW
androidx.swiperefreshlayout.R$dimen: int compat_control_corner_material
androidx.appcompat.R$drawable: int abc_text_cursor_material
androidx.camera.core.CaptureConfig: int getTemplateType()
org.pytorch.torchvision.R$layout: int abc_alert_dialog_button_bar_material
androidx.fragment.app.Fragment: Fragment()
androidx.fragment.app.Fragment: void setEnterTransition(java.lang.Object)
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_centerColor
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean set(java.lang.Object)
androidx.camera.camera2.Camera2Config: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Toolbar
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.view.menu.MenuView$ItemView: void setIcon(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableTintMode
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
android.support.v4.media.MediaBrowserCompat$ItemCallback: void onError(java.lang.String)
org.pytorch.torchvision.R$layout
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
org.pytorch.torchvision.R$layout: int abc_cascading_menu_item_layout
androidx.appcompat.R$color: int background_floating_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.camera.camera2.R$layout: int notification_template_part_chronometer
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_borderless_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)
androidx.drawerlayout.R$id: int text2
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
androidx.vectordrawable.R$color: int ripple_material_light
androidx.appcompat.R$attr: int colorButtonNormal
com.downloader.httpclient.HttpClient: void connect(com.downloader.request.DownloadRequest)
androidx.camera.core.R$styleable: int GradientColor_android_centerX
androidx.viewpager.widget.ViewPager: int getClientWidth()
androidx.customview.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void disconnectUnlockedWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowMenuShowing()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()
androidx.legacy.widget.Space
androidx.savedstate.SavedStateRegistry$AutoRecreated
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.appcompat.R$layout: int abc_alert_dialog_material
androidx.appcompat.R$color: int abc_primary_text_material_dark
androidx.fragment.app.Fragment$SavedState: int describeContents()
androidx.activity.R$id: int accessibility_custom_action_31
org.pytorch.R$drawable: int abc_text_select_handle_left_mtrl_light
org.pytorch.torchvision.R$styleable: int AlertDialog_listItemLayout
org.pytorch.R$dimen: int tooltip_precise_anchor_threshold
org.pytorch.IValue: boolean isList()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ListView
androidx.camera.core.VideoCaptureConfig: android.util.Size getDefaultResolution(android.util.Size)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_contentPadding
com.downloader.Error: void setServerErrorMessage(java.lang.String)
androidx.print.R
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void onAttachedToWindow()
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR_OVERLAY
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.appcompat.R$attr: int icon
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.camera.core.R$drawable
org.pytorch.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.viewpager.R$styleable: int ColorStateListItem_android_alpha
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
com.downloader.OnStartOrResumeListener: void onStartOrResume()
androidx.core.view.ViewCompat: float getZ(android.view.View)
androidx.constraintlayout.widget.R$styleable: int[] ConstraintLayout_placeholder
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout(int,int,int,int)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable)
androidx.camera.core.R$layout: int notification_template_custom_big
androidx.activity.R$styleable
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Line2
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment RIGHT
io.github.prabhuomkar.pytorchandroid.R$attr: int colorSwitchThumbNormal
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: void onAnimationStart(android.animation.Animator)
androidx.asynclayoutinflater.R$layout: int notification_template_part_time
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_endY
androidx.media.R$style
androidx.vectordrawable.animated.R$styleable: int[] FontFamily
okhttp3.Cache: Cache(java.io.File,long)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
android.support.v4.media.session.IMediaControllerCallback: void onSessionReady()
androidx.appcompat.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
org.pytorch.torchvision.R$anim: int abc_shrink_fade_out_from_bottom
androidx.fragment.R$id: int right_icon
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_NAVIGATION
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBaseline_creator
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_toBaselineOf
androidx.vectordrawable.R$id: int accessibility_custom_action_26
org.pytorch.R$id: int group_divider
okhttp3.internal.tls.OkHostnameVerifier: java.util.List allSubjectAltNames(java.security.cert.X509Certificate)
androidx.fragment.app.DialogFragment: android.app.Dialog requireDialog()
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int)
org.pytorch.torchvision.R$drawable: int abc_btn_colored_material
org.pytorch.R$attr: int track
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
androidx.appcompat.R$string: int abc_activitychooserview_choose_application
androidx.appcompat.resources.R$dimen: int notification_action_icon_size
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXIF_VERSION
androidx.camera.core.PreviewConfig: java.lang.Class getTargetClass(java.lang.Class)
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.camera.core.Exif
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_height
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_MAX_RESOLUTION
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)
okhttp3.internal.ws.RealWebSocket: boolean close(int,java.lang.String)
com.downloader.PRDownloaderConfig: int getReadTimeout()
io.github.prabhuomkar.pytorchandroid.R$attr: int constraint_referenced_ids
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_DialogWhenLarge
okio.ByteString: okio.ByteString substring(int,int)
okhttp3.HttpUrl: int hashCode()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChildWithMargins(android.view.View,int,int)
androidx.core.app.NotificationCompatSideChannelService: void cancelAll(java.lang.String)
androidx.fragment.app.FragmentHostCallback
okhttp3.internal.http.HttpHeaders: java.util.Set varyFields(okhttp3.Headers)
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_NOT_SUPPORTED
org.pytorch.torchvision.R$dimen: int tooltip_corner_radius
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
androidx.appcompat.widget.SearchView$OnSuggestionListener: boolean onSuggestionSelect(int)
org.pytorch.torchvision.R$styleable: int[] MenuGroup
androidx.core.view.ViewCompat: int resolveSizeAndState(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeight
androidx.activity.R$style
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
okhttp3.internal.http2.Header: boolean equals(java.lang.Object)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)
androidx.legacy.coreutils.R$style
androidx.appcompat.view.menu.MenuPopupHelper: int getGravity()
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener: boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_big_media
com.google.common.util.concurrent.ListenableFuture
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
androidx.camera.camera2.impl.Camera2Initializer: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.appcompat.resources.R$drawable: int notification_bg_low
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.constraintlayout.widget.R$attr: int layout_constraintHeight_default
org.pytorch.R$drawable: int abc_ic_voice_search_api_material
androidx.recyclerview.widget.SimpleItemAnimator: SimpleItemAnimator()
io.github.prabhuomkar.pytorchandroid.R$attr: int selectableItemBackgroundBorderless
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
okio.ByteString: okio.ByteString sha1()
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_bar_up_container
androidx.camera.camera2.R$id: int notification_main_column
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.app.NotificationCompat: int FLAG_INSISTENT
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_600
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarSplitStyle
okhttp3.CertificatePinner$Builder
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
androidx.appcompat.widget.DecorToolbar: void initIndeterminateProgress()
androidx.core.app.NotificationCompat$WearableExtender: boolean getStartScrollBottom()
androidx.recyclerview.widget.LinearLayoutManager: void setInitialPrefetchItemCount(int)
com.squareup.picasso.Picasso: void invalidate(java.io.File)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getInternalDrawBottom()
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
androidx.recyclerview.widget.ListAdapter: ListAdapter(androidx.recyclerview.widget.AsyncDifferConfig)
androidx.core.app.NotificationCompat$CarExtender: android.graphics.Bitmap getLargeIcon()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.core.view.NestedScrollingParentHelper
androidx.fragment.app.FragmentPagerAdapter: android.os.Parcelable saveState()
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode[] values()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActivityChooserView_initialActivityCount
androidx.camera.core.PreviewConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
org.pytorch.R$id: int chronometer
org.pytorch.R$id: int search_mag_icon
org.pytorch.torchvision.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.constraintlayout.solver.widgets.ResolutionDimension: void reset()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_STOP
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
okio.Buffer: boolean exhausted()
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState[] values()
androidx.slidingpanelayout.R$dimen: int compat_control_corner_material
androidx.core.app.NotificationCompat: int PRIORITY_MIN
androidx.camera.camera2.R$attr: int fontProviderCerts
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_8
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View)
okio.Buffer$UnsafeCursor: okio.Buffer buffer
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
androidx.appcompat.R$styleable: int GradientColor_android_centerY
org.pytorch.torchvision.R$dimen: int notification_main_column_padding_top
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_height
androidx.appcompat.widget.DecorContentParent: boolean hideOverflowMenu()
okhttp3.CertificatePinner
androidx.appcompat.R$id: int tag_accessibility_actions
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int cardUseCompatPadding
androidx.core.app.NotificationCompat: java.lang.String EXTRA_TITLE
androidx.legacy.coreui.R$style: int Widget_Compat_NotificationActionText
okhttp3.internal.http2.Header: okio.ByteString TARGET_PATH
androidx.activity.R$layout: int notification_template_part_chronometer
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int ALIGN_RIGHT
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SOCIAL
androidx.camera.core.Preview: void updateUseCaseConfig(androidx.camera.core.UseCaseConfig)
okhttp3.internal.http2.Header: int hashCode()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult
androidx.fragment.app.FragmentTabHost: void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle)
org.pytorch.R$styleable: int GradientColor_android_endColor
io.github.prabhuomkar.pytorchandroid.R$color: int colorPyTorch1
androidx.viewpager.R$dimen: int notification_large_icon_height
androidx.camera.core.MeteringPointFactory: android.util.Rational mFOVAspectRatio
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
androidx.camera.core.AspectRatio: androidx.camera.core.AspectRatio RATIO_16_9
androidx.appcompat.R$attr: int spinnerStyle
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.asynclayoutinflater.R$attr: int fontProviderCerts
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_config_prefDialogWidth
org.pytorch.R$attr: int buttonBarNeutralButtonStyle
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_UNKNOWN_ERROR
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_SKIP_LIMIT_REACHED
androidx.cursoradapter.widget.SimpleCursorAdapter: int[] mFrom
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] SwitchCompat
org.pytorch.R$attr: int searchViewStyle
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildPosition(android.view.View)
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setSurfaceOccupancyPriority(int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
org.pytorch.R$styleable: int MenuItem_showAsAction
android.support.v4.media.RatingCompat: java.lang.String toString()
androidx.camera.core.R$id: int action_text
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderCerts
android.support.v4.media.session.IMediaSession: void skipToQueueItem(long)
okhttp3.OkHttpClient: okhttp3.Cache cache()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: int mWrapFixedWidth
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
org.pytorch.torchvision.R$attr: int ratingBarStyleIndicator
org.pytorch.R$attr: int color
org.pytorch.torchvision.R$attr: int actionBarStyle
androidx.appcompat.widget.DecorToolbar: boolean showOverflowMenu()
androidx.media.AudioAttributesCompat: int USAGE_UNKNOWN
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
com.downloader.core.Core: com.downloader.core.Core getInstance()
androidx.camera.core.ImageFormatConstants: int INTERNAL_DEFINED_IMAGE_FORMAT_JPEG
androidx.slidingpanelayout.widget.SlidingPaneLayout: void computeScroll()
okhttp3.Route: java.net.Proxy proxy()
okhttp3.RequestBody: long contentLength()
org.pytorch.torchvision.R$dimen: int abc_panel_menu_list_width
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)
androidx.legacy.coreutils.R$drawable: int notification_bg_low_normal
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_fixed_height_major
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.core.internal.view.SupportMenuItem: void setShowAsAction(int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.loader.content.Loader$ForceLoadContentObserver: boolean deliverSelfNotifications()
org.pytorch.R$styleable: int TextAppearance_android_typeface
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.http.HttpCodec httpStream()
org.pytorch.R$styleable: int ColorStateListItem_android_alpha
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.core.app.RemoteInput: java.lang.CharSequence getLabel()
io.github.prabhuomkar.pytorchandroid.R$string
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_measureWithLargestChild
org.pytorch.torchvision.R$styleable: int MenuView_android_itemTextAppearance
androidx.legacy.coreutils.R$styleable: int GradientColorItem_android_offset
androidx.customview.R$dimen: int compat_control_corner_material
okhttp3.CipherSuite: java.lang.String toString()
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNDEFINED
androidx.appcompat.R$anim: int abc_slide_in_top
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback
org.pytorch.R$dimen: int abc_action_bar_content_inset_material
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setCameraEventCallback(androidx.camera.camera2.impl.CameraEventCallbacks)
androidx.core.view.MenuItemCompat$OnActionExpandListener
android.support.v4.media.RatingCompat: int RATING_5_STARS
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM
androidx.camera.camera2.Camera2Config$Extender: Camera2Config$Extender(androidx.camera.core.Config$ExtendableBuilder)
androidx.appcompat.R$id: int action_bar_spinner
okio.Okio: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder(android.support.v4.media.MediaMetadataCompat)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: void setPosition(int)
com.downloader.Status: com.downloader.Status QUEUED
androidx.camera.core.UseCaseGroupRepository$UseCaseGroupSetup: void setup(androidx.camera.core.UseCaseGroup)
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls
androidx.loader.R$id: int time
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getIntrinsicWidth()
androidx.activity.R$drawable: int notification_bg_normal_pressed
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long)
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_PERCENT
androidx.core.content.pm.PermissionInfoCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_subtitle
androidx.camera.core.BaseCamera: com.google.common.util.concurrent.ListenableFuture release()
androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
okhttp3.Cache: java.io.File directory()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA
org.pytorch.R$style: int Theme_AppCompat_Light_DialogWhenLarge
org.pytorch.R$attr: int switchMinWidth
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)
androidx.recyclerview.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
org.pytorch.torchvision.R$attr: int showTitle
androidx.camera.core.ImageAnalysisConfig: android.util.Size getTargetResolution(android.util.Size)
androidx.recyclerview.widget.AsyncDifferConfig: java.util.concurrent.Executor getMainThreadExecutor()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.core.app.NotificationCompatSideChannelService
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: boolean requiresCorrectedAspectRatio(androidx.camera.core.UseCaseConfig)
androidx.core.view.NestedScrollingParent: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.core.view.ScrollingView: int computeHorizontalScrollOffset()
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable getVersionedParcel()
org.pytorch.R$styleable: int ActionBar_indeterminateProgressStyle
androidx.core.widget.NestedScrollView: int getScrollRange()
org.pytorch.torchvision.R$attr: int actionViewClass
androidx.camera.core.ImageCaptureConfig: android.util.Size getMaxResolution(android.util.Size)
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: void onSelectionRefresh()
com.squareup.picasso.Cache: android.graphics.Bitmap get(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$dimen: int cardview_default_elevation
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_RATING
androidx.appcompat.widget.DrawableUtils
androidx.core.R$dimen: int compat_button_padding_vertical_material
com.downloader.Status: com.downloader.Status RUNNING
androidx.drawerlayout.R$dimen: int notification_main_column_padding_top
android.support.v4.media.session.IMediaSession: int getRatingType()
androidx.fragment.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ImageButton
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.downloader.internal.DownloadRequestQueue: void pause(int)
com.downloader.database.DownloadModel
androidx.appcompat.R$id: int src_atop
org.pytorch.torchvision.R$styleable: int[] StateListDrawable
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean)
org.pytorch.IValue: boolean isDouble()
androidx.appcompat.R$id: int accessibility_custom_action_26
androidx.camera.core.CameraX$ErrorCode
androidx.camera.core.R$styleable: int FontFamilyFont_fontStyle
androidx.activity.R$drawable: int notification_bg_low
org.pytorch.R$attr: int commitIcon
androidx.recyclerview.widget.ListAdapter: int getItemCount()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Button
io.github.prabhuomkar.pytorchandroid.helpers.DataHelper: DataHelper()
org.pytorch.torchvision.R$color: int notification_action_color_filter
androidx.loader.app.LoaderManager: boolean hasRunningLoaders()
androidx.recyclerview.selection.OperationMonitor$OnChangeListener
androidx.camera.camera2.Camera2Config: java.lang.Object getCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)
androidx.appcompat.R$attr: int colorControlNormal
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: java.util.List getWidgetGroups()
org.pytorch.R$drawable: int abc_ic_star_half_black_36dp
androidx.camera.core.CameraControlInternal: androidx.camera.core.CameraControlInternal DEFAULT_EMPTY_INSTANCE
androidx.appcompat.R$dimen: int abc_list_item_height_small_material
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_IMAGE_UNIQUE_ID
org.pytorch.R$styleable: int SearchView_iconifiedByDefault
androidx.core.math.MathUtils: int clamp(int,int,int)
androidx.core.app.ShareCompat
androidx.vectordrawable.R$id: int accessibility_custom_action_16
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
org.pytorch.R$styleable: int ViewBackgroundHelper_android_background
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getTargetPosition()
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,java.lang.String)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getAddDuration()
io.github.prabhuomkar.pytorchandroid.R$attr: int popupWindowStyle
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
androidx.camera.core.ImageAnalysisConfig: int getImageQueueDepth()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Theme_AppCompat_Light
androidx.legacy.coreui.R$id: int text
androidx.core.view.MarginLayoutParamsCompat: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.R$id: int tag_unhandled_key_listeners
org.pytorch.R$styleable: int[] ButtonBarLayout
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
androidx.core.app.NotificationCompat$MessagingStyle: java.util.List getMessages()
okio.ByteString: void write(java.io.OutputStream)
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mLastVisibleWidget
okio.Buffer: void close()
androidx.appcompat.R$color: int switch_thumb_material_light
com.squareup.picasso.PicassoProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.customview.view.AbsSavedState: int describeContents()
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_percent
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.vectordrawable.animated.R$id: int notification_background
androidx.appcompat.R$style: int Widget_AppCompat_RatingBar_Small
androidx.camera.core.UseCaseGroupRepository$2: void onStop(androidx.lifecycle.LifecycleOwner)
okio.Utf8: long size(java.lang.String,int,int)
org.pytorch.torchvision.R$id: int submit_area
org.pytorch.torchvision.R$attr: int contentInsetStart
androidx.core.R$id: int accessibility_custom_action_13
androidx.collection.ArrayMap: boolean removeAll(java.util.Collection)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginStart
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ARGUMENT_INDEX
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
androidx.core.app.ShareCompat$IntentBuilder: android.content.Intent createChooserIntent()
androidx.slidingpanelayout.R$drawable: int notify_panel_notification_icon_bg
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.constraintlayout.solver.widgets.ChainHead: boolean mHasUndefinedWeights
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
okhttp3.HttpUrl: int querySize()
androidx.constraintlayout.solver.widgets.WidgetContainer: void reset()
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_shadowColor
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
androidx.appcompat.widget.ListPopupWindow: int MATCH_PARENT
okio.ByteString: java.lang.String string(java.nio.charset.Charset)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
org.pytorch.R$id: int right_icon
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA
androidx.customview.R$dimen: int compat_notification_large_icon_max_width
org.pytorch.torchvision.R$styleable: int ViewStubCompat_android_id
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_LENGTH_IN_35MM_FILM
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Menu
androidx.core.view.ViewCompat: void setAccessibilityLiveRegion(android.view.View,int)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.appcompat.R$styleable: int[] MenuGroup
androidx.recyclerview.selection.StorageStrategy: StorageStrategy(java.lang.Class)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.asynclayoutinflater.R$dimen: int compat_button_padding_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_action_bar_item_background_material
androidx.activity.R$color
org.pytorch.R$styleable: int[] MenuView
androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)
org.pytorch.torchvision.BuildConfig: boolean DEBUG
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.customview.R$attr: int ttcIndex
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_19
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Spinner
androidx.lifecycle.ViewModel
org.pytorch.DType: org.pytorch.DType INT64
okio.AsyncTimeout: boolean exit()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int)
androidx.exifinterface.media.ExifInterface: short WHITE_BALANCE_AUTO
com.squareup.picasso.Request: boolean purgeable
androidx.legacy.coreui.R$color: int notification_icon_bg_color
androidx.constraintlayout.widget.ConstraintSet: void createVerticalChain(int,int,int,int,int[],float[],int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_15
androidx.camera.camera2.R$drawable: int notification_template_icon_bg
androidx.camera.core.CameraControlInternal: androidx.camera.core.FlashMode getFlashMode()
org.pytorch.torchvision.R$attr: int textColorAlertDialogListItem
androidx.appcompat.R$styleable: int[] ColorStateListItem
androidx.camera.core.CameraControlInternal: void cancelAfAeTrigger(boolean,boolean)
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Display3
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void resetGraph()
androidx.appcompat.R$style: int Animation_AppCompat_DropDownUp
android.support.v4.media.session.IMediaSession: void stop()
org.pytorch.R$styleable: int[] GradientColor
org.pytorch.R$id: int action_image
androidx.core.app.NotificationCompat: int BADGE_ICON_NONE
androidx.constraintlayout.widget.Barrier: int TOP
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean onTouchEvent(android.view.MotionEvent)
androidx.legacy.v4.R
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_android_minHeight
io.github.prabhuomkar.pytorchandroid.R$id: int barrier
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.legacy.coreui.R$styleable: int[] GradientColorItem
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
org.pytorch.torchvision.R$drawable: int abc_ic_clear_material
android.support.v4.media.session.IMediaSession: android.support.v4.media.MediaMetadataCompat getMetadata()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
com.squareup.picasso.RequestCreator: void into(android.widget.RemoteViews,int,int[])
okhttp3.internal.http.HttpHeaders: boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: ShortcutInfoCompatSaver$NoopImpl()
org.pytorch.R$styleable: int[] StateListDrawableItem
androidx.appcompat.widget.SwitchCompat: void setSwitchMinWidth(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat y(float)
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPing(okio.ByteString)
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.core.app.AppLaunchChecker: boolean hasStartedFromLauncher(android.content.Context)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_REMOVED
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
androidx.annotation.CallSuper
androidx.cardview.R$styleable: int CardView_contentPaddingRight
androidx.core.os.ParcelCompat: boolean readBoolean(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
androidx.camera.core.ImageUtil$CodecFailedException
io.github.prabhuomkar.pytorchandroid.R$attr: int titleTextColor
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$attr: int ratingBarStyleSmall
androidx.fragment.app.FragmentStatePagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)
androidx.appcompat.widget.SwitchCompat: boolean getTargetCheckedState()
org.pytorch.R$layout: int abc_list_menu_item_layout
androidx.viewpager.R$dimen: int notification_right_side_padding_top
androidx.annotation.Dimension: int DP
androidx.vectordrawable.R$attr: int font
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_HOVER_ENTER
okio.BufferedSink: okio.Buffer buffer()
androidx.annotation.RestrictTo$Scope: androidx.annotation.RestrictTo$Scope LIBRARY_GROUP
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,java.lang.String)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentManager$OnBackStackChangedListener
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
androidx.recyclerview.widget.RecyclerView: void scrollToPosition(int)
androidx.vectordrawable.animated.R$styleable: int GradientColorItem_android_color
androidx.customview.R$styleable: int GradientColor_android_gradientRadius
androidx.camera.core.BaseCamera: void close()
io.github.prabhuomkar.pytorchandroid.R$string: int abc_activity_chooser_view_see_all
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollHorizontally()
androidx.core.text.BidiFormatter: androidx.core.text.BidiFormatter getInstance()
okhttp3.internal.http.RealInterceptorChain
com.squareup.picasso.Picasso: void cancelTag(java.lang.Object)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray(double[],int)
androidx.fragment.app.Fragment: void setAllowReturnTransitionOverlap(boolean)
com.downloader.database.AppDbHelper: void updateProgress(int,long,long)
org.pytorch.R$attr: int navigationMode
androidx.core.app.ActivityCompat$PermissionCompatDelegate
androidx.appcompat.R$styleable: int Toolbar_title
org.pytorch.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_END
androidx.fragment.app.Fragment$InstantiationException
androidx.vectordrawable.animated.R$attr: int alpha
androidx.appcompat.R$styleable: int SwitchCompat_splitTrack
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom MEMORY
androidx.swiperefreshlayout.R$dimen: int notification_subtext_size
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AE_AWB
org.pytorch.torchvision.R$attr: int colorSwitchThumbNormal
org.pytorch.R$attr: int textAppearanceListItemSecondary
androidx.camera.core.UseCaseAttachState: void setUseCaseOnline(androidx.camera.core.UseCase)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COLOR_SPACE
androidx.fragment.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)
androidx.camera.core.Preview$OnPreviewOutputUpdateListener
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.appcompat.R$color: int abc_tint_switch_track
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)
androidx.core.app.NotificationCompat: int FLAG_GROUP_SUMMARY
okhttp3.internal.http2.Http2Stream: okio.Sink getSink()
androidx.slidingpanelayout.R$attr: int fontProviderFetchTimeout
androidx.media.MediaBrowserServiceCompat: void notifyChildrenChanged(java.lang.String)
androidx.vectordrawable.animated.R$id: int right_side
androidx.appcompat.R$styleable: int ActionMode_backgroundSplit
androidx.camera.core.MultiValueSet: java.lang.Object clone()
androidx.recyclerview.R$drawable: int notify_panel_notification_icon_bg
io.github.prabhuomkar.pytorchandroid.R$id: int edit_query
androidx.core.view.inputmethod.InputConnectionCompat
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_START_INT
androidx.coordinatorlayout.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$attr: int autoSizeTextType
androidx.loader.R$styleable: int FontFamilyFont_android_fontVariationSettings
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.camera.camera2.R$color: int secondary_text_default_material_light
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.annotation.NavigationRes
androidx.fragment.app.DialogFragment: void showNow(androidx.fragment.app.FragmentManager,java.lang.String)
org.pytorch.R$style: int AlertDialog_AppCompat_Light
androidx.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.drawerlayout.R$id: int chronometer
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)
org.pytorch.R$anim: int abc_slide_in_top
okio.Buffer: byte getByte(long)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnectionAllowed(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.constraintlayout.solver.widgets.Rectangle: int height
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder
org.pytorch.Tensor: java.nio.DoubleBuffer allocateDoubleBuffer(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.vectordrawable.animated.R$id: int tag_unhandled_key_listeners
androidx.core.graphics.PaintCompat
androidx.core.database.DatabaseUtilsCompat: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])
androidx.activity.R$styleable: int FontFamily_fontProviderCerts
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
androidx.legacy.coreui.R$dimen: int notification_action_text_size
androidx.legacy.v4.R$dimen: int notification_small_icon_background_padding
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.squareup.picasso.Picasso: void setIndicatorsEnabled(boolean)
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowReserved()
okio.Sink: void flush()
androidx.recyclerview.selection.SelectionTracker: androidx.recyclerview.widget.RecyclerView$AdapterDataObserver getAdapterDataObserver()
androidx.constraintlayout.widget.ConstraintSet: void addToHorizontalChainRTL(int,int,int)
androidx.camera.core.impl.utils.MainThreadAsyncHandler: android.os.Handler getInstance()
androidx.fragment.app.FragmentTransitionImpl
androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength,int,boolean)
androidx.fragment.app.FragmentTransitionImpl: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.slidingpanelayout.R$attr: int alpha
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
okhttp3.internal.connection.RealConnection: okhttp3.Handshake handshake()
androidx.legacy.v4.R$dimen: int notification_right_icon_size
androidx.drawerlayout.R$styleable: int GradientColor_android_endColor
org.pytorch.IValue: org.pytorch.IValue[] toList()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicWidth()
androidx.camera.core.ImmediateSurface: com.google.common.util.concurrent.ListenableFuture provideSurface()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
androidx.appcompat.R$color: int abc_tint_edittext
androidx.camera.core.MeteringPointFactory
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_BARRIER
com.downloader.internal.stream.FileDownloadOutputStream: void write(byte[],int,int)
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getTitle()
androidx.slidingpanelayout.R$styleable: <clinit>()
androidx.recyclerview.selection.StorageStrategy: androidx.recyclerview.selection.StorageStrategy createStringStorage()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_cascading_menu_item_layout
org.pytorch.R$drawable: int abc_text_select_handle_middle_mtrl_light
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_title
androidx.appcompat.resources.R$id: int accessibility_custom_action_27
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setAlpha(int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_black_48dp
org.pytorch.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.core.R$styleable
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Button
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.activity.R$dimen: int compat_notification_large_icon_max_height
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
androidx.customview.R$string: int status_bar_notification_info_overflow
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.downloader.Error: java.lang.Throwable getConnectionException()
androidx.annotation.Size: long min()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int HORIZONTAL
android.support.v4.media.session.PlaybackStateCompat: int STATE_SKIPPING_TO_NEXT
androidx.legacy.coreutils.R$attr: int fontProviderPackage
org.pytorch.torchvision.R$color: int highlighted_text_material_light
androidx.activity.R$styleable: int GradientColor_android_centerX
androidx.appcompat.graphics.drawable.StateListDrawable: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.R$color: int ripple_material_dark
androidx.appcompat.view.menu.BaseMenuPresenter: boolean flagActionItems()
androidx.media.R$styleable: int GradientColor_android_centerColor
androidx.camera.core.VideoCaptureConfig$Builder: VideoCaptureConfig$Builder()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_optimizationLevel
androidx.recyclerview.widget.ItemTouchHelper: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
androidx.core.app.NotificationCompat$MessagingStyle$Message: long getTimestamp()
androidx.appcompat.R$styleable: int SwitchCompat_showText
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener
org.pytorch.R$styleable: int MenuItem_android_id
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()
androidx.appcompat.app.WindowDecorActionBar: void setHomeActionContentDescription(int)
org.pytorch.R$attr: int spinBars
androidx.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.legacy.v4.R$id: int action_image
androidx.core.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)
androidx.exifinterface.media.ExifInterface: short FORMAT_PLANAR
androidx.camera.core.SessionConfig: java.util.List getSingleCameraCaptureCallbacks()
androidx.appcompat.view.menu.MenuView$ItemView: boolean showsIcon()
org.pytorch.R$id: int default_activity_button
androidx.core.internal.view.SupportMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
org.pytorch.R$style: int Base_V23_Theme_AppCompat
androidx.drawerlayout.R$styleable: int GradientColor_android_tileMode
androidx.core.widget.ScrollerCompat
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_INPUT
androidx.viewpager.R$color: int notification_icon_bg_color
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.viewpager.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.R$styleable: int ActionBar_hideOnContentScroll
androidx.fragment.app.Fragment: boolean isVisible()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_TRANSPORT
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot()
com.downloader.database.DownloadModel: void setETag(java.lang.String)
org.pytorch.R$style: int Base_V28_Theme_AppCompat
androidx.fragment.app.FragmentManager$BackStackEntry: int getBreadCrumbTitleRes()
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
androidx.fragment.app.ListFragment: android.widget.ListAdapter getListAdapter()
androidx.core.R$layout: int notification_template_part_chronometer
androidx.camera.camera2.impl.compat.CameraManagerCompat
org.pytorch.torchvision.R$style: int Base_V21_Theme_AppCompat_Light
androidx.fragment.R$layout: int notification_template_icon_group
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.R$styleable: int ActionBar_background
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.SolverVariable createExtraVariable()
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarThickness()
org.pytorch.R$attr: int popupWindowStyle
androidx.recyclerview.R$id: int accessibility_custom_action_10
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_alertDialogCenterButtons
org.pytorch.torchvision.R$attr: int layout_anchorGravity
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder domain(java.lang.String)
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.content.ContentResolverCompat
androidx.recyclerview.widget.SimpleItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
okhttp3.internal.connection.RealConnection: java.net.Socket socket()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
okio.ForwardingSink: okio.Sink delegate()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void seekTo(java.lang.Object,long)
io.github.prabhuomkar.pytorchandroid.R$id: int shortcut
androidx.recyclerview.selection.DefaultSelectionTracker: boolean hasSelection()
androidx.camera.camera2.R$dimen: int notification_subtext_size
androidx.appcompat.app.WindowDecorActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,boolean)
org.pytorch.torchvision.R$layout: int abc_action_bar_up_container
androidx.media.MediaBrowserServiceCompat: int RESULT_OK
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_SYSTEM
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHeight(int)
androidx.drawerlayout.R$drawable: int notify_panel_notification_icon_bg
androidx.media.MediaSessionManager$RemoteUserInfo: java.lang.String getPackageName()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ListMenuView
androidx.camera.core.R$dimen: int notification_action_icon_size
androidx.recyclerview.widget.RecyclerView$LayoutManager: void postOnAnimation(java.lang.Runnable)
android.support.v4.media.session.IMediaControllerCallback$Stub: android.os.IBinder asBinder()
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_slide_in_top
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_AT_MOVEMENT_GRANULARITY
org.pytorch.torchvision.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getContainerItemSkip()
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: FingerprintManagerCompat$AuthenticationCallback()
androidx.core.widget.NestedScrollView: void requestLayout()
androidx.core.view.ViewGroupCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int)
org.pytorch.torchvision.R$drawable: int notification_template_icon_bg
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.camera.core.UseCaseConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.legacy.coreui.R$id: int line3
androidx.recyclerview.widget.ItemTouchHelper$Callback: ItemTouchHelper$Callback()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
androidx.camera.core.AspectRatio: androidx.camera.core.AspectRatio RATIO_4_3
androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
org.pytorch.torchvision.R$attr: int buttonTint
androidx.core.provider.FontsContractCompat$FontRequestCallback$FontRequestFailReason
io.github.prabhuomkar.pytorchandroid.R$dimen: int subtitle_corner_radius
androidx.appcompat.R$layout: int notification_template_icon_group
androidx.vectordrawable.animated.R$id: int normal
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
androidx.fragment.app.Fragment: boolean getUserVisibleHint()
android.support.v4.media.session.PlaybackStateCompat: long getActions()
androidx.core.widget.NestedScrollView$OnScrollChangeListener: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.appcompat.widget.PopupMenu: android.view.MenuInflater getMenuInflater()
androidx.activity.R$styleable: int[] FontFamily
androidx.constraintlayout.solver.widgets.Guideline: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowMinWidthMinor
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_collapseContentDescription
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
androidx.core.app.RemoteInput$Builder
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_UNAVAILABLE
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.loader.R$attr: int fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_fixed_height_minor
androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)
androidx.appcompat.resources.R$id: int line1
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
androidx.asynclayoutinflater.R$id: int action_image
io.github.prabhuomkar.pytorchandroid.R$id: int action_menu_presenter
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetName(java.lang.String)
androidx.customview.R$styleable: int GradientColorItem_android_offset
org.pytorch.torchvision.R$style: int Widget_AppCompat_RatingBar_Small
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.LinearLayoutCompat: int VERTICAL
androidx.coordinatorlayout.R$integer: int status_bar_notification_info_maxnum
androidx.camera.core.OptionsBundle: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.LinearSmoothScroller: void onStart()
androidx.constraintlayout.widget.R$attr: int layout_constraintBottom_toBottomOf
androidx.camera.core.CameraRepository: com.google.common.util.concurrent.ListenableFuture deinit()
android.support.v4.media.MediaDescriptionCompat: android.net.Uri getIconUri()
androidx.camera.camera2.R$drawable: int notification_bg_low_pressed
org.pytorch.torchvision.R$style: int Base_Animation_AppCompat_DropDownUp
org.pytorch.R$style: int Base_Theme_AppCompat_Dialog_Alert
org.pytorch.torchvision.R$dimen: int abc_action_bar_content_inset_with_nav
org.pytorch.torchvision.R$drawable: int abc_btn_check_to_on_mtrl_015
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_END_OF_QUEUE
androidx.appcompat.R$color: int secondary_text_disabled_material_light
com.downloader.PRDownloader: void initialize(android.content.Context,com.downloader.PRDownloaderConfig)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Display3
androidx.core.view.NestedScrollingChild2: boolean hasNestedScrollingParent(int)
androidx.appcompat.R$attr: int popupMenuStyle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.squareup.picasso.LruCache: int hitCount()
androidx.media.R$id: int tag_transition_group
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
android.support.v4.media.session.IMediaSession: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
androidx.appcompat.R$styleable: int AppCompatTheme_popupMenuStyle
io.github.prabhuomkar.pytorchandroid.R$color: int colorArxiv
com.downloader.request.DownloadRequest: com.downloader.request.DownloadRequest setOnStartOrResumeListener(com.downloader.OnStartOrResumeListener)
okhttp3.Address: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.vectordrawable.animated.R$id
androidx.camera.core.CaptureConfig: java.util.List getSurfaces()
androidx.vectordrawable.R$styleable: int[] FontFamilyFont
androidx.appcompat.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
androidx.camera.core.R$id: int accessibility_custom_action_17
androidx.vectordrawable.R$id: int accessibility_custom_action_8
okio.HashingSink: okio.HashingSink sha512(okio.Sink)
org.pytorch.R$styleable: int[] SearchView
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
okio.ByteString: int lastIndexOf(okio.ByteString)
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListView_Menu
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchors()
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(java.nio.FloatBuffer,long[])
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_WARM_WHITE_FLUORESCENT
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget mFirstMatchConstraintWidget
androidx.camera.core.impl.LiveDataObservable: androidx.lifecycle.LiveData getLiveData()
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: InputConfigurationCompat(int,int,int)
androidx.core.R$integer
androidx.customview.widget.FocusStrategy$CollectionAdapter: java.lang.Object get(java.lang.Object,int)
okhttp3.FormBody$Builder
androidx.constraintlayout.solver.SolverVariable: void setType(androidx.constraintlayout.solver.SolverVariable$Type,java.lang.String)
org.pytorch.R$styleable: int GradientColor_android_endX
androidx.asynclayoutinflater.R$integer
io.github.prabhuomkar.pytorchandroid.R$color: int cardview_shadow_end_color
androidx.camera.core.ImageReaderProxy: void setOnImageAvailableListener(androidx.camera.core.ImageReaderProxy$OnImageAvailableListener,android.os.Handler)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_function_shortcut_label
androidx.recyclerview.R$id: int accessibility_custom_action_24
androidx.localbroadcastmanager.content.LocalBroadcastManager: void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)
androidx.appcompat.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
org.pytorch.torchvision.R$anim: int abc_fade_out
androidx.recyclerview.R$dimen: int compat_button_padding_horizontal_material
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.ActionBarContextView: boolean isOverflowReserved()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
com.squareup.picasso.LruCache: android.graphics.Bitmap get(java.lang.String)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
androidx.appcompat.resources.R$id: int actions
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollY()
androidx.coordinatorlayout.R$attr: int fontProviderQuery
androidx.fragment.R$style: int Widget_Compat_NotificationActionText
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.widget.Group: Group(android.content.Context,android.util.AttributeSet,int)
android.support.v4.media.MediaDescriptionCompat: long STATUS_DOWNLOADED
org.pytorch.torchvision.R$id
okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)
okhttp3.Response$Builder: okhttp3.Response$Builder receivedResponseAtMillis(long)
androidx.fragment.R$dimen: int notification_media_narrow_margin
androidx.core.app.TaskStackBuilder: int getIntentCount()
android.support.v4.media.RatingCompat: int getRatingStyle()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toStartOf
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
com.downloader.request.DownloadRequest: java.util.HashMap getHeaders()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_popupMenuStyle
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
org.pytorch.R$drawable: int abc_ratingbar_small_material
androidx.camera.core.UseCase: java.util.Set getAttachedCameraIds()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
org.pytorch.R$styleable: int AppCompatTheme_buttonBarButtonStyle
okhttp3.HttpUrl: java.lang.String encodedUsername()
okhttp3.internal.cache.DiskLruCache: void flush()
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Line2
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_CALL
androidx.viewpager.R$dimen: int compat_notification_large_icon_max_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextSelection(int,int)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
androidx.camera.core.R$drawable: int notification_bg_normal_pressed
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_IF_ROOM
androidx.appcompat.widget.ActivityChooserModel$ActivityChooserModelClient: void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel)
org.pytorch.torchvision.R$id: int action_bar_root
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
org.pytorch.torchvision.R$styleable: int[] CompoundButton
org.pytorch.torchvision.R$styleable: int AppCompatTheme_tooltipForegroundColor
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_constraint_referenced_ids
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
org.pytorch.torchvision.R$attr: int switchMinWidth
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$layout
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_alpha
androidx.camera.core.Exif: java.lang.String getDescription()
org.pytorch.R$dimen: int abc_panel_menu_list_width
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginLeft
androidx.viewpager.R$dimen: int notification_top_pad
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isFullyResolved()
androidx.drawerlayout.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModePasteDrawable
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
org.pytorch.torchvision.R$styleable: int[] LinearLayoutCompat_Layout
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls()
androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)
androidx.asynclayoutinflater.R$dimen: int notification_right_side_padding_top
androidx.recyclerview.widget.RecyclerView: void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_searchview_description_clear
android.support.v4.media.session.IMediaSession: void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_height
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_SearchResult
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.view.WindowCallbackWrapper: void onContentChanged()
androidx.camera.core.UseCase$StateChangeListener
androidx.appcompat.R$attr: int drawableBottomCompat
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.media.AudioAttributesCompat: int CONTENT_TYPE_SONIFICATION
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
io.github.prabhuomkar.pytorchandroid.R$attr: int subtitleTextColor
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
androidx.camera.camera2.R$dimen: int notification_small_icon_size_as_large
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_editor_absoluteY
androidx.legacy.coreutils.R$id: int italic
androidx.camera.core.CaptureConfig$Builder: void setUseRepeatingSurface(boolean)
androidx.viewpager.R$styleable: int GradientColor_android_tileMode
androidx.core.view.WindowInsetsCompat: int getStableInsetRight()
androidx.legacy.v4.R$id: int icon
androidx.appcompat.R$id: int list_item
androidx.recyclerview.widget.RecyclerView$Adapter: boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.camera.core.SensorOrientedMeteringPointFactory: android.graphics.PointF translatePoint(float,float)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_FINE_WEATHER
androidx.recyclerview.widget.SortedListAdapterCallback: void onMoved(int,int)
androidx.camera.core.VideoCapture$Metadata: android.location.Location location
androidx.appcompat.R$layout: int notification_template_part_chronometer
androidx.coordinatorlayout.R$id: int normal
androidx.annotation.WorkerThread
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.core.content.pm.ShortcutInfoCompat$Builder: ShortcutInfoCompat$Builder(android.content.Context,android.content.pm.ShortcutInfo)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_DISTANCE
androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)
androidx.media.R$id: int info
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.recyclerview.R$id: int action_container
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.vectordrawable.R$dimen: int compat_control_corner_material
androidx.customview.R$styleable: int FontFamilyFont_fontWeight
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper: androidx.camera.core.ImageAnalysis buildImageAnalysis()
android.support.v4.media.session.MediaSessionCompat$QueueItem: void writeToParcel(android.os.Parcel,int)
com.downloader.PRDownloader: void initialize(android.content.Context)
org.pytorch.R$string: int abc_menu_shift_shortcut_label
androidx.recyclerview.widget.RecyclerView: int TOUCH_SLOP_DEFAULT
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetResolution(android.util.Size)
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar
androidx.appcompat.R$drawable: int abc_list_selector_holo_dark
androidx.camera.core.impl.utils.Optional: androidx.camera.core.impl.utils.Optional fromNullable(java.lang.Object)
org.pytorch.torchvision.R$drawable: int notification_action_background
androidx.viewpager.R$attr: int ttcIndex
androidx.fragment.app.Fragment: void onDetach()
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_2
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_right_icon_size
androidx.recyclerview.widget.ItemTouchHelper
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_MOVED
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
androidx.appcompat.resources.R$id: int accessibility_custom_action_15
androidx.core.content.IntentCompat
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: NotificationCompat$DecoratedCustomViewStyle()
androidx.activity.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.legacy.v4.R$id: int cancel_action
org.pytorch.torchvision.R$style: int Base_AlertDialog_AppCompat_Light
androidx.appcompat.R$style: int Base_Widget_AppCompat_EditText
androidx.core.R$id: int accessibility_custom_action_27
androidx.core.app.ShareCompat$IntentReader: boolean isMultipleShare()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength[] values()
androidx.annotation.FloatRange: double from()
androidx.appcompat.widget.ToolbarWidgetWrapper: void saveHierarchyState(android.util.SparseArray)
androidx.camera.camera2.impl.CamcorderProfileHelper
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
org.pytorch.R$attr: int actionModeShareDrawable
androidx.vectordrawable.R$id: int blocking
androidx.collection.ArraySet: ArraySet()
androidx.appcompat.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
androidx.appcompat.app.WindowDecorActionBar: void setHideOffset(int)
androidx.recyclerview.R$dimen: int notification_small_icon_background_padding
androidx.media.MediaBrowserServiceCompat: int RESULT_ERROR
androidx.slidingpanelayout.R$dimen: int notification_media_narrow_margin
androidx.constraintlayout.solver.widgets.ResolutionAnchor: float getResolvedValue()
androidx.appcompat.app.AppCompatDelegate: void setTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$color: int bright_foreground_disabled_material_dark
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
com.downloader.Priority: com.downloader.Priority MEDIUM
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat)
com.downloader.R
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence)
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
androidx.vectordrawable.animated.R$layout: int notification_template_custom_big
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_check_material
androidx.constraintlayout.widget.ConstraintSet: void setGuidelineBegin(int,int)
androidx.core.view.ViewCompat: int LAYER_TYPE_SOFTWARE
io.github.prabhuomkar.pytorchandroid.R$styleable: int PopupWindow_overlapAnchor
io.github.prabhuomkar.pytorchandroid.R$id: int list_tasks
androidx.core.content.res.TypedArrayUtils: java.lang.String getString(android.content.res.TypedArray,int,int)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: int SESSION_REGULAR
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,int)
androidx.appcompat.R$dimen: int hint_pressed_alpha_material_light
androidx.camera.camera2.R$id: int accessibility_custom_action_1
androidx.appcompat.resources.R$id: int right_side
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.recyclerview.selection.Resettable: void reset()
androidx.media.R$attr: int fontProviderFetchTimeout
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)
androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)
org.pytorch.R$id: int submenuarrow
android.support.v4.media.MediaBrowserCompat$MediaItem: int getFlags()
androidx.activity.R$styleable: int ColorStateListItem_android_color
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Line2
io.github.prabhuomkar.pytorchandroid.R$attr: int listLayout
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_DELETE
android.support.v4.app.INotificationSideChannel$Stub
org.pytorch.R$attr: int titleMarginTop
org.pytorch.torchvision.R$attr: int layout_keyline
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState UNKNOWN
androidx.camera.core.R$id: int italic
androidx.core.view.GravityCompat: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)
androidx.appcompat.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
androidx.camera.core.FocusMeteringAction: void notifyAutoFocusCompleted(boolean)
androidx.camera.core.CameraX: void init(android.content.Context,androidx.camera.core.AppConfig)
androidx.recyclerview.selection.SelectionTracker: androidx.recyclerview.selection.Selection getSelection()
org.pytorch.R$styleable: int[] Spinner
org.pytorch.torchvision.R$attr: int displayOptions
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintGuide_percent
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
androidx.camera.camera2.R$attr: int fontProviderPackage
org.pytorch.torchvision.R$styleable: int TextAppearance_android_fontFamily
org.pytorch.R$styleable: int LinearLayoutCompat_android_gravity
androidx.core.graphics.drawable.TintAwareDrawable: void setTint(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View)
androidx.core.view.MenuItemCompat: boolean isActionViewExpanded(android.view.MenuItem)
androidx.legacy.v4.R$dimen: int compat_notification_large_icon_max_width
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)
androidx.core.view.TintableBackgroundView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
androidx.appcompat.widget.SearchView: boolean isQueryRefinementEnabled()
org.pytorch.R$id: int content
androidx.fragment.app.DialogFragment: android.app.Dialog getDialog()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT
okhttp3.ResponseBody: java.io.InputStream byteStream()
androidx.constraintlayout.solver.Metrics: long centerConnectionResolved
org.pytorch.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int LEFT
androidx.camera.camera2.R$styleable
androidx.appcompat.R$color: int background_floating_material_dark
androidx.core.text.PrecomputedTextCompat$Params
androidx.core.view.MotionEventCompat: int AXIS_WHEEL
androidx.media.AudioAttributesCompat: java.lang.Object unwrap()
androidx.fragment.R$integer
org.pytorch.torchvision.R$drawable: int abc_btn_default_mtrl_shape
androidx.core.view.ViewCompat: float getAlpha(android.view.View)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_startX
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toBottomOf
androidx.constraintlayout.solver.widgets.Guideline: int getOrientation()
androidx.loader.R$dimen: int notification_top_pad
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setCollectionItemInfo(java.lang.Object)
androidx.fragment.app.ListFragment: android.widget.ListView getListView()
okhttp3.Call: boolean isExecuted()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.CharSequence getName()
androidx.loader.content.CursorLoader: java.lang.String getSelection()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeDetachedView(android.view.View)
androidx.loader.R$drawable: int notification_bg_normal
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.legacy.coreutils.R$styleable: int GradientColorItem_android_color
org.pytorch.torchvision.R$styleable: int MenuItem_alphabeticModifiers
androidx.exifinterface.media.ExifInterface: double getAttributeDouble(java.lang.String,double)
androidx.constraintlayout.widget.Placeholder: Placeholder(android.content.Context,android.util.AttributeSet,int)
okhttp3.MultipartBody$Part: okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody)
okhttp3.HttpUrl: java.net.URL url()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
org.pytorch.R$styleable: int GradientColor_android_centerX
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarSize
androidx.vectordrawable.animated.R$styleable: int[] GradientColorItem
androidx.fragment.R$drawable: int notification_tile_bg
androidx.core.app.AppComponentFactory: AppComponentFactory()
org.pytorch.R$layout: int abc_action_mode_close_item_material
androidx.recyclerview.widget.ItemTouchHelper$Callback: androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil()
androidx.annotation.StringRes
androidx.appcompat.app.ActionBar: int DISPLAY_HOME_AS_UP
androidx.swiperefreshlayout.R$styleable: int[] FontFamily
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableLeftCompat
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PAGE
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Object removeAllShortcuts()
androidx.slidingpanelayout.R$color: int notification_action_color_filter
androidx.appcompat.R$styleable: int AppCompatTheme_dialogCornerRadius
androidx.loader.content.Loader
androidx.vectordrawable.R$dimen: int compat_button_inset_vertical_material
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Info
okhttp3.Headers: java.lang.String value(int)
androidx.activity.R$id: int accessibility_custom_action_14
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper: void checkPermissions(androidx.appcompat.app.AppCompatActivity,int,java.lang.String[],int[])
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
okhttp3.internal.NamedRunnable
androidx.customview.R$drawable: int notification_bg_normal
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
okhttp3.internal.NamedRunnable: NamedRunnable(java.lang.String,java.lang.Object[])
org.pytorch.torchvision.R$styleable: int SwitchCompat_android_textOff
org.pytorch.torchvision.R$attr: int subtitleTextStyle
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError ENCODER_ERROR
androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState: androidx.camera.core.impl.utils.executor.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
androidx.appcompat.widget.ButtonBarLayout
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_keylines
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
androidx.customview.R$styleable: int GradientColor_android_centerX
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
androidx.lifecycle.LifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[])
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int left
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar
androidx.core.widget.AutoSizeableTextView: int getAutoSizeMaxTextSize()
androidx.core.app.RemoteInput: int SOURCE_FREE_FORM_INPUT
com.squareup.picasso.Picasso$Builder
org.pytorch.torchvision.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.camera.core.CameraControl: void startFocusAndMetering(androidx.camera.core.FocusMeteringAction)
androidx.collection.CircularArray: java.lang.Object popFirst()
androidx.camera.core.CameraDeviceSurfaceManager: java.util.Map getSuggestedResolutions(java.lang.String,java.util.List,java.util.List)
okhttp3.Interceptor$Chain: okhttp3.Connection connection()
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
androidx.media.R$dimen: int compat_button_padding_vertical_material
androidx.coordinatorlayout.R$layout: int notification_template_icon_group
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimension(int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_3DES_EDE_CBC_SHA
okhttp3.internal.Version: java.lang.String userAgent()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_LEFT_BORDER
io.github.prabhuomkar.pytorchandroid.R$color: int primary_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_menuCategory
androidx.arch.core.executor.TaskExecutor
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.fragment.app.FragmentController: androidx.collection.SimpleArrayMap retainLoaderNonConfig()
io.github.prabhuomkar.pytorchandroid.R$attr: int autoSizeStepGranularity
androidx.appcompat.widget.DecorToolbar: void setMenuPrepared()
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction build()
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.R$styleable: int MenuItem_android_checkable
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class)
androidx.recyclerview.widget.BatchingListUpdateCallback: void onMoved(int,int)
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: int hashCode()
androidx.camera.core.R$dimen: int compat_button_padding_horizontal_material
androidx.camera.core.ImageReaderProxy: int getWidth()
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
org.pytorch.torchvision.R$styleable: int MenuItem_tooltipText
androidx.core.view.inputmethod.EditorInfoCompat: int IME_FLAG_NO_PERSONALIZED_LEARNING
androidx.appcompat.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.recyclerview.selection.SelectionTracker: boolean isSelected(java.lang.Object)
org.pytorch.R$style: int TextAppearance_AppCompat_Display3
io.github.prabhuomkar.pytorchandroid.ui.adapters.RecyclerViewClickListener: void onClick(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,int)
org.pytorch.R$styleable: int FontFamilyFont_fontStyle
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_hideOnContentScroll
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_ARCHIVE
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_submitBackground
okhttp3.internal.platform.Platform: java.lang.Object getStackTraceForCloseable(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.view.ViewGroupCompat
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentHeight
androidx.swiperefreshlayout.R$drawable: int notification_icon_background
org.pytorch.torchvision.R$attr: int fontVariationSettings
androidx.core.R$id: int accessibility_custom_action_17
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastMatchConstraintWidget()
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError valueOf(java.lang.String)
androidx.core.provider.SelfDestructiveThread$ReplyCallback: void onReply(java.lang.Object)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInsideConstraintLayout()
androidx.appcompat.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)
androidx.appcompat.R$attr: int contentInsetStartWithNavigation
androidx.camera.core.impl.utils.futures.Futures: void propagateTransform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,androidx.concurrent.futures.CallbackToFutureAdapter$Completer,java.util.concurrent.Executor)
androidx.versionedparcelable.VersionedParcelize: boolean isCustom()
android.support.v4.media.session.PlaybackStateCompat$Builder
androidx.fragment.R$id: int async
androidx.viewpager.R$id: int normal
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(int)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Subhead
org.pytorch.torchvision.R$dimen: int compat_button_inset_vertical_material
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.helpers.FragmentHelper: FragmentHelper()
androidx.loader.R$color: int notification_icon_bg_color
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
androidx.core.R$dimen: int compat_button_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.helpers.DataHelper: java.util.ArrayList getModelListForTask(java.lang.String)
org.pytorch.R$dimen: int abc_text_size_headline_material
androidx.appcompat.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.appcompat.widget.DecorContentParent: boolean showOverflowMenu()
androidx.core.view.ViewCompat: int LAYER_TYPE_NONE
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int)
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_behavior
io.github.prabhuomkar.pytorchandroid.R$string: int status_bar_notification_info_overflow
androidx.legacy.v4.R$id: int notification_main_column
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
org.pytorch.torchvision.TensorImageUtils: org.pytorch.Tensor imageYUV420CenterCropToFloat32Tensor(android.media.Image,int,int,int,float[],float[])
androidx.fragment.R$dimen: int notification_big_circle_margin
com.downloader.request.DownloadRequestBuilder: com.downloader.request.DownloadRequest build()
androidx.constraintlayout.solver.widgets.ChainHead: int mWidgetsMatchCount
androidx.recyclerview.widget.ListAdapter
androidx.appcompat.widget.ShareActionProvider: ShareActionProvider(android.content.Context)
androidx.appcompat.view.menu.MenuPopupHelper: void show(int,int)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri)
androidx.loader.content.CursorLoader: void setSelectionArgs(java.lang.String[])
androidx.appcompat.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
androidx.camera.core.ImageCapture$Metadata: android.location.Location location
androidx.exifinterface.media.ExifInterface: short FLAG_FLASH_MODE_COMPULSORY_FIRING
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_progressBarPadding
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.loader.content.CursorLoader: void onCanceled(android.database.Cursor)
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_font
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V21_Theme_AppCompat_Light
androidx.appcompat.resources.R$id: int notification_main_column_container
androidx.appcompat.R$bool: int abc_config_actionMenuItemAllCaps
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SEEK_TO
androidx.collection.LongSparseArray: boolean containsValue(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.activity.ComponentActivity: void onBackPressed()
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder)
okhttp3.internal.http.HttpDate: long MAX_DATE
org.pytorch.R$drawable: int abc_textfield_activated_mtrl_alpha
okhttp3.Response: boolean isSuccessful()
androidx.media.MediaBrowserServiceCompat$Result
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
androidx.core.view.ScrollingView
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
androidx.appcompat.widget.ViewUtils
org.pytorch.R$id: int image
org.pytorch.torchvision.R$styleable: int SearchView_queryHint
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream)
androidx.appcompat.resources.R$id: int accessibility_custom_action_28
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setContainerItemSkip(int)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$layout: int fragment_home
androidx.core.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)
org.pytorch.torchvision.R$dimen: int abc_text_size_menu_header_material
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_PROVIDER_NOT_FOUND
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
org.pytorch.R$styleable: int DrawerArrowToggle_drawableSize
androidx.media.app.NotificationCompat$MediaStyle: android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification)
org.pytorch.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
androidx.viewpager.widget.PagerAdapter: void destroyItem(android.view.View,int,java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int dodgeInsetEdges
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
androidx.appcompat.resources.R$attr: int ttcIndex
org.pytorch.torchvision.R$styleable: int PopupWindow_android_popupAnimationStyle
org.pytorch.R$attr: int ratingBarStyle
androidx.core.R$dimen: int compat_control_corner_material
androidx.legacy.coreutils.R$styleable: int GradientColor_android_endX
androidx.exifinterface.media.ExifInterface: short RESOLUTION_UNIT_INCHES
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.recyclerview.widget.DividerItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.app.AlarmManagerCompat: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
org.pytorch.torchvision.R$attr: int listPreferredItemHeightLarge
org.pytorch.torchvision.R$styleable: int SearchView_voiceIcon
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode valueOf(java.lang.String)
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
io.github.prabhuomkar.pytorchandroid.R$attr: int dialogTheme
androidx.coordinatorlayout.R$drawable: int notification_bg_normal
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.customview.widget.ViewDragHelper$Callback: ViewDragHelper$Callback()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
androidx.appcompat.app.ActionBar: void setSubtitle(java.lang.CharSequence)
androidx.camera.core.ImageOutputConfig: java.util.List getSupportedResolutions(java.util.List)
okhttp3.Address: Address(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector)
org.pytorch.R$dimen: int abc_text_size_body_1_material
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER_X
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_STANDARD_LIGHT_C
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAX_APERTURE_VALUE
androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)
androidx.appcompat.resources.R$styleable
io.github.prabhuomkar.pytorchandroid.R$attr: int showAsAction
okhttp3.Response$Builder: okhttp3.Response$Builder priorResponse(okhttp3.Response)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_goneMarginTop
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_9
org.pytorch.R$drawable: int abc_btn_colored_material
androidx.core.internal.view.SupportMenuItem: android.view.View getActionView()
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder setResourceId(int)
androidx.appcompat.R$attr: int contentDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
androidx.asynclayoutinflater.R$drawable: int notification_bg_normal
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetResolution(android.util.Size)
androidx.appcompat.resources.R$style: int Widget_Compat_NotificationActionText
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
androidx.core.R$dimen: int compat_button_padding_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$id: int expand_activities_button
androidx.appcompat.R$dimen: int tooltip_horizontal_padding
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: void onError(java.lang.String,android.os.Bundle)
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_android_orientation
androidx.coordinatorlayout.R$dimen: int notification_subtext_size
org.pytorch.R$style: int TextAppearance_AppCompat_Title
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String)
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
org.pytorch.R$styleable: int AppCompatTheme_actionBarWidgetTheme
androidx.appcompat.widget.SearchView: boolean isIconified()
io.github.prabhuomkar.pytorchandroid.R$color: int material_deep_teal_200
org.pytorch.Tensor: long numel(long[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: void addEdge(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
android.support.v4.media.MediaMetadataCompat$BitmapKey
android.support.v4.media.MediaDescriptionCompat: java.lang.String EXTRA_BT_FOLDER_TYPE
androidx.appcompat.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_ratingBarStyleSmall
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingLeft()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setGapStrategy(int)
androidx.loader.content.Loader: void deliverResult(java.lang.Object)
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: void onResult(java.lang.String,android.os.Bundle,android.os.Bundle)
androidx.media.MediaBrowserServiceCompat: void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: java.lang.String toString()
androidx.appcompat.R$layout: int abc_alert_dialog_title_material
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setGravity(int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.appcompat.R$style: int Base_V26_Theme_AppCompat_Light
org.pytorch.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.versionedparcelable.VersionedParcel: void writeDouble(double)
androidx.core.R$id: int icon
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)
okhttp3.Route: int hashCode()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.legacy.coreui.R$dimen: int notification_big_circle_margin
okhttp3.CacheControl: okhttp3.CacheControl FORCE_CACHE
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews)
org.pytorch.torchvision.R$color: int button_material_dark
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
androidx.appcompat.app.ActionBar$DisplayOptions
okhttp3.internal.http2.StreamResetException: okhttp3.internal.http2.ErrorCode errorCode
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
org.pytorch.R$styleable: int ViewBackgroundHelper_backgroundTintMode
org.pytorch.R$id: int action_container
androidx.core.R$styleable: int FontFamilyFont_android_font
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String TASK_IMAGE_CLASSIFICATION
androidx.camera.camera2.Camera2Config$Builder: androidx.camera.camera2.Camera2Config$Builder insertAllOptions(androidx.camera.core.Config)
org.pytorch.R$styleable: int MenuItem_tooltipText
androidx.camera.core.UseCase$EventListener: void onBind(java.lang.String)
androidx.appcompat.R$dimen: int abc_text_size_display_1_material
androidx.camera.core.AspectRatio
androidx.camera.core.CameraCaptureMetaData$AeState: androidx.camera.core.CameraCaptureMetaData$AeState UNKNOWN
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_BOTTOM
androidx.loader.R$dimen: int notification_subtext_size
androidx.core.view.NestedScrollingChild: boolean startNestedScroll(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
okhttp3.internal.Util: java.util.List immutableList(java.util.List)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RECOMMENDED_EXPOSURE_INDEX
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.R$attr: int controlBackground
androidx.viewpager.R$dimen: int notification_large_icon_width
androidx.lifecycle.LiveData: LiveData(java.lang.Object)
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Info
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanIndex(int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.core.view.PointerIconCompat
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_SearchView
com.google.auto.value.AutoValue$CopyAnnotations
android.support.v4.media.MediaBrowserCompat: void getItem(java.lang.String,android.support.v4.media.MediaBrowserCompat$ItemCallback)
androidx.appcompat.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.resources.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
android.support.v4.media.session.PlaybackStateCompat: float getPlaybackSpeed()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
org.pytorch.R$dimen: int abc_text_size_subtitle_material_toolbar
org.pytorch.R$styleable: int AppCompatTheme_colorError
androidx.savedstate.SavedStateRegistry$SavedStateProvider: android.os.Bundle saveState()
org.pytorch.R$id: int action_context_bar
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getColumnsAlignmentRepresentation()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.drawerlayout.widget.DrawerLayout: void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
androidx.camera.core.DeviceProperties: java.lang.String manufacturer()
org.pytorch.R$id: int scrollView
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.legacy.v4.R$styleable: int GradientColor_android_startY
androidx.core.content.pm.ShortcutManagerCompat: java.util.List getDynamicShortcuts(android.content.Context)
androidx.fragment.R$attr: int fontProviderAuthority
androidx.core.view.ViewCompat: int getPaddingEnd(android.view.View)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder host(java.lang.String)
org.pytorch.torchvision.R$id: int action_divider
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderQuery
io.github.prabhuomkar.pytorchandroid.R$styleable: int CompoundButton_buttonTint
com.downloader.PRDownloaderConfig: void setDatabaseEnabled(boolean)
androidx.customview.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.camera.core.DeferrableSurfaces: java.util.List surfaceList(java.util.Collection,boolean)
androidx.asynclayoutinflater.R$style
androidx.constraintlayout.solver.widgets.ChainHead: void define()
androidx.collection.LongSparseArray: java.lang.Object replace(long,java.lang.Object)
androidx.appcompat.app.ActionBar$Tab: android.view.View getCustomView()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setPadding(int)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
androidx.recyclerview.R$id: int notification_main_column_container
androidx.constraintlayout.solver.widgets.ConstraintWidget: int GONE
androidx.core.view.PointerIconCompat: int TYPE_WAIT
androidx.camera.core.PreviewConfig: androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing)
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: ModelListAdapter(java.util.List)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_bias
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintTop_toBottomOf
androidx.core.view.InputDeviceCompat: int SOURCE_KEYBOARD
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
org.pytorch.R$attr: int contentInsetEndWithActions
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReplyPendingIntent()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginRight
org.pytorch.R$drawable: int abc_btn_switch_to_on_mtrl_00001
androidx.appcompat.app.WindowDecorActionBar: void setTitle(int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setGoneMargin(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintLeft_creator
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepareFromMediaId(java.lang.String,android.os.Bundle)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_16
androidx.core.widget.AutoSizeableTextView: int getAutoSizeTextType()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_JOYSTICK
androidx.core.app.AppOpsManagerCompat: int MODE_DEFAULT
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
androidx.constraintlayout.widget.R$attr: int layout_constraintStart_toStartOf
org.pytorch.IValue: org.pytorch.IValue from(org.pytorch.Tensor)
androidx.print.PrintHelper
androidx.core.widget.TintableCompoundButton: android.content.res.ColorStateList getSupportButtonTintList()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_maxButtonHeight
androidx.recyclerview.R$attr: int fontProviderQuery
android.support.v4.media.MediaDescriptionCompat: java.lang.String DESCRIPTION_KEY_NULL_BUNDLE_FLAG
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_CompoundButton_RadioButton
androidx.camera.core.ImageCaptureConfig: android.util.Size getDefaultResolution(android.util.Size)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_listItemLayout
androidx.core.text.BidiFormatter: boolean getStereoReset()
okhttp3.Address: okhttp3.Authenticator proxyAuthenticator()
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry
org.pytorch.torchvision.R$id: int search_bar
androidx.viewpager.R$drawable: int notification_template_icon_low_bg
androidx.core.view.MotionEventCompat: int getButtonState(android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$attr: int tooltipFrameBackground
androidx.constraintlayout.widget.ConstraintSet: int UNSET
androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)
org.pytorch.R$styleable: int Toolbar_logo
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
org.pytorch.torchvision.R$dimen: int abc_seekbar_track_background_height_material
androidx.media.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_max
androidx.camera.core.ImageCaptureConfig: int getMaxCaptureStages(int)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setDefaultResolution(android.util.Size)
androidx.cardview.R$style: int CardView_Light
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)
androidx.recyclerview.widget.RecyclerView$State: boolean hasTargetScrollPosition()
okio.ForwardingSource: okio.Source delegate()
androidx.core.location.LocationManagerCompat
androidx.core.R$styleable: int GradientColor_android_type
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean closePane()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.exifinterface.media.ExifInterface: short ALTITUDE_BELOW_SEA_LEVEL
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setMipMap(boolean)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
androidx.constraintlayout.solver.SolverVariable$Type
androidx.camera.core.R$dimen: int notification_action_text_size
androidx.collection.LruCache: void resize(int)
org.pytorch.torchvision.R$styleable: int GradientColor_android_startColor
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews getContentView()
com.downloader.database.DownloadModel: long getTotalBytes()
androidx.camera.core.MeteringPointFactory: androidx.camera.core.MeteringPoint createPoint(float,float)
androidx.core.app.Person$Builder
androidx.appcompat.R$id: int tag_accessibility_clickable_spans
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.recyclerview.R$dimen: int fastscroll_default_thickness
android.support.v4.media.session.IMediaSession: void setCaptioningEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
org.pytorch.torchvision.R$styleable: int[] FontFamilyFont
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
org.pytorch.R$id: int title
androidx.constraintlayout.widget.Guideline: Guideline(android.content.Context,android.util.AttributeSet)
org.pytorch.R$styleable: int PopupWindow_overlapAnchor
org.pytorch.R$id: int progress_circular
androidx.appcompat.widget.SwitchCompat: boolean getShowText()
androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Spinner_popupTheme
com.squareup.picasso.Downloader
org.pytorch.R$id: int text
androidx.vectordrawable.R$styleable: int ColorStateListItem_android_alpha
androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
androidx.appcompat.widget.SwitchCompat: void drawableStateChanged()
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable
androidx.slidingpanelayout.R$color
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listDividerAlertDialog
androidx.constraintlayout.solver.widgets.Snapshot
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
androidx.recyclerview.R$styleable: int FontFamilyFont_font
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setShowWhen(boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasEmbeddedTabs()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_backgroundSplit
androidx.appcompat.widget.AbsActionBarView: void dismissPopupMenus()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.downloader.internal.DownloadRequestQueue: void resume(int)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_centerColor
androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.appcompat.R$color: int error_color_material_dark
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionBar_TabBar
com.downloader.PRDownloader: void cancel(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemPaddingLeft
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setCaptureProcessor(androidx.camera.core.CaptureProcessor)
androidx.camera.camera2.impl.Camera2Initializer: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
androidx.collection.LruCache: int putCount()
androidx.core.view.ViewCompat: void setRotation(android.view.View,float)
com.downloader.database.NoOpsDbHelper
androidx.legacy.v4.R$styleable: int GradientColor_android_endX
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_Light
androidx.exifinterface.media.ExifInterface: double getAltitude(double)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.lifecycle.ViewModelStore: void clear()
androidx.constraintlayout.widget.Constraints: Constraints(android.content.Context,android.util.AttributeSet,int)
org.pytorch.R$dimen: int abc_text_size_button_material
androidx.legacy.v4.R$drawable: int notify_panel_notification_icon_bg
android.support.v4.media.session.MediaControllerCompat$Callback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
androidx.media.R$color
androidx.appcompat.R$styleable: int ActionBar_contentInsetEndWithActions
org.pytorch.torchvision.R$attr: int queryHint
androidx.appcompat.R$color: int abc_primary_text_disable_only_material_dark
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_BARRIER
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
org.pytorch.torchvision.R$drawable: int abc_ic_star_black_16dp
org.pytorch.torchvision.R$style: int Platform_ThemeOverlay_AppCompat_Light
org.pytorch.torchvision.R$color: int bright_foreground_inverse_material_dark
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLBACK_TOKEN
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
androidx.fragment.app.FragmentController: void dispatchDestroyView()
androidx.recyclerview.selection.SelectionPredicates: androidx.recyclerview.selection.SelectionTracker$SelectionPredicate createSelectAnything()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType[] values()
androidx.coordinatorlayout.R$dimen: int notification_top_pad_large_text
androidx.core.view.NestedScrollingChild2: boolean startNestedScroll(int,int)
androidx.appcompat.R$attr: int listChoiceIndicatorMultipleAnimated
io.github.prabhuomkar.pytorchandroid.R$attr: int autoSizeMinTextSize
org.pytorch.torchvision.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float verticalWeight
androidx.exifinterface.media.ExifInterface: short SHARPNESS_HARD
androidx.fragment.R$styleable: int[] GradientColor
androidx.lifecycle.LiveData
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_SHUTTER_PRIORITY
androidx.annotation.Size
androidx.core.view.accessibility.AccessibilityEventCompat
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
org.pytorch.R$style: int Widget_AppCompat_ListView
androidx.core.view.ViewCompat: int OVER_SCROLL_IF_CONTENT_SCROLLS
org.pytorch.R$bool: int abc_allow_stacked_button_bar
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.activity.R$layout: int notification_action
okhttp3.MultipartBody$Part: okhttp3.Headers headers()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
androidx.appcompat.R$layout: int abc_action_menu_item_layout
androidx.camera.core.ImageSaver$OnImageSavedListener: void onImageSaved(java.io.File)
androidx.camera.camera2.Camera2Config$Builder: Camera2Config$Builder()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
org.pytorch.R$attr: int trackTintMode
org.pytorch.torchvision.R$attr: int commitIcon
androidx.legacy.coreutils.R$dimen: int notification_media_narrow_margin
androidx.loader.R$styleable: int[] ColorStateListItem
androidx.activity.R$styleable: int GradientColor_android_endX
androidx.camera.core.SessionConfig$ValidatingBuilder: void add(androidx.camera.core.SessionConfig)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.recyclerview.R
androidx.appcompat.R$color: int primary_material_dark
androidx.media.R$styleable: int ColorStateListItem_alpha
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor getTarget()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.constraintlayout.widget.ConstraintSet: void setVisibility(int,int)
androidx.appcompat.widget.SwitchCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.coordinatorlayout.R$attr: int layout_keyline
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.core.provider.FontsContractCompat$FontRequestCallback: void onTypefaceRequestFailed(int)
org.pytorch.torchvision.R$attr: int font
androidx.loader.R$color: int notification_action_color_filter
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)
androidx.appcompat.widget.DecorToolbar: java.lang.CharSequence getTitle()
androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$dimen: int compat_notification_large_icon_max_width
okhttp3.Response: boolean isRedirect()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)
androidx.asynclayoutinflater.R$layout: int notification_template_part_chronometer
androidx.viewpager.R$styleable: int FontFamily_fontProviderFetchStrategy
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
org.pytorch.torchvision.R$dimen: int abc_text_size_display_1_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.String pendingToString()
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper
androidx.core.view.MenuItemCompat: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener)
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setOpposite(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
androidx.legacy.coreui.R$styleable: int GradientColor_android_centerY
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_focused_holo
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode CANCEL
androidx.appcompat.R$id: int submenuarrow
androidx.vectordrawable.animated.R$dimen: int notification_right_side_padding_top
androidx.viewpager.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.loader.R$string: int status_bar_notification_info_overflow
androidx.slidingpanelayout.R$dimen: int compat_button_padding_horizontal_material
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize ANALYSIS
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.vectordrawable.animated.R$id: int right_icon
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_contentPaddingRight
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constrainedHeight
androidx.core.graphics.PathSegment: java.lang.String toString()
android.support.v4.media.session.MediaSessionCompat$Callback: void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat,int)
org.pytorch.R$attr: int backgroundTint
androidx.fragment.R$attr: int fontVariationSettings
androidx.fragment.app.FragmentFactory
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
androidx.fragment.app.Fragment: android.content.Context getContext()
androidx.camera.core.SurfaceSizeDefinition: android.util.Size getRecordSize()
androidx.appcompat.view.menu.SubMenuBuilder
android.support.v4.media.MediaMetadataCompat: android.graphics.Bitmap getBitmap(java.lang.String)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.camera.core.impl.utils.futures.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.FutureCallback,java.util.concurrent.Executor)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Large
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_RatingBar
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D55
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
androidx.vectordrawable.animated.R$attr: int fontProviderCerts
okhttp3.Cookie: java.lang.String path()
androidx.core.view.NestedScrollingChildHelper: void onDetachedFromWindow()
androidx.appcompat.R$styleable: int AppCompatTheme_controlBackground
androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)
androidx.core.view.DisplayCutoutCompat
androidx.slidingpanelayout.R$dimen: int notification_small_icon_background_padding
androidx.vectordrawable.R$attr: int fontStyle
org.pytorch.torchvision.R$color: int material_deep_teal_200
androidx.camera.camera2.impl.CameraEventCallback: CameraEventCallback()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_seekbar_tick_mark_material
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderAuthority
com.downloader.database.NoOpsDbHelper: com.downloader.database.DownloadModel find(int)
androidx.legacy.coreui.R$drawable
androidx.appcompat.widget.ScrollingTabContainerView
androidx.annotation.RequiresPermission
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Display4
androidx.cardview.R$attr: int cardBackgroundColor
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
androidx.media.AudioAttributesCompat: int getUsage()
androidx.collection.LruCache: int missCount()
androidx.recyclerview.R$id: int accessibility_custom_action_15
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI_AND_ISO
androidx.appcompat.R$id: int radio
okhttp3.MultipartBody: okhttp3.MediaType DIGEST
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalWeight(float)
org.pytorch.torchvision.R$attr: int actionButtonStyle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
androidx.lifecycle.ViewModelProvider$Factory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noCache()
org.pytorch.R$styleable: int[] CoordinatorLayout_Layout
androidx.camera.core.SessionConfig$Builder: void addNonRepeatingSurface(androidx.camera.core.DeferrableSurface)
org.pytorch.R$styleable: int FontFamily_fontProviderQuery
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.camera.core.VideoCapture$OnVideoSavedListener
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
okhttp3.MultipartBody: okhttp3.MediaType ALTERNATIVE
android.support.v4.media.session.MediaControllerCompat$TransportControls: void skipToNext()
androidx.appcompat.app.AppCompatDelegate: void onCreate(android.os.Bundle)
androidx.legacy.coreutils.R$id: int async
androidx.recyclerview.widget.RecyclerView$RecyclerListener
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.selection.DefaultSelectionTracker: DefaultSelectionTracker(java.lang.String,androidx.recyclerview.selection.ItemKeyProvider,androidx.recyclerview.selection.SelectionTracker$SelectionPredicate,androidx.recyclerview.selection.StorageStrategy)
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.activity.OnBackPressedDispatcherOwner: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
okhttp3.OkHttpClient: okhttp3.Authenticator proxyAuthenticator()
org.pytorch.R$drawable: int abc_list_selector_disabled_holo_light
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.squareup.picasso.RequestHandler$Result: android.graphics.Bitmap getBitmap()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLICK
androidx.recyclerview.widget.ItemTouchHelper: ItemTouchHelper(androidx.recyclerview.widget.ItemTouchHelper$Callback)
androidx.fragment.app.FragmentTabHost: void onDetachedFromWindow()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ListView_Menu
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_MEDIA_BUTTONS
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.customview.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.R$attr: int paddingTopNoTitle
org.pytorch.torchvision.R$attr: int actionModePopupWindowStyle
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Headline
org.pytorch.R$id: int forever
androidx.core.internal.view.SupportMenuItem: int getNumericModifiers()
androidx.core.content.pm.ShortcutManagerCompat
okio.Buffer$UnsafeCursor: long expandBuffer(int)
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getArrowHeadLength()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void setSpanIndexCacheEnabled(boolean)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.asynclayoutinflater.R$drawable
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearancePopupMenuHeader
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
org.pytorch.torchvision.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.appcompat.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewStubCompat_android_inflatedId
okhttp3.internal.http.HttpHeaders: java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
androidx.drawerlayout.R$color: int secondary_text_default_material_light
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.appcompat.resources.R$id: int tag_accessibility_pane_title
androidx.loader.R$dimen: int compat_notification_large_icon_max_height
org.pytorch.R$attr: int tickMark
org.pytorch.R$styleable: int MenuItem_iconTint
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle
okio.BufferedSink: okio.BufferedSink write(byte[],int,int)
androidx.drawerlayout.widget.DrawerLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
androidx.recyclerview.widget.OrientationHelper: int getEndPadding()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void solveGraph()
com.downloader.request.DownloadRequest: java.lang.Object getTag()
io.github.prabhuomkar.pytorchandroid.R$attr: int subtitleTextAppearance
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_BT_FOLDER_TYPE
androidx.drawerlayout.R$dimen: int notification_subtext_size
okhttp3.internal.tls.BasicTrustRootIndex: int hashCode()
androidx.camera.core.CameraControlInternal: void triggerAePrecapture()
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
android.support.v4.media.session.IMediaControllerCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getInternalDrawRight()
org.pytorch.torchvision.R$id: int textSpacerNoTitle
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowPending()
org.pytorch.R$color: int button_material_light
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerStateChanged(int)
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.appcompat.R$style: int Base_Widget_AppCompat_ListMenuView
androidx.core.graphics.drawable.WrappedDrawable
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void hideForSystem()
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRemoved(int)
androidx.fragment.app.FragmentActivity: void onStart()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
android.support.v4.os.ResultReceiver: int describeContents()
androidx.viewpager.R$layout: int notification_template_icon_group
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
org.pytorch.R$color: int bright_foreground_material_dark
io.github.prabhuomkar.pytorchandroid.R$attr: int firstBaselineToTopHeight
androidx.vectordrawable.R$id: int actions
okhttp3.internal.tls.OkHostnameVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
androidx.appcompat.view.menu.MenuPresenter
androidx.appcompat.graphics.drawable.DrawableWrapper
androidx.core.R$id: int action_divider
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_CAPTIONING_ENABLED
androidx.core.provider.SelfDestructiveThread: boolean isRunning()
androidx.recyclerview.R$styleable: int[] GradientColorItem
androidx.fragment.R$id: int accessibility_custom_action_11
androidx.camera.core.impl.LiveDataObservable: com.google.common.util.concurrent.ListenableFuture fetchData()
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.vectordrawable.R$id: int accessibility_custom_action_6
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_DRAG
com.downloader.request.DownloadRequest: void deliverError(com.downloader.Error)
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
okio.Sink: okio.Timeout timeout()
okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.models.Task: java.lang.String getImageLink()
org.pytorch.R$dimen
okhttp3.internal.connection.RouteSelector$Selection: okhttp3.Route next()
okio.ByteString: java.lang.String utf8()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void forceUpdateDrawPosition()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_CompoundButton_CheckBox
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.core.app.FrameMetricsAggregator: int SYNC_INDEX
io.github.prabhuomkar.pytorchandroid.R$id: int decor_content_parent
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
androidx.core.app.NotificationBuilderWithBuilderAccessor
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ResolutionDimension getResolutionHeight()
com.downloader.BuildConfig: boolean DEBUG
org.pytorch.R$styleable: int AppCompatImageView_android_src
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setMaxResolution(android.util.Size)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable)
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageScrollStateChanged(int)
androidx.appcompat.R$styleable: int AppCompatTheme_colorBackgroundFloating
androidx.appcompat.R$styleable: int[] TextAppearance
androidx.camera.camera2.impl.CameraEventCallbacks$ComboCameraEventCallback: java.util.List onRepeating()
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize NOT_SUPPORT
org.pytorch.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.camera.core.UseCase: void notifyInactive()
org.pytorch.R$color: int abc_secondary_text_material_dark
androidx.appcompat.R$attr: int tooltipText
okhttp3.Response: java.lang.String toString()
androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener: boolean onShareTargetSelected(androidx.appcompat.widget.ShareActionProvider,android.content.Intent)
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService)
org.pytorch.R$styleable: int[] AppCompatImageView
androidx.media.R$style: int TextAppearance_Compat_Notification
org.pytorch.Tensor: double[] getDataAsDoubleArray()
org.pytorch.R$color: int material_grey_850
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder: android.support.v4.media.session.PlaybackStateCompat$CustomAction build()
org.pytorch.R$style: int ThemeOverlay_AppCompat_Dialog
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
androidx.appcompat.resources.R$styleable: int GradientColor_android_gradientRadius
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_font
com.squareup.picasso.StatsSnapshot: long totalTransformedBitmapSize
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_anchor
androidx.core.view.ViewPropertyAnimatorUpdateListener
androidx.collection.SparseArrayCompat: void removeAt(int)
io.github.prabhuomkar.pytorchandroid.R$id: int message
androidx.appcompat.view.menu.ShowableListMenu: void show()
com.squareup.picasso.R
androidx.appcompat.R$styleable: int SearchView_android_inputType
androidx.appcompat.resources.R$styleable: int GradientColor_android_tileMode
org.pytorch.R$attr: int theme
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_drawableSize
androidx.coordinatorlayout.R$dimen: int notification_small_icon_size_as_large
org.pytorch.torchvision.R$dimen: int abc_action_bar_overflow_padding_end_material
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_bias
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int DEFAULT
com.downloader.OnDownloadListener: void onDownloadComplete()
androidx.legacy.app.ActionBarDrawerToggle: boolean isDrawerIndicatorEnabled()
androidx.core.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)
androidx.activity.R$id: int accessibility_custom_action_8
android.support.v4.media.session.MediaControllerCompat$TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
androidx.recyclerview.widget.DiffUtil$DiffResult: int NO_POSITION
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setVerticalGrowth(boolean)
org.pytorch.torchvision.R$attr: int textAppearanceListItemSmall
org.pytorch.R$styleable: int Spinner_android_entries
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.R$styleable: int Toolbar_titleMargins
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonTint
androidx.recyclerview.R$dimen: int compat_button_inset_horizontal_material
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_space_shortcut_label
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_LENS_MODEL
androidx.appcompat.view.ActionMode: boolean isUiFocusable()
androidx.core.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ResolutionAnchor getResolutionNode()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
android.support.v4.media.MediaBrowserCompat$MediaItem: int FLAG_PLAYABLE
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_android_gravity
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
io.github.prabhuomkar.pytorchandroid.R$dimen: int highlight_alpha_material_colored
org.pytorch.torchvision.R$styleable: int MenuItem_actionViewClass
androidx.camera.core.Preview$PreviewOutput
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.customview.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
org.pytorch.R$styleable: int AppCompatTextView_textAllCaps
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.content.FileProvider
org.pytorch.torchvision.R$attr: int tooltipForegroundColor
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Light_Dialog
okio.Pipe: okio.Sink sink()
androidx.customview.R$attr: int fontStyle
android.support.v4.media.session.MediaSessionCompat$Token: boolean equals(java.lang.Object)
org.pytorch.torchvision.R$drawable
io.github.prabhuomkar.pytorchandroid.R$color: int abc_btn_colored_borderless_text_material
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.recyclerview.widget.LinearLayoutManager$SavedState
androidx.core.view.ViewCompat: void jumpDrawablesToCurrentState(android.view.View)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getMoveDuration()
okio.BufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
androidx.vectordrawable.R$id: int text2
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getText()
androidx.viewpager.widget.ViewPager: void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_max
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.squareup.picasso.StatsSnapshot: long cacheHits
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
org.pytorch.torchvision.R$styleable: int ActionBar_backgroundSplit
androidx.exifinterface.media.ExifInterface: short SCENE_TYPE_DIRECTLY_PHOTOGRAPHED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
org.pytorch.torchvision.R$style: int Base_V22_Theme_AppCompat
androidx.fragment.app.FragmentTransitionImpl: void addTargets(java.lang.Object,java.util.ArrayList)
io.github.prabhuomkar.pytorchandroid.R$color: int colorPyTorch2
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
org.pytorch.R$styleable: int TextAppearance_android_textStyle
com.squareup.picasso.Request: boolean hasSize()
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
androidx.recyclerview.R$dimen: int fastscroll_minimum_range
androidx.camera.core.ImageReaderProxys: androidx.camera.core.ImageReaderProxy createSharedReader(java.lang.String,int,int,int,int,java.util.concurrent.Executor)
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_seekbar_track_background_height_material
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.legacy.widget.Space: Space(android.content.Context)
androidx.annotation.InspectableProperty$FlagEntry
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewBackgroundHelper_backgroundTint
org.pytorch.R$id: int search_button
org.pytorch.torchvision.R$styleable: int[] ActionMode
androidx.media.R$layout: int notification_template_custom_big
io.github.prabhuomkar.pytorchandroid.R$color: int button_material_dark
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$styleable: int SearchView_android_focusable
androidx.cardview.R$styleable: int CardView_contentPaddingTop
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()
com.squareup.picasso.Picasso: void cancelRequest(android.widget.ImageView)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarTabTextStyle
androidx.camera.core.R$id: int accessibility_custom_action_16
org.pytorch.torchvision.R$layout: int abc_screen_content_include
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaDescriptionCompat getDescription()
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_Y_RESOLUTION
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getHorizontalChainStyle()
androidx.core.os.OperationCanceledException: OperationCanceledException()
org.pytorch.torchvision.R$dimen: int compat_button_padding_vertical_material
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean)
androidx.appcompat.widget.Toolbar: boolean isTitleTruncated()
androidx.core.view.ViewCompat: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context)
androidx.vectordrawable.animated.R$drawable: int notification_tile_bg
org.pytorch.torchvision.R$styleable: int GradientColor_android_gradientRadius
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_SWIPE_ANIMATION_DURATION
androidx.drawerlayout.widget.DrawerLayout: void onDetachedFromWindow()
okhttp3.internal.http.RealInterceptorChain: okhttp3.Connection connection()
androidx.fragment.R$styleable: int GradientColor_android_startX
okhttp3.internal.cache.DiskLruCache: void delete()
org.pytorch.R$dimen: int abc_disabled_alpha_material_dark
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: java.lang.String dimensionRatio
androidx.appcompat.widget.ListPopupWindow: void setSoftInputMode(int)
androidx.exifinterface.media.ExifInterface: int DATA_UNCOMPRESSED
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setMaxResolution(android.util.Size)
android.support.v4.media.session.IMediaControllerCallback: void onSessionDestroyed()
androidx.camera.core.ImageAnalysisConfig: android.util.Size getDefaultResolution()
org.pytorch.torchvision.R$styleable: int StateListDrawableItem_android_drawable
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean isSlideable()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int FOCUS_ACCESSIBILITY
androidx.coordinatorlayout.R$id: int action_container
org.pytorch.R$dimen: int abc_text_size_menu_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEditable(boolean)
androidx.core.os.ParcelCompat
androidx.appcompat.R$id: int icon_group
androidx.camera.core.PreviewConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.appcompat.R$id: int tag_accessibility_heading
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_0
org.pytorch.torchvision.R$string: int app_name
androidx.camera.core.CameraX: android.content.Context getContext()
org.pytorch.R$attr: int fontProviderAuthority
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: int HOST_VIEW_ID
androidx.camera.core.ImageAnalysis$Analyzer: void analyze(androidx.camera.core.ImageProxy,int)
androidx.camera.core.VideoCaptureConfig: android.util.Size getMaxResolution(android.util.Size)
io.github.prabhuomkar.pytorchandroid.models.Model: java.lang.String getName()
androidx.camera.camera2.impl.ImageAnalysisConfigProvider
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_RELATIVE
io.github.prabhuomkar.pytorchandroid.R$attr: int dropDownListViewStyle
androidx.vectordrawable.R$id: int right_icon
org.pytorch.R$styleable: int CompoundButton_buttonTintMode
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_android_itemBackground
androidx.core.view.GravityCompat: int END
androidx.versionedparcelable.VersionedParcel: void closeField()
androidx.camera.core.Preview: void setOnPreviewOutputUpdateListener(java.util.concurrent.Executor,androidx.camera.core.Preview$OnPreviewOutputUpdateListener)
androidx.camera.core.UseCase: androidx.camera.core.SessionConfig getSessionConfig(java.lang.String)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SATURATION
android.support.v4.media.session.MediaSessionCompat$SessionFlags
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback)
androidx.vectordrawable.R$id: int accessibility_custom_action_28
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float getPixelSize()
androidx.camera.core.VideoCaptureConfig: int getIFrameInterval(int)
org.pytorch.torchvision.R$dimen: int abc_text_size_small_material
org.pytorch.torchvision.R$dimen: int notification_right_icon_size
okio.BufferedSource: byte readByte()
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification
androidx.customview.R$styleable: int GradientColor_android_centerY
io.github.prabhuomkar.pytorchandroid.R$attr: int barLength
org.pytorch.R$styleable: int ActionMode_backgroundSplit
org.pytorch.torchvision.R$color: int abc_hint_foreground_material_light
org.pytorch.torchvision.R$styleable: int[] ViewStubCompat
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_MEASURE_MODE
androidx.core.content.res.FontResourcesParserCompat$FetchStrategy
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_BATTERY
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintBaseline_toBaselineOf
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString()
androidx.fragment.app.FragmentManager$BackStackEntry: int getId()
androidx.recyclerview.R$styleable: int FontFamilyFont_android_font
androidx.core.view.ViewCompat: boolean hasAccessibilityDelegate(android.view.View)
com.downloader.request.DownloadRequest
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_minWidth
androidx.appcompat.view.menu.MenuAdapter: int getCount()
androidx.viewpager.R$styleable: int GradientColor_android_startColor
org.pytorch.torchvision.R$styleable: int GradientColor_android_centerY
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintTop_toTopOf
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textSize
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_MD5
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_MALFORMED_QUERY
androidx.appcompat.resources.R$attr: int font
okhttp3.Request$Builder: okhttp3.Request$Builder head()
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)
org.pytorch.torchvision.R$styleable: int StateListDrawable_android_variablePadding
org.pytorch.R$styleable: int MenuView_android_itemBackground
io.github.prabhuomkar.pytorchandroid.R$id: int notification_main_column
androidx.camera.core.impl.utils.Optional: java.lang.String toString()
androidx.coordinatorlayout.R$id: int tag_unhandled_key_event_manager
org.pytorch.R$drawable: int abc_ic_star_black_16dp
androidx.lifecycle.GenericLifecycleObserver
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.FlashMode getFlashMode(androidx.camera.core.FlashMode)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMinHeight()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
org.pytorch.R$style: int TextAppearance_AppCompat
androidx.camera.core.MeteringPointFactory: androidx.camera.core.MeteringPoint createPoint(float,float,float,float)
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
androidx.recyclerview.selection.OnItemActivatedListener
io.github.prabhuomkar.pytorchandroid.helpers.DataHelper
androidx.camera.core.SessionConfig: androidx.camera.core.CaptureConfig getRepeatingCaptureConfig()
org.pytorch.R$dimen: int abc_alert_dialog_button_dimen
androidx.recyclerview.R$id: int right_icon
org.pytorch.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
okhttp3.HttpUrl: java.lang.String host()
okio.Buffer: okio.ByteString sha512()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView: AutoFitTextureView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat: int PRIORITY_DEFAULT
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.squareup.picasso.LruCache: int missCount()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
org.pytorch.torchvision.R$color: int abc_background_cache_hint_selector_material_dark
okio.Buffer$UnsafeCursor: int end
androidx.appcompat.resources.R$color: int notification_action_color_filter
org.pytorch.R$styleable: int StateListDrawable_android_visible
androidx.recyclerview.widget.RecyclerView: void onChildAttachedToWindow(android.view.View)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setTargetAspectRatioCustom(android.util.Rational)
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_horizontal_padding
okhttp3.Challenge: boolean equals(java.lang.Object)
androidx.slidingpanelayout.R$id: int chronometer
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
org.pytorch.R$styleable: int AppCompatTheme_viewInflaterClass
androidx.appcompat.R$id: int up
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginEnd
okhttp3.internal.http1.Http1Codec: okio.Sink newFixedLengthSink(long)
com.downloader.internal.ComponentHolder: ComponentHolder()
androidx.camera.core.MutableOptionsBundle: java.lang.Object removeOption(androidx.camera.core.Config$Option)
androidx.exifinterface.media.ExifInterface: int WHITEBALANCE_AUTO
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Title
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
androidx.asynclayoutinflater.R$dimen: int notification_large_icon_height
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
okio.Buffer$UnsafeCursor: byte[] data
androidx.legacy.v4.R$dimen: int notification_large_icon_width
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLING_PID
okio.Buffer: java.io.InputStream inputStream()
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.graphics.Rect)
androidx.camera.core.PreviewConfig
androidx.appcompat.R$color: int material_blue_grey_800
androidx.appcompat.R$drawable: int abc_ic_clear_material
android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE
io.github.prabhuomkar.pytorchandroid.R$attr: int homeAsUpIndicator
androidx.documentfile.provider.DocumentFile: java.lang.String getName()
androidx.constraintlayout.widget.R$attr: int layout_constrainedHeight
androidx.legacy.coreutils.R$styleable: int GradientColor_android_gradientRadius
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int startToEnd
androidx.camera.core.R$id: int accessibility_custom_action_22
androidx.appcompat.R$style: int Platform_AppCompat
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_search_api_material
org.pytorch.torchvision.R$id: int uniform
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
android.support.v4.media.session.MediaControllerCompat: void removeQueueItemAt(int)
androidx.camera.core.SessionConfig$Builder: SessionConfig$Builder()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModePopupWindowStyle
androidx.core.text.PrecomputedTextCompat
androidx.camera.core.R$styleable: int GradientColor_android_startColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_maxHeight
androidx.core.util.PatternsCompat
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display1
org.pytorch.R$id: int wrap_content
androidx.core.app.NotificationCompat: java.lang.CharSequence getContentTitle(android.app.Notification)
androidx.fragment.R$dimen: int compat_button_inset_horizontal_material
androidx.appcompat.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int)
androidx.camera.core.R$dimen
org.pytorch.torchvision.R$styleable: int ActionBar_displayOptions
androidx.appcompat.R$id: int textSpacerNoTitle
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)
androidx.appcompat.R$attr: int windowFixedWidthMajor
okhttp3.internal.connection.RealConnection: boolean isHealthy(boolean)
androidx.core.app.NotificationCompat$Builder: android.app.Notification getNotification()
com.downloader.request.DownloadRequest: com.downloader.Priority getPriority()
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
androidx.camera.core.CameraCaptureMetaData$AfState
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder name(java.lang.String)
androidx.camera.core.FlashMode
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(int,int,int,int,int)
androidx.appcompat.R$id: int expanded_menu
androidx.vectordrawable.R$style: int TextAppearance_Compat_Notification_Line2
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target: Target()
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void stop()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.appcompat.R$attr: int alphabeticModifiers
androidx.fragment.R$id: int action_divider
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SUMMARY_TEXT
androidx.legacy.coreutils.R$layout
androidx.appcompat.resources.R$layout: int notification_action_tombstone
androidx.customview.widget.ViewDragHelper: boolean isEdgeTouched(int,int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_button_material
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode COMPRESSION_ERROR
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.camera.core.R$id: int tag_accessibility_heading
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
org.pytorch.torchvision.R$style: int Base_V7_Widget_AppCompat_EditText
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CameraX$LensFacing getLensFacing()
io.github.prabhuomkar.pytorchandroid.R$id: int dimensions
okhttp3.internal.ws.RealWebSocket: void onReadMessage(java.lang.String)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
androidx.legacy.coreui.R$string
androidx.recyclerview.widget.SimpleItemAnimator: void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer)
okhttp3.Headers: java.lang.String toString()
org.pytorch.torchvision.R$anim
com.downloader.PRDownloaderConfig$Builder: com.downloader.PRDownloaderConfig build()
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.constraintlayout.solver.widgets.ResolutionNode: void addDependent(androidx.constraintlayout.solver.widgets.ResolutionNode)
okhttp3.internal.platform.Platform: okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory)
org.pytorch.R$id: int search_voice_btn
androidx.recyclerview.selection.StorageStrategy: androidx.recyclerview.selection.StorageStrategy createParcelableStorage(java.lang.Class)
org.pytorch.torchvision.R$attr: int showDividers
androidx.constraintlayout.widget.ConstraintLayout: java.lang.Object getDesignInformation(int,java.lang.Object)
org.pytorch.torchvision.R$styleable: int[] GradientColor
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
org.pytorch.IValue: org.pytorch.IValue from(double)
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab,int)
androidx.appcompat.R$attr: int drawableTintMode
androidx.appcompat.widget.ScrollingTabContainerView: void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean)
androidx.core.text.util.LinkifyCompat
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_MESSAGE
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()
androidx.drawerlayout.widget.DrawerLayout: int STATE_IDLE
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
androidx.core.os.CancellationSignal: java.lang.Object getCancellationSignalObject()
androidx.appcompat.widget.LinearLayoutCompat
io.github.prabhuomkar.pytorchandroid.R$id: int submit_area
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_display_1_material
androidx.slidingpanelayout.R$attr: int fontProviderQuery
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
androidx.core.view.ViewCompat
androidx.fragment.app.FragmentHostCallback: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)
androidx.legacy.coreui.R$attr: int fontProviderAuthority
org.pytorch.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
okio.HashingSource: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)
okhttp3.internal.Util: java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
org.pytorch.torchvision.R$attr: int checkboxStyle
com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.torchvision.R$string: int abc_menu_function_shortcut_label
androidx.appcompat.R$attr: int thumbTintMode
org.pytorch.torchvision.R$color: int abc_primary_text_material_dark
androidx.media.R$styleable: int FontFamilyFont_fontStyle
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
org.pytorch.torchvision.R$attr: int windowActionBarOverlay
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isSpreadWidth()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_android_maxWidth
org.pytorch.R$attr: int multiChoiceItemLayout
androidx.versionedparcelable.VersionedParcel: void writeStrongBinder(android.os.IBinder,int)
androidx.camera.core.ImageCapture: androidx.camera.core.FlashMode getFlashMode()
okhttp3.Authenticator
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.R$styleable: int[] ActionBarLayout
org.pytorch.R$attr: int actionBarWidgetTheme
androidx.appcompat.view.menu.MenuBuilder$Callback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.camera.camera2.impl.Camera2CameraFactory: androidx.camera.core.BaseCamera getCamera(java.lang.String)
androidx.appcompat.R$attr: int buttonCompat
androidx.viewpager.R$dimen: int notification_content_margin_start
androidx.constraintlayout.widget.Barrier: int LEFT
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light
okhttp3.internal.http.RealInterceptorChain: RealInterceptorChain(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request,okhttp3.Call,okhttp3.EventListener,int,int,int)
androidx.media.R$dimen: int notification_large_icon_width
org.pytorch.R$attr: int isLightTheme
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
androidx.camera.core.ImageCaptureConfig: android.util.Size getTargetResolution()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
androidx.fragment.app.FragmentTabHost: android.os.Parcelable onSaveInstanceState()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_panelMenuListTheme
org.pytorch.R$attr: int layout_anchorGravity
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.view.menu.MenuView$ItemView
androidx.fragment.app.FragmentManager
androidx.recyclerview.R$id: int accessibility_custom_action_5
androidx.camera.core.UseCase: java.lang.String getCameraIdUnchecked(androidx.camera.core.UseCaseConfig)
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
androidx.camera.core.VideoCaptureConfig: java.lang.String getTargetName()
androidx.recyclerview.selection.Resettable
io.github.prabhuomkar.pytorchandroid.R$id
com.downloader.PRDownloader: void resume(int)
androidx.appcompat.resources.R$id: int accessibility_custom_action_29
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
org.pytorch.R$dimen: int abc_list_item_padding_horizontal_material
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
io.github.prabhuomkar.pytorchandroid.R$attr: int fontVariationSettings
androidx.legacy.coreui.R$dimen: int compat_notification_large_icon_max_height
androidx.media.R$drawable: int notification_bg_low_pressed
io.github.prabhuomkar.pytorchandroid.R$id: int action0
androidx.appcompat.R$style: int Widget_AppCompat_ActionBar_TabBar
androidx.appcompat.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat: boolean hasInsets()
androidx.core.R$styleable: int[] FontFamilyFont
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowMinWidthMajor
okhttp3.internal.ws.RealWebSocket: void onReadPong(okio.ByteString)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceLargePopupMenu
androidx.viewpager.widget.PagerTabStrip: void setBackgroundColor(int)
androidx.camera.core.R$id: int time
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_29
androidx.collection.ArraySet: java.lang.Object valueAt(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: <clinit>()
org.pytorch.torchvision.R$attr: int thickness
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
io.github.prabhuomkar.pytorchandroid.R$id: int action_text
androidx.camera.core.OptionsBundle: androidx.camera.core.OptionsBundle from(androidx.camera.core.Config)
androidx.legacy.coreutils.R$id: int action_text
androidx.customview.widget.ViewDragHelper: int getTouchSlop()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
androidx.vectordrawable.animated.R$id: int accessibility_action_clickable_span
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
androidx.core.view.PointerIconCompat: int TYPE_CONTEXT_MENU
androidx.appcompat.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
androidx.swiperefreshlayout.R$id: int forever
org.pytorch.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.R$styleable: int FontFamilyFont_android_fontWeight
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getItemViewType()
androidx.appcompat.R$color: int material_grey_50
androidx.core.app.TaskStackBuilder: void startActivities()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawWidth(int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
okhttp3.internal.cache.CacheStrategy
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.media.R$id: int end_padder
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_EVENT
androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Throwable getError()
io.github.prabhuomkar.pytorchandroid.R$attr: int backgroundSplit
androidx.swiperefreshlayout.R$dimen: int notification_right_icon_size
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawX(int)
androidx.appcompat.view.menu.MenuView$ItemView: boolean prefersCondensedTitle()
androidx.appcompat.R$dimen: int abc_dialog_min_width_minor
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[])
androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)
androidx.fragment.app.FragmentTransaction: boolean isEmpty()
androidx.activity.R$style: int TextAppearance_Compat_Notification
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_id
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: int getSessionType()
org.pytorch.torchvision.R$attr: int defaultQueryHint
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int,int)
androidx.core.app.NotificationCompatSideChannelService: void cancel(java.lang.String,int,java.lang.String)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
androidx.appcompat.R$attr: int dividerPadding
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_1_class
org.pytorch.R$attr: int maxButtonHeight
androidx.camera.core.impl.utils.Optional: androidx.camera.core.impl.utils.Optional or(androidx.camera.core.impl.utils.Optional)
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(int)
org.pytorch.torchvision.R$layout: int notification_action
androidx.core.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)
androidx.media.AudioAttributesCompat: int getVolumeControlStream()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)
org.pytorch.R$color: int material_deep_teal_200
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_RATIO
org.pytorch.R$styleable: int AppCompatTextView_autoSizePresetSizes
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
androidx.viewpager.R$style: int TextAppearance_Compat_Notification_Time
androidx.vectordrawable.R$id: int accessibility_custom_action_24
androidx.fragment.app.FragmentPagerAdapter: int BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT
org.pytorch.R$attr: int buttonBarStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_logo
android.support.v4.media.session.MediaControllerCompat: android.os.Bundle getSessionToken2Bundle()
androidx.swiperefreshlayout.R$dimen: int notification_main_column_padding_top
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_DropDownItem_Spinner
androidx.camera.core.VideoCaptureConfig: android.util.Rational getTargetAspectRatioCustom(android.util.Rational)
androidx.appcompat.R$styleable: int DrawerArrowToggle_thickness
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.appcompat.R$id: int accessibility_custom_action_9
org.pytorch.R$attr: int windowNoTitle
androidx.appcompat.R$drawable: int abc_item_background_holo_light
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
org.pytorch.torchvision.R$drawable: int abc_scrubber_control_off_mtrl_alpha
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
androidx.fragment.R$attr: int fontProviderFetchTimeout
androidx.legacy.coreutils.R$styleable: int[] GradientColorItem
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.media.R$id: int icon_group
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.camera.core.ImageAnalysis: ImageAnalysis(androidx.camera.core.ImageAnalysisConfig)
org.pytorch.torchvision.R$style: int Base_V7_Theme_AppCompat_Dialog
android.support.v4.media.session.MediaSessionCompat: void setFlags(int)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textColorHint
androidx.activity.R$id: int accessibility_custom_action_11
androidx.core.R$id: int tag_screen_reader_focusable
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D65
androidx.legacy.coreui.R$id: int chronometer
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_chainStyle
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int getColor()
androidx.camera.core.CameraCaptureResult: long getTimestamp()
androidx.recyclerview.widget.SortedListAdapterCallback: SortedListAdapterCallback(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.collection.SimpleArrayMap: void clear()
androidx.core.app.RemoteInput$Builder: android.os.Bundle getExtras()
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback: int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.annotation.ContentView
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_pressed_holo_light
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeBehaviour()
org.pytorch.R$attr: int expandActivityOverflowButtonDrawable
androidx.camera.core.SessionConfig$Builder: void addDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_android_textOff
androidx.collection.SparseArrayCompat: java.lang.Object clone()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String)
org.pytorch.R$attr: int contentInsetEnd
androidx.loader.R$styleable: int GradientColor_android_startColor
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toStartOf
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int getSpanIndex()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()
androidx.media.R$attr: int fontStyle
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.loader.R$layout: int notification_template_custom_big
androidx.camera.camera2.R$attr: int fontStyle
org.pytorch.R$style: int Widget_AppCompat_ListView_DropDown
androidx.viewpager.widget.ViewPager$OnPageChangeListener
org.pytorch.torchvision.R$attr: int closeIcon
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed
org.pytorch.R$styleable: int TextAppearance_android_fontFamily
androidx.annotation.LayoutRes
androidx.coordinatorlayout.R$color: int ripple_material_light
io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView: void setAspectRatio(int,int,boolean)
androidx.legacy.v4.R$styleable: int[] FontFamily
androidx.core.text.BidiFormatter: boolean isRtlContext()
androidx.activity.R$id: int accessibility_custom_action_0
androidx.appcompat.resources.R$id: int action_text
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_USER_COMMENT
androidx.activity.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
org.pytorch.torchvision.R$anim: int abc_tooltip_exit
androidx.camera.camera2.R$drawable: int notification_bg
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.recyclerview.selection.MutableSelection
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void draw(android.graphics.Canvas)
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onContentScrollStarted()
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.appcompat.resources.R$attr: int fontProviderFetchStrategy
androidx.recyclerview.selection.EventBridge: void install(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.selection.SelectionTracker,androidx.recyclerview.selection.ItemKeyProvider)
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_font
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
org.pytorch.R$color: int abc_tint_seek_thumb
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_PORTRAIT_MODE
androidx.collection.LruCache: int createCount()
androidx.camera.core.Exif: boolean isFlippedVertically()
androidx.legacy.v4.R$id: int title
com.downloader.request.DownloadRequest: int getConnectTimeout()
androidx.appcompat.R$attr: int textAppearanceListItem
androidx.camera.core.ImageAnalysis: java.util.Map onSuggestedResolutionUpdated(java.util.Map)
androidx.appcompat.R$attr: int actionBarItemBackground
org.pytorch.torchvision.R$style: int Base_V23_Theme_AppCompat_Light
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
org.pytorch.torchvision.R$drawable: int abc_ic_menu_overflow_material
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT
androidx.appcompat.R$attr: int listPopupWindowStyle
androidx.camera.camera2.impl.Camera$InternalState: androidx.camera.camera2.impl.Camera$InternalState valueOf(java.lang.String)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionButton
org.pytorch.torchvision.R$attr: int actionBarItemBackground
androidx.core.provider.FontsContractCompat$Columns: java.lang.String RESULT_CODE
androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)
androidx.viewpager.R$dimen: int notification_big_circle_margin
androidx.appcompat.resources.R$id: int accessibility_custom_action_17
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$id: int action_menu_divider
androidx.appcompat.app.ActionBarDrawerToggle: void syncState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.appcompat.R$anim: int abc_tooltip_enter
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_go_search_api_material
androidx.swiperefreshlayout.R$dimen: int notification_action_icon_size
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
org.pytorch.torchvision.R$attr: int listPopupWindowStyle
org.pytorch.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.customview.widget.ViewDragHelper: int EDGE_RIGHT
androidx.core.view.accessibility.AccessibilityEventCompat: void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.ListPopupWindow: void postShow()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_control_corner_material
androidx.core.R$id: int accessibility_custom_action_18
androidx.viewpager.R$styleable: int GradientColor_android_type
androidx.core.view.ViewCompat$FocusDirection
org.pytorch.R$attr: int buttonBarButtonStyle
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
okio.InflaterSource: boolean refill()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
androidx.camera.core.SurfaceConfig$ConfigSize
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderPackage
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onStart()
androidx.legacy.v4.R$drawable: int notification_template_icon_bg
androidx.media.session.MediaButtonReceiver: android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long)
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetEndWithActions
org.pytorch.R$style: int Base_AlertDialog_AppCompat
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
androidx.camera.core.impl.utils.MainThreadAsyncHandler
androidx.appcompat.resources.R$id: int accessibility_custom_action_4
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
androidx.drawerlayout.R$drawable: int notification_bg_low_pressed
okhttp3.MultipartBody: int size()
androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)
io.github.prabhuomkar.pytorchandroid.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceListItemSmall
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetRight
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_DropDown
org.pytorch.R$attr: int actionProviderClass
androidx.appcompat.R$styleable: int[] MenuView
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode UNKNOWN
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)
androidx.slidingpanelayout.R$dimen: int notification_main_column_padding_top
androidx.appcompat.R$color: int switch_thumb_disabled_material_dark
androidx.appcompat.R$attr: int srcCompat
androidx.recyclerview.selection.OperationMonitor
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromBundle(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
androidx.viewpager.R$integer
androidx.camera.core.ImageInfoProcessor: boolean process(androidx.camera.core.ImageInfo)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V28_Theme_AppCompat_Light
androidx.coordinatorlayout.R$attr: int alpha
androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: java.lang.String getPhysicalCameraId()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getMinWidth()
androidx.camera.core.R$id: int line1
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListenerFactory(okhttp3.EventListener$Factory)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
org.pytorch.torchvision.R$styleable: int SearchView_iconifiedByDefault
androidx.camera.core.UseCase: androidx.camera.core.UseCaseConfig applyDefaults(androidx.camera.core.UseCaseConfig,androidx.camera.core.UseCaseConfig$Builder)
io.github.prabhuomkar.pytorchandroid.R$attr: int gapBetweenBars
androidx.appcompat.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mSkipSolver
org.pytorch.torchvision.R$styleable: int ActionBar_homeLayout
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PHOTOGRAPHIC_SENSITIVITY
org.pytorch.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
androidx.constraintlayout.solver.widgets.ResolutionNode
androidx.recyclerview.widget.RecyclerView: int getChildLayoutPosition(android.view.View)
org.pytorch.R$id: int action_bar_container
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawOrigin(int,int)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_6
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Title_Media
androidx.versionedparcelable.VersionedParcel: long readLong()
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PLAY_PAUSE
androidx.constraintlayout.solver.LinearSystem: void addGreaterThan(androidx.constraintlayout.solver.SolverVariable,int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.core.R$id: int action_image
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
okhttp3.internal.connection.RouteDatabase: boolean shouldPostpone(okhttp3.Route)
androidx.appcompat.R$layout: int notification_action
androidx.camera.core.Exif: androidx.camera.core.Exif createFromFile(java.io.File)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.legacy.coreutils.R$dimen: int notification_large_icon_height
androidx.appcompat.widget.SwitchCompat: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_thumbTint
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_action_bar_title_item
org.pytorch.R$anim: int abc_slide_out_bottom
androidx.activity.R$color: int ripple_material_light
androidx.appcompat.widget.DecorContentParent: boolean hasLogo()
androidx.collection.LongSparseArray: void delete(long)
androidx.core.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)
org.pytorch.R$attr: int textAppearanceSmallPopupMenu
androidx.drawerlayout.R$attr: int font
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
androidx.core.provider.FontsContractCompat$FontRequestCallback
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button_Small
androidx.core.view.MotionEventCompat: int AXIS_ORIENTATION
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_SearchView
org.pytorch.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Switch
org.pytorch.torchvision.R$dimen: int abc_text_size_large_material
org.pytorch.R$style: int Widget_AppCompat_ProgressBar
android.support.v4.media.session.MediaSessionCompat$Token
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup: boolean mSkipSolver
androidx.recyclerview.selection.Resettable: boolean isResetRequired()
org.pytorch.torchvision.R$id: int notification_main_column_container
com.squareup.picasso.Picasso: void shutdown()
androidx.appcompat.R$id: int chronometer
androidx.appcompat.widget.SearchView: void clearFocus()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeCloseButtonStyle
androidx.recyclerview.widget.ItemTouchHelper$Callback: int getBoundingBoxMargin()
androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneStartMargin
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintBottom_toBottomOf
org.pytorch.R$attr: int tintMode
androidx.annotation.Dimension: int SP
androidx.fragment.R$id: int dialog_button
androidx.legacy.coreui.R$id: int tag_unhandled_key_listeners
androidx.fragment.app.Fragment$2
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_switchStyle
org.pytorch.R$styleable: int ActionMode_titleTextStyle
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_chevron_right
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeShareDrawable
androidx.core.view.ViewPropertyAnimatorListener: void onAnimationCancel(android.view.View)
okhttp3.internal.http2.Http2Codec: okhttp3.ResponseBody openResponseBody(okhttp3.Response)
okhttp3.internal.NamedRunnable: void execute()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
androidx.camera.core.SessionConfig$Builder: java.util.List getSingleCameraCaptureCallbacks()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Display1
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarTabStyle
androidx.camera.camera2.R$drawable: int notification_tile_bg
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenVertical(int)
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.downloader.internal.DownloadRequestQueue: void initialize()
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)
androidx.activity.R$styleable: int[] ColorStateListItem
org.pytorch.R$styleable: int ActionBar_elevation
androidx.versionedparcelable.NonParcelField
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_searchview_description_search
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.camera.core.PreviewConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toBottomOf
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
androidx.appcompat.widget.TintTypedArray: java.lang.String getNonResourceString(int)
androidx.camera.camera2.R$id: int action_text
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void layout()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionBar_Solid
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getOptimizerWrapWidth()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
androidx.activity.R$id: int action_image
androidx.appcompat.R$attr: int progressBarStyle
androidx.arch.core.internal.SafeIterableMap: int hashCode()
android.support.v4.media.MediaMetadataCompat$LongKey
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_FULL_SCREEN
androidx.recyclerview.widget.StaggeredGridLayoutManager: int GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_visible
org.pytorch.torchvision.R$id: int tabMode
org.pytorch.R$style: int Base_Widget_AppCompat_SeekBar
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: RecyclerView$RecycledViewPool()
androidx.camera.core.SessionConfig: androidx.camera.core.Config getImplementationOptions()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
androidx.activity.R
android.support.v4.media.session.MediaSessionCompat$QueueItem: int UNKNOWN_ID
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_big_circle_margin
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.R$id: int tag_accessibility_pane_title
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator priority(com.squareup.picasso.Picasso$Priority)
androidx.camera.core.ErrorHandler
androidx.customview.R$drawable: int notification_icon_background
androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)
com.squareup.picasso.StatsSnapshot: int size
androidx.appcompat.widget.AbsActionBarView: boolean showOverflowMenu()
okhttp3.internal.http2.Http2Codec: Http2Codec(okhttp3.OkHttpClient,okhttp3.Interceptor$Chain,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setHorizontalChainStyle(int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Large
androidx.core.app.ActivityOptionsCompat: void requestUsageTimeReport(android.app.PendingIntent)
okhttp3.Connection: java.net.Socket socket()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] LinearLayoutCompat
androidx.lifecycle.MutableLiveData: MutableLiveData()
android.support.v4.media.session.IMediaSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.R$dimen: int compat_notification_large_icon_max_width
org.pytorch.torchvision.R$attr: int navigationMode
androidx.appcompat.R$styleable: int[] ViewStubCompat
androidx.exifinterface.media.ExifInterface: short SCENE_CAPTURE_TYPE_NIGHT
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(byte[],long[])
androidx.camera.core.R$string: int status_bar_notification_info_overflow
androidx.core.widget.TintableImageSourceView
android.support.v4.media.MediaBrowserCompat$ConnectionCallback
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_APPLICATION
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_PARTIAL
okhttp3.internal.connection.RealConnection: okhttp3.Route route()
androidx.camera.core.SingleImageProxyBundle: SingleImageProxyBundle(androidx.camera.core.ImageProxy)
org.pytorch.torchvision.R$drawable: int abc_btn_radio_to_on_mtrl_000
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.viewpager.R$dimen: int notification_media_narrow_margin
androidx.camera.core.CameraFactory: java.lang.String cameraIdForLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.R$attr: int actionBarStyle
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
okhttp3.internal.http.HttpHeaders: long contentLength(okhttp3.Headers)
androidx.appcompat.app.ActionBar
androidx.appcompat.view.ActionMode: void setTitle(int)
org.pytorch.R$style: int Platform_V25_AppCompat
okhttp3.internal.http1.Http1Codec: okio.Source newChunkedSource(okhttp3.HttpUrl)
androidx.recyclerview.R$styleable: int FontFamilyFont_fontStyle
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setAudioBitRate(int)
androidx.asynclayoutinflater.R$color: int notification_action_color_filter
android.support.v4.media.session.IMediaSession: void adjustVolume(int,int,java.lang.String)
androidx.drawerlayout.R$dimen
org.pytorch.R$style: int Widget_AppCompat_Button_Borderless_Colored
androidx.coordinatorlayout.R$id: int info
androidx.camera.core.R$color: int notification_icon_bg_color
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator(int)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
okio.ByteString: okio.ByteString decodeHex(java.lang.String)
androidx.coordinatorlayout.R$drawable: int notification_bg_low
androidx.fragment.R$layout: int custom_dialog
org.pytorch.R$color: int tooltip_background_dark
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_rotationX
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_checkedTextViewStyle
androidx.vectordrawable.R$id: int icon
androidx.core.util.LogWriter: LogWriter(java.lang.String)
androidx.appcompat.R$layout: int abc_activity_chooser_view_list_item
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void start()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getLegacyAudioStream(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
androidx.coordinatorlayout.R$id: int italic
androidx.loader.content.Loader: java.lang.String toString()
androidx.camera.core.R$id
okhttp3.internal.http2.PushObserver: void onReset(int,okhttp3.internal.http2.ErrorCode)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOWS_CHANGED
androidx.recyclerview.R$drawable: int notification_bg
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_RIGHT
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
androidx.camera.camera2.R$styleable: int GradientColor_android_centerColor
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)
okhttp3.internal.http.HttpMethod: boolean permitsRequestBody(java.lang.String)
androidx.appcompat.resources.R$layout: int notification_template_custom_big
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_subtitleTextAppearance
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.customview.R$attr: int fontProviderAuthority
androidx.activity.R$styleable: int FontFamilyFont_android_fontWeight
okhttp3.FormBody$Builder: okhttp3.FormBody build()
androidx.camera.core.Exif: void setDescription(java.lang.String)
org.pytorch.R$string: int abc_menu_delete_shortcut_label
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE
androidx.recyclerview.widget.LinearLayoutManager: void setSmoothScrollbarEnabled(boolean)
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
org.pytorch.torchvision.R$attr: int actionModeWebSearchDrawable
androidx.drawerlayout.R$dimen: int compat_control_corner_material
org.pytorch.R$color: int button_material_dark
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderCerts
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
io.github.prabhuomkar.pytorchandroid.R$attr: int toolbarNavigationButtonStyle
androidx.constraintlayout.widget.R$styleable: int[] LinearConstraintLayout
androidx.camera.camera2.impl.CameraEventCallbacks
androidx.camera.camera2.R$id: int normal
org.pytorch.R$style: int Base_Widget_AppCompat_PopupWindow
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_height
androidx.core.graphics.PathSegment: int hashCode()
androidx.camera.core.CameraCaptureSessionStateCallbacks
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.camera.core.SessionConfig$Builder: void addErrorListener(androidx.camera.core.SessionConfig$ErrorListener)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.core.view.VelocityTrackerCompat
com.squareup.picasso.Picasso$RequestTransformer: com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request)
androidx.appcompat.R$drawable: int abc_textfield_search_material
androidx.localbroadcastmanager.content.LocalBroadcastManager: void unregisterReceiver(android.content.BroadcastReceiver)
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
androidx.slidingpanelayout.R$id: int notification_main_column
org.pytorch.Module
androidx.viewpager.R$dimen: int notification_action_text_size
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.view.ActionMode: java.lang.CharSequence getTitle()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: boolean equals(java.lang.Object)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[])
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mVerticalWrapOptimized
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeFindDrawable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenHorizontal(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setGoneMargin(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
org.pytorch.torchvision.R$style: int Widget_Support_CoordinatorLayout
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout_Layout
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Widget_AppCompat_Toolbar
androidx.camera.core.VideoCaptureConfig: android.util.Size getMaxResolution()
androidx.appcompat.R$layout: int notification_template_part_time
androidx.appcompat.R$color: int accent_material_light
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String)
androidx.camera.core.R$id: int accessibility_custom_action_11
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonBarButtonStyle
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
com.squareup.picasso.NetworkPolicy: com.squareup.picasso.NetworkPolicy valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()
androidx.recyclerview.R$styleable: int RecyclerView_layoutManager
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetStartWithNavigation
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
androidx.coordinatorlayout.widget.CoordinatorLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void analyze(int)
androidx.customview.R$id: int icon_group
androidx.vectordrawable.R$styleable: int GradientColor_android_centerColor
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
okhttp3.Cache: void flush()
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_startY
androidx.appcompat.view.ActionMode: void finish()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.constraintlayout.solver.widgets.Guideline: int getRelativeEnd()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence)
androidx.core.app.NotificationCompat$MessagingStyle: java.lang.CharSequence getUserDisplayName()
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderPackage
androidx.core.app.AppComponentFactory
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_lines_media
androidx.appcompat.R$id: int wrap_content
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
androidx.recyclerview.selection.SelectionTracker$SelectionPredicate: boolean canSelectMultiple()
org.pytorch.torchvision.R$style: int ThemeOverlay_AppCompat_Light
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_font
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_WINDOW_CONTENT_CHANGED
androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
io.github.prabhuomkar.pytorchandroid.R$integer: int abc_config_activityShortDur
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback: MediaBrowserCompat$SubscriptionCallback()
androidx.core.internal.view.SupportMenu: int FLAG_KEEP_OPEN_ON_SUBMENU_OPENED
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getLastVisibleWidget()
androidx.cursoradapter.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener
androidx.activity.ComponentActivity
androidx.core.app.NotificationCompat$BigTextStyle
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
org.pytorch.R$style: int Base_DialogWindowTitle_AppCompat
org.pytorch.R$dimen: int tooltip_y_offset_non_touch
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.appcompat.app.ActionBar: int getNavigationItemCount()
androidx.core.content.PermissionChecker: int PERMISSION_GRANTED
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[],int)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
io.github.prabhuomkar.pytorchandroid.R$color: int primary_dark_material_light
androidx.loader.R$styleable: int[] FontFamily
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat()
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
androidx.appcompat.R$attr: int menu
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
androidx.legacy.v4.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
org.pytorch.DType
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
androidx.loader.R$id: int chronometer
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonBarStyle
androidx.documentfile.provider.DocumentFile: boolean exists()
androidx.legacy.v4.R$id: int notification_background
androidx.customview.R$id: int normal
org.pytorch.torchvision.R$dimen: int compat_control_corner_material
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.loader.content.Loader: boolean cancelLoad()
org.pytorch.torchvision.R$attr: int checkedTextViewStyle
androidx.appcompat.R$dimen: int abc_text_size_display_4_material
org.pytorch.R$style: int Base_Widget_AppCompat_Spinner_Underlined
org.pytorch.R$styleable: int ActionBar_displayOptions
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderCerts
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_ALBUMS
androidx.core.app.NotificationCompat$Action: int getIcon()
androidx.asynclayoutinflater.R$styleable: int GradientColorItem_android_offset
okhttp3.FormBody$Builder: FormBody$Builder()
androidx.appcompat.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)
org.pytorch.R$styleable: int AppCompatTheme_actionBarStyle
androidx.fragment.app.FragmentController: void dispatchCreate()
androidx.core.view.KeyEventDispatcher$Component: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.media.R$dimen: int notification_content_margin_start
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
org.pytorch.torchvision.R$styleable: int MenuItem_android_title
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.animated.R$dimen: int notification_top_pad_large_text
androidx.appcompat.R$dimen: int compat_button_padding_horizontal_material
com.squareup.picasso.LruCache: void clear()
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
androidx.appcompat.resources.R$id: int accessibility_custom_action_6
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getEmptyLocaleList()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_maxWidth
androidx.core.content.ContextCompat: ContextCompat()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
okhttp3.CacheControl: boolean immutable()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mHorizontalResolution
androidx.core.view.MenuItemCompat: void setShowAsAction(android.view.MenuItem,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_enabled
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_JPEG_INTERCHANGE_FORMAT_LENGTH
androidx.core.provider.FontsContractCompat: void resetCache()
androidx.core.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
androidx.media.R$integer: int status_bar_notification_info_maxnum
com.squareup.picasso.StatsSnapshot: long averageOriginalBitmapSize
androidx.appcompat.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)
com.squareup.picasso.Callback$EmptyCallback: void onError(java.lang.Exception)
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
org.pytorch.torchvision.R$styleable: int MenuItem_android_checked
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MESSAGES
org.pytorch.R$styleable: int AppCompatTheme_switchStyle
okhttp3.internal.connection.ConnectInterceptor: okhttp3.OkHttpClient client
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getChangeDuration()
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
org.pytorch.torchvision.R$styleable: int Toolbar_subtitle
androidx.loader.app.LoaderManager: androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.recyclerview.widget.SortedList: boolean remove(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri)
androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.Constraints)
org.pytorch.R$attr: int actionModeCloseButtonStyle
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.core.view.inputmethod.InputConnectionCompat: InputConnectionCompat()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener)
androidx.appcompat.R$drawable: int abc_ic_menu_overflow_material
androidx.core.R$id: int accessibility_custom_action_20
androidx.loader.app.LoaderManager: androidx.loader.content.Loader getLoader(int)
okhttp3.internal.Util: java.lang.String[] concat(java.lang.String[],java.lang.String)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASH
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: int getAnchorId()
androidx.exifinterface.media.ExifInterface: short GAIN_CONTROL_NONE
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.media.MediaBrowserServiceCompat: java.lang.String SERVICE_INTERFACE
androidx.customview.R$dimen: int compat_button_padding_vertical_material
androidx.loader.R$style: int TextAppearance_Compat_Notification_Title
org.pytorch.torchvision.R$attr: int thumbTint
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android.support.v4.media.MediaMetadataCompat: boolean containsKey(java.lang.String)
androidx.coordinatorlayout.R$dimen: int compat_notification_large_icon_max_width
io.github.prabhuomkar.pytorchandroid.models.Model: Model(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence)
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.lifecycle.LifecycleOwner
androidx.appcompat.R$styleable
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_viewInflaterClass
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onExtrasChanged(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$Recycler: java.util.List getScrapList()
org.pytorch.torchvision.R$id: int add
androidx.appcompat.R$styleable: int AppCompatTheme_activityChooserViewStyle
androidx.constraintlayout.solver.widgets.Barrier: int BOTTOM
androidx.appcompat.view.menu.ShowableListMenu: android.widget.ListView getListView()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
io.github.prabhuomkar.pytorchandroid.R$id: int tabMode
androidx.appcompat.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
androidx.core.app.NotificationCompat: NotificationCompat()
okhttp3.internal.Util: java.lang.String format(java.lang.String,java.lang.Object[])
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
androidx.customview.R$attr
org.pytorch.torchvision.R$style: int Widget_AppCompat_ListView_DropDown
org.pytorch.R$styleable: int AppCompatTheme_actionButtonStyle
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
org.pytorch.torchvision.R$id: int textSpacerNoButtons
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
okhttp3.HttpUrl: java.lang.String encodedPassword()
org.pytorch.torchvision.R$styleable: int AppCompatSeekBar_tickMark
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
okhttp3.internal.ws.RealWebSocket$Streams: okio.BufferedSource source
androidx.appcompat.R$attr: int actionBarTabTextStyle
androidx.constraintlayout.widget.Group: Group(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
org.pytorch.torchvision.R$color: int highlighted_text_material_dark
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.UseCaseConfig build()
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderPackage
okhttp3.internal.http2.Header: okio.ByteString TARGET_METHOD
androidx.core.net.TrafficStatsCompat: void setThreadStatsTag(int)
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setTableDimensions()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.media.R$id: int notification_main_column
androidx.appcompat.R$drawable: int notify_panel_notification_icon_bg
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig build()
androidx.print.PrintHelper: int getScaleMode()
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_translationY
androidx.camera.core.ImageAnalysisConfig: java.util.Set listOptions()
androidx.loader.R$color
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setInputType(int)
androidx.appcompat.R$drawable: int abc_scrubber_primary_mtrl_alpha
androidx.recyclerview.widget.RecyclerView$Adapter: long getItemId(int)
androidx.camera.core.SurfaceCombination: SurfaceCombination()
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.customview.R$styleable: int FontFamilyFont_fontStyle
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat rotationX(float)
com.squareup.picasso.StatsSnapshot: long totalDownloadSize
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension: RecyclerView$ViewCacheExtension()
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream)
androidx.core.app.NotificationCompat: int COLOR_DEFAULT
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.concurrent.futures.ResolvableFuture
androidx.legacy.v4.R$attr: int fontProviderQuery
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_Solid
org.pytorch.torchvision.R$attr: int srcCompat
androidx.core.app.NotificationCompat$CarExtender
androidx.appcompat.widget.ShareActionProvider: void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener)
androidx.camera.camera2.impl.Camera2CameraControl: void triggerAf()
org.pytorch.R$dimen: int abc_action_bar_stacked_max_height
org.pytorch.torchvision.R$styleable: int GradientColor_android_tileMode
androidx.camera.core.SessionConfig: int getTemplateType()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintBottom_toTopOf
androidx.camera.core.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
com.squareup.picasso.RequestHandler$Result: com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode NO_ERROR
androidx.constraintlayout.solver.SolverVariable: int strength
androidx.constraintlayout.solver.widgets.ConstraintWidget: void disconnectWidget(androidx.constraintlayout.solver.widgets.ConstraintWidget)
androidx.appcompat.R$attr: int buttonBarStyle
androidx.appcompat.R$color: int secondary_text_default_material_dark
okio.BufferedSource: int read(byte[],int,int)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle)
androidx.drawerlayout.widget.DrawerLayout: void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
org.pytorch.R$attr: int windowActionBarOverlay
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_showDividers
org.pytorch.torchvision.R$id: int tag_unhandled_key_event_manager
org.pytorch.torchvision.R$styleable: int SwitchCompat_switchMinWidth
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(int)
androidx.core.view.ViewPropertyAnimatorCompat
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setContentDescription(int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle)
okhttp3.internal.http.HttpHeaders: int parseSeconds(java.lang.String,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_endColor
androidx.exifinterface.media.ExifInterface: void flipHorizontally()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionBar_TabText
androidx.drawerlayout.widget.DrawerLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.core.R$attr: int font
org.pytorch.torchvision.R$styleable: int ActionMode_height
androidx.appcompat.resources.R$id: int text
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintGuide_end
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.vectordrawable.R$id: int accessibility_custom_action_22
org.pytorch.R$id: int action_mode_close_button
androidx.recyclerview.widget.ItemTouchHelper: int DOWN
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment
androidx.recyclerview.widget.StaggeredGridLayoutManager: int[] findLastCompletelyVisibleItemPositions(int[])
androidx.drawerlayout.R$attr: int fontProviderAuthority
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
okhttp3.CacheControl: okhttp3.CacheControl FORCE_NETWORK
com.downloader.httpclient.DefaultHttpClient: java.lang.Object clone()
androidx.appcompat.R$id: int screen
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.github.prabhuomkar.pytorchandroid.R$attr: int seekBarStyle
org.pytorch.Tensor: float[] getDataAsFloatArray()
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
io.github.prabhuomkar.pytorchandroid.R$color: int tooltip_background_dark
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintDimensionRatio
io.github.prabhuomkar.pytorchandroid.R$attr: int windowActionModeOverlay
org.pytorch.torchvision.R$style: int Widget_AppCompat_ProgressBar
org.pytorch.torchvision.R$dimen: int abc_floating_window_z
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
androidx.camera.core.ImageAnalysisConfig: android.util.Size getTargetResolution()
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
androidx.core.view.PointerIconCompat: int TYPE_ARROW
androidx.loader.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.drawerlayout.R$dimen: int compat_notification_large_icon_max_height
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintVertical_weight
okhttp3.RequestBody: okhttp3.MediaType contentType()
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_GENRES
org.pytorch.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
org.pytorch.torchvision.R$dimen: int tooltip_horizontal_padding
okio.BufferedSource: void skip(long)
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isChecked()
androidx.camera.core.impl.utils.Threads: boolean isBackgroundThread()
io.github.prabhuomkar.pytorchandroid.helpers.DownloadHelper: void cancelDownload(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
org.pytorch.torchvision.R$style: int Widget_AppCompat_ListView_Menu
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AfState getAfState()
androidx.drawerlayout.R$styleable: int GradientColor_android_centerX
androidx.customview.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
okhttp3.internal.http.HttpHeaders: int skipUntil(java.lang.String,int,java.lang.String)
okhttp3.internal.http2.Http2Connection: void flush()
androidx.constraintlayout.solver.LinearSystem: void addConstraint(androidx.constraintlayout.solver.ArrayRow)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable)
androidx.camera.core.MeteringPoint: void setFOVAspectRatio(android.util.Rational)
com.downloader.Status: com.downloader.Status valueOf(java.lang.String)
androidx.media.R$id
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
org.pytorch.R$attr: int tickMarkTintMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
androidx.loader.R$styleable: int GradientColorItem_android_color
androidx.core.widget.ListViewAutoScrollHelper
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
androidx.fragment.app.Fragment: void onPause()
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
org.pytorch.R$attr: int titleMargins
org.pytorch.torchvision.R$dimen: int abc_control_padding_material
org.pytorch.torchvision.R$color
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: void onSelectionCleared()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.downloader.database.DbHelper
androidx.media.R$drawable: int notification_bg_low
androidx.core.view.PointerIconCompat: int TYPE_HELP
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
androidx.vectordrawable.animated.R$dimen: int notification_media_narrow_margin
androidx.core.content.SharedPreferencesCompat$EditorCompat
androidx.camera.camera2.R$id: int accessibility_custom_action_20
org.pytorch.torchvision.R$attr: int textAllCaps
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
org.pytorch.R$attr: int title
androidx.vectordrawable.animated.R$id: int action_text
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
androidx.documentfile.R
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State PENDING_OPEN
androidx.asynclayoutinflater.R$attr: int fontProviderAuthority
androidx.camera.camera2.impl.Camera2Initializer: Camera2Initializer()
org.pytorch.torchvision.R$styleable: int Toolbar_android_gravity
okhttp3.HttpUrl: okhttp3.HttpUrl get(java.net.URL)
androidx.core.view.accessibility.AccessibilityViewCommand: boolean perform(android.view.View,androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments)
androidx.constraintlayout.solver.widgets.Barrier: void setAllowsGoneWidget(boolean)
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_middle_mtrl_light
org.pytorch.torchvision.R$attr: int activityChooserViewStyle
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
org.pytorch.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews)
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_logo
okhttp3.HttpUrl: java.util.List pathSegments()
androidx.savedstate.SavedStateRegistry$AutoRecreated: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
org.pytorch.torchvision.R$color: int material_grey_800
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
org.pytorch.torchvision.R$styleable: int TextAppearance_android_shadowRadius
androidx.appcompat.resources.R$styleable: int GradientColor_android_endY
org.pytorch.IValue: boolean isBoolList()
androidx.appcompat.R$id: int titleDividerNoCustom
androidx.appcompat.app.ActionBar: void setShowHideAnimationEnabled(boolean)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
androidx.core.view.ViewCompat: int combineMeasuredStates(int,int)
androidx.core.R$color: int notification_action_color_filter
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)
androidx.swiperefreshlayout.R
androidx.appcompat.widget.Toolbar: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom DISK
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_alert_dialog_button_dimen
com.squareup.picasso.Cache: void set(java.lang.String,android.graphics.Bitmap)
androidx.recyclerview.widget.LinearLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification)
com.squareup.picasso.Picasso: com.squareup.picasso.StatsSnapshot getSnapshot()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.collection.LongSparseArray: boolean remove(long,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintCircleRadius
androidx.camera.core.UseCase: void notifyActive()
androidx.viewpager.widget.PagerAdapter: void startUpdate(android.view.View)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()
androidx.appcompat.R$style: int Widget_AppCompat_ButtonBar
com.facebook.soloader.nativeloader.NativeLoaderDelegate
androidx.appcompat.R$layout: int abc_list_menu_item_icon
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
android.support.v4.media.session.PlaybackStateCompat: long getPosition()
okhttp3.Cookie: boolean persistent()
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: DrawerLayout$SimpleDrawerListener()
androidx.core.graphics.drawable.RoundedBitmapDrawable: android.graphics.Bitmap getBitmap()
okhttp3.Request: java.lang.String method()
okhttp3.internal.connection.RealConnection: okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool,okhttp3.Route,java.net.Socket,long)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Title_Media
androidx.appcompat.R$id: int edit_query
androidx.camera.core.ImageAnalysisConfig: boolean containsOption(androidx.camera.core.Config$Option)
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder port(int)
okio.ByteString: int compareTo(okio.ByteString)
androidx.core.view.ViewCompat: void setScaleX(android.view.View,float)
io.github.prabhuomkar.pytorchandroid.R$id: int select_dialog_listview
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.downloader.request.DownloadRequest: com.downloader.OnProgressListener getOnProgressListener()
androidx.camera.core.impl.utils.futures.FutureCallback
android.support.v4.media.session.IMediaSession: void rewind()
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
org.pytorch.R$styleable: int Toolbar_titleMarginTop
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.customview.R$attr: int fontProviderFetchTimeout
androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_TRANSPARENT_SCANNER
androidx.core.R$id: int accessibility_custom_action_15
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Line2
okhttp3.internal.ws.WebSocketReader$FrameCallback
org.pytorch.R$attr: int logo
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void recycleTile(androidx.recyclerview.widget.TileList$Tile)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int circleRadius
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
androidx.camera.core.CameraCaptureCallback: CameraCaptureCallback()
androidx.recyclerview.selection.StableIdKeyProvider: StableIdKeyProvider(androidx.recyclerview.widget.RecyclerView)
androidx.recyclerview.R$drawable
androidx.exifinterface.media.ExifInterface: int COLOR_SPACE_UNCALIBRATED
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: java.lang.CharSequence getText()
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.camera.core.ImageCapture$OnImageSavedListener: void onImageSaved(java.io.File)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder transform(java.util.List)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
androidx.activity.R$attr: int fontProviderAuthority
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
io.github.prabhuomkar.pytorchandroid.R$id: int line3
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_ThemeOverlay_AppCompat
androidx.annotation.StyleRes
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.recyclerview.R$attr: int fontProviderCerts
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
org.pytorch.torchvision.R$attr: int preserveIconSpacing
androidx.camera.core.CameraX: androidx.camera.core.CameraFactory getCameraFactory()
okhttp3.internal.connection.RouteDatabase
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int)
androidx.legacy.v4.R$drawable: int notification_bg_low_pressed
androidx.appcompat.view.ActionMode$Callback: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
okhttp3.internal.cache.InternalCache: okhttp3.internal.cache.CacheRequest put(okhttp3.Response)
org.pytorch.R$string: int abc_action_bar_home_description
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIMENSIONS
org.pytorch.R$id: int notification_background
androidx.recyclerview.widget.RecyclerView: boolean isAnimating()
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: FileHelper()
androidx.appcompat.R$attr: int alertDialogStyle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_PROGRAM
androidx.customview.R$styleable: int[] FontFamily
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: android.app.PendingIntent getReadPendingIntent()
androidx.constraintlayout.widget.ConstraintHelper: void updatePostLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
okhttp3.WebSocketListener: void onClosing(okhttp3.WebSocket,int,java.lang.String)
okhttp3.CacheControl: int minFreshSeconds()
androidx.legacy.coreui.R$attr: int layout_keyline
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_barLength
okhttp3.internal.http2.Http2Codec: void flushRequest()
androidx.appcompat.R$attr: int thumbTint
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
org.pytorch.torchvision.R$color: int primary_material_dark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableItem_android_id
androidx.recyclerview.R$layout
androidx.camera.core.R$id: int accessibility_custom_action_24
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
org.pytorch.R$attr: int layout_dodgeInsetEdges
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_holo_dark
org.pytorch.R$dimen: int abc_dropdownitem_text_padding_right
com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)
androidx.core.view.TintableBackgroundView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.Person$Builder: Person$Builder()
org.pytorch.torchvision.R$styleable: int MenuItem_android_visible
androidx.constraintlayout.solver.widgets.Barrier: int LEFT
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int)
androidx.coordinatorlayout.R$attr: int fontVariationSettings
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceListItem
androidx.core.view.DragAndDropPermissionsCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawRight()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.camera.core.impl.utils.Optional: androidx.camera.core.impl.utils.Optional absent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setIcon(int)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.R$attr: int windowActionBarOverlay
androidx.appcompat.widget.AlertDialogLayout
androidx.camera.core.impl.utils.futures.Futures: void propagate(com.google.common.util.concurrent.ListenableFuture,androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
com.facebook.jni.MapIteratorHelper: MapIteratorHelper(java.util.Map)
androidx.annotation.StringDef: boolean open()
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
androidx.legacy.v4.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.TintTypedArray: int length()
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
androidx.appcompat.R$dimen: int abc_text_size_subtitle_material_toolbar
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.Object getQueueItem()
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontWeight
androidx.asynclayoutinflater.R$style: int TextAppearance_Compat_Notification_Info
androidx.customview.widget.ViewDragHelper: boolean isPointerDown(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_default
com.facebook.jni.CppSystemErrorException: CppSystemErrorException(java.lang.String,int)
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.loader.R$id: int notification_background
org.pytorch.torchvision.R$id: int wrap_content
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_13
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimizeForDimensions(int,int)
androidx.camera.core.CameraCaptureMetaData$AfMode: androidx.camera.core.CameraCaptureMetaData$AfMode valueOf(java.lang.String)
androidx.fragment.app.Fragment: void postponeEnterTransition()
androidx.camera.camera2.R$id: int time
androidx.drawerlayout.R$attr: int alpha
org.pytorch.Module: org.pytorch.IValue forward(org.pytorch.IValue[])
com.downloader.request.DownloadRequest: com.downloader.Response executeSync()
org.pytorch.torchvision.R$style: int Base_V26_Widget_AppCompat_Toolbar
org.pytorch.R$attr: int actionBarSplitStyle
okhttp3.Response: java.util.List challenges()
androidx.constraintlayout.solver.LinearSystem: boolean FULL_DEBUG
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_NUM_TRACKS
androidx.appcompat.R$attr: int submitBackground
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putString(java.lang.Object,java.lang.String,java.lang.String)
org.pytorch.torchvision.R$drawable: int abc_textfield_search_material
androidx.camera.core.Preview$PreviewOutput: android.util.Size getTextureSize()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
androidx.appcompat.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)
androidx.constraintlayout.widget.ConstraintSet: void setMargin(int,int,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
okhttp3.HttpUrl: java.lang.String encodedFragment()
androidx.camera.core.ImageAnalysis$Defaults: ImageAnalysis$Defaults()
androidx.appcompat.resources.R$id: int accessibility_custom_action_5
androidx.lifecycle.ReportFragment: void onStop()
androidx.exifinterface.media.ExifInterface: double[] getLatLong()
androidx.customview.R$styleable: int FontFamily_fontProviderPackage
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
androidx.legacy.widget.Space: Space(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)
okhttp3.MediaType: int hashCode()
androidx.camera.core.FocusMeteringAction$MeteringMode
androidx.camera.camera2.R$dimen: int notification_right_side_padding_top
androidx.appcompat.R$attr: int expandActivityOverflowButtonDrawable
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_weight
androidx.core.R$id: int accessibility_custom_action_5
androidx.appcompat.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.appcompat.R$styleable: int AppCompatTheme_toolbarStyle
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
androidx.camera.camera2.R$styleable: int GradientColorItem_android_offset
org.pytorch.torchvision.R$style: int Theme_AppCompat_DayNight
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
androidx.legacy.v4.R$attr: int layout_anchor
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.customview.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)
androidx.camera.core.R$styleable
androidx.customview.R$styleable: int GradientColor_android_startColor
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
okhttp3.Headers
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.appcompat.R$style: int TextAppearance_AppCompat_Body1
androidx.camera.camera2.R$styleable: int[] FontFamilyFont
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.R$id: int shortcut
androidx.core.app.TaskStackBuilder$SupportParentable
org.pytorch.R$string: int abc_menu_alt_shortcut_label
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Large
okhttp3.EventListener: okhttp3.EventListener NONE
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
org.pytorch.torchvision.R$attr: int actionModeCutDrawable
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.R$style: int TextAppearance_AppCompat_Subhead
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.R$styleable: int GradientColor_android_tileMode
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_UNDEFINED
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityEventCompat: androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_subMenuArrow
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.camera.core.SessionConfig$Builder: androidx.camera.core.SessionConfig build()
androidx.collection.LongSparseArray: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.camera.camera2.R$style: int TextAppearance_Compat_Notification
androidx.constraintlayout.widget.ConstraintSet: void clear(int,int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_alert_dialog_button_bar_height
okio.ByteString: byte getByte(int)
androidx.appcompat.resources.R$color
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(int)
androidx.slidingpanelayout.R$id: int time
org.pytorch.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
androidx.media.R$dimen: int notification_small_icon_size_as_large
org.pytorch.R$styleable: int ActionBar_contentInsetEnd
androidx.loader.content.CursorLoader: android.database.Cursor loadInBackground()
androidx.appcompat.R$attr: int layout
androidx.camera.core.impl.LiveDataObservable$Result: java.lang.Object getValue()
androidx.constraintlayout.widget.ConstraintLayout: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableEndCompat
org.pytorch.R$attr: int goIcon
org.pytorch.torchvision.R$attr: int collapseIcon
androidx.legacy.coreui.R$id: int action_image
androidx.drawerlayout.R$styleable
okhttp3.internal.tls.TrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
org.pytorch.R$color: int material_grey_600
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
androidx.camera.core.OptionsBundle: boolean containsOption(androidx.camera.core.Config$Option)
org.pytorch.R$styleable: int TextAppearance_fontFamily
org.pytorch.torchvision.R$drawable: int abc_ic_star_half_black_36dp
androidx.core.util.ObjectsCompat
org.pytorch.R$dimen: int notification_small_icon_size_as_large
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginBottom
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
org.pytorch.torchvision.R$bool: int abc_action_bar_embed_tabs
org.pytorch.torchvision.R$id: int tag_transition_group
androidx.core.R$attr: int fontProviderCerts
androidx.core.app.NotificationCompat$InboxStyle
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderQuery
androidx.core.view.ViewPropertyAnimatorCompat: android.view.animation.Interpolator getInterpolator()
androidx.core.R
io.github.prabhuomkar.pytorchandroid.R$color: int abc_hint_foreground_material_dark
okio.Buffer: int write(java.nio.ByteBuffer)
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
androidx.recyclerview.widget.DiffUtil$Callback
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
org.pytorch.torchvision.R$attr: int editTextStyle
androidx.fragment.R
androidx.camera.core.R$id: int icon_group
androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)
org.pytorch.torchvision.R$color: int abc_tint_seek_thumb
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.appcompat.R$styleable: int CompoundButton_android_button
androidx.camera.core.R$styleable: <clinit>()
okhttp3.Request$Builder: okhttp3.Request$Builder put(okhttp3.RequestBody)
androidx.recyclerview.selection.AutoScroller: void scroll(android.graphics.Point)
android.support.v4.media.session.MediaControllerCompat
androidx.recyclerview.R$id: int tag_unhandled_key_listeners
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
org.pytorch.IValue: org.pytorch.Tensor[] toTensorList()
androidx.activity.R$style: int TextAppearance_Compat_Notification_Time
androidx.recyclerview.R$id: int accessibility_custom_action_26
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_seekBarStyle
okhttp3.Protocol: okhttp3.Protocol get(java.lang.String)
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.appcompat.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
androidx.constraintlayout.widget.ConstraintHelper: void setTag(int,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$id: int info
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
androidx.recyclerview.widget.AsyncListUtil: void onRangeChanged()
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
org.pytorch.R$attr: int tooltipText
androidx.camera.core.PreviewConfig: android.util.Rational getTargetAspectRatioCustom(android.util.Rational)
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
okhttp3.internal.http.StatusLine: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SCENE_CAPTURE_TYPE
org.pytorch.torchvision.R$styleable: int SwitchCompat_switchPadding
androidx.recyclerview.R$id: int accessibility_custom_action_1
org.pytorch.R$styleable: int AppCompatTheme_editTextBackground
org.pytorch.R$drawable: int abc_list_pressed_holo_light
androidx.loader.R$attr: int fontProviderCerts
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.app.NotificationCompat$Builder: long getWhenIfShowing()
org.pytorch.torchvision.R$styleable: int AppCompatImageView_srcCompat
io.github.prabhuomkar.pytorchandroid.R$attr: int fontWeight
androidx.camera.camera2.Camera2Config: int getCaptureRequestTemplate(int)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStyle(int)
androidx.appcompat.R$dimen: int compat_button_inset_vertical_material
org.pytorch.R$dimen: int tooltip_margin
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.app.AppOpsManagerCompat: int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String)
androidx.appcompat.R$color: int abc_tint_seek_thumb
androidx.core.R$dimen: int notification_action_icon_size
androidx.recyclerview.selection.ItemKeyProvider: int getPosition(java.lang.Object)
androidx.appcompat.R$dimen: int notification_main_column_padding_top
androidx.annotation.BoolRes
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.R$dimen: int notification_action_text_size
io.github.prabhuomkar.pytorchandroid.R$interpolator
org.pytorch.torchvision.R$styleable: int MenuGroup_android_orderInCategory
androidx.media.R$color: int primary_text_default_material_dark
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,int)
androidx.coordinatorlayout.R$drawable
androidx.core.content.pm.ShortcutInfoCompatSaver
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
androidx.camera.core.TargetConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
androidx.constraintlayout.solver.SolverVariable: SolverVariable(java.lang.String,androidx.constraintlayout.solver.SolverVariable$Type)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
io.github.prabhuomkar.pytorchandroid.R$color: int colorPrimary
org.pytorch.torchvision.R$styleable: int SearchView_goIcon
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean)
androidx.recyclerview.widget.SortedListAdapterCallback
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_reverseLayout
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
androidx.appcompat.R$styleable: int DrawerArrowToggle_arrowShaftLength
androidx.core.util.TimeUtils
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Line2_Media
org.pytorch.torchvision.R$attr: int buttonGravity
io.github.prabhuomkar.pytorchandroid.R$attr: int expandActivityOverflowButtonDrawable
androidx.camera.camera2.R$color: int notification_icon_bg_color
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_SPOT
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeCutDrawable
androidx.asynclayoutinflater.R
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: android.media.AudioAttributes getAudioAttributes(java.lang.Object)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.appcompat.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.recyclerview.widget.RecyclerView$State: int getRemainingScrollHorizontal()
androidx.core.view.ViewCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(java.lang.String)
com.squareup.picasso.RequestHandler$Result: RequestHandler$Result(okio.Source,com.squareup.picasso.Picasso$LoadedFrom)
androidx.constraintlayout.widget.ConstraintSet: void setDimensionRatio(int,java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout()
io.github.prabhuomkar.pytorchandroid.R$color: int dim_foreground_disabled_material_light
org.pytorch.torchvision.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.drawerlayout.R$attr: int fontProviderFetchTimeout
androidx.appcompat.R$attr: int searchViewStyle
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.camera.core.ImageAnalysis$Defaults: androidx.camera.core.ImageAnalysisConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimize()
androidx.legacy.app.ActionBarDrawerToggle$Delegate
com.facebook.fbjni.BuildConfig: boolean DEBUG
androidx.appcompat.R$color: int abc_search_url_text_normal
androidx.cardview.R$attr: int cardMaxElevation
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
android.support.v4.media.MediaBrowserCompat: java.lang.String CUSTOM_ACTION_REMOVE_DOWNLOADED_FILE
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_title
androidx.viewpager.R$drawable: int notification_icon_background
androidx.activity.R$id: int action_container
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ALARM
androidx.cardview.R$attr: int contentPaddingTop
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_V25_AppCompat_Light
androidx.fragment.app.FragmentPagerAdapter
androidx.core.view.DragStartHelper$OnDragStartListener
org.pytorch.R$style: int Base_V7_Theme_AppCompat_Light
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_alpha
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void resolve()
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontStyle
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor getMainThreadExecutor()
androidx.core.view.ViewCompat: void setScaleY(android.view.View,float)
androidx.appcompat.R$string: int abc_action_bar_home_description
android.support.v4.media.session.IMediaSession: boolean isTransportControlEnabled()
androidx.cardview.R$styleable: int CardView_android_minHeight
androidx.core.app.ShareCompat$IntentReader: int getStreamCount()
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.camera.core.MeteringPoint: float getSize()
androidx.appcompat.R$attr: int ttcIndex
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.recyclerview.R$id: int accessibility_custom_action_4
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_tile_bg
io.github.prabhuomkar.pytorchandroid.R$id: int submenuarrow
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setAlpha(int)
androidx.savedstate.SavedStateRegistry$1
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
androidx.legacy.v4.R$id: int media_actions
androidx.versionedparcelable.VersionedParcel: java.lang.Object[] readArray(java.lang.Object[],int)
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: ActivityChooserModel$ActivityResolveInfo(android.content.pm.ResolveInfo)
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(int,int)
org.pytorch.R$color: int background_floating_material_dark
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
androidx.appcompat.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
androidx.recyclerview.R$styleable: int GradientColor_android_startY
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_TUNGSTEN
org.pytorch.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
androidx.appcompat.R$id: int action_container
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String getMediaId()
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionMode
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
org.pytorch.IValue: org.pytorch.IValue from(boolean)
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
com.downloader.Status: com.downloader.Status UNKNOWN
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_itemPadding
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
org.pytorch.R$styleable: int AppCompatTextView_drawableBottomCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_thumbTextPadding
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintCircle
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator centerCrop(int)
org.pytorch.torchvision.R$layout: int abc_action_mode_bar
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHorizontal_weight
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeShareDrawable
androidx.exifinterface.media.ExifInterface: short RESOLUTION_UNIT_CENTIMETERS
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: void onItemStateChanged(java.lang.Object,boolean)
androidx.asynclayoutinflater.R$id: int forever
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintGuide_begin
androidx.recyclerview.widget.PagerSnapHelper: int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int)
org.pytorch.R$id: int tag_unhandled_key_listeners
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_disabled_material_light
androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_viewInflaterClass
okhttp3.internal.Internal
androidx.slidingpanelayout.R$string: int status_bar_notification_info_overflow
androidx.appcompat.R$color: int abc_btn_colored_text_material
android.support.v4.media.session.IMediaSession: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.swiperefreshlayout.R$dimen
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification_Time
androidx.camera.core.VideoCaptureConfig: int getAudioChannelCount(int)
androidx.camera.camera2.impl.Camera2Initializer: int delete(android.net.Uri,java.lang.String,java.lang.String[])
org.pytorch.R$styleable: int[] SwitchCompat
androidx.constraintlayout.solver.ArrayRow: void clear()
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$id: int none
androidx.vectordrawable.R$id: int tag_transition_group
androidx.appcompat.R$attr: int colorError
androidx.core.R$styleable: int[] GradientColor
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
org.pytorch.R$string: int search_menu_title
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setSupportedResolutions(java.util.List)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPositionWithOffset(int,int)
androidx.loader.content.Loader$OnLoadCompleteListener
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener)
androidx.camera.core.FocusMeteringAction: long getAutoCancelDurationInMs()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews)
androidx.camera.core.CaptureConfig
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_minWidth
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup()
androidx.appcompat.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.appcompat.R$style: int Base_Widget_AppCompat_ProgressBar
androidx.swiperefreshlayout.R$id: int notification_background
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endY
org.pytorch.R$attr: int listPreferredItemHeight
androidx.appcompat.widget.LinearLayoutCompat: int SHOW_DIVIDER_NONE
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor)
org.pytorch.R$styleable: int TextAppearance_android_textColorLink
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
androidx.appcompat.widget.TintInfo
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setArrowEnabled(boolean)
androidx.legacy.coreutils.R$color: int ripple_material_light
androidx.appcompat.R$styleable: int AppCompatTheme_textColorSearchUrl
androidx.core.app.FrameMetricsAggregator: int TOTAL_INDEX
androidx.appcompat.widget.SwitchCompat: void setSwitchTypeface(android.graphics.Typeface)
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)
io.github.prabhuomkar.pytorchandroid.R$color: int secondary_text_default_material_dark
androidx.customview.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.R$drawable: int notification_template_icon_bg
androidx.core.R$id: int accessibility_custom_action_8
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.MutableConfig getMutableConfig()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.downloader.BuildConfig: java.lang.String FLAVOR
androidx.constraintlayout.solver.widgets.WidgetContainer: androidx.constraintlayout.solver.widgets.ConstraintWidget findWidget(float,float)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setUserAgent(java.lang.String)
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
androidx.camera.core.VideoCaptureConfig: int getAudioBitRate(int)
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_REMOVE_SUBSCRIPTION
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
org.pytorch.R$styleable: int AppCompatTheme_seekBarStyle
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.app.WindowDecorActionBar: void removeAllTabs()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_URI
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
androidx.appcompat.resources.R$attr: int fontProviderFetchTimeout
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener: void onPanelOpened(android.view.View)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.appcompat.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.camera.core.ImageCaptureConfig: java.util.List getSupportedResolutions()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dividerVertical
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.appcompat.R$id: int contentPanel
androidx.recyclerview.selection.BandPredicate$EmptyArea
androidx.core.app.NotificationCompat$Builder: int getPriority()
androidx.recyclerview.widget.SimpleItemAnimator: boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.app.RemoteInput$Builder: androidx.core.app.RemoteInput build()
org.pytorch.R$styleable: int[] RecycleListView
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
androidx.vectordrawable.animated.R$string: int status_bar_notification_info_overflow
androidx.coordinatorlayout.R$id: int line3
org.pytorch.torchvision.R$style: int TextAppearance_Compat_Notification
org.pytorch.torchvision.R$styleable: int[] DrawerArrowToggle
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setReverseLayout(boolean)
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_cascading_menus_min_smallest_width
org.pytorch.IValue: boolean isDoubleList()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.camera.camera2.impl.ImageCaptureConfigProvider: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.legacy.coreutils.R$dimen: int compat_control_corner_material
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_RATIO
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_14
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.annotation.InspectableProperty$EnumEntry: java.lang.String name()
androidx.appcompat.R$styleable: int AppCompatTheme_dividerVertical
org.pytorch.R$attr: int titleMarginBottom
androidx.legacy.v4.R$id: int tag_unhandled_key_listeners
org.pytorch.R$drawable: int notification_bg_low
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_large_icon_height
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int)
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.core.app.NotificationCompat$Extender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
io.github.prabhuomkar.pytorchandroid.R$attr: int fastScrollVerticalTrackDrawable
androidx.constraintlayout.widget.ConstraintSet: void setHorizontalWeight(int,float)
androidx.core.provider.FontsContractCompat$Columns: java.lang.String WEIGHT
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
androidx.constraintlayout.solver.LinearSystem: void minimize()
okio.Buffer: okio.ByteString snapshot(int)
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
org.pytorch.torchvision.R$color: int error_color_material_light
org.pytorch.R$styleable: int AppCompatTheme_colorAccent
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
org.pytorch.R$style: int Widget_AppCompat_ButtonBar
androidx.constraintlayout.solver.widgets.WidgetContainer: void layout()
org.pytorch.R$id: int none
androidx.core.view.WindowInsetsCompat: boolean isRound()
io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity: void onPause()
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
androidx.appcompat.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getType()
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence getSubtitle()
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.core.os.CancellationSignal$OnCancelListener
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper: boolean hasAllPermissions(androidx.appcompat.app.AppCompatActivity)
okhttp3.Challenge: java.lang.String scheme()
androidx.appcompat.R$style: int Theme_AppCompat_Dialog_MinWidth
androidx.activity.R$id: int accessibility_custom_action_30
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_alphabeticModifiers
androidx.concurrent.futures.ResolvableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
org.pytorch.R$styleable: int CompoundButton_android_button
androidx.appcompat.resources.R$id: int normal
androidx.core.app.NotificationCompat: java.lang.String EXTRA_SELF_DISPLAY_NAME
androidx.appcompat.app.ActionBar$Tab: java.lang.CharSequence getContentDescription()
androidx.recyclerview.selection.DefaultSelectionTracker: void reset()
androidx.slidingpanelayout.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.recyclerview.R$styleable: int[] ColorStateListItem
androidx.constraintlayout.solver.widgets.ChainHead: int mWidgetsCount
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper: UIHelper()
android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)
androidx.core.view.PointerIconCompat: int TYPE_HAND
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
androidx.core.app.TaskStackBuilder: android.content.Intent[] getIntents()
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_END
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)
androidx.camera.core.ImageCapture$OnImageSavedListener: void onError(androidx.camera.core.ImageCapture$ImageCaptureError,java.lang.String,java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
org.pytorch.torchvision.R$anim: int abc_popup_enter
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_MASK
androidx.versionedparcelable.VersionedParcel: void writeStrongInterface(android.os.IInterface)
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
androidx.media.AudioAttributesCompat: int hashCode()
androidx.fragment.app.FragmentController: java.util.List getActiveFragments(java.util.List)
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyle
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endX
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable)
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
androidx.camera.core.R$id: int tag_accessibility_clickable_spans
org.pytorch.R$styleable: int TextAppearance_textAllCaps
org.pytorch.torchvision.R$attr: int contentInsetEndWithActions
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.legacy.coreui.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.media.MediaSessionManager$RemoteUserInfo: int hashCode()
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder addPoint(androidx.camera.core.MeteringPoint,androidx.camera.core.FocusMeteringAction$MeteringMode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_titleCondensed
io.github.prabhuomkar.pytorchandroid.R$id: int parent
android.support.v4.media.session.IMediaSession: void previous()
androidx.camera.camera2.R$id: int tag_unhandled_key_listeners
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder fromConfig(androidx.camera.core.Config)
org.pytorch.torchvision.R$styleable: int ActionMode_background
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void runPendingAnimations()
org.pytorch.R$layout: int abc_tooltip
androidx.core.view.accessibility.AccessibilityRecordCompat: int getScrollX()
androidx.customview.R$style: int Widget_Compat_NotificationActionText
androidx.core.view.InputDeviceCompat: int SOURCE_DPAD
androidx.core.util.Pair: Pair(java.lang.Object,java.lang.Object)
okio.GzipSource: okio.Timeout timeout()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
androidx.camera.core.R$id: int right_side
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.constraintlayout.solver.Metrics: long pivots
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.R$layout: int notification_template_icon_group
org.pytorch.torchvision.R$drawable: int notification_tile_bg
androidx.recyclerview.widget.LinearSmoothScroller: int mInterimTargetDy
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int baselineToBaseline
org.pytorch.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
androidx.appcompat.R$string: int abc_search_hint
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.vectordrawable.R$attr: int alpha
androidx.fragment.app.Fragment: void unregisterForContextMenu(android.view.View)
org.pytorch.torchvision.R$styleable: int MenuItem_android_titleCondensed
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType getConnectionType()
org.pytorch.R$styleable: int ActionBar_logo
androidx.fragment.app.Fragment: int hashCode()
androidx.camera.core.LensFacingCameraIdFilter: LensFacingCameraIdFilter()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength valueOf(java.lang.String)
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.core.view.ViewConfigurationCompat
androidx.camera.camera2.R$dimen: int notification_small_icon_background_padding
androidx.camera.core.Preview: void enableTorch(boolean)
androidx.appcompat.view.WindowCallbackWrapper
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)
androidx.vectordrawable.animated.R$layout: int notification_action_tombstone
androidx.appcompat.widget.SwitchCompat: void setTrackTintList(android.content.res.ColorStateList)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_searchview_description_voice
com.downloader.Response: boolean isCancelled()
org.pytorch.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.recyclerview.R$attr: int fontStyle
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDrawHeight(int)
androidx.appcompat.R$id: int search_badge
com.downloader.Response: void setPaused(boolean)
okhttp3.internal.http1.Http1Codec: void writeRequestHeaders(okhttp3.Request)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View)
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
org.pytorch.R$styleable: int MenuItem_actionProviderClass
org.pytorch.R$layout: int abc_alert_dialog_button_bar_material
org.pytorch.R$id: int search_badge
androidx.recyclerview.widget.RecyclerView$ItemAnimator$AdapterChanges
androidx.camera.core.Exif: long INVALID_TIMESTAMP
androidx.activity.R$styleable: int FontFamilyFont_android_fontStyle
androidx.viewpager.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
androidx.camera.camera2.R$styleable: int GradientColor_android_endY
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float matchConstraintPercentWidth
org.pytorch.torchvision.R$attr: int layout
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] GradientColor
android.support.v4.media.session.IMediaSession
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContentInvalid()
org.pytorch.R$attr: int windowMinWidthMajor
android.support.v4.app.INotificationSideChannel
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isRootContainer()
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[])
androidx.constraintlayout.widget.ConstraintSet: int RIGHT
androidx.vectordrawable.R$dimen: int compat_notification_large_icon_max_width
androidx.exifinterface.media.ExifInterface: short CONTRAST_NORMAL
androidx.camera.camera2.R$styleable: int FontFamilyFont_android_font
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_stackFromEnd
okhttp3.Headers: java.util.Map toMultimap()
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: void scrollToPosition(int)
okhttp3.internal.tls.OkHostnameVerifier
com.facebook.jni.DestructorThread: DestructorThread()
androidx.camera.core.ImageProxy: android.graphics.Rect getCropRect()
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.R$dimen: int notification_small_icon_size_as_large
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintWidth_max
org.pytorch.R$dimen: int abc_dialog_fixed_height_major
okhttp3.Headers$Builder: java.lang.String get(java.lang.String)
androidx.camera.core.R$id: int title
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long)
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: int getFormat()
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableRightCompat
androidx.viewpager.R$id: int line3
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] AlertDialog
androidx.camera.core.R$dimen: int compat_notification_large_icon_max_height
io.github.prabhuomkar.pytorchandroid.R$id: int withText
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Time
okio.BufferedSource: void readFully(byte[])
android.support.v4.media.session.MediaSessionCompat: java.lang.String ARGUMENT_MEDIA_ATTRIBUTE_VALUE
androidx.appcompat.R$anim: int abc_grow_fade_in_from_bottom
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
org.pytorch.torchvision.R$attr: int buttonIconDimen
io.github.prabhuomkar.pytorchandroid.R$id: int text2
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.downloader.httpclient.HttpClient: com.downloader.httpclient.HttpClient clone()
org.pytorch.torchvision.R$id: int parentPanel
androidx.legacy.coreui.R$layout: int notification_action_tombstone
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_font
org.pytorch.torchvision.R$drawable: int abc_tab_indicator_material
androidx.core.widget.NestedScrollView: boolean isSmoothScrollingEnabled()
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
androidx.vectordrawable.animated.R$attr: int fontProviderFetchTimeout
androidx.recyclerview.R$id: int actions
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)
androidx.collection.ArrayMap: ArrayMap(androidx.collection.SimpleArrayMap)
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowMinWidthMajor
androidx.swiperefreshlayout.R$dimen: int notification_media_narrow_margin
io.github.prabhuomkar.pytorchandroid.R$menu
androidx.core.app.NotificationManagerCompat: int IMPORTANCE_DEFAULT
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.print.PrintHelper: boolean systemSupportsPrint()
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
androidx.camera.core.Config: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
androidx.fragment.app.FragmentTransaction
androidx.appcompat.widget.PopupMenu$OnDismissListener: void onDismiss(androidx.appcompat.widget.PopupMenu)
androidx.media.app.NotificationCompat$MediaStyle: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.camera.core.R$dimen: int compat_control_corner_material
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimensionBehaviour(androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour)
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer(int,int)
androidx.fragment.app.FragmentActivity: void onPostResume()
okhttp3.CacheControl: boolean noTransform()
org.pytorch.torchvision.R$attr: int editTextBackground
androidx.legacy.v4.R$drawable: int notification_tile_bg
com.downloader.Constants: int HTTP_RANGE_NOT_SATISFIABLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onChildAttachedToWindow(android.view.View)
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_LOCALE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setCaptureBundle(androidx.camera.core.CaptureBundle)
androidx.appcompat.widget.DecorContentParent: void setLogo(int)
androidx.vectordrawable.R$color: int notification_icon_bg_color
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()
org.pytorch.R$styleable: int[] ActionBarLayout
androidx.exifinterface.media.ExifInterface: int ORIENTATION_ROTATE_90
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintStart_toStartOf
org.pytorch.R$styleable: int AppCompatImageView_srcCompat
androidx.coordinatorlayout.R$attr: int layout_dodgeInsetEdges
androidx.camera.core.ImageCaptureConfig: android.util.Size getDefaultResolution()
org.pytorch.torchvision.R$string: int abc_searchview_description_search
org.pytorch.R$drawable: int abc_spinner_mtrl_am_alpha
org.pytorch.torchvision.R$color: int bright_foreground_material_light
androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_keyline
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonBarNegativeButtonStyle
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()
okio.Buffer: okio.Buffer readFrom(java.io.InputStream,long)
androidx.core.app.ShareCompat$IntentReader: java.lang.String[] getEmailCc()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Tooltip
androidx.appcompat.R$attr: int actionModeSelectAllDrawable
androidx.fragment.app.ListFragment
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
androidx.camera.core.R$id: int accessibility_custom_action_9
org.pytorch.R$styleable: int Toolbar_title
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)
org.pytorch.R$layout: int abc_activity_chooser_view_list_item
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.legacy.coreui.R$style: int TextAppearance_Compat_Notification
androidx.camera.core.VideoCaptureConfig: java.util.List getSupportedResolutions()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_chainUseRtl
okhttp3.internal.tls.TrustRootIndex
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
androidx.camera.core.ImageOutputConfig: java.util.List getSupportedResolutions()
org.pytorch.torchvision.R$attr: int listDividerAlertDialog
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
okhttp3.internal.Util: boolean verifyAsIpAddress(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int BASELINE
androidx.core.internal.view.SupportMenu: int CATEGORY_MASK
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.lifecycle.ReportFragment
androidx.core.R$id: int async
androidx.core.view.GravityCompat
androidx.fragment.R$id: int title
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.swiperefreshlayout.R$attr: int fontProviderFetchStrategy
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.camera.camera2.R$color: int ripple_material_light
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.core.R$styleable: int[] FontFamily
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()
androidx.appcompat.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
androidx.constraintlayout.widget.Placeholder: void updatePostMeasure(androidx.constraintlayout.widget.ConstraintLayout)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SCENE_TYPE
androidx.slidingpanelayout.R$attr: int fontVariationSettings
androidx.annotation.VisibleForTesting: int PACKAGE_PRIVATE
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setArrowShaftLength(float)
androidx.constraintlayout.solver.widgets.Guideline: void setGuidePercent(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: long getRemoveDuration()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object)
androidx.viewpager.widget.PagerTabStrip: void setTabIndicatorColorResource(int)
org.pytorch.R$layout: int abc_list_menu_item_checkbox
org.pytorch.torchvision.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.camera.core.VideoCaptureConfig: int getSurfaceOccupancyPriority(int)
android.support.v4.media.session.IMediaControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)
androidx.localbroadcastmanager.content.LocalBroadcastManager: androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context)
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Small
androidx.fragment.app.FragmentHostCallback: void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_Dialog
androidx.versionedparcelable.ParcelImpl
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setOptimizationLevel(int)
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_inverse_material_dark
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_holo_light
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup
androidx.appcompat.R$attr: int iconTintMode
androidx.media.MediaBrowserProtocol: java.lang.String DATA_MEDIA_ITEM_LIST
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrollToPosition(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_insetEdge
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate
androidx.slidingpanelayout.R$style: int TextAppearance_Compat_Notification_Title
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setFlashMode(androidx.camera.core.FlashMode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getColumnIndex()
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Dialog
com.squareup.picasso.StatsSnapshot: StatsSnapshot(int,int,long,long,long,long,long,long,long,long,int,int,int,long)
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AF_AE
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontWeight
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
org.pytorch.R$attr: int buttonStyleSmall
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.selection.Selection: java.util.Iterator iterator()
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_end_material
androidx.fragment.R$styleable: int FontFamilyFont_android_fontVariationSettings
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanSize(int)
androidx.camera.core.R$id: int accessibility_custom_action_18
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toLeftOf
androidx.appcompat.widget.SwitchCompat: void setThumbTextPadding(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_queryHint
androidx.core.view.accessibility.AccessibilityManagerCompat
androidx.camera.core.Observable: void removeObserver(androidx.camera.core.Observable$Observer)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator placeholder(int)
androidx.recyclerview.selection.R$drawable
org.pytorch.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
androidx.swiperefreshlayout.R$string
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
androidx.core.widget.EdgeEffectCompat: void finish()
androidx.core.widget.ContentLoadingProgressBar: ContentLoadingProgressBar(android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int ANCHOR_BASELINE
androidx.media.R$styleable: int GradientColorItem_android_offset
org.pytorch.torchvision.R$dimen: int abc_dropdownitem_icon_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)
androidx.appcompat.widget.PopupMenu: void inflate(int)
com.downloader.OnProgressListener: void onProgress(com.downloader.Progress)
androidx.constraintlayout.widget.ConstraintSet: void setElevation(int,float)
androidx.activity.ComponentActivity$3
androidx.appcompat.resources.R$id: int accessibility_custom_action_26
androidx.appcompat.R$drawable: int abc_ic_star_black_16dp
androidx.core.app.ShareCompat$IntentReader: java.lang.String getCallingPackage()
org.pytorch.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.appcompat.app.AppCompatDelegate: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(java.lang.String,long,float)
androidx.camera.core.UseCaseGroupLifecycleController
androidx.recyclerview.selection.SelectionTracker: boolean isRangeActive()
androidx.appcompat.R$color: int switch_thumb_normal_material_dark
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback
org.pytorch.torchvision.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
okhttp3.Call$Factory
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipFrameBackground
androidx.asynclayoutinflater.R$drawable: int notification_bg
okhttp3.internal.ws.RealWebSocket$Streams: boolean client
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setRepeatMode(int)
org.pytorch.R$style: int Platform_V21_AppCompat_Light
com.downloader.Response: void setError(com.downloader.Error)
io.github.prabhuomkar.pytorchandroid.R$color
androidx.customview.widget.ViewDragHelper: void captureChildView(android.view.View,int)
androidx.recyclerview.selection.DefaultSelectionTracker: boolean isRangeActive()
androidx.lifecycle.LiveData: java.lang.Object getValue()
org.pytorch.R$styleable: int AppCompatTheme_windowNoTitle
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()
androidx.media.VolumeProviderCompat
androidx.legacy.coreui.R$id: int right
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.customview.R$id: int icon
androidx.core.app.Person: android.os.Bundle toBundle()
okhttp3.internal.cache.CacheStrategy: okhttp3.Request networkRequest
org.pytorch.IValue: boolean toBool()
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.ToolbarWidgetWrapper: void animateToVisibility(int)
androidx.loader.R$drawable
androidx.core.util.PatternsCompat: java.util.regex.Pattern DOMAIN_NAME
androidx.appcompat.R$color: int material_deep_teal_500
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)
androidx.core.view.MotionEventCompat: int AXIS_THROTTLE
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_alphabeticShortcut
org.pytorch.torchvision.R$styleable: int Toolbar_titleMargins
androidx.legacy.coreui.R$drawable: int notification_template_icon_bg
io.github.prabhuomkar.pytorchandroid.R$attr: int constraintSet
androidx.camera.core.R$attr: int fontProviderCerts
androidx.customview.R$styleable: int[] GradientColorItem
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: android.content.ComponentName activity
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
androidx.appcompat.R$styleable: int AppCompatTheme_editTextStyle
androidx.recyclerview.selection.OperationMonitor: boolean isStarted()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
androidx.customview.widget.FocusStrategy$BoundsAdapter
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.GoalRow: GoalRow(androidx.constraintlayout.solver.Cache)
androidx.appcompat.R$style: int Base_Animation_AppCompat_Tooltip
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_WHITE_FLUORESCENT
org.pytorch.torchvision.R$style: int Platform_V25_AppCompat
androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)
androidx.core.database.sqlite.SQLiteCursorCompat
org.pytorch.torchvision.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener: void onActiveChanged()
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
io.github.prabhuomkar.pytorchandroid.R$attr: int searchViewStyle
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: int INVALID_SPAN_ID
io.github.prabhuomkar.pytorchandroid.R$attr: int overlapAnchor
androidx.vectordrawable.animated.R$dimen: int notification_action_text_size
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Cipher getCipher()
androidx.camera.core.SessionConfig: java.util.List getErrorListeners()
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender(android.app.Notification)
androidx.recyclerview.widget.RecyclerView$State: int getTargetScrollPosition()
androidx.camera.core.ImageAnalysis: void setTargetRotation(int)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.cursoradapter.widget.SimpleCursorAdapter: void setStringConversionColumn(int)
androidx.appcompat.R$id: int title
androidx.core.widget.EdgeEffectCompat: boolean onPull(float,float)
com.downloader.core.DefaultExecutorSupplier: java.util.concurrent.Executor forMainThreadTasks()
androidx.camera.core.R$dimen: int notification_right_icon_size
androidx.core.app.NotificationCompat$Action$WearableExtender: androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintMinWidth
org.pytorch.R$color: int abc_search_url_text_normal
org.pytorch.torchvision.R$dimen: int abc_dialog_fixed_height_minor
androidx.appcompat.R$style: int Widget_AppCompat_ActivityChooserView
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void skipToPrevious(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean doViewsOverlap(android.view.View,android.view.View)
androidx.fragment.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.asynclayoutinflater.R$id: int icon_group
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.SolverVariable getPivotCandidate(androidx.constraintlayout.solver.LinearSystem,boolean[])
com.downloader.Response: Response()
androidx.appcompat.widget.MenuItemHoverListener
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[])
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void draw(android.graphics.Canvas)
com.downloader.BuildConfig: java.lang.String VERSION_NAME
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonBarStyle
org.pytorch.torchvision.R$styleable: int SearchView_android_inputType
okhttp3.internal.tls.BasicCertificateChainCleaner: int hashCode()
androidx.camera.core.AppConfig: boolean containsOption(androidx.camera.core.Config$Option)
androidx.legacy.coreui.R$attr: int keylines
org.pytorch.torchvision.R$id: int progress_horizontal
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
androidx.core.app.NotificationCompat$WearableExtender: NotificationCompat$WearableExtender()
androidx.recyclerview.widget.AsyncListUtil: java.lang.Object getItem(int)
org.pytorch.R$color: int bright_foreground_material_light
android.support.v4.media.session.MediaSessionCompat: void setQueue(java.util.List)
androidx.camera.core.CameraControlInternal: void triggerAf()
androidx.camera.core.ImageCapture$OnImageSavedListener
androidx.camera.core.impl.utils.futures.FutureCallback: void onFailure(java.lang.Throwable)
androidx.activity.R$dimen: int notification_large_icon_width
androidx.asynclayoutinflater.R$string: int status_bar_notification_info_overflow
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CUSTOM_ACTION
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemHeightLarge
androidx.recyclerview.widget.RecyclerView$SmoothScroller: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.resources.R$styleable: int GradientColor_android_startY
io.github.prabhuomkar.pytorchandroid.R$id: int action_bar_spinner
androidx.camera.core.VideoCaptureConfig: int getAudioBitRate()
androidx.lifecycle.MutableLiveData
androidx.customview.R$dimen: int notification_subtext_size
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Title_Inverse
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: RecyclerView$ItemAnimator$ItemHolderInfo()
androidx.appcompat.view.menu.MenuView$ItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FLASH_ENERGY
org.pytorch.R$color: int ripple_material_light
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
android.support.v4.media.MediaBrowserCompat: android.os.Bundle getNotifyChildrenChangedOptions()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToRight
androidx.media.VolumeProviderCompat: int getCurrentVolume()
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
okhttp3.internal.publicsuffix.PublicSuffixDatabase
androidx.camera.core.Config$Option: androidx.camera.core.Config$Option create(java.lang.String,java.lang.Class)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: GridLayoutManager$DefaultSpanSizeLookup()
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
okhttp3.Protocol: okhttp3.Protocol SPDY_3
okhttp3.internal.ws.RealWebSocket: void cancel()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.constraintlayout.solver.widgets.Barrier
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: boolean checkIfFileExists(java.lang.String)
androidx.fragment.R$styleable: int FontFamilyFont_android_fontStyle
androidx.customview.R$id: int action_image
org.pytorch.torchvision.R$layout: int abc_list_menu_item_checkbox
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_UNFOLLOW
androidx.recyclerview.R$styleable: int FontFamilyFont_fontVariationSettings
okhttp3.internal.Internal: okhttp3.HttpUrl getHttpUrlChecked(java.lang.String)
androidx.core.app.NotificationCompat: int BADGE_ICON_LARGE
androidx.fragment.app.FragmentManager: void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
androidx.appcompat.R$drawable: int abc_item_background_holo_dark
androidx.core.text.BidiFormatter$Builder
androidx.recyclerview.widget.LinearSnapHelper
androidx.fragment.app.Fragment: java.lang.String getTag()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChild(android.view.View,int,int)
androidx.collection.ArraySet
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_max
androidx.vectordrawable.R$id: int italic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
org.pytorch.torchvision.R$color: int primary_text_disabled_material_dark
androidx.drawerlayout.R$drawable: int notification_action_background
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
android.support.v4.media.MediaMetadataCompatApi21$Builder: java.lang.Object build(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BODY_SERIAL_NUMBER
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_buttonIconDimen
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
org.pytorch.R$drawable: int abc_dialog_material_background
org.pytorch.torchvision.R$styleable: int ActionBar_backgroundStacked
org.pytorch.R$styleable: int Spinner_android_prompt
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalChainStyle(int)
android.support.v4.media.session.IMediaControllerCallback$Stub: android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder)
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ShowableListMenu: void dismiss()
androidx.camera.core.SessionConfig$Builder: void addImplementationOptions(androidx.camera.core.Config)
androidx.appcompat.R$color: int abc_btn_colored_borderless_text_material
com.squareup.picasso.Request: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.R$id: int accessibility_custom_action_13
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void fillMetrics(androidx.constraintlayout.solver.Metrics)
org.pytorch.R$string: int abc_menu_ctrl_shortcut_label
androidx.appcompat.app.ActionBar: ActionBar()
androidx.core.app.RemoteActionCompat: java.lang.CharSequence getTitle()
okhttp3.Request: java.lang.String header(java.lang.String)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadPong(okio.ByteString)
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError ENCODE_FAILED
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_13
androidx.appcompat.R$layout: int abc_activity_chooser_view
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State OPEN
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SELECTION_END_INT
androidx.slidingpanelayout.widget.SlidingPaneLayout: void requestChildFocus(android.view.View,android.view.View)
androidx.cursoradapter.widget.SimpleCursorAdapter: androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
org.pytorch.R$id: int expand_activities_button
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: java.util.ArrayList getSortedList()
androidx.collection.LruCache: int evictionCount()
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
org.pytorch.torchvision.R$id: int normal
androidx.vectordrawable.R$attr: int fontProviderCerts
android.support.v4.media.session.IMediaSession: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.vectordrawable.animated.R$dimen: int notification_main_column_padding_top
androidx.camera.core.UseCase: void notifyState()
androidx.appcompat.view.menu.ActionMenuItemView: boolean showsIcon()
androidx.legacy.v4.R$attr: int layout_behavior
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.squareup.picasso.Picasso$Listener
io.github.prabhuomkar.pytorchandroid.ui.fragments.TaskFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: boolean getExtendSelection()
androidx.appcompat.app.ActionBar$Tab: int INVALID_POSITION
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.String getType()
androidx.appcompat.R$dimen: int abc_dialog_min_width_major
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener
org.pytorch.torchvision.R$color: int abc_search_url_text_selected
android.support.v4.media.session.IMediaSession: void removeQueueItemAt(int)
androidx.fragment.R$id: int accessibility_custom_action_23
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.vectordrawable.R$id: int accessibility_custom_action_11
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setColorSchemeColors(int[])
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.drawerlayout.R$styleable: int GradientColor_android_centerY
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.CameraIdFilter getCameraIdFilter()
android.support.v4.media.session.MediaControllerCompatApi24$TransportControls
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_V25_AppCompat
org.pytorch.R$attr: int textAppearanceListItem
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
androidx.appcompat.R$attr: int colorAccent
okio.Buffer: okio.Buffer writeDecimalLong(long)
androidx.constraintlayout.widget.ConstraintSet: int HORIZONTAL_GUIDELINE
org.pytorch.torchvision.R$styleable: int SearchView_layout
androidx.appcompat.R$style: int AlertDialog_AppCompat_Light
androidx.appcompat.resources.R$id: int action_divider
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_size
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_TRACK_NUMBER
org.pytorch.R$styleable: int Toolbar_titleMarginStart
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper: CameraHelper()
io.github.prabhuomkar.pytorchandroid.R$attr: int contentInsetLeft
androidx.legacy.v4.R$id: int time
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalBiasPercent(float)
androidx.constraintlayout.solver.LinearSystem: LinearSystem()
org.pytorch.R$attr: int fontWeight
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] MenuItem
androidx.vectordrawable.R$dimen: int notification_right_side_padding_top
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableSize
org.pytorch.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.viewpager.widget.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
androidx.core.view.MarginLayoutParamsCompat: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.appcompat.R$attr: int activityChooserViewStyle
okhttp3.Request: okhttp3.RequestBody body()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dropDownListViewStyle
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_details
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newHeartRating(boolean)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
org.pytorch.R$styleable: int MenuItem_actionLayout
androidx.loader.R$drawable: int notification_bg_low_normal
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void setBarThickness(float)
org.pytorch.R$styleable: int DrawerArrowToggle_thickness
org.pytorch.torchvision.R$attr: int windowActionModeOverlay
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getViewWidget(android.view.View)
androidx.appcompat.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
androidx.appcompat.R$attr: int contentInsetEnd
io.github.prabhuomkar.pytorchandroid.R$bool
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)
androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_23
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
android.support.v4.media.session.PlaybackStateCompat: java.lang.CharSequence getErrorMessage()
io.github.prabhuomkar.pytorchandroid.R$color: int abc_background_cache_hint_selector_material_light
androidx.appcompat.R$interpolator: int fast_out_slow_in
androidx.core.app.NotificationCompat: java.lang.String EXTRA_MEDIA_SESSION
okhttp3.internal.http.StatusLine
androidx.activity.R$string
org.pytorch.R$attr: int font
androidx.asynclayoutinflater.R$styleable: int FontFamilyFont_font
io.github.prabhuomkar.pytorchandroid.Constants
androidx.constraintlayout.solver.widgets.ConstraintWidget: int MATCH_CONSTRAINT_SPREAD
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.fragment.app.FragmentManagerViewModel
androidx.legacy.coreui.R$styleable: int GradientColor_android_endColor
androidx.media.AudioAttributesCompat$Builder: AudioAttributesCompat$Builder(androidx.media.AudioAttributesCompat)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isHeightWrapContent()
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderFetchTimeout
org.pytorch.R$styleable: int TextAppearance_android_shadowDx
org.pytorch.R$layout: int abc_expanded_menu_layout
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
androidx.recyclerview.R$drawable: int notification_bg_low
android.support.v4.media.session.MediaControllerCompat$TransportControls: void setCaptioningEnabled(boolean)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder onlyScaleDown()
androidx.core.util.LogWriter: void write(char[],int,int)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.core.view.WindowInsetsCompat: int hashCode()
androidx.appcompat.R$attr: int popupTheme
androidx.recyclerview.selection.GridModel$SelectionObserver
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
org.pytorch.torchvision.R$string: int abc_capital_on
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
androidx.constraintlayout.widget.ConstraintSet: void removeFromVerticalChain(int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384
okhttp3.FormBody$Builder: okhttp3.FormBody$Builder add(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
org.pytorch.torchvision.R$dimen: int abc_dialog_fixed_height_major
okhttp3.internal.http2.ErrorCode: int httpCode
android.support.v4.media.session.IMediaSession: void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
androidx.camera.core.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_RIGHT
android.support.v4.media.session.PlaybackStateCompat: int STATE_ERROR
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
okhttp3.WebSocketListener: void onFailure(okhttp3.WebSocket,java.lang.Throwable,okhttp3.Response)
androidx.appcompat.R$id: int action_bar
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getVolumeControl(java.lang.Object)
androidx.core.widget.EdgeEffectCompat: boolean onRelease()
org.pytorch.R$drawable: int abc_ic_search_api_material
android.support.v4.media.session.IMediaControllerCallback
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
okhttp3.internal.http.RealInterceptorChain: okhttp3.Interceptor$Chain withConnectTimeout(int,java.util.concurrent.TimeUnit)
androidx.appcompat.R$dimen: int abc_action_bar_icon_vertical_padding_material
org.pytorch.R$attr: int singleChoiceItemLayout
androidx.fragment.R$styleable: int[] GradientColorItem
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.downloader.request.DownloadRequest: void deliverPauseEvent()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: int getAlpha()
androidx.recyclerview.widget.ItemTouchHelper: int ANIMATION_TYPE_SWIPE_SUCCESS
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarItemBackground
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
androidx.camera.core.R$drawable: int notification_bg_low
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory: ViewModelProvider$AndroidViewModelFactory(android.app.Application)
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
okhttp3.internal.http2.Http2Connection: okhttp3.Protocol getProtocol()
androidx.recyclerview.widget.LinearLayoutManager: android.os.Parcelable onSaveInstanceState()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_chainUseRtl
androidx.appcompat.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)
androidx.viewpager.R$styleable: int[] ColorStateListItem
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.recyclerview.widget.DiffUtil$ItemCallback: DiffUtil$ItemCallback()
androidx.asynclayoutinflater.R$id: int action_container
androidx.camera.core.VideoCapture: void stopRecording()
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.CharSequence getContentDescription()
androidx.core.R$styleable: int GradientColor_android_startX
org.pytorch.torchvision.R$attr: int listItemLayout
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
org.pytorch.R$color: int primary_text_default_material_light
io.github.prabhuomkar.pytorchandroid.R$attr: int showTitle
org.pytorch.R$attr: int paddingBottomNoButtons
androidx.appcompat.R$styleable: int AppCompatTheme_alertDialogTheme
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Body2
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.squareup.picasso.StatsSnapshot
androidx.customview.R$styleable: int GradientColorItem_android_color
androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
okhttp3.internal.ws.RealWebSocket: long queueSize()
androidx.appcompat.R$styleable: int Toolbar_titleMargin
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
androidx.camera.camera2.impl.CameraEventCallback: androidx.camera.core.CaptureConfig onDisableSession()
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_FILTER_KEY_EVENTS
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
androidx.appcompat.R$styleable: int[] AppCompatTextView
com.squareup.picasso.LruCache: int putCount()
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
androidx.fragment.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.widget.DecorToolbar: void setNavigationIcon(int)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_DEFAULT_RESOLUTION
io.github.prabhuomkar.pytorchandroid.R$attr: int coordinatorLayoutStyle
androidx.appcompat.view.menu.ActionMenuItemView: void setShortcut(boolean,char)
androidx.appcompat.app.WindowDecorActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.vectordrawable.R$styleable: int GradientColorItem_android_color
androidx.appcompat.R$drawable: int notification_template_icon_bg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.core.content.PermissionChecker: int PERMISSION_DENIED_APP_OP
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
com.squareup.picasso.StatsSnapshot: int downloadCount
io.github.prabhuomkar.pytorchandroid.R$style
androidx.camera.core.MutableOptionsBundle: void insertOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.media.VolumeProviderCompat: java.lang.Object getVolumeProvider()
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
androidx.camera.core.CameraX: void setErrorListener(androidx.camera.core.CameraX$ErrorListener,android.os.Handler)
androidx.annotation.CheckResult
org.pytorch.torchvision.R$id: int icon
org.pytorch.torchvision.R$styleable: int AppCompatTheme_ratingBarStyle
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
io.github.prabhuomkar.pytorchandroid.R$styleable: int CompoundButton_buttonCompat
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_default_padding_end_material
okhttp3.internal.http2.Header: okio.ByteString TARGET_SCHEME
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int matchConstraintDefaultHeight
io.github.prabhuomkar.pytorchandroid.R$dimen: int disabled_alpha_material_dark
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putRating(java.lang.Object,java.lang.String,java.lang.Object)
androidx.core.content.MimeTypeFilter: boolean matches(java.lang.String,java.lang.String)
androidx.loader.content.Loader: void onForceLoad()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int)
androidx.camera.core.CameraFactory
com.downloader.OnPauseListener
okio.Okio: okio.BufferedSource buffer(okio.Source)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
io.github.prabhuomkar.pytorchandroid.R$id: int title
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_min
androidx.activity.R$id: int accessibility_custom_action_15
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
org.pytorch.torchvision.R$attr: int navigationContentDescription
androidx.appcompat.resources.R$layout: int notification_template_part_chronometer
android.support.v4.media.session.PlaybackStateCompat$RepeatMode
org.pytorch.R$layout: int select_dialog_item_material
org.pytorch.R$styleable: int MenuItem_numericModifiers
androidx.recyclerview.R$id: int right_side
okhttp3.Request$Builder: Request$Builder()
androidx.activity.R$id: int notification_main_column_container
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startColor
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
android.support.v4.app.RemoteActionCompatParcelizer
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[],int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
org.pytorch.R$id: int action_mode_bar_stub
androidx.fragment.app.Fragment: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)
com.downloader.internal.stream.FileDownloadRandomAccessFile: com.downloader.internal.stream.FileDownloadOutputStream create(java.io.File)
org.pytorch.torchvision.R$id: int right_side
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
androidx.constraintlayout.solver.Metrics: long simpleconstraints
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Display4
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
androidx.appcompat.app.ActionBarDrawerToggle: void onDrawerStateChanged(int)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.fragment.app.FragmentTabHost: void onRestoreInstanceState(android.os.Parcelable)
androidx.camera.camera2.R$drawable: int notification_bg_low
androidx.legacy.coreutils.R$id: int forever
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerSlide(android.view.View,float)
androidx.recyclerview.widget.RecyclerView: void stopScroll()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
androidx.appcompat.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintCircle
okhttp3.internal.http2.PushObserver: boolean onData(int,okio.BufferedSource,int,boolean)
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
com.squareup.picasso.PicassoProvider: boolean onCreate()
androidx.legacy.v4.R$styleable: int GradientColor_android_endY
androidx.core.view.WindowCompat
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.core.app.NotificationCompat$WearableExtender: int UNSET_ACTION_INDEX
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_collapseIcon
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
androidx.activity.R$styleable: <clinit>()
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.R$string: int abc_capital_on
androidx.coordinatorlayout.R$drawable: int notification_bg_low_normal
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker
androidx.camera.core.Preview: java.lang.String toString()
android.support.v4.media.session.MediaSessionCompat$Callback: void onPlay()
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderCerts
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
com.squareup.picasso.Cache: void clearKeyUri(java.lang.String)
androidx.versionedparcelable.VersionedParcel
androidx.constraintlayout.solver.LinearSystem: int getMemoryUsed()
androidx.vectordrawable.animated.R$id: int chronometer
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_min
androidx.versionedparcelable.CustomVersionedParcelable
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setSurfaceOccupancyPriority(int)
com.downloader.database.NoOpsDbHelper: NoOpsDbHelper()
org.pytorch.torchvision.R$color: int material_grey_850
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
okhttp3.internal.Util: byte[] EMPTY_BYTE_ARRAY
androidx.recyclerview.selection.BandPredicate$EmptyArea: BandPredicate$EmptyArea(androidx.recyclerview.widget.RecyclerView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintCircleRadius
androidx.camera.core.Preview: void removePreviewSurfaceCallback()
androidx.constraintlayout.solver.SolverVariable: float computedValue
androidx.loader.content.Loader: boolean isStarted()
org.pytorch.R$style: int Base_Animation_AppCompat_Dialog
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
androidx.camera.core.UseCase: void attachToCamera(java.lang.String,androidx.camera.core.SessionConfig)
androidx.appcompat.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
okio.ByteString: okio.ByteString hmacSha1(okio.ByteString)
androidx.viewpager.widget.PagerTitleStrip
androidx.recyclerview.widget.RecyclerView: void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
androidx.vectordrawable.R$attr: int fontProviderFetchStrategy
org.pytorch.R$string: int abc_shareactionprovider_share_with_application
androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
androidx.versionedparcelable.CustomVersionedParcelable: void onPostParceling()
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams: CoordinatorLayout$LayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.core.view.ViewCompat: int getMeasuredState(android.view.View)
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.ImageCapture$CaptureMode getCaptureMode()
androidx.camera.core.ImageInfo: long getTimestamp()
androidx.core.view.NestedScrollingChild3
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_LANDSCAPE_MODE
androidx.loader.app.LoaderManagerImpl$LoaderInfo
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Display3
androidx.recyclerview.selection.DefaultSelectionTracker: boolean isResetRequired()
org.pytorch.R$id: int topPanel
androidx.recyclerview.widget.AsyncListUtil
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
org.pytorch.R$drawable: int abc_btn_borderless_material
androidx.appcompat.view.CollapsibleActionView: void onActionViewCollapsed()
androidx.legacy.app.ActionBarDrawerToggle: void setDrawerIndicatorEnabled(boolean)
com.squareup.picasso.StatsSnapshot: int originalBitmapCount
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
org.pytorch.torchvision.R$styleable: int SwitchCompat_track
androidx.core.app.RemoteActionCompat: boolean shouldShowIcon()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constrainedHeight
androidx.media.R$dimen: int notification_top_pad
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.R$id: int tag_accessibility_actions
androidx.drawerlayout.R$dimen: int notification_action_icon_size
androidx.fragment.R$id: int notification_main_column_container
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedWidth
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)
android.support.v4.media.session.MediaSessionCompat$Callback: void onSeekTo(long)
org.pytorch.torchvision.R$attr: int thumbTintMode
org.pytorch.R$string: int abc_action_menu_overflow_description
androidx.appcompat.widget.SwitchCompat: int getSwitchMinWidth()
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_centerY
android.support.v4.media.session.MediaControllerCompatApi21$Callback
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
org.pytorch.torchvision.R$color: int abc_primary_text_disable_only_material_dark
androidx.viewpager.R$attr: int fontProviderPackage
androidx.core.app.Person: java.lang.String getUri()
androidx.recyclerview.selection.SelectionTracker: void onSaveInstanceState(android.os.Bundle)
okhttp3.internal.ws.RealWebSocket$Streams: RealWebSocket$Streams(boolean,okio.BufferedSource,okio.BufferedSink)
androidx.camera.core.CameraInfo
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDx()
androidx.legacy.coreutils.R$drawable: int notify_panel_notification_icon_bg
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig()
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_check
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
androidx.appcompat.view.menu.MenuBuilder$Callback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.coordinatorlayout.R$dimen: int notification_content_margin_start
androidx.fragment.R$id: int accessibility_custom_action_16
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_AUTO
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasLogo()
androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[])
androidx.appcompat.widget.ActivityChooserView: ActivityChooserView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$style: int Widget_AppCompat_ListMenuView
androidx.vectordrawable.animated.R$style: int TextAppearance_Compat_Notification_Time
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.camera.core.FocusMeteringAction: androidx.camera.core.FocusMeteringAction$OnAutoFocusListener getOnAutoFocusListener()
okhttp3.Cookie: java.lang.String name()
androidx.legacy.v4.R$styleable: int FontFamily_fontProviderAuthority
androidx.camera.core.ImageProxy$PlaneProxy: int getRowStride()
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintCircle
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_titleTextStyle
okio.Buffer: short readShortLe()
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BIG_TEXT
io.github.prabhuomkar.pytorchandroid.R$id: int group_divider
androidx.concurrent.futures.AbstractResolvableFuture: boolean wasInterrupted()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_fontWeight
org.pytorch.torchvision.R$attr: int textAppearanceSearchResultSubtitle
androidx.constraintlayout.solver.widgets.ChainHead: float getTotalWeight()
androidx.appcompat.R$styleable: int AppCompatTheme_tooltipForegroundColor
io.github.prabhuomkar.pytorchandroid.R$color: int primary_text_default_material_dark
androidx.legacy.coreutils.R$drawable: int notification_bg_normal
androidx.viewpager.widget.PagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.versionedparcelable.VersionedParcel: void writeLong(long)
androidx.fragment.app.Fragment: java.lang.String getString(int,java.lang.Object[])
androidx.core.widget.TintableCompoundDrawablesView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.Group: void updatePreLayout(androidx.constraintlayout.widget.ConstraintLayout)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_16
androidx.exifinterface.media.ExifInterface: void setAltitude(double)
androidx.core.content.FileProvider: FileProvider()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_layout_marginStart
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.exifinterface.media.ExifInterface: byte[] getThumbnail()
com.facebook.jni.HybridData: HybridData()
androidx.core.util.Pools$Pool: boolean release(java.lang.Object)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
androidx.appcompat.widget.DecorContentParent: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.app.ActionBar: void setNavigationMode(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
androidx.collection.SparseArrayCompat: boolean containsKey(int)
androidx.fragment.app.Fragment: boolean isDetached()
androidx.fragment.R$attr: int alpha
androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)
androidx.camera.core.ImageSaver$SaveError
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_anchorGravity
androidx.recyclerview.selection.ItemKeyProvider$Scope
androidx.appcompat.R$color: int background_material_light
org.pytorch.torchvision.R$styleable: int SwitchCompat_android_textOn
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button_Small
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
org.pytorch.R$dimen: int abc_dialog_title_divider_material
io.github.prabhuomkar.pytorchandroid.R$attr: int menu
androidx.appcompat.R$attr: int navigationMode
android.support.v4.media.MediaMetadataCompatApi21$Builder: void putText(java.lang.Object,java.lang.String,java.lang.CharSequence)
androidx.exifinterface.media.ExifInterface: short METERING_MODE_OTHER
androidx.vectordrawable.R$drawable: int notification_bg_low_normal
okhttp3.internal.io.FileSystem
androidx.recyclerview.selection.StableIdKeyProvider: java.lang.Long getKey(int)
androidx.drawerlayout.widget.DrawerLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_QUERY
androidx.drawerlayout.R$dimen: int notification_large_icon_height
androidx.annotation.FloatRange
androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V23_Theme_AppCompat_Light
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache)
androidx.cardview.R$attr: int cardElevation
org.pytorch.torchvision.R$style
androidx.fragment.R$id: int accessibility_custom_action_18
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_LIST
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(int)
androidx.core.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)
androidx.appcompat.view.StandaloneActionMode: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.camera.camera2.impl.Camera2CaptureRequestBuilder
org.pytorch.R$style: int Platform_AppCompat_Light
androidx.core.widget.TintableCompoundButton
androidx.core.R$dimen: int compat_notification_large_icon_max_width
org.pytorch.torchvision.R$attr: int alpha
androidx.appcompat.widget.DecorToolbar: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.view.MotionEventCompat: int AXIS_HSCROLL
androidx.legacy.coreui.R$id: int notification_background
androidx.constraintlayout.widget.R$attr: int layout_constraintCircleRadius
androidx.core.os.ParcelableCompatCreatorCallbacks
androidx.lifecycle.MediatorLiveData: MediatorLiveData()
androidx.appcompat.R$attr: int drawableTopCompat
org.pytorch.torchvision.TensorImageUtils: void bitmapToFloatBuffer(android.graphics.Bitmap,int,int,int,int,float[],float[],java.nio.FloatBuffer,int)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater()
androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)
org.pytorch.R$styleable: int AlertDialog_showTitle
androidx.appcompat.R$styleable: int Toolbar_menu
androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean isFullSpan()
androidx.camera.core.PreviewConfig: java.lang.String getTargetName(java.lang.String)
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
androidx.core.text.ICUCompat
org.pytorch.torchvision.R$color: int primary_material_light
io.github.prabhuomkar.pytorchandroid.R$color: int material_deep_teal_500
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: android.util.Size getMaxOutputSize(java.lang.String,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer(int,int)
android.support.v4.media.session.MediaControllerCompat: void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
androidx.camera.core.R$styleable: int[] FontFamily
android.support.v4.media.session.MediaSessionCompatApi23$Callback: void onPlayFromUri(android.net.Uri,android.os.Bundle)
androidx.core.graphics.PathParser$PathDataNode: char mType
org.pytorch.R$color: int notification_icon_bg_color
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
org.pytorch.R$attr: int searchHintIcon
androidx.core.R$id: int info
androidx.loader.R$drawable: int notification_bg_low_pressed
androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener: boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent)
androidx.appcompat.resources.R$drawable: int notification_template_icon_bg
android.support.v4.media.MediaDescriptionCompat: void writeToParcel(android.os.Parcel,int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_large_icon_width
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener: void onDrawerClosed(android.view.View)
androidx.legacy.coreutils.R$dimen: int notification_action_text_size
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT
androidx.fragment.app.FragmentManager: boolean executePendingTransactions()
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontWeight
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int)
org.pytorch.R$attr: int autoSizeTextType
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_toTopOf
androidx.core.view.WindowInsetsCompat: int getStableInsetTop()
androidx.appcompat.app.AppCompatActivity: void onPostResume()
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_ERROR
androidx.core.app.TaskStackBuilder$SupportParentable: android.content.Intent getSupportParentActivityIntent()
androidx.legacy.coreutils.R$id: int normal
androidx.vectordrawable.R$styleable: int GradientColor_android_centerY
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
org.pytorch.R$attr: int imageButtonStyle
androidx.activity.R$style: int Widget_Compat_NotificationActionContainer
androidx.asynclayoutinflater.R$styleable: int[] FontFamilyFont
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_AppCompat
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.ArrayRow createRowCentering(androidx.constraintlayout.solver.LinearSystem,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,boolean)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_RatingBar_Small
androidx.core.widget.TextViewCompat: int AUTO_SIZE_TEXT_TYPE_UNIFORM
androidx.versionedparcelable.VersionedParcel: java.io.Serializable readSerializable()
androidx.appcompat.widget.DecorContentParent: void restoreToolbarHierarchyState(android.util.SparseArray)
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean openPane()
androidx.recyclerview.widget.LinearLayoutManager: android.graphics.PointF computeScrollVectorForPosition(int)
androidx.swiperefreshlayout.R$styleable: <clinit>()
androidx.camera.camera2.R$drawable
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void setReturnTransition(java.lang.Object)
org.pytorch.DType: org.pytorch.DType INT8
okhttp3.Response$Builder: okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String)
androidx.appcompat.R$styleable: int AppCompatTheme_editTextBackground
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.appcompat.view.menu.MenuPresenter$Callback
androidx.collection.ArraySet: int size()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
org.pytorch.torchvision.R$attr: int trackTintMode
androidx.appcompat.R$drawable: int btn_radio_off_to_on_mtrl_animation
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetEndWithActions
androidx.customview.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMultiLine(boolean)
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$attr: int fastScrollEnabled
androidx.appcompat.R$styleable: int MenuGroup_android_visible
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button_Colored
androidx.legacy.v4.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.appcompat.R$styleable: int AppCompatTheme_actionDropDownStyle
org.pytorch.torchvision.R$styleable: int ActionBar_navigationMode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getInputType()
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getDismissalId()
androidx.coordinatorlayout.R$id: int right
androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.appcompat.R$attr: int spinBars
com.downloader.core.Core: void shutDown()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void clearSelection()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_tab_indicator_mtrl_alpha
androidx.core.graphics.drawable.IconCompat: IconCompat()
okio.Buffer: okio.ByteString hmacSha256(okio.ByteString)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)
androidx.drawerlayout.widget.DrawerLayout
androidx.loader.content.Loader: java.lang.String dataToString(java.lang.Object)
org.pytorch.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
org.pytorch.R$id: int textSpacerNoButtons
androidx.coordinatorlayout.widget.DirectedAcyclicGraph: boolean hasOutgoingEdges(java.lang.Object)
androidx.lifecycle.Transformations
androidx.media.R$dimen: int compat_notification_large_icon_max_height
androidx.camera.core.VideoCapture: java.util.Map onSuggestedResolutionUpdated(java.util.Map)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int)
org.pytorch.R$styleable: int GradientColorItem_android_offset
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(int,int)
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
org.pytorch.torchvision.R$style: int Platform_V21_AppCompat_Light
androidx.vectordrawable.animated.R$id: int tag_accessibility_heading
androidx.recyclerview.widget.LinearLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.legacy.coreutils.R$drawable: int notification_template_icon_bg
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength NONE
androidx.constraintlayout.solver.GoalRow: void addError(androidx.constraintlayout.solver.SolverVariable)
androidx.loader.R$dimen: int compat_button_inset_horizontal_material
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_MAKER_NOTE
androidx.camera.camera2.R$attr
androidx.vectordrawable.R$id: int action_divider
androidx.camera.core.UseCase: void addStateChangeListener(androidx.camera.core.UseCase$StateChangeListener)
androidx.activity.R$attr: int fontVariationSettings
androidx.recyclerview.R$layout: int custom_dialog
androidx.activity.R$id: int accessibility_custom_action_21
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_MEDIA_ID
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
okhttp3.internal.ws.WebSocketProtocol: java.lang.String acceptHeader(java.lang.String)
androidx.concurrent.futures.AbstractResolvableFuture: void interruptTask()
androidx.lifecycle.ViewModelProvider$Factory
org.pytorch.Tensor: byte[] getDataAsUnsignedByteArray()
androidx.customview.R$id: int line3
androidx.annotation.Nullable
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,androidx.arch.core.util.Function,java.util.concurrent.Executor)
androidx.appcompat.R$attr: int actionMenuTextAppearance
org.pytorch.torchvision.R$attr: int autoSizePresetSizes
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetRight
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.loader.content.CursorLoader: android.net.Uri getUri()
io.github.prabhuomkar.pytorchandroid.R$attr: int actionMenuTextAppearance
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_android_baselineAligned
androidx.media.MediaBrowserProtocol: int CLIENT_VERSION_CURRENT
androidx.appcompat.text.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)
androidx.vectordrawable.R$id: int time
androidx.appcompat.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
org.pytorch.R$styleable: int ActionBar_customNavigationLayout
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_end_material
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.PlaybackStateCompat getPlaybackState()
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
org.pytorch.torchvision.R$styleable: int AppCompatImageView_tint
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.R$attr: int textAppearanceSearchResultTitle
androidx.camera.core.ImageAnalysisConfig: int getSurfaceOccupancyPriority()
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetStart
androidx.activity.R$id: int tag_transition_group
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.legacy.v4.R$drawable
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void dependsOn(androidx.constraintlayout.solver.widgets.ResolutionAnchor,int)
androidx.appcompat.R$styleable: int View_theme
okhttp3.internal.http2.Http2Connection: int maxConcurrentStreams()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
androidx.slidingpanelayout.R$styleable: int[] FontFamily
androidx.recyclerview.R$integer
org.pytorch.torchvision.R$dimen: int abc_dialog_padding_material
androidx.loader.R$id: int blocking
androidx.recyclerview.selection.DefaultSelectionTracker: void setProvisionalSelection(java.util.Set)
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
androidx.camera.core.AppConfig: java.lang.Class getTargetClass()
com.downloader.database.AppDbHelper
com.squareup.picasso.Picasso$Priority: com.squareup.picasso.Picasso$Priority NORMAL
org.pytorch.R$color: int abc_tint_btn_checkable
androidx.camera.core.UseCaseConfig: androidx.camera.core.Config$Option OPTION_SESSION_CONFIG_UNPACKER
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
org.pytorch.torchvision.R$style: int TextAppearance_Compat_Notification_Time
androidx.core.app.NotificationCompat$WearableExtender: int getGravity()
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator rotate(float,float,float)
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_alpha
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
org.pytorch.torchvision.R$drawable: int abc_switch_track_mtrl_alpha
androidx.recyclerview.selection.SelectionTracker: void addObserver(androidx.recyclerview.selection.SelectionTracker$SelectionObserver)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ListView_DropDown
org.pytorch.torchvision.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
org.pytorch.R$styleable: int LinearLayoutCompat_showDividers
org.pytorch.R$color: int dim_foreground_material_dark
androidx.appcompat.view.StandaloneActionMode: void invalidate()
androidx.media.R$id: int action_container
androidx.activity.R$id: int accessibility_custom_action_24
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_SUGGESTION_KEYWORDS
androidx.media.R$attr: int fontWeight
androidx.media.MediaBrowserServiceCompat: void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token)
org.pytorch.torchvision.R$styleable: int Toolbar_titleMargin
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: void setSessionParameters(android.hardware.camera2.CaptureRequest)
androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener: void onSharedElementsReady()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat xBy(float)
org.pytorch.R$style: int Widget_AppCompat_ListView_Menu
androidx.coordinatorlayout.widget.CoordinatorLayout: void onDraw(android.graphics.Canvas)
com.squareup.picasso.NetworkPolicy: boolean shouldWriteToDiskCache(int)
org.pytorch.R$attr: int indeterminateProgressStyle
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.recyclerview.R$id: int action_text
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStrokeCap(android.graphics.Paint$Cap)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.camera.core.AppConfig$Builder: androidx.camera.core.AppConfig$Builder setTargetClass(java.lang.Class)
androidx.core.app.NotificationCompatSideChannelService: NotificationCompatSideChannelService()
androidx.recyclerview.selection.FocusDelegate: boolean hasFocusedItem()
androidx.core.widget.ScrollerCompat: boolean isFinished()
org.pytorch.torchvision.R$styleable: int[] ActivityChooserView
androidx.appcompat.R$styleable: int SearchView_android_focusable
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray()
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_tileMode
androidx.recyclerview.R$style
io.github.prabhuomkar.pytorchandroid.R$string: int abc_menu_alt_shortcut_label
org.pytorch.R$styleable: int SearchView_queryHint
org.pytorch.R$dimen: int abc_text_size_small_material
org.pytorch.torchvision.R$attr: int spinBars
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_action_text_size
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_AppCompat_Light
org.pytorch.torchvision.R$dimen: int notification_large_icon_height
io.github.prabhuomkar.pytorchandroid.R$dimen: int item_touch_helper_max_drag_scroll_per_frame
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.camera.core.CaptureStage: int getId()
org.pytorch.torchvision.R$color: int background_material_light
androidx.appcompat.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
okhttp3.internal.http.RealInterceptorChain: okhttp3.internal.connection.StreamAllocation streamAllocation()
androidx.vectordrawable.animated.R$dimen: int notification_big_circle_margin
androidx.lifecycle.LiveData: void onInactive()
androidx.core.R$dimen: int notification_top_pad
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetClass(java.lang.Class)
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.versionedparcelable.VersionedParcel: void writeBooleanArray(boolean[])
androidx.recyclerview.selection.DefaultSelectionTracker: boolean setItemsSelected(java.lang.Iterable,boolean)
androidx.core.app.NotificationCompat$WearableExtender: java.util.List getPages()
androidx.camera.core.UseCase$StateChangeListener: void onUseCaseUpdated(androidx.camera.core.UseCase)
androidx.customview.R$id: int time
androidx.camera.core.ImageOutputConfig: android.util.Rational getTargetAspectRatioCustom()
androidx.fragment.R$id: int accessibility_custom_action_14
io.github.prabhuomkar.pytorchandroid.Constants: java.util.ArrayList TASK_IMAGE_CLASSIFICATION_MODELS
io.github.prabhuomkar.pytorchandroid.R$style: int ButtonTheme
androidx.vectordrawable.R$id: int accessibility_custom_action_2
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] CoordinatorLayout
org.pytorch.torchvision.R$dimen: int abc_text_size_menu_material
androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)
androidx.activity.R$attr
androidx.media.MediaBrowserServiceCompat: void onUnsubscribe(java.lang.String)
androidx.camera.core.Observable: void addObserver(java.util.concurrent.Executor,androidx.camera.core.Observable$Observer)
io.github.prabhuomkar.pytorchandroid.R$style: int AppTheme
androidx.activity.R$id: int tag_accessibility_actions
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_ab_back_material
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.fragment.app.Fragment: void postponeEnterTransition(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$style: int Widget_AppCompat_PopupWindow
org.pytorch.R$styleable: int AlertDialog_multiChoiceItemLayout
org.pytorch.R$styleable: int SwitchCompat_splitTrack
androidx.recyclerview.selection.DefaultSelectionTracker: void clearProvisionalSelection()
androidx.recyclerview.R$layout: int notification_action_tombstone
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState METERING
androidx.customview.R$id: int action_container
org.pytorch.Tensor: org.pytorch.DType dtype()
androidx.core.view.accessibility.AccessibilityRecordCompat: void recycle()
androidx.coordinatorlayout.R$attr: int layout_anchor
androidx.recyclerview.selection.DefaultSelectionTracker: void restoreSelection(androidx.recyclerview.selection.Selection)
androidx.legacy.v4.R$attr: int fontStyle
org.pytorch.torchvision.R$layout: int abc_list_menu_item_icon
androidx.core.view.MotionEventCompat: int AXIS_RUDDER
okio.Buffer: long indexOf(byte,long)
androidx.drawerlayout.R$integer
org.pytorch.R$id: int buttonPanel
androidx.constraintlayout.solver.ArrayRow: java.lang.String toString()
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
androidx.slidingpanelayout.R$styleable: int ColorStateListItem_android_alpha
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
org.pytorch.torchvision.R$attr: int backgroundTintMode
com.downloader.Constants: int DEFAULT_CONNECT_TIMEOUT_IN_MILLS
androidx.loader.R$styleable: int FontFamily_fontProviderPackage
androidx.media.app.NotificationCompat$MediaStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
androidx.loader.content.AsyncTaskLoader
androidx.collection.LongSparseArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
androidx.core.text.HtmlCompat
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_Solid
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
okio.ByteString: okio.ByteString of(byte[])
androidx.core.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)
org.pytorch.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
okhttp3.internal.ws.RealWebSocket: void onReadMessage(okio.ByteString)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.camera.core.PreviewConfig: android.util.Size getMaxResolution(android.util.Size)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
okhttp3.internal.http2.Http2Connection$Builder: okhttp3.internal.http2.Http2Connection$Builder pushObserver(okhttp3.internal.http2.PushObserver)
androidx.core.graphics.ColorUtils: void RGBToXYZ(int,int,int,double[])
androidx.recyclerview.widget.AsyncDifferConfig
okhttp3.Dispatcher: void cancelAll()
androidx.core.graphics.PathSegment: PathSegment(android.graphics.PointF,float,android.graphics.PointF,float)
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.drawerlayout.R$styleable: int GradientColor_android_gradientRadius
androidx.core.text.TextDirectionHeuristicsCompat
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetEnd
androidx.appcompat.R$attr: int textAllCaps
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
org.pytorch.R$attr: int elevation
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setCaptureMode(androidx.camera.core.ImageCapture$CaptureMode)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_left_mtrl_light
org.pytorch.torchvision.R$attr: int autoSizeMinTextSize
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Display2
androidx.camera.core.ImageCapture$Metadata: boolean isReversedVertical
io.github.prabhuomkar.pytorchandroid.R$style: int Animation_AppCompat_DropDownUp
org.pytorch.torchvision.R$id: int action_context_bar
androidx.appcompat.R$styleable: int TextAppearance_android_shadowDy
androidx.media.VolumeProviderCompat: void onAdjustVolume(int)
androidx.annotation.LongDef: boolean flag()
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])
androidx.recyclerview.widget.LinearLayoutManager: boolean getReverseLayout()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
org.pytorch.torchvision.R$attr: int isLightTheme
androidx.viewpager.R$attr: int fontProviderFetchTimeout
androidx.fragment.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
androidx.drawerlayout.R$style
io.github.prabhuomkar.pytorchandroid.R$id: int search_close_btn
org.pytorch.R$style: int TextAppearance_AppCompat_Body2
androidx.media.MediaBrowserProtocol: java.lang.String DATA_OPTIONS
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.camera.core.ImageCapture$OnImageCapturedListener
org.pytorch.torchvision.R$attr: int subtitle
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_big_media_custom
okhttp3.Request: okhttp3.Request$Builder newBuilder()
androidx.exifinterface.media.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_disabled_material_light
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
androidx.legacy.coreutils.R$styleable
androidx.camera.core.ImageCapture$CaptureMode: androidx.camera.core.ImageCapture$CaptureMode MAX_QUALITY
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
okio.Buffer: int readInt()
androidx.activity.R$id: int tag_accessibility_heading
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
androidx.viewpager.R$dimen: int notification_main_column_padding_top
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.appcompat.app.ActionBar$OnNavigationListener: boolean onNavigationItemSelected(int,long)
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[],int)
androidx.appcompat.R$attr: int drawableSize
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onDetachedFromLayoutParams()
androidx.core.content.pm.ActivityInfoCompat: int CONFIG_UI_MODE
io.github.prabhuomkar.pytorchandroid.R$attr: int searchHintIcon
androidx.camera.camera2.impl.Camera2CameraControl: boolean isTorchOn()
okhttp3.internal.cache.InternalCache: void trackConditionalCacheHit()
androidx.core.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)
androidx.core.R$id: int actions
androidx.coordinatorlayout.R$id: int async
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)
androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment getItem(int)
androidx.core.internal.view.SupportMenuItem: boolean expandActionView()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_homeAsUpIndicator
androidx.appcompat.R$style: int Widget_AppCompat_Light_SearchView
androidx.appcompat.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)
androidx.media.R$style: int TextAppearance_Compat_Notification_Time_Media
androidx.camera.camera2.impl.Camera2CameraControl: void startFocusAndMetering(androidx.camera.core.FocusMeteringAction)
androidx.appcompat.R$integer: int abc_config_activityShortDur
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dialogCornerRadius
android.support.v4.media.MediaBrowserCompat: java.lang.String getRoot()
androidx.customview.R$id: int right_icon
org.pytorch.R$attr: int colorAccent
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_font
org.pytorch.R$styleable: int AppCompatTheme_actionBarSize
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
org.pytorch.R$attr: int measureWithLargestChild
okhttp3.CacheControl: boolean isPrivate()
androidx.core.R$drawable
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void showForSystem()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder path(java.lang.String)
org.pytorch.torchvision.R$attr: int queryBackground
io.github.prabhuomkar.pytorchandroid.R$color: int colorAccent
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_FIXED
org.pytorch.R$layout
androidx.core.content.pm.ShortcutInfoCompat: java.lang.CharSequence getLongLabel()
androidx.loader.R$style: int Widget_Compat_NotificationActionContainer
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.legacy.coreui.R$drawable: int notification_bg_normal_pressed
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.media.R$layout: int notification_action
androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)
androidx.appcompat.R$styleable: int MenuView_android_windowAnimationStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionBarStyle
androidx.vectordrawable.R$dimen: int compat_button_padding_vertical_material
android.support.v4.media.session.IMediaSession: java.lang.String getPackageName()
androidx.loader.R$dimen: int compat_button_padding_vertical_material
com.downloader.request.DownloadRequest: void setFuture(java.util.concurrent.Future)
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_3_class
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotationY
okhttp3.internal.Util: java.util.TimeZone UTC
androidx.appcompat.app.ActionBar: android.content.Context getThemedContext()
androidx.core.view.ViewCompat: void setClipBounds(android.view.View,android.graphics.Rect)
androidx.slidingpanelayout.R$drawable: int notification_bg_low
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHeight_min
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()
org.pytorch.torchvision.R$style: int Widget_AppCompat_TextView_SpinnerItem
androidx.core.view.NestedScrollingParent: void onStopNestedScroll(android.view.View)
org.pytorch.R$attr: int showDividers
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_placeholder_content
androidx.legacy.v4.R$dimen: int compat_button_inset_vertical_material
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float circleAngle
org.pytorch.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.swiperefreshlayout.R$attr: int fontProviderFetchTimeout
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_arrowHeadLength
androidx.fragment.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)
okhttp3.ConnectionSpec$Builder: okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.loader.content.CursorLoader: void onCanceled(java.lang.Object)
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
androidx.loader.content.CursorLoader: java.lang.String[] getProjection()
org.pytorch.R$styleable: int GradientColor_android_tileMode
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.appcompat.app.WindowDecorActionBar$TabImpl: java.lang.Object getTag()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.squareup.picasso.PicassoProvider: java.lang.String getType(android.net.Uri)
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation: androidx.core.app.RemoteInput getRemoteInput()
androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_CLOSE_VIEW
org.pytorch.torchvision.R$drawable: int abc_item_background_holo_light
androidx.constraintlayout.solver.LinearSystem: void addCenterPoint(androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintWidget,float,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getDrawY()
androidx.camera.core.Exif: boolean isFlippedHorizontally()
io.github.prabhuomkar.pytorchandroid.R$color: int accent_material_light
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintBottom_toTopOf
io.github.prabhuomkar.pytorchandroid.R$id: int list_models
androidx.coordinatorlayout.R$layout: int notification_template_part_time
androidx.core.provider.FontsContractCompat$FontInfo
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintBaseline_toBaselineOf
androidx.recyclerview.widget.LinearLayoutManager: int findFirstCompletelyVisibleItemPosition()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.camera.core.ImageCapture: void setTargetRotation(int)
org.pytorch.torchvision.R$color: int switch_thumb_normal_material_light
androidx.vectordrawable.R$drawable: int notification_template_icon_low_bg
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: int HINT_SCROLL_ASC
org.pytorch.R$attr: int listPreferredItemPaddingRight
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getRight()
androidx.camera.core.AppConfig$Builder: AppConfig$Builder()
androidx.vectordrawable.R$attr: int fontProviderFetchTimeout
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_button_padding_horizontal_material
androidx.camera.core.ConfigProvider: androidx.camera.core.Config getConfig(androidx.camera.core.CameraX$LensFacing)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
org.pytorch.R$id: int action_menu_divider
org.pytorch.R$color: int primary_dark_material_light
androidx.appcompat.R$styleable: int GradientColor_android_centerX
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
okio.Buffer: okio.Buffer writeByte(int)
androidx.appcompat.app.ActionBar: void setSelectedNavigationItem(int)
androidx.coordinatorlayout.R$attr: int ttcIndex
androidx.appcompat.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)
androidx.camera.core.ImageProxy: void setTimestamp(long)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_media_narrow_margin
okio.Buffer$UnsafeCursor: void close()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean isSpanGroupIndexCacheEnabled()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: ConstraintTableLayout(int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)
androidx.recyclerview.R$styleable: int ColorStateListItem_android_alpha
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize RECORD
org.pytorch.torchvision.R$attr: int background
androidx.appcompat.R$id: int icon
androidx.loader.R$id: int title
androidx.loader.R$dimen: int compat_control_corner_material
androidx.fragment.app.FragmentPagerAdapter: long getItemId(int)
androidx.constraintlayout.solver.widgets.Guideline: void setPositionRelaxed(boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
androidx.constraintlayout.solver.LinearSystem: int getNumEquations()
androidx.core.app.NotificationCompat: int DEFAULT_ALL
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean)
androidx.recyclerview.R$id: int time
androidx.annotation.RequiresPermission$Read
androidx.fragment.R$id: int accessibility_custom_action_27
androidx.media.MediaSessionManager
androidx.recyclerview.R$id: int tag_transition_group
org.pytorch.R$drawable: int abc_text_select_handle_middle_mtrl_dark
androidx.viewpager.widget.ViewPager$SavedState
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toEndOf
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_control_padding_material
androidx.drawerlayout.R$color: int notification_icon_bg_color
androidx.core.view.ViewPropertyAnimatorListener
com.downloader.internal.DownloadRunnable: com.downloader.request.DownloadRequest request
org.pytorch.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.core.content.res.ComplexColorCompat
org.pytorch.torchvision.R$styleable: int MenuItem_numericModifiers
androidx.core.R$id: int accessibility_custom_action_10
androidx.collection.SparseArrayCompat: boolean containsValue(java.lang.Object)
androidx.camera.core.R$styleable: int ColorStateListItem_alpha
android.support.v4.media.RatingCompat: float getPercentRating()
androidx.core.net.TrafficStatsCompat: void untagSocket(java.net.Socket)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)
androidx.appcompat.R$styleable: int[] ActionBar
org.pytorch.torchvision.R$color: int dim_foreground_material_dark
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState SCANNING
androidx.camera.core.CaptureConfig: androidx.camera.core.Config getImplementationOptions()
androidx.print.PrintHelper: void printBitmap(java.lang.String,android.graphics.Bitmap)
org.pytorch.torchvision.R$attr: int goIcon
androidx.appcompat.R$drawable: int abc_ic_star_half_black_36dp
org.pytorch.torchvision.R$anim: int abc_tooltip_enter
androidx.core.R$attr: int ttcIndex
androidx.recyclerview.selection.StableIdKeyProvider: int getPosition(java.lang.Long)
androidx.constraintlayout.widget.ConstraintSet: void setAlpha(int,float)
androidx.core.graphics.ColorUtils: double calculateLuminance(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHeight_min
androidx.camera.camera2.R$id: int accessibility_custom_action_4
org.pytorch.R$style: int Base_Widget_AppCompat_ActionButton
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int describeContents()
org.pytorch.R$style: int Base_DialogWindowTitleBackground_AppCompat
androidx.recyclerview.R$styleable: int[] GradientColor
androidx.appcompat.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.media.R$styleable: int GradientColor_android_gradientRadius
okhttp3.internal.http.UnrepeatableRequestBody
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ActionMenuItemView
org.pytorch.torchvision.R$styleable: int MenuItem_android_onClick
org.pytorch.R$dimen: int abc_dropdownitem_icon_width
androidx.camera.core.ImageReaderProxy: android.view.Surface getSurface()
androidx.viewpager.widget.ViewPager: int SCROLL_STATE_IDLE
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
io.github.prabhuomkar.pytorchandroid.R$id: int action_contact
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getEndTrim()
org.pytorch.torchvision.R$attr: int actionBarWidgetTheme
org.pytorch.torchvision.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_INPUT_METHOD
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_panelBackground
okhttp3.Call: okhttp3.Call clone()
org.pytorch.R$attr: int autoSizeMinTextSize
androidx.constraintlayout.widget.ConstraintSet: void setVerticalChainStyle(int,int)
android.support.v4.media.session.MediaControllerCompat: android.os.Bundle getExtras()
okhttp3.internal.connection.ConnectInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError[] values()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: java.lang.String getColumnAlignmentRepresentation(int)
androidx.legacy.v4.R$attr: int fontProviderPackage
androidx.core.graphics.PathSegment
android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object getToken()
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
androidx.fragment.app.DialogFragment: void onActivityCreated(android.os.Bundle)
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_REQUEST
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addState(int[],android.graphics.drawable.Drawable)
androidx.slidingpanelayout.R$dimen: int notification_content_margin_start
androidx.camera.core.ImageReaderProxy
androidx.core.app.RemoteInput: java.lang.String RESULTS_CLIP_LABEL
androidx.exifinterface.media.ExifInterface: short SUBJECT_DISTANCE_RANGE_DISTANT_VIEW
org.pytorch.torchvision.R$string: int abc_toolbar_collapse_description
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
androidx.appcompat.R$id: int parentPanel
androidx.core.app.NotificationCompat: java.lang.String getCategory(android.app.Notification)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_edit_text_inset_top_material
org.pytorch.torchvision.R$dimen: int abc_dialog_fixed_width_minor
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment[] values()
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_APPEARED
org.pytorch.torchvision.R$attr: int textAppearanceSearchResultTitle
androidx.constraintlayout.solver.widgets.Rectangle: Rectangle()
androidx.legacy.coreui.R$layout: int notification_template_icon_group
org.pytorch.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.downloader.internal.DownloadRequestQueue: com.downloader.Status getStatus(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderAuthority
androidx.legacy.coreutils.R$layout: int notification_template_icon_group
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeMovementFlags(int,int)
androidx.swiperefreshlayout.R$drawable: int notification_bg
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getOptimizerWrapHeight()
org.pytorch.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
io.github.prabhuomkar.pytorchandroid.R$id: int status_bar_latest_event_content
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
androidx.camera.core.CameraInfo: androidx.lifecycle.LiveData isFlashAvailable()
androidx.recyclerview.widget.ItemTouchHelper$ViewDropHandler
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_progressBarStyle
androidx.camera.core.MeteringPoint: void setSize(float)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$TabListener getCallback()
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[])
androidx.camera.core.ImageProxy: int getHeight()
androidx.legacy.v4.R$id: int none
androidx.recyclerview.R$dimen: int notification_right_side_padding_top
androidx.customview.widget.ViewDragHelper: int STATE_SETTLING
androidx.recyclerview.widget.LinearLayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.appcompat.app.ActionBar: int getNavigationMode()
androidx.camera.core.Exif: void attachTimestamp()
androidx.collection.ArraySet: void ensureCapacity(int)
androidx.fragment.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.widget.SearchView
org.pytorch.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.annotation.RestrictTo: androidx.annotation.RestrictTo$Scope[] value()
androidx.appcompat.R$attr: int textAppearanceListItemSmall
androidx.legacy.coreui.R$id: int action_text
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_REPEAT_MODE
androidx.core.app.NotificationCompat$BadgeIconType
io.github.prabhuomkar.pytorchandroid.R$id: int list_item
androidx.recyclerview.widget.AsyncListDiffer: AsyncListDiffer(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_MANUAL
okhttp3.Handshake: int hashCode()
okio.BufferedSink: long writeAll(okio.Source)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.loader.app.LoaderManager: androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_actionProviderClass
androidx.appcompat.R$style: int Base_Theme_AppCompat
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()
org.pytorch.IValue: boolean isTensorList()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionButton_CloseMode
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_translationX
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(android.view.View,boolean)
org.pytorch.R$id: int normal
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_NULL_MD5
androidx.swiperefreshlayout.R$id: int tag_transition_group
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int leftToLeft
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
androidx.appcompat.app.AppCompatDialog: void onStop()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)
android.support.v4.media.session.MediaSessionCompat: android.support.v4.media.session.MediaControllerCompat getController()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleTextAppearance
androidx.activity.R$layout: int notification_action_tombstone
androidx.appcompat.R$attr: int fontProviderAuthority
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setCaptureProcessor(androidx.camera.core.CaptureProcessor)
okio.Buffer: okio.BufferedSink emit()
okhttp3.internal.connection.StreamAllocation
androidx.core.app.RemoteInput: java.util.Set getAllowedDataTypes()
androidx.core.widget.AutoSizeableTextView
okhttp3.internal.cache.DiskLruCache: okhttp3.internal.cache.DiskLruCache create(okhttp3.internal.io.FileSystem,java.io.File,int,int,long)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: int getPadding()
okio.Timeout: okio.Timeout clearDeadline()
androidx.recyclerview.selection.SelectionTracker: void extendProvisionalRange(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
org.pytorch.R$style: int Widget_AppCompat_TextView_SpinnerItem
org.pytorch.torchvision.R$styleable: int[] AppCompatImageView
android.support.v4.media.session.MediaControllerCompat$TransportControls: void playFromUri(android.net.Uri,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatSeekBar_tickMark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isHeading()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.viewpager.widget.PagerAdapter: int POSITION_NONE
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
androidx.appcompat.widget.DecorToolbar: android.view.ViewGroup getViewGroup()
androidx.core.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()
okhttp3.internal.http.RetryAndFollowUpInterceptor: boolean isCanceled()
androidx.constraintlayout.widget.ConstraintLayout: void solveLinearSystem(java.lang.String)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_maxWidth
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable)
com.squareup.picasso.OkHttp3Downloader
org.pytorch.R$styleable: int AppCompatTheme_actionModeCloseDrawable
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_OFFLINE
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setDefaultSessionConfig(androidx.camera.core.SessionConfig)
androidx.core.R$attr: int fontProviderFetchStrategy
android.support.v4.media.MediaBrowserCompat: void connect()
okio.GzipSink: java.util.zip.Deflater deflater()
androidx.camera.camera2.impl.Camera2Initializer
androidx.recyclerview.widget.RecyclerView$OnScrollListener
androidx.media.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.localbroadcastmanager.content.LocalBroadcastManager: void sendBroadcastSync(android.content.Intent)
android.support.v4.media.session.PlaybackStateCompat: long getLastPositionUpdateTime()
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_VERSION_ID
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap getBitmap()
android.support.v4.media.session.PlaybackStateCompat: int STATE_PAUSED
androidx.camera.core.R$id: int accessibility_custom_action_29
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Display1
androidx.camera.core.SessionConfig: java.util.List getDeviceStateCallbacks()
androidx.fragment.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: int getChildCount()
androidx.core.app.NotificationCompat: java.lang.String EXTRA_LARGE_ICON_BIG
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
androidx.collection.ArrayMap: java.util.Collection values()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_end
androidx.camera.core.impl.utils.executor.CameraXExecutors: java.util.concurrent.Executor newSequentialExecutor(java.util.concurrent.Executor)
org.pytorch.R$dimen: int tooltip_horizontal_padding
androidx.appcompat.R$color: int material_grey_850
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderQuery
androidx.customview.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.camera.core.CameraDeviceSurfaceManager: android.util.Rational getCorrectedAspectRatio(androidx.camera.core.UseCaseConfig)
androidx.core.view.PointerIconCompat: int TYPE_ALL_SCROLL
androidx.core.view.KeyEventDispatcher$Component
androidx.drawerlayout.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
org.pytorch.R$attr: int actionViewClass
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean hasAntiAlias()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
io.github.prabhuomkar.pytorchandroid.helpers.FragmentHelper
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: androidx.constraintlayout.solver.LinearSystem mSystem
okio.ForwardingTimeout: void throwIfReached()
androidx.appcompat.R$id: int action_context_bar
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
androidx.drawerlayout.R$styleable: int[] FontFamilyFont
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String feedbackTypeToString(int)
androidx.collection.LongSparseArray: java.lang.Object putIfAbsent(long,java.lang.Object)
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_DAYLIGHT
org.pytorch.R$attr: int colorButtonNormal
org.pytorch.R$styleable: int ButtonBarLayout_allowStacking
androidx.media.MediaBrowserProtocol: int CLIENT_MSG_SEND_CUSTOM_ACTION
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
org.pytorch.R$dimen: int compat_button_padding_horizontal_material
androidx.camera.camera2.R$styleable: int FontFamilyFont_fontStyle
io.github.prabhuomkar.pytorchandroid.R$id: int center_horizontal
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
android.support.v4.media.session.IMediaControllerCallback: void onQueueChanged(java.util.List)
androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()
androidx.appcompat.R$attr: int autoSizeTextType
com.downloader.core.MainThreadExecutor
org.pytorch.torchvision.R$styleable: int AppCompatTheme_alertDialogStyle
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence)
org.pytorch.torchvision.R$styleable: int Toolbar_contentInsetLeft
androidx.camera.core.SurfaceCombination
androidx.activity.R$drawable: int notification_template_icon_bg
androidx.camera.core.CaptureProcessor: void process(androidx.camera.core.ImageProxyBundle)
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState UNKNOWN
org.pytorch.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.R$color: int secondary_text_default_material_dark
androidx.activity.R$id: int accessibility_custom_action_16
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_fastScrollHorizontalTrackDrawable
io.github.prabhuomkar.pytorchandroid.R$attr: int backgroundTint
org.pytorch.R$attr: int textAppearanceSearchResultTitle
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.app.WindowDecorActionBar: void setHomeAsUpIndicator(int)
io.github.prabhuomkar.pytorchandroid.R$id: int custom
androidx.loader.content.CursorLoader: CursorLoader(android.content.Context)
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_Dialog
okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$attr: int switchPadding
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_bias
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
androidx.constraintlayout.solver.Metrics: long measures
org.pytorch.torchvision.R$attr: int buttonBarStyle
androidx.core.content.MimeTypeFilter: java.lang.String[] matchesMany(java.lang.String[],java.lang.String)
org.pytorch.R$styleable: int SwitchCompat_trackTintMode
io.github.prabhuomkar.pytorchandroid.R$dimen: int hint_alpha_material_light
androidx.core.app.NavUtils: void navigateUpFromSameTask(android.app.Activity)
androidx.recyclerview.widget.AsyncDifferConfig$Builder: androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Caption
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: void onPageSelected(int)
androidx.constraintlayout.solver.widgets.WidgetContainer: void resetSolverVariables(androidx.constraintlayout.solver.Cache)
androidx.appcompat.R$id: int custom
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int)
androidx.activity.R$id: int text
org.pytorch.torchvision.R$attr: int textAppearancePopupMenuHeader
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback
io.github.prabhuomkar.pytorchandroid.R$attr: int alertDialogCenterButtons
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_DEFAULT
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.activity.R$id: int accessibility_custom_action_28
okio.Buffer: okio.Buffer writeLong(long)
androidx.constraintlayout.widget.ConstraintSet: androidx.constraintlayout.widget.ConstraintSet$Constraint getParameters(int)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.asynclayoutinflater.R$drawable: int notification_bg_low_normal
androidx.loader.R$styleable: int FontFamilyFont_font
android.support.v4.media.MediaDescriptionCompat: long STATUS_DOWNLOADING
androidx.media.MediaBrowserServiceCompat: java.lang.String KEY_MEDIA_ITEM
androidx.core.app.NotificationCompat$WearableExtender: int SIZE_SMALL
org.pytorch.torchvision.R$styleable: int FontFamily_fontProviderFetchTimeout
io.github.prabhuomkar.pytorchandroid.R$attr: int initialActivityCount
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setX(int)
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
org.pytorch.torchvision.R$id: int action_bar_activity_content
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirst()
androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetResolution(android.util.Size)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Animation_AppCompat_Dialog
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean optimizeFor(int)
org.pytorch.R$styleable: int MenuItem_android_visible
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mVerticalResolution
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.constraintlayout.widget.R
androidx.camera.core.CameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AfState getAfState()
org.pytorch.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.legacy.coreui.R$id: int async
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setBaselineDistance(int)
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType: androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType[] values()
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.R
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)
androidx.core.app.NotificationCompat: int PRIORITY_HIGH
androidx.fragment.R$style: int Widget_Compat_NotificationActionContainer
androidx.customview.R$id: int info
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.legacy.coreui.R$id: int notification_main_column_container
org.pytorch.R$styleable: int MenuGroup_android_checkableBehavior
io.github.prabhuomkar.pytorchandroid.R$string: int abc_shareactionprovider_share_with_application
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_default
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View)
androidx.constraintlayout.widget.ConstraintSet: void addToVerticalChain(int,int,int)
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
androidx.appcompat.app.ActionBar: int getDisplayOptions()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_minHeight
androidx.fragment.app.FragmentContainer: android.view.View onFindViewById(int)
io.github.prabhuomkar.pytorchandroid.R$attr: int track
org.pytorch.R$style: int Base_V21_Theme_AppCompat
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
org.pytorch.R$id: int up
androidx.customview.widget.ViewDragHelper$Callback
androidx.camera.core.CameraX: com.google.common.util.concurrent.ListenableFuture deinit()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_list_menu_item_radio
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_SCROLLED
org.pytorch.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.appcompat.resources.R$id: int accessibility_custom_action_18
org.pytorch.torchvision.R$styleable: int ActionBar_progressBarPadding
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews)
androidx.appcompat.R$id: int add
androidx.media.R$styleable: int GradientColor_android_type
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.R$attr: int windowFixedHeightMajor
androidx.camera.camera2.R$id: int right_icon
org.pytorch.torchvision.R$color: int abc_btn_colored_borderless_text_material
androidx.appcompat.R$style: int TextAppearance_AppCompat_Small
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
androidx.loader.R$layout: int notification_action_tombstone
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_gradientRadius
androidx.loader.R$id: int tag_transition_group
org.pytorch.torchvision.R$dimen: int notification_big_circle_margin
android.support.v4.media.session.MediaSessionCompat: int FLAG_HANDLES_TRANSPORT_CONTROLS
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: float getBarLength()
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getBiasPercent(int)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
androidx.core.app.NotificationCompat: int FLAG_FOREGROUND_SERVICE
io.github.prabhuomkar.pytorchandroid.R$id: int checked
io.github.prabhuomkar.pytorchandroid.R$attr: int closeIcon
androidx.camera.core.ErrorHandler: ErrorHandler()
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
androidx.core.view.MenuItemCompat: android.view.View getActionView(android.view.MenuItem)
androidx.constraintlayout.widget.Constraints$LayoutParams: float rotation
org.pytorch.torchvision.R$attr: int suggestionRowLayout
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.constraintlayout.solver.widgets.Guideline: int mRelativeEnd
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_D75
okhttp3.Headers$Builder: okhttp3.Headers$Builder add(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int MATCH_CONSTRAINT_WRAP
androidx.camera.core.R$id: int accessibility_custom_action_0
androidx.recyclerview.R$id: int tag_unhandled_key_event_manager
okhttp3.internal.http.HttpMethod: boolean redirectsToGet(java.lang.String)
androidx.activity.R$id: int async
androidx.camera.camera2.R$dimen: int notification_big_circle_margin
androidx.viewpager.widget.ViewPager: void endFakeDrag()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
androidx.core.content.ContextCompat: java.io.File[] getObbDirs(android.content.Context)
androidx.vectordrawable.R$id: int tag_unhandled_key_listeners
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GAIN_CONTROL
androidx.appcompat.R$styleable: int AppCompatImageView_android_src
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)
org.pytorch.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context)
androidx.camera.core.VideoCaptureConfig: int getAudioRecordSource(int)
okio.Utf8: long size(java.lang.String)
androidx.loader.app.LoaderManager$LoaderCallbacks: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)
androidx.core.widget.ListViewCompat
androidx.appcompat.widget.SwitchCompat: void jumpDrawablesToCurrentState()
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuGroup_android_id
androidx.appcompat.R$color: int abc_secondary_text_material_light
androidx.legacy.coreutils.R$attr: int fontProviderFetchStrategy
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] CardView
androidx.appcompat.R$drawable: int abc_list_pressed_holo_dark
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Button
androidx.customview.R$id: int forever
androidx.appcompat.widget.ListPopupWindow: int getPromptPosition()
androidx.constraintlayout.widget.Constraints: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
okhttp3.HttpUrl: java.lang.String encodedQuery()
androidx.slidingpanelayout.R$id: int action_text
androidx.appcompat.R$id: int listMode
com.downloader.Status: com.downloader.Status PAUSED
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
okhttp3.internal.connection.RouteSelector: RouteSelector(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener)
com.facebook.jni.MapIteratorHelper
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
org.pytorch.R$styleable: int DrawerArrowToggle_spinBars
org.pytorch.torchvision.R$styleable: int[] CoordinatorLayout
com.squareup.picasso.RequestHandler: com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat
androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int HORIZONTAL
androidx.customview.widget.ViewDragHelper: boolean continueSettling(boolean)
androidx.camera.camera2.R$id: int accessibility_custom_action_14
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.camera.core.ImageProxy: androidx.camera.core.ImageProxy$PlaneProxy[] getPlanes()
okhttp3.CipherSuite: java.lang.String javaName()
org.pytorch.R$attr: int windowActionBar
org.pytorch.R$attr: int coordinatorLayoutStyle
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder eventListener(okhttp3.EventListener)
androidx.core.os.EnvironmentCompat
androidx.appcompat.R$style: int TextAppearance_AppCompat
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.concurrent.futures.AbstractResolvableFuture: boolean cancel(boolean)
org.pytorch.torchvision.R$attr: int colorControlNormal
androidx.legacy.v4.R$dimen: int notification_small_icon_size_as_large
androidx.legacy.coreutils.R$dimen: int compat_button_padding_vertical_material
androidx.asynclayoutinflater.R$styleable: int GradientColorItem_android_color
androidx.drawerlayout.R$style: int Widget_Compat_NotificationActionContainer
org.pytorch.R$layout: int abc_popup_menu_item_layout
okhttp3.internal.http.HttpCodec: void writeRequestHeaders(okhttp3.Request)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_GESTURE_DETECTION_START
androidx.camera.core.CameraCaptureCallbacks$ComboCameraCaptureCallback: java.util.List getCallbacks()
androidx.media.AudioAttributesCompat: int USAGE_GAME
androidx.annotation.RestrictTo
androidx.viewpager.widget.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Target: java.lang.String[] IMAGENET_TARGET_CLASSES
android.support.v4.media.MediaBrowserCompat: void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$CustomActionCallback)
androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
androidx.appcompat.view.SupportMenuInflater
org.pytorch.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.appcompat.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setRoleDescription(java.lang.CharSequence)
androidx.core.provider.FontRequest: java.lang.String getQuery()
androidx.activity.R$id: int accessibility_custom_action_23
android.support.v4.media.session.PlaybackStateCompat: int STATE_REWINDING
androidx.camera.core.R$dimen: int compat_button_inset_vertical_material
org.pytorch.torchvision.R$styleable: int GradientColorItem_android_offset
okhttp3.EventListener: void dnsEnd(okhttp3.Call,java.lang.String,java.util.List)
io.github.prabhuomkar.pytorchandroid.R$attr: int goIcon
androidx.camera.camera2.R$dimen: int notification_action_icon_size
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listMenuViewStyle
okio.Buffer: long readDecimalLong()
androidx.core.R$id: int tag_unhandled_key_event_manager
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: int DIRECTION_LEFT
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ProgressBar
org.pytorch.R$styleable: int AppCompatTheme_alertDialogTheme
androidx.customview.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.app.WindowDecorActionBar: boolean hasIcon()
androidx.loader.content.CursorLoader: java.lang.String[] getSelectionArgs()
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_layoutManager
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle
okio.Options: okio.Options of(okio.ByteString[])
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
okhttp3.Cookie: okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String)
androidx.lifecycle.LifecycleRegistryOwner
io.github.prabhuomkar.pytorchandroid.R$styleable: int View_android_focusable
androidx.appcompat.R$id: int accessibility_custom_action_19
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ARTIST
androidx.appcompat.widget.ShareActionProvider: void setShareIntent(android.content.Intent)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.swiperefreshlayout.R$drawable: int notification_action_background
org.pytorch.torchvision.R$id: int actions
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintEnd_toEndOf
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.TintAwareDrawable: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)
org.pytorch.torchvision.R$styleable: int MenuItem_android_checkable
androidx.recyclerview.widget.DiffUtil$Callback: int getOldListSize()
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String BUTTON_STATE_DOWNLOADING
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
androidx.drawerlayout.widget.DrawerLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.camera.core.VideoCaptureConfig: java.lang.Class getTargetClass(java.lang.Class)
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionOverflowButtonStyle
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
androidx.recyclerview.R$id: int accessibility_custom_action_16
androidx.viewpager.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.fragment.R$id: int line3
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
org.pytorch.torchvision.R$drawable: int abc_cab_background_top_material
androidx.swiperefreshlayout.R$dimen: int compat_notification_large_icon_max_width
io.github.prabhuomkar.pytorchandroid.R$dimen: int cardview_default_radius
org.pytorch.torchvision.R$styleable: int AppCompatTheme_imageButtonStyle
androidx.appcompat.R$styleable: int ActionBar_progressBarPadding
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.appcompat.R$attr: int elevation
io.github.prabhuomkar.pytorchandroid.R$color: int notification_action_color_filter
androidx.appcompat.widget.SearchView: boolean isSubmitButtonEnabled()
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
okhttp3.Dns: okhttp3.Dns SYSTEM
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA
androidx.appcompat.resources.R$dimen: int notification_right_icon_size
okhttp3.ConnectionPool
androidx.constraintlayout.solver.widgets.Analyzer: void setPosition(java.util.List,int,int)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setMaxCaptureStages(int)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int,int,int)
androidx.recyclerview.widget.OrientationHelper: int getTransformedEndWithDecoration(android.view.View)
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ActionBar_TabView
androidx.core.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_type
androidx.appcompat.resources.R$layout
androidx.core.view.accessibility.AccessibilityEventCompat: void setAction(android.view.accessibility.AccessibilityEvent,int)
androidx.core.app.NotificationCompat$Style: void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews)
androidx.core.R$attr: int fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_bg_low_normal
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long)
androidx.recyclerview.widget.RecyclerView: int getChildAdapterPosition(android.view.View)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
androidx.viewpager.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.R$attr: int drawerArrowStyle
com.downloader.internal.DownloadRunnable: void run()
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean canSlide()
androidx.camera.core.ImageAnalysis$Analyzer
androidx.appcompat.app.ActionBar: void setDisplayShowHomeEnabled(boolean)
androidx.core.app.Person: androidx.core.app.Person$Builder toBuilder()
androidx.legacy.coreutils.R$drawable: int notification_action_background
androidx.media.R$styleable: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingStart()
androidx.annotation.InspectableProperty: boolean hasAttributeId()
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType INFERRED
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean canOpenPopup()
androidx.appcompat.R$styleable: int DrawerArrowToggle_barLength
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setView(android.view.View)
android.support.v4.media.session.MediaControllerCompat: boolean dispatchMediaButtonEvent(android.view.KeyEvent)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_Compat_Notification_Media
org.pytorch.R$dimen: int abc_text_size_display_4_material
androidx.camera.core.VideoCaptureConfig: int getBitRate(int)
androidx.appcompat.widget.ListPopupWindow
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: void onBindViewHolder(io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView,int)
androidx.media.R$id: int action_image
org.pytorch.torchvision.R$attr: int backgroundTint
androidx.asynclayoutinflater.R$styleable: int[] ColorStateListItem
androidx.swiperefreshlayout.R$styleable: int ColorStateListItem_android_color
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
androidx.camera.camera2.R$layout: int notification_template_part_time
com.squareup.picasso.Picasso$LoadedFrom: com.squareup.picasso.Picasso$LoadedFrom NETWORK
androidx.appcompat.R$styleable: int[] ButtonBarLayout
androidx.viewpager.widget.ViewPager: void clearOnPageChangeListeners()
androidx.legacy.coreui.R$drawable: int notification_bg_low
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mY
androidx.core.R$id: int accessibility_custom_action_9
androidx.appcompat.resources.R$id: int accessibility_custom_action_7
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.torchvision.R$id: int action_mode_close_button
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.R$integer
androidx.appcompat.R$styleable: int GradientColorItem_android_offset
androidx.core.util.AtomicFile: java.io.File getBaseFile()
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE_EXTEND
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
okhttp3.internal.tls.BasicTrustRootIndex: java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate)
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
androidx.core.os.CancellationSignal: void cancel()
androidx.loader.R$layout: int notification_template_part_time
androidx.legacy.v4.R$layout: int notification_media_action
io.github.prabhuomkar.pytorchandroid.R$id: int app_info_name
okhttp3.internal.http.RealResponseBody: long contentLength()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
org.pytorch.R$style: int Widget_AppCompat_PopupWindow
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_END
androidx.constraintlayout.solver.SolverVariable: int STRENGTH_HIGH
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_CardView
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_search_dropdown_item_icons_2line
androidx.appcompat.R$style: int Widget_AppCompat_SeekBar
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
org.pytorch.torchvision.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
androidx.recyclerview.R$id: int forever
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_12
android.support.v4.media.MediaMetadataCompat$Builder: android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void clearMenuPresenters()
androidx.appcompat.R$dimen: int abc_edit_text_inset_bottom_material
io.github.prabhuomkar.pytorchandroid.R$integer: int cancel_button_image_alpha
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long)
androidx.swiperefreshlayout.R$attr: int fontProviderAuthority
androidx.versionedparcelable.VersionedParcel: void writeFloatArray(float[],int)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_0
org.pytorch.R$dimen: int notification_media_narrow_margin
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_constraintSet
androidx.asynclayoutinflater.R$dimen: int compat_button_inset_vertical_material
androidx.camera.core.CameraControlInternal: void setCropRegion(android.graphics.Rect)
androidx.customview.R$drawable: int notification_tile_bg
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.constraintlayout.solver.widgets.ConstraintAnchor
androidx.fragment.app.Fragment: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_CompactMenu
org.pytorch.torchvision.R$color: int bright_foreground_disabled_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.app.WindowDecorActionBar: float getElevation()
androidx.recyclerview.selection.SelectionTracker$Builder
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_dodgeInsetEdges
androidx.constraintlayout.widget.R$attr: int layout_constraintWidth_max
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_CLEAR_SELECTION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View,int)
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.camera.core.ImageOutputConfig: android.util.Size getTargetResolution(android.util.Size)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimensionRatio(float,int)
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe()
okhttp3.internal.platform.Platform
okhttp3.internal.http.HttpMethod
androidx.core.app.NotificationCompat$Action$WearableExtender: boolean isAvailableOffline()
androidx.appcompat.resources.R$id: int tag_accessibility_heading
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_min_width_major
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintRight_toLeftOf
okio.Options
androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
androidx.constraintlayout.solver.LinearSystem: void addGreaterBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int spanCount
androidx.customview.R$id: int tag_unhandled_key_event_manager
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()
androidx.viewpager.widget.PagerTitleStrip: void requestLayout()
androidx.core.graphics.drawable.IconCompat
com.squareup.picasso.StatsSnapshot: long averageDownloadSize
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
androidx.legacy.v4.R$style
android.support.v4.media.MediaMetadataCompat: java.lang.CharSequence getText(java.lang.String)
androidx.customview.R$attr: int alpha
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_3
io.github.prabhuomkar.pytorchandroid.R$attr: int isLightTheme
androidx.appcompat.app.ActionBar: void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
androidx.appcompat.app.WindowDecorActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.DiffUtil$DiffResult: void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintWidth_default
com.facebook.fbjni.BuildConfig: java.lang.String VERSION_NAME
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
io.github.prabhuomkar.pytorchandroid.R$drawable: int tooltip_frame_light
androidx.appcompat.R$dimen: int compat_button_inset_horizontal_material
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.core.app.SharedElementCallback: SharedElementCallback()
androidx.core.content.pm.ShortcutInfoCompatSaver: ShortcutInfoCompatSaver()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependents(android.view.View)
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1
androidx.coordinatorlayout.R$id: int tag_transition_group
androidx.exifinterface.media.ExifInterface: short GPS_MEASUREMENT_DIFFERENTIAL_CORRECTED
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
okhttp3.MultipartBody
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB
androidx.activity.R$id: int accessibility_custom_action_17
androidx.camera.core.ImageOutputConfig: android.util.Size getDefaultResolution()
org.pytorch.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
androidx.drawerlayout.widget.DrawerLayout: int STATE_SETTLING
androidx.core.content.PermissionChecker
org.pytorch.torchvision.R$styleable: int AppCompatTheme_textAppearanceListItem
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SPEED_REF
androidx.recyclerview.widget.LinearLayoutManager: boolean getStackFromEnd()
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DISTANCE_MILES
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)
androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.camera.core.ImageAnalysisConfig: android.util.Size getDefaultResolution(android.util.Size)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PEOPLE
androidx.core.content.pm.ShortcutInfoCompat: android.content.ComponentName getActivity()
okio.BufferedSource: int read(byte[])
org.pytorch.torchvision.R$styleable: int GradientColor_android_centerColor
androidx.core.internal.view.SupportMenuItem: int getAlphabeticModifiers()
androidx.media.VolumeProviderCompat$Callback: void onVolumeChanged(androidx.media.VolumeProviderCompat)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachView(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: void hide()
android.support.v4.media.session.IMediaSession: java.lang.String getTag()
androidx.legacy.coreui.R$dimen: int notification_top_pad
androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
okhttp3.EventListener: void callEnd(okhttp3.Call)
androidx.appcompat.app.ActionBar: boolean collapseActionView()
androidx.fragment.R$drawable: int notification_bg_normal_pressed
org.pytorch.torchvision.R$styleable: int SwitchCompat_thumbTintMode
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config)
androidx.appcompat.app.ActionBar: void setTitle(int)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)
androidx.appcompat.R$attr: int seekBarStyle
com.downloader.Status
org.pytorch.torchvision.R$styleable: int MenuItem_actionLayout
okhttp3.Route: Route(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] MenuGroup
androidx.constraintlayout.widget.ConstraintSet: int INVISIBLE
okhttp3.internal.http.RealInterceptorChain: int writeTimeoutMillis()
androidx.camera.core.CameraX: java.util.Collection getActiveUseCases()
io.github.prabhuomkar.pytorchandroid.R$drawable: int pytorch_icon
org.pytorch.R$styleable: int SwitchCompat_android_textOn
androidx.recyclerview.widget.RecyclerView$ItemAnimator: boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void fastForward()
androidx.appcompat.app.ActionBar: int getTabCount()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
org.pytorch.R$dimen: int abc_text_size_title_material
androidx.annotation.HalfFloat
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_goneMarginTop
androidx.coordinatorlayout.R$id: int start
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_AUTO_TIME
androidx.exifinterface.media.ExifInterface: short EXPOSURE_MODE_AUTO
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textColorHint
androidx.appcompat.R$dimen: int abc_text_size_display_3_material
androidx.drawerlayout.R$dimen: int notification_large_icon_width
androidx.appcompat.R$drawable: int abc_ic_star_black_48dp
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: android.graphics.Paint getPaint()
androidx.appcompat.R$id: int action_text
androidx.appcompat.app.AppCompatDelegate$NightMode
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float)
androidx.fragment.app.FragmentTransitionImpl: void setEpicenter(java.lang.Object,android.view.View)
androidx.core.widget.ListPopupWindowCompat: android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.core.text.TextDirectionHeuristicCompat: boolean isRtl(char[],int,int)
androidx.recyclerview.widget.GridLayoutManager: void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: int refreshData()
androidx.constraintlayout.widget.Constraints: void onLayout(boolean,int,int,int,int)
org.pytorch.R$styleable: int TextAppearance_textLocale
org.pytorch.torchvision.R$attr: int hideOnContentScroll
androidx.recyclerview.widget.RecyclerView: boolean hasPendingAdapterUpdates()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_lineHeight
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
androidx.fragment.app.Fragment: android.content.Context requireContext()
androidx.coordinatorlayout.R$dimen: int notification_small_icon_background_padding
io.github.prabhuomkar.pytorchandroid.R$color: int switch_thumb_material_light
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean handlesInternalConstraints()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int CHAIN_SPREAD
androidx.recyclerview.widget.SortedList$Callback: java.lang.Object getChangePayload(java.lang.Object,java.lang.Object)
com.downloader.Error: void setServerError(boolean)
okhttp3.EventListener: void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException)
androidx.versionedparcelable.ParcelUtils: java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String)
androidx.camera.camera2.Camera2AppConfig
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType GRAVITY
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
androidx.appcompat.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_DISABLED
android.support.v4.media.RatingCompat: boolean isThumbUp()
androidx.constraintlayout.solver.LinearSystem: androidx.constraintlayout.solver.Metrics getMetrics()
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_fontFamily
org.pytorch.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
androidx.activity.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.core.app.FrameMetricsAggregator: void add(android.app.Activity)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_constraint_referenced_ids
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
androidx.camera.core.CameraDeviceSurfaceManager: android.util.Size getPreviewSize()
androidx.appcompat.R$color: int highlighted_text_material_dark
androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.loader.R$dimen: int notification_right_icon_size
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.app.AppCompatDelegate: int FEATURE_SUPPORT_ACTION_BAR
com.downloader.request.DownloadRequest: void setFileName(java.lang.String)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_startY
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
org.pytorch.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: java.lang.Object unwrap()
org.pytorch.R$id: int italic
org.pytorch.R$drawable: int abc_btn_radio_to_on_mtrl_000
okhttp3.Protocol: okhttp3.Protocol QUIC
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_translationX
androidx.appcompat.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
org.pytorch.R$id: int customPanel
okhttp3.OkHttpClient: boolean followRedirects()
org.pytorch.torchvision.R$attr: int fontStyle
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: boolean setCancelled()
org.pytorch.R$layout: int notification_action
androidx.recyclerview.R$color
androidx.appcompat.widget.DialogTitle
androidx.constraintlayout.widget.R$attr: int layout_goneMarginLeft
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_black_36dp
androidx.camera.core.R$id: int accessibility_custom_action_3
androidx.appcompat.view.StandaloneActionMode: void finish()
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)
androidx.customview.widget.ViewDragHelper: int DIRECTION_VERTICAL
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
androidx.camera.core.SessionConfig$ErrorListener: void onError(androidx.camera.core.SessionConfig,androidx.camera.core.SessionConfig$SessionError)
androidx.legacy.coreui.R$attr: int fontProviderCerts
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_android_fontStyle
org.pytorch.R$styleable: int AppCompatTheme_actionModeCutDrawable
androidx.vectordrawable.animated.R$id: int icon_group
androidx.appcompat.R$attr: int windowActionBar
okhttp3.TlsVersion
androidx.appcompat.widget.DecorToolbar: void setNavigationMode(int)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SYSTEM
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView: boolean needsDividerBefore()
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_TARGET_RESOLUTION
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_COMPONENTS_CONFIGURATION
org.pytorch.R$string: int abc_capital_off
androidx.recyclerview.widget.RecyclerView: int getChildPosition(android.view.View)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
androidx.appcompat.R$style: int Theme_AppCompat_DayNight_Dialog
androidx.core.net.ConnectivityManagerCompat
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder value(java.lang.String)
androidx.core.view.MotionEventCompat: int AXIS_Z
okhttp3.Response$Builder: okhttp3.Response$Builder body(okhttp3.ResponseBody)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Title
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.appcompat.widget.LinearLayoutCompat: boolean isBaselineAligned()
org.pytorch.R$id: int search_close_btn
androidx.recyclerview.widget.SortedList: void addAll(java.lang.Object[],boolean)
androidx.camera.camera2.impl.Camera2CameraFactory: java.lang.String cameraIdForLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DATETIME_ORIGINAL
androidx.legacy.coreutils.R$id: int text2
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: boolean hasSelectionKey()
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean isInHorizontalChain()
androidx.drawerlayout.R$id: int forever
com.downloader.Response
androidx.constraintlayout.solver.widgets.ChainHead: androidx.constraintlayout.solver.widgets.ConstraintWidget getFirstMatchConstraintWidget()
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
okhttp3.internal.NamedRunnable: void run()
androidx.camera.core.CameraInfoUnavailableException: CameraInfoUnavailableException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.AppCompatSpinner
androidx.appcompat.R$attr: int buttonBarNeutralButtonStyle
org.pytorch.R$drawable: int notification_tile_bg
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
android.support.v4.media.MediaMetadataCompat: int size()
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.camera.core.ImageCapture: java.lang.String toString()
androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)
org.pytorch.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constrainedWidth
androidx.appcompat.R$style: int TextAppearance_AppCompat_Caption
androidx.coordinatorlayout.widget.CoordinatorLayout: void onStopNestedScroll(android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$color: int secondary_text_disabled_material_dark
org.pytorch.R$styleable: int CoordinatorLayout_Layout_android_layout_gravity
androidx.constraintlayout.widget.R$attr: int layout_optimizationLevel
androidx.media.R$layout: int notification_template_media
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
androidx.fragment.app.FragmentController: androidx.loader.app.LoaderManager getSupportLoaderManager()
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarDivider
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState[] values()
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setSurfaceOccupancyPriority(int)
okhttp3.internal.Util: int delimiterOffset(java.lang.String,int,int,char)
androidx.camera.core.UseCase: int getImageFormat()
okhttp3.Interceptor$Chain: int readTimeoutMillis()
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
androidx.collection.CircularIntArray: int getFirst()
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] stop()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
okhttp3.internal.ws.WebSocketProtocol
org.pytorch.torchvision.R$styleable: int[] MenuView
io.github.prabhuomkar.pytorchandroid.R$id: int search_go_btn
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: androidx.core.view.AccessibilityDelegateCompat getItemDelegate()
androidx.annotation.RequiresPermission: java.lang.String value()
androidx.camera.core.FocusMeteringAction$Builder: androidx.camera.core.FocusMeteringAction$Builder disableAutoCancel()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dialogPreferredPadding
org.pytorch.R$styleable: int AppCompatTheme_actionModePasteDrawable
org.pytorch.R$styleable: int SwitchCompat_trackTint
org.pytorch.Tensor: org.pytorch.Tensor fromBlobUnsigned(java.nio.ByteBuffer,long[])
androidx.core.R$dimen: int notification_main_column_padding_top
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener
androidx.camera.core.CameraCaptureCallbacks: androidx.camera.core.CameraCaptureCallback createComboCallback(androidx.camera.core.CameraCaptureCallback[])
androidx.camera.core.MutableOptionsBundle: androidx.camera.core.MutableOptionsBundle from(androidx.camera.core.Config)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.viewpager.widget.ViewPager$OnAdapterChangeListener: void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter)
androidx.legacy.v4.R$attr: int fontVariationSettings
com.downloader.core.DefaultExecutorSupplier: com.downloader.core.DownloadExecutor forDownloadTasks()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.core.graphics.drawable.RoundedBitmapDrawable: boolean isCircular()
okio.ForwardingSource: long read(okio.Buffer,long)
androidx.recyclerview.widget.DiffUtil$ItemCallback
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: android.graphics.drawable.Drawable getThemeUpIndicator()
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderPackage
androidx.swiperefreshlayout.R$dimen: int notification_action_text_size
androidx.core.view.accessibility.AccessibilityEventCompat: int getMovementGranularity(android.view.accessibility.AccessibilityEvent)
okhttp3.internal.Util: void closeQuietly(java.io.Closeable)
io.github.prabhuomkar.pytorchandroid.R$styleable: int View_paddingEnd
androidx.cardview.R$styleable: int CardView_cardElevation
androidx.cardview.widget.CardView: void setContentPadding(int,int,int,int)
androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat$Builder setFlags(int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int tooltip_corner_radius
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
org.pytorch.torchvision.R$attr: int fontProviderCerts
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
okhttp3.Response$Builder: okhttp3.Response$Builder code(int)
org.pytorch.R$id: int uniform
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.constraintlayout.widget.ConstraintHelper: void init(android.util.AttributeSet)
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)
androidx.recyclerview.widget.RecyclerView$Adapter
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
androidx.legacy.coreutils.R$drawable
androidx.exifinterface.media.ExifInterface: short SATURATION_HIGH
androidx.loader.content.CursorLoader: void setProjection(java.lang.String[])
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
androidx.annotation.Px
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode REFUSED_STREAM
androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)
androidx.appcompat.R$attr: int initialActivityCount
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float)
okhttp3.HttpUrl: java.lang.String topPrivateDomain()
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
androidx.activity.OnBackPressedDispatcher
androidx.core.provider.FontRequest
androidx.camera.core.R$integer
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setColumnAlignment(int,int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: androidx.constraintlayout.solver.SolverVariable getSolverVariable()
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
org.pytorch.torchvision.R$styleable: int SwitchCompat_thumbTint
org.pytorch.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.camera.core.CameraCaptureResult: java.lang.Object getTag()
androidx.legacy.coreui.R$attr: int ttcIndex
okio.Buffer: long indexOf(byte)
androidx.activity.R$id: int accessibility_custom_action_26
androidx.camera.core.UseCaseConfig$Builder: androidx.camera.core.UseCaseConfig build()
okio.ForwardingSink: void close()
androidx.appcompat.widget.AbsActionBarView: boolean isOverflowMenuShowing()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
androidx.legacy.coreui.R$color: int ripple_material_light
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonStyle
io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity: void onCreate(android.os.Bundle)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CFA_PATTERN
androidx.core.view.accessibility.AccessibilityRecordCompat: androidx.core.view.accessibility.AccessibilityRecordCompat obtain()
androidx.slidingpanelayout.R$drawable: int notification_template_icon_bg
androidx.appcompat.R$attr: int panelMenuListTheme
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment MIDDLE
androidx.recyclerview.selection.SelectionTracker: void mergeProvisionalSelection()
com.downloader.httpclient.DefaultHttpClient
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
androidx.appcompat.widget.PopupMenu: void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener)
androidx.recyclerview.R$id: int accessibility_custom_action_19
androidx.core.content.FileProvider: boolean onCreate()
androidx.camera.core.impl.LiveDataObservable: LiveDataObservable()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
androidx.core.app.NotificationCompat$BigPictureStyle: NotificationCompat$BigPictureStyle(androidx.core.app.NotificationCompat$Builder)
okio.Buffer: okio.Buffer write(okio.ByteString)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int TOP
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_android_orientation
okhttp3.internal.Util: java.util.Comparator NATURAL_ORDER
androidx.appcompat.R$attr: int actionBarDivider
androidx.appcompat.R$attr: int fontFamily
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void resolve(androidx.constraintlayout.solver.widgets.ResolutionAnchor,float)
org.pytorch.torchvision.R$color: int abc_background_cache_hint_selector_material_light
androidx.core.R$dimen: int notification_big_circle_margin
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String HELP_URL
androidx.coordinatorlayout.R$id: int forever
io.github.prabhuomkar.pytorchandroid.R$styleable: int PopupWindowBackgroundState_state_above_anchor
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State valueOf(java.lang.String)
okhttp3.EventListener: void responseBodyStart(okhttp3.Call)
androidx.constraintlayout.widget.ConstraintLayout
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_11
io.github.prabhuomkar.pytorchandroid.R$attr: int fontProviderQuery
androidx.fragment.app.FragmentStatePagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
androidx.appcompat.view.ActionMode$Callback
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onMetadataChanged(java.lang.Object)
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)
androidx.loader.R$dimen: int compat_notification_large_icon_max_width
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetEnd
androidx.drawerlayout.widget.DrawerLayout: java.lang.CharSequence getDrawerTitle(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_measureWithLargestChild
androidx.appcompat.R$dimen: int abc_text_size_title_material_toolbar
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_elevation_material
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_disabled_holo_light
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_SWIPE
androidx.appcompat.app.WindowDecorActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_showAsAction
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWrapHeight(int)
androidx.constraintlayout.solver.widgets.WidgetContainer: java.util.ArrayList mChildren
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
androidx.legacy.v4.R$attr
androidx.core.view.ViewCompat: void setTranslationX(android.view.View,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
androidx.camera.core.CaptureBundle
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
com.downloader.Constants: int HTTP_TEMPORARY_REDIRECT
androidx.recyclerview.widget.SimpleItemAnimator: boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PREPARE_FROM_URI
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
androidx.legacy.coreui.R$dimen: int compat_button_padding_vertical_material
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toRightOf
org.pytorch.torchvision.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
com.downloader.Status: com.downloader.Status COMPLETED
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
org.pytorch.R$styleable: int MenuItem_android_titleCondensed
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl: java.lang.Void addShortcuts(java.util.List)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
androidx.versionedparcelable.VersionedParcel: long[] readLongArray()
androidx.media.R
androidx.appcompat.R$dimen: int abc_action_bar_default_padding_start_material
androidx.coordinatorlayout.R
org.pytorch.torchvision.R$dimen: int notification_content_margin_start
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
android.support.v4.media.session.MediaSessionCompat: java.lang.String KEY_SESSION_TOKEN2_BUNDLE
org.pytorch.R$attr: int allowStacking
androidx.legacy.coreutils.R$dimen: int notification_small_icon_background_padding
org.pytorch.torchvision.R$styleable: int TextAppearance_android_shadowDx
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_CUSTOM_RENDERED
androidx.recyclerview.selection.Selection: int size()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int)
androidx.core.view.MotionEventCompat: int AXIS_X
androidx.appcompat.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
org.pytorch.R$styleable: int AppCompatTheme_homeAsUpIndicator
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256
androidx.camera.core.ImageAnalysisConfig: android.util.Rational getTargetAspectRatioCustom()
io.github.prabhuomkar.pytorchandroid.R$id: int search_bar
org.pytorch.torchvision.R$style: int Theme_AppCompat_NoActionBar
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: float weight
androidx.coordinatorlayout.R$styleable: int GradientColor_android_startX
androidx.customview.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)
android.support.v4.media.session.MediaSessionCompat: java.lang.String getCallingPackage()
androidx.camera.core.CameraDeviceSurfaceManager
androidx.media.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
androidx.fragment.R$drawable: int notify_panel_notification_icon_bg
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: int getItemCount()
org.pytorch.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
androidx.recyclerview.widget.LinearSmoothScroller: void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)
androidx.legacy.coreui.R$integer: int status_bar_notification_info_maxnum
androidx.appcompat.R$dimen: int abc_switch_padding
androidx.vectordrawable.R$styleable: int GradientColor_android_startX
androidx.appcompat.widget.ActionBarContextView: void killMode()
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
org.pytorch.torchvision.R$string: int abc_search_hint
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBaseline_creator
org.pytorch.torchvision.R$color: int background_floating_material_dark
androidx.camera.camera2.R$color: int notification_action_color_filter
io.github.prabhuomkar.pytorchandroid.R$id: int list_model_item_name
androidx.loader.R$dimen
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
io.github.prabhuomkar.pytorchandroid.R$attr: int windowActionBar
androidx.appcompat.R$attr: int listPreferredItemPaddingRight
androidx.appcompat.R$styleable: int AppCompatTheme_listMenuViewStyle
com.squareup.picasso.Picasso$Listener: void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Exception)
okio.BufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_26
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
org.pytorch.torchvision.R$dimen: int tooltip_precise_anchor_extra_offset
com.facebook.jni.DestructorThread
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_tileMode
android.support.v4.media.session.IMediaSession: void prepareFromSearch(java.lang.String,android.os.Bundle)
androidx.camera.core.impl.LiveDataObservable: void postError(java.lang.Throwable)
androidx.constraintlayout.solver.widgets.Snapshot: Snapshot(androidx.constraintlayout.solver.widgets.ConstraintWidget)
android.support.v4.media.session.MediaControllerCompat: void addQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String)
org.pytorch.R$styleable: int AppCompatTheme_actionBarPopupTheme
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.camera.camera2.impl.PreviewConfigProvider: androidx.camera.core.PreviewConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.R$attr: int actionBarTabBarStyle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_EXPOSURE_INDEX
androidx.drawerlayout.R$id: int action_divider
io.github.prabhuomkar.pytorchandroid.R$id: int media_actions
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getTextSelectionEnd()
androidx.camera.core.Config$Option
androidx.vectordrawable.R$styleable: int GradientColor_android_startColor
androidx.recyclerview.R$id: int tag_screen_reader_focusable
org.pytorch.torchvision.R$dimen: int tooltip_vertical_padding
org.pytorch.torchvision.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.constraintlayout.widget.ConstraintHelper: void onMeasure(int,int)
androidx.coordinatorlayout.R$id: int right_side
androidx.camera.core.impl.utils.futures.FutureCallback: void onSuccess(java.lang.Object)
androidx.camera.core.ImageAnalysis: void clear()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintStart_toEndOf
androidx.fragment.app.Fragment: boolean shouldShowRequestPermissionRationale(java.lang.String)
okhttp3.internal.cache.CacheRequest
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder fromConfig(androidx.camera.core.ImageAnalysisConfig)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()
org.pytorch.R$color: int bright_foreground_inverse_material_light
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
okio.BufferedSource: int readUtf8CodePoint()
androidx.cardview.R$styleable: int CardView_contentPaddingBottom
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintLeft_toRightOf
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout(int,int)
androidx.recyclerview.selection.DefaultSelectionTracker: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonStyleSmall
org.pytorch.R$styleable: int ActionMode_height
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_3
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: float weight
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Theme_AppCompat_Dialog
org.pytorch.torchvision.R$bool: int abc_config_actionMenuItemAllCaps
androidx.collection.SparseArrayCompat: int indexOfValue(java.lang.Object)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
androidx.activity.R$style: int TextAppearance_Compat_Notification_Title
androidx.constraintlayout.solver.widgets.ConstraintWidget: void analyze(int)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory$EdgeDirection
androidx.camera.core.ImageUtil$CodecFailedException: androidx.camera.core.ImageUtil$CodecFailedException$FailureType getFailureType()
androidx.camera.camera2.R$id: int accessibility_custom_action_30
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
androidx.constraintlayout.widget.Constraints$LayoutParams: float alpha
org.pytorch.R$id: int spacer
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.customview.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)
androidx.camera.camera2.R$styleable: int GradientColor_android_endColor
com.downloader.PRDownloaderConfig: com.downloader.httpclient.HttpClient getHttpClient()
okhttp3.internal.http2.Http2Connection: okhttp3.internal.http2.Http2Stream pushStream(int,java.util.List,boolean)
androidx.media.R$layout: int notification_template_part_time
androidx.core.os.BuildCompat: boolean isAtLeastP()
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
androidx.coordinatorlayout.R$id: int left
com.downloader.Error: java.util.Map getHeaderFields()
androidx.core.view.ViewCompat: int LAYOUT_DIRECTION_INHERIT
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
com.squareup.picasso.Callback: void onError(java.lang.Exception)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Button
org.pytorch.R$drawable: int tooltip_frame_light
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.swiperefreshlayout.R$id: int tag_unhandled_key_listeners
androidx.vectordrawable.R$attr: int fontProviderQuery
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle getSessionToken2Bundle()
androidx.arch.core.executor.ArchTaskExecutor
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
androidx.loader.R$styleable: int FontFamilyFont_android_font
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat fromRating(java.lang.Object)
androidx.legacy.v4.R$integer
androidx.vectordrawable.R$id: int accessibility_custom_action_15
androidx.vectordrawable.R$styleable: <clinit>()
okhttp3.Interceptor$Chain: okhttp3.Interceptor$Chain withWriteTimeout(int,java.util.concurrent.TimeUnit)
android.support.v4.media.session.PlaybackStateCompat: long ACTION_SET_RATING
androidx.appcompat.R$color: int primary_dark_material_dark
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Body2
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.downloader.request.DownloadRequestBuilder: com.downloader.request.RequestBuilder setPriority(com.downloader.Priority)
androidx.collection.CircularArray: java.lang.Object getFirst()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel)
androidx.vectordrawable.animated.R$layout: int notification_template_part_time
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: long time
okhttp3.internal.connection.RealConnection: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.appcompat.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
androidx.core.R$style
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
org.pytorch.R$color: int background_material_light
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.fragment.app.Fragment: boolean hasOptionsMenu()
androidx.core.view.PointerIconCompat: int TYPE_NO_DROP
okhttp3.internal.http1.Http1Codec: okio.Sink createRequestBody(okhttp3.Request,long)
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedPreScroll(int,int,int[],int[])
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_PSK_WITH_AES_256_CBC_SHA
androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.media.app.NotificationCompat$MediaStyle: NotificationCompat$MediaStyle()
okhttp3.Headers: java.util.Date getDate(java.lang.String)
androidx.legacy.v4.R$id: int action0
androidx.camera.core.FocusMeteringAction$MeteringMode: androidx.camera.core.FocusMeteringAction$MeteringMode AWB_ONLY
android.support.v4.media.MediaBrowserCompat$CustomActionCallback: MediaBrowserCompat$CustomActionCallback()
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(int,int)
android.support.v4.media.session.IMediaSession: boolean isShuffleModeEnabledRemoved()
androidx.fragment.R$id: int chronometer
androidx.camera.core.ImageCaptureConfig: java.lang.String getTargetName(java.lang.String)
androidx.customview.R$attr: int fontProviderPackage
androidx.customview.R$styleable: int GradientColor_android_startX
androidx.core.widget.ScrollerCompat: void notifyHorizontalEdgeReached(int,int,int)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_10
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowActionModeOverlay
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: RecyclerView$SmoothScroller$Action(int,int,int)
org.pytorch.torchvision.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetRotation(int)
androidx.camera.core.R$styleable: int GradientColorItem_android_color
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
androidx.appcompat.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256
androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)
androidx.appcompat.R$styleable: int AppCompatTextView_fontFamily
org.pytorch.torchvision.R$drawable: int abc_list_selector_holo_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginEnd
io.github.prabhuomkar.pytorchandroid.helpers.CameraHelper: androidx.camera.core.Preview buildPreview(io.github.prabhuomkar.pytorchandroid.playground.AutoFitTextureView)
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: ActivityChooserModel$HistoricalRecord(android.content.ComponentName,long,float)
androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)
androidx.camera.core.UseCaseConfigFactory
android.support.v4.media.session.IMediaSession: void playFromUri(android.net.Uri,android.os.Bundle)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_panelMenuListWidth
androidx.core.view.PointerIconCompat: int TYPE_DEFAULT
okhttp3.Request$Builder: okhttp3.Request$Builder removeHeader(java.lang.String)
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteX
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status FINISHED
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_toLeftOf
androidx.core.widget.AutoScrollHelper: float NO_MIN
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Inverse
androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()
org.pytorch.torchvision.R$styleable: int[] AppCompatTextHelper
okhttp3.internal.http.RetryAndFollowUpInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
androidx.camera.camera2.impl.CaptureSession$State: androidx.camera.camera2.impl.CaptureSession$State valueOf(java.lang.String)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
androidx.core.view.accessibility.AccessibilityRecordCompat: int hashCode()
io.github.prabhuomkar.pytorchandroid.R$id: int image
org.pytorch.R$styleable: int AppCompatTheme_editTextColor
okhttp3.Cache: int networkCount()
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
androidx.activity.R$id
androidx.core.view.MotionEventCompat: int ACTION_HOVER_EXIT
androidx.constraintlayout.widget.R$attr: int layout_constraintTop_toTopOf
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
androidx.camera.core.CameraCaptureMetaData$FlashState
androidx.core.view.accessibility.AccessibilityRecordCompat: boolean isEnabled()
androidx.appcompat.R$attr: int editTextStyle
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int editorAbsoluteX
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ARTIST
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
org.pytorch.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
androidx.appcompat.view.ActionMode$Callback: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.camera.core.R$styleable: int FontFamilyFont_android_font
androidx.camera.core.PreviewConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.savedstate.Recreator
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.core.view.ViewCompat: int OVER_SCROLL_ALWAYS
io.github.prabhuomkar.pytorchandroid.R$attr: int recyclerViewStyle
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.appcompat.R$attr: int alpha
androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: int getImageResourceId(android.content.Context,java.lang.String)
org.pytorch.R$attr: int windowFixedWidthMajor
androidx.core.app.NotificationCompat$WearableExtender: int getContentIcon()
org.pytorch.R$style: int Base_ThemeOverlay_AppCompat_Dialog
androidx.core.app.NotificationCompat$MessagingStyle: void addCompatExtras(android.os.Bundle)
androidx.drawerlayout.R$id: int notification_main_column_container
org.pytorch.R$style: int Base_Widget_AppCompat_ActivityChooserView
okhttp3.internal.cache.CacheStrategy: boolean isCacheable(okhttp3.Response,okhttp3.Request)
androidx.loader.app.LoaderManager$LoaderCallbacks
androidx.recyclerview.R$styleable: int FontFamilyFont_android_fontWeight
org.pytorch.R$styleable: int AppCompatTheme_windowFixedWidthMinor
androidx.drawerlayout.widget.DrawerLayout: void openDrawer(int,boolean)
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
okhttp3.internal.http1.Http1Codec: void finishRequest()
androidx.fragment.app.FragmentStatePagerAdapter: FragmentStatePagerAdapter(androidx.fragment.app.FragmentManager)
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_PREPARE_FROM_MEDIA_ID
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
androidx.concurrent.futures.ResolvableFuture: androidx.concurrent.futures.ResolvableFuture create()
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio)
okio.BufferedSink: okio.BufferedSink writeByte(int)
androidx.cursoradapter.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.annotation.IntDef: int[] value()
org.pytorch.torchvision.R$styleable: int AppCompatTextView_autoSizeTextType
okio.ByteString: java.nio.ByteBuffer asByteBuffer()
io.github.prabhuomkar.pytorchandroid.R$attr: int showDividers
com.downloader.internal.stream.FileDownloadOutputStream
androidx.slidingpanelayout.R$dimen: int notification_action_text_size
androidx.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
androidx.legacy.coreutils.R$id: int icon_group
androidx.recyclerview.R$styleable: int[] RecyclerView
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderAuthority
androidx.annotation.FontRes
androidx.camera.core.R$dimen: int notification_big_circle_margin
android.support.v4.media.MediaDescriptionCompat: int describeContents()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.core.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
io.github.prabhuomkar.pytorchandroid.R$id: int radio
androidx.recyclerview.R$id: int notification_main_column
okhttp3.internal.platform.Platform: boolean isConscryptPreferred()
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_NO
org.pytorch.torchvision.R$attr: int closeItemLayout
androidx.camera.camera2.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
org.pytorch.torchvision.R$drawable: int abc_ic_star_black_36dp
androidx.appcompat.app.ActionBar: void setLogo(int)
androidx.arch.core.internal.SafeIterableMap: int size()
androidx.core.R$id: int accessibility_custom_action_30
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
androidx.appcompat.app.AppCompatViewInflater
androidx.cursoradapter.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Subhead
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)
okhttp3.Request
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int LARGE
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object)
androidx.camera.core.TargetConfig: java.lang.Class getTargetClass(java.lang.Class)
androidx.annotation.RequiresPermission$Write
androidx.appcompat.R$style: int Widget_AppCompat_SearchView_ActionBar
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
androidx.media.MediaBrowserServiceCompat: androidx.media.MediaBrowserServiceCompat$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuView_preserveIconSpacing
androidx.camera.core.PreviewConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig(androidx.camera.core.SessionConfig)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintHeight_min
androidx.appcompat.widget.SwitchCompat: void setSwitchPadding(int)
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError FILE_IO_FAILED
org.pytorch.torchvision.R$attr: int titleTextColor
org.pytorch.R$styleable: int[] CompoundButton
org.pytorch.R$drawable: int abc_ic_star_half_black_16dp
androidx.core.app.JobIntentService
org.pytorch.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
androidx.core.view.MotionEventCompat: int ACTION_HOVER_ENTER
org.pytorch.R$attr: int actionMenuTextAppearance
androidx.core.content.pm.ShortcutInfoCompat: java.lang.String getId()
okhttp3.Response$Builder: okhttp3.Response build()
io.github.prabhuomkar.pytorchandroid.R$string: int task_image_classification
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object)
androidx.loader.R$integer
androidx.versionedparcelable.VersionedParcel: float readFloat()
androidx.core.content.res.TypedArrayUtils: android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int)
androidx.camera.core.UseCase: void removeStateChangeListener(androidx.camera.core.UseCase$StateChangeListener)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_BACKGROUND_IMAGE_URI
androidx.camera.camera2.R$styleable: int GradientColor_android_startColor
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueTitleChanged(java.lang.CharSequence)
androidx.fragment.app.FragmentManager: void enableDebugLogging(boolean)
androidx.legacy.widget.Space: void draw(android.graphics.Canvas)
androidx.versionedparcelable.ParcelImpl: int describeContents()
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.media.MediaBrowserServiceCompat$Result: void sendResult(java.lang.Object)
androidx.constraintlayout.solver.ArrayLinkedVariables
androidx.legacy.app.ActionBarDrawerToggle: ActionBarDrawerToggle(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int)
okio.ForwardingTimeout: okio.Timeout delegate()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPosition(int)
androidx.drawerlayout.R$dimen: int notification_content_margin_start
androidx.recyclerview.selection.DefaultSelectionTracker: void startRange(int)
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.R$attr: int collapseIcon
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
okhttp3.internal.connection.RealConnection: boolean isEligible(okhttp3.Address,okhttp3.Route)
androidx.core.app.ActivityOptionsCompat
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior: java.lang.Class value()
androidx.core.app.NotificationManagerCompat: void cancel(int)
androidx.appcompat.widget.DecorToolbar: boolean hasIcon()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)
androidx.core.util.Pair: java.lang.String toString()
androidx.appcompat.app.ActionBar: java.lang.CharSequence getSubtitle()
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintTop_toBottomOf
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hasIcon()
org.pytorch.R$dimen: int abc_text_size_large_material
androidx.appcompat.R$styleable: int AppCompatTheme_actionMenuTextAppearance
io.github.prabhuomkar.pytorchandroid.R$id: int add
androidx.camera.core.DeviceProperties: java.lang.String model()
androidx.legacy.coreutils.R$id: int title
androidx.core.view.ViewPropertyAnimatorListenerAdapter
androidx.activity.R$styleable: int GradientColor_android_tileMode
org.pytorch.R$styleable: int ActionBar_progressBarPadding
okhttp3.internal.connection.RealConnection: okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation)
androidx.annotation.StringDef: java.lang.String[] value()
androidx.vectordrawable.animated.R$dimen: int notification_small_icon_size_as_large
androidx.recyclerview.widget.ItemTouchHelper$Callback: int makeFlag(int,int)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
org.pytorch.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
androidx.cursoradapter.widget.CursorAdapter: android.widget.FilterQueryProvider mFilterQueryProvider
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_disabled_alpha_material_dark
androidx.appcompat.app.WindowDecorActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ResolutionDimension: ResolutionDimension()
androidx.slidingpanelayout.R$dimen
androidx.core.R$styleable: int GradientColor_android_centerX
androidx.core.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()
org.pytorch.R$styleable: int[] TextAppearance
androidx.slidingpanelayout.R$layout
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
org.pytorch.R$attr: int windowFixedHeightMinor
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.legacy.app.ActionBarDrawerToggle: void onDrawerSlide(android.view.View,float)
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueTitleChanged(java.lang.CharSequence)
androidx.constraintlayout.widget.Group
okhttp3.internal.http.HttpDate
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
androidx.appcompat.widget.DecorToolbar: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.fragment.app.Fragment: void setExitTransition(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ART_URI
com.downloader.Progress: long totalBytes
io.github.prabhuomkar.pytorchandroid.R$attr: int content
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(okhttp3.OkHttpClient)
okhttp3.internal.Internal: okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_TEXT_SELECTION_CHANGED
androidx.vectordrawable.R$drawable: int notification_bg_normal_pressed
androidx.loader.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.app.ActionBar: int getHideOffset()
androidx.appcompat.R$color: int tooltip_background_dark
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
androidx.core.R$styleable: <clinit>()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Spinner_android_dropDownWidth
androidx.media.MediaBrowserServiceCompat$Result: void sendError(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)
androidx.core.R$color: int notification_icon_bg_color
androidx.appcompat.view.menu.ActionMenuItem: androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean)
org.pytorch.R$id: int async
androidx.slidingpanelayout.R$id: int info
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: void jumpTo(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int View_theme
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_SUBTITLE
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_dialog_fixed_width_major
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
android.support.v4.media.MediaBrowserCompat: void search(java.lang.String,android.os.Bundle,android.support.v4.media.MediaBrowserCompat$SearchCallback)
androidx.activity.R$id: int icon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_PREVIOUS_HTML_ELEMENT
androidx.appcompat.R$attr: int tooltipFrameBackground
com.squareup.picasso.Request: java.lang.String stableKey
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_28
androidx.recyclerview.widget.DividerItemDecoration: int HORIZONTAL
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError RECORDING_IN_PROGRESS
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: boolean isMenuVisible()
android.support.v4.media.session.MediaSessionCompat$Callback: void onPrepareFromSearch(java.lang.String,android.os.Bundle)
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
org.pytorch.torchvision.R$dimen: int hint_alpha_material_dark
androidx.core.view.NestedScrollingParent2: void onStopNestedScroll(android.view.View,int)
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_PHOTOMETRIC_INTERPRETATION
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
org.pytorch.R$styleable: int AppCompatTheme_actionModeShareDrawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
androidx.recyclerview.widget.LinearSmoothScroller: int getHorizontalSnapPreference()
org.pytorch.torchvision.R$styleable: int SearchView_android_imeOptions
okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Button
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
org.pytorch.torchvision.R$dimen: int abc_select_dialog_padding_start_material
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.PagerSnapHelper: android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)
org.pytorch.R$attr: int lineHeight
androidx.swiperefreshlayout.R$id: int notification_main_column_container
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_android_maxHeight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.loader.content.Loader: void deliverCancellation()
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getDimensionRatio()
androidx.drawerlayout.widget.DrawerLayout$LayoutParams: DrawerLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SwitchCompat: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.ListPopupWindow: int getAnimationStyle()
android.support.v4.media.MediaBrowserCompat: boolean isConnected()
androidx.media.R$drawable: int notification_bg
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_DialogWhenLarge
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.downloader.database.NoOpsDbHelper: void update(com.downloader.database.DownloadModel)
androidx.versionedparcelable.VersionedParcel: void writeArray(java.lang.Object[])
androidx.vectordrawable.R$dimen: int notification_large_icon_width
androidx.appcompat.R$dimen: int highlight_alpha_material_dark
okhttp3.Headers: java.lang.String get(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$color: int abc_search_url_text_normal
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
androidx.appcompat.resources.R$dimen: int notification_large_icon_width
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
io.github.prabhuomkar.pytorchandroid.R$id: int fill
androidx.core.view.MotionEventCompat: int AXIS_RZ
org.pytorch.torchvision.R$styleable: int CompoundButton_buttonCompat
androidx.core.app.NotificationCompatExtras
androidx.coordinatorlayout.R$attr: int keylines
androidx.camera.core.ImageCaptureConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.app.WindowDecorActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener)
androidx.customview.R$dimen: int compat_button_inset_vertical_material
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.legacy.content.WakefulBroadcastReceiver: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)
org.pytorch.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintEnd_toStartOf
org.pytorch.torchvision.R$color: int abc_primary_text_disable_only_material_light
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
okhttp3.internal.ws.RealWebSocket: void onReadClose(int,java.lang.String)
androidx.appcompat.widget.SwitchCompat: android.graphics.PorterDuff$Mode getTrackTintMode()
androidx.loader.content.Loader$ForceLoadContentObserver: void onChange(boolean)
org.pytorch.R$styleable: int AppCompatTextView_fontVariationSettings
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
androidx.camera.core.BaseCamera: void open()
com.downloader.request.DownloadRequest: int getDownloadId()
com.squareup.picasso.StatsSnapshot: long timeStamp
androidx.appcompat.R$styleable: int AppCompatTextView_fontVariationSettings
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.camera.camera2.impl.compat.CameraCaptureSessionCompat: int setRepeatingBurstRequests(android.hardware.camera2.CameraCaptureSession,java.util.List,java.util.concurrent.Executor,android.hardware.camera2.CameraCaptureSession$CaptureCallback)
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderCerts
org.pytorch.R$style: int Widget_AppCompat_ActionBar
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_icon_background
com.squareup.picasso.OkHttp3Downloader: void shutdown()
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType valueOf(java.lang.String)
androidx.legacy.v4.R$color: int notification_action_color_filter
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.cardview.R$style
androidx.core.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_GROUP_SUMMARY
androidx.appcompat.app.AlertDialog
androidx.appcompat.R$attr: int contentInsetStart
androidx.core.app.NotificationCompat$Builder: int getColor()
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
androidx.appcompat.R$anim: int abc_popup_enter
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_weight
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object wrapTransitionInSet(java.lang.Object)
androidx.appcompat.R$id: int spacer
androidx.appcompat.R$drawable: int abc_seekbar_track_material
androidx.legacy.coreui.R$styleable: int ColorStateListItem_android_color
androidx.lifecycle.MutableLiveData: MutableLiveData(java.lang.Object)
androidx.media.R$integer: int cancel_button_image_alpha
androidx.appcompat.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
org.pytorch.IValue: boolean isLong()
androidx.recyclerview.widget.LinearLayoutManager: boolean isAutoMeasureEnabled()
org.pytorch.R$styleable: int Toolbar_contentInsetLeft
androidx.constraintlayout.widget.R$id: int top
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_SORT_KEY
androidx.legacy.coreutils.R$layout: int notification_template_part_chronometer
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: java.lang.Object unwrap()
androidx.viewpager.widget.PagerTabStrip: PagerTabStrip(android.content.Context)
androidx.media.app.NotificationCompat$MediaStyle: androidx.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent)
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_bar_content_inset_material
org.pytorch.torchvision.R$id: int action_mode_bar_stub
androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ListPopupWindow
org.pytorch.R$attr: int actionModeFindDrawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.recyclerview.R$styleable: int RecyclerView_android_descendantFocusability
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean)
androidx.appcompat.R$id: int accessibility_custom_action_13
androidx.camera.core.R$id: int accessibility_custom_action_31
androidx.coordinatorlayout.R$styleable: int GradientColor_android_endColor
androidx.swiperefreshlayout.R$id: int right_side
org.pytorch.torchvision.R$styleable: int FontFamilyFont_fontStyle
org.pytorch.torchvision.R$styleable: int AppCompatTextView_drawableTopCompat
org.pytorch.R$styleable: int AppCompatTextView_autoSizeStepGranularity
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderCerts
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_PopupMenu
okio.ByteString: boolean startsWith(byte[])
androidx.appcompat.app.AppCompatDelegate: void onStop()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintLeft_creator
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment LEFT
androidx.appcompat.widget.ListPopupWindow: int getHeight()
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.loader.app.LoaderManager: void destroyLoader(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_splitTrack
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
org.pytorch.R$id: int select_dialog_listview
androidx.appcompat.R$dimen: int abc_dialog_list_padding_top_no_title
okio.ForwardingSource: okio.Timeout timeout()
io.github.prabhuomkar.pytorchandroid.R$drawable: int notification_template_icon_bg
io.github.prabhuomkar.pytorchandroid.R$color: int ripple_material_dark
androidx.core.view.accessibility.AccessibilityRecordCompat: int getToIndex()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getColumnCount()
androidx.recyclerview.widget.ThreadUtil$BackgroundCallback: void loadTile(int,int)
androidx.arch.core.executor.ArchTaskExecutor: void setDelegate(androidx.arch.core.executor.TaskExecutor)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
okhttp3.internal.ws.WebSocketReader$FrameCallback: void onReadMessage(java.lang.String)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult: FingerprintManagerCompat$AuthenticationResult(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)
androidx.legacy.coreui.R$layout: int notification_action
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_YES
androidx.legacy.v4.R$id: int right_side
androidx.camera.core.SessionConfig$ValidatingBuilder: boolean isValid()
okhttp3.internal.http.StatusLine: StatusLine(okhttp3.Protocol,int,java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat scaleY(float)
okhttp3.internal.http2.Http2Connection$Listener
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.activity.R$attr: int font
androidx.appcompat.widget.SwitchCompat: void setTextOff(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintTop_creator
androidx.appcompat.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: boolean equals(java.lang.Object)
org.pytorch.R$color: int abc_background_cache_hint_selector_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int GradientColor_android_centerY
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
androidx.appcompat.R$styleable: int MenuView_android_horizontalDivider
androidx.camera.camera2.R$dimen: int compat_button_padding_vertical_material
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
org.pytorch.R$style: int Base_V26_Theme_AppCompat
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_5
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(long[],double[])
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: int describeContents()
androidx.drawerlayout.R$drawable: int notification_bg_normal_pressed
androidx.camera.core.SurfaceConfig
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[])
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[],boolean)
androidx.appcompat.widget.DecorToolbar: void setIcon(int)
org.pytorch.R$style: int Base_Widget_AppCompat_ListPopupWindow
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_3
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SUBSEC_TIME_ORIGINAL
androidx.collection.SparseArrayCompat: void setValueAt(int,java.lang.Object)
androidx.appcompat.R$styleable: int SearchView_commitIcon
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
com.downloader.core.PriorityThreadFactory
com.facebook.jni.UnknownCppException: UnknownCppException()
androidx.recyclerview.R$styleable: <clinit>()
androidx.activity.R$layout: int notification_template_part_time
org.pytorch.torchvision.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
androidx.camera.core.impl.LiveDataObservable
androidx.appcompat.resources.R$id: int accessibility_custom_action_9
androidx.camera.camera2.R$id: int async
androidx.legacy.v4.R$drawable: int notification_icon_background
androidx.vectordrawable.animated.R$dimen: int notification_content_margin_start
org.pytorch.torchvision.R$layout: int select_dialog_singlechoice_material
androidx.camera.core.VideoCapture$Defaults: androidx.camera.core.VideoCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.appcompat.R$styleable: int AppCompatTextView_textLocale
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setSupportedResolutions(java.util.List)
org.pytorch.R$id: int list_item
androidx.core.widget.EdgeEffectCompat
org.pytorch.R$styleable: int[] ActionMode
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
com.facebook.soloader.nativeloader.SystemDelegate
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
org.pytorch.torchvision.R$id: int spacer
androidx.core.widget.TintableCompoundButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.camera.core.Preview$UseCaseError: androidx.camera.core.Preview$UseCaseError valueOf(java.lang.String)
androidx.slidingpanelayout.R$styleable: int GradientColor_android_tileMode
androidx.vectordrawable.animated.R$layout: int notification_template_icon_group
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_TOUCH_INTERACTION_START
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_icon_group
org.pytorch.R$styleable: <clinit>()
androidx.recyclerview.widget.OrientationHelper: int VERTICAL
org.pytorch.torchvision.R$style: int Theme_AppCompat_Light_DialogWhenLarge
androidx.camera.core.Preview: androidx.camera.core.Preview$Defaults DEFAULT_CONFIG
androidx.camera.core.ImageAnalysis$ImageReaderMode: androidx.camera.core.ImageAnalysis$ImageReaderMode ACQUIRE_NEXT_IMAGE
android.support.v4.media.session.PlaybackStateCompat: int toKeyCode(long)
androidx.appcompat.resources.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.legacy.coreutils.R$style: int Widget_Compat_NotificationActionText
androidx.camera.core.CameraDeviceConfig$Builder
org.pytorch.torchvision.R$string: int abc_action_mode_done
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencies(android.view.View)
androidx.legacy.v4.R$attr: int keylines
org.pytorch.R$styleable: int[] ActionBar
org.pytorch.torchvision.R$dimen: int notification_small_icon_background_padding
androidx.fragment.app.FragmentTransitionImpl: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
org.pytorch.R$dimen: int notification_large_icon_width
androidx.viewpager.R$layout
androidx.appcompat.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
androidx.activity.R$styleable: int FontFamilyFont_fontStyle
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
androidx.annotation.InspectableProperty
androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)
androidx.asynclayoutinflater.R$styleable: <clinit>()
androidx.versionedparcelable.VersionedParcel: void writeMap(java.util.Map,int)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_maxWidth
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollVertically()
androidx.coordinatorlayout.R$styleable: int GradientColorItem_android_offset
androidx.coordinatorlayout.R$id: int notification_main_column
okio.BufferedSink: java.io.OutputStream outputStream()
androidx.camera.core.CameraCaptureResult
io.github.prabhuomkar.pytorchandroid.R$attr: int checkedTextViewStyle
okhttp3.HttpUrl: java.util.Set queryParameterNames()
androidx.recyclerview.R$dimen: int notification_content_margin_start
androidx.constraintlayout.solver.widgets.Helper: int mWidgetsCount
okhttp3.HttpUrl: java.util.List queryParameterValues(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
com.facebook.jni.NativeRunnable: void run()
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
com.downloader.internal.stream.FileDownloadOutputStream: void setLength(long)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder fromConfig(androidx.camera.core.VideoCaptureConfig)
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowEquals(androidx.constraintlayout.solver.SolverVariable,int)
androidx.fragment.R$styleable: int FontFamilyFont_android_fontWeight
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_REFERENCE_BLACK_WHITE
androidx.appcompat.app.WindowDecorActionBar: void setNavigationMode(int)
androidx.viewpager.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.R$attr: int listPreferredItemPaddingLeft
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
androidx.media.R$dimen: int subtitle_outline_width
androidx.appcompat.R$attr: int fontVariationSettings
androidx.camera.core.TargetConfig
androidx.fragment.app.Fragment: int getId()
okhttp3.internal.http2.Header
androidx.appcompat.R$attr: int height
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.collection.ArraySet: ArraySet(java.util.Collection)
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.core.text.ICUCompat: java.lang.String maximizeAndGetScript(java.util.Locale)
androidx.appcompat.R$dimen: int abc_dialog_padding_material
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.loader.content.CursorLoader: void deliverResult(android.database.Cursor)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_transformPivotY
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.R$id: int action_bar_container
androidx.appcompat.widget.ActivityChooserView: boolean isShowingPopup()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.appcompat.R$style: int Platform_V21_AppCompat_Light
androidx.core.widget.EdgeEffectCompat: boolean onPull(float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)
androidx.appcompat.R$drawable: int btn_radio_off_mtrl
androidx.appcompat.R$layout: int abc_search_view
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
androidx.core.app.ShareCompat$IntentBuilder: void startChooser()
androidx.recyclerview.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.slidingpanelayout.R$string
androidx.print.PrintHelper: int getOrientation()
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.viewpager.R$drawable: int notification_template_icon_bg
okhttp3.internal.connection.ConnectInterceptor
androidx.core.view.accessibility.AccessibilityRecordCompat
androidx.recyclerview.widget.ItemTouchHelper$Callback: int DEFAULT_DRAG_ANIMATION_DURATION
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.media.R$color: int notification_action_color_filter
com.downloader.internal.stream.FileDownloadRandomAccessFile: void seek(long)
androidx.camera.core.ImageProxy: void setCropRect(android.graphics.Rect)
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_22
androidx.slidingpanelayout.R$layout: int notification_template_part_chronometer
org.pytorch.R$styleable: int AppCompatTheme_dropDownListViewStyle
okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)
org.pytorch.torchvision.R$attr: int listPreferredItemPaddingLeft
androidx.camera.camera2.R$id: int text2
androidx.viewpager.widget.ViewPager: void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer)
androidx.camera.core.LensFacingCameraIdFilter: androidx.camera.core.LensFacingCameraIdFilter createLensFacingCameraIdFilter(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.R$style: int Widget_Compat_NotificationActionText
androidx.coordinatorlayout.R$dimen: int notification_big_circle_margin
androidx.appcompat.text.AllCapsTransformationMethod: AllCapsTransformationMethod(android.content.Context)
androidx.fragment.app.DialogFragment: int getTheme()
androidx.constraintlayout.widget.R$styleable: int LinearConstraintLayout_android_orientation
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isItemPrefetchEnabled()
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: boolean inSelectionHotspot(android.view.MotionEvent)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderPackage
androidx.activity.R$styleable: int GradientColor_android_startY
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaDescriptionCompat getDescription()
org.pytorch.R$color: int accent_material_light
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)
androidx.legacy.v4.R$attr: int fontProviderFetchTimeout
org.pytorch.R$id: int line1
androidx.recyclerview.R$id: int line3
androidx.core.view.DragStartHelper: void detach()
androidx.appcompat.R$attr: int listPreferredItemHeight
androidx.recyclerview.widget.RecyclerView$SmoothScroller: void setTargetPosition(int)
androidx.core.widget.ContentLoadingProgressBar: void onAttachedToWindow()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Display2
androidx.activity.R$styleable: int FontFamily_fontProviderQuery
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState valueOf(java.lang.String)
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
android.support.v4.media.session.PlaybackStateCompat: java.util.List getCustomActions()
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_details
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] mListDimensionBehaviors
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
androidx.core.app.NotificationCompat$InboxStyle: androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setDimensionRatio(java.lang.String)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.PopupMenu: int getGravity()
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void reset()
androidx.collection.LruCache: void evictAll()
androidx.coordinatorlayout.R$drawable: int notification_action_background
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type CENTER
android.support.v4.media.session.MediaSessionCompat: java.lang.Object getMediaSession()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
androidx.appcompat.widget.DecorToolbar: void setHomeButtonEnabled(boolean)
okhttp3.internal.http2.Http2Connection$Listener: void onStream(okhttp3.internal.http2.Http2Stream)
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_CHAIN
okhttp3.internal.ws.RealWebSocket: void initReaderAndWriter(java.lang.String,okhttp3.internal.ws.RealWebSocket$Streams)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type NONE
androidx.cursoradapter.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.app.AppCompatDelegate: boolean hasWindowFeature(int)
io.github.prabhuomkar.pytorchandroid.R$color: int error_color_material_light
com.facebook.jni.NativeRunnable
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context)
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_PopupMenu
androidx.appcompat.R$id: int text2
androidx.camera.camera2.impl.compat.params.InputConfigurationCompat: int hashCode()
androidx.coordinatorlayout.R$dimen: int compat_button_padding_vertical_material
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar
okhttp3.internal.http.BridgeInterceptor: BridgeInterceptor(okhttp3.CookieJar)
androidx.camera.core.Preview: androidx.camera.core.UseCaseConfig$Builder getDefaultBuilder(androidx.camera.core.CameraX$LensFacing)
androidx.vectordrawable.animated.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.R$style: int Platform_ThemeOverlay_AppCompat
org.pytorch.torchvision.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
okhttp3.Address: java.util.List connectionSpecs()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.util.ArrayList mAnchors
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resetSolverVariables(androidx.constraintlayout.solver.Cache)
androidx.recyclerview.selection.SelectionTracker: void startRange(int)
androidx.constraintlayout.widget.R$id: int left
okhttp3.internal.cache.CacheStrategy$Factory: okhttp3.internal.cache.CacheStrategy get()
io.github.prabhuomkar.pytorchandroid.R$color: int material_grey_800
androidx.asynclayoutinflater.R$styleable: int ColorStateListItem_android_color
android.support.v4.media.session.PlaybackStateCompat: long PLAYBACK_POSITION_UNKNOWN
org.pytorch.Tensor: java.nio.ByteBuffer allocateByteBuffer(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float)
androidx.camera.core.UseCaseAttachState: void setUseCaseOffline(androidx.camera.core.UseCase)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE
androidx.constraintlayout.solver.Metrics: long bfs
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AlertDialog_listLayout
androidx.coordinatorlayout.R$dimen: int notification_top_pad
androidx.viewpager.widget.PagerAdapter: java.lang.CharSequence getPageTitle(int)
androidx.collection.CircularIntArray: CircularIntArray()
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.constraintlayout.widget.ConstraintSet: void constrainWidth(int,int)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.print.PrintHelper: int COLOR_MODE_COLOR
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
androidx.customview.widget.ExploreByTouchHelper: int getAccessibilityFocusedVirtualViewId()
com.downloader.core.DownloadFutureTask
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment requireParentFragment()
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.appcompat.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)
androidx.appcompat.R$styleable: int AppCompatTheme_colorButtonNormal
androidx.camera.camera2.impl.Camera2LensFacingCameraIdFilter: androidx.camera.core.CameraX$LensFacing getLensFacing()
org.pytorch.torchvision.R$color: int primary_text_default_material_light
androidx.core.app.NotificationCompat$BigPictureStyle: androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetAspectRatioCustom(android.util.Rational)
androidx.appcompat.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)
androidx.camera.core.PreviewConfig: android.util.Size getTargetResolution()
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
androidx.core.provider.FontsContractCompat$Columns: java.lang.String ITALIC
androidx.camera.core.ImageAnalysisConfig: android.util.Size getMaxResolution()
org.pytorch.R$styleable: int[] StateListDrawable
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
org.pytorch.torchvision.R$drawable: int abc_item_background_holo_dark
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.MutableConfig getMutableConfig()
androidx.savedstate.SavedStateRegistryOwner
androidx.legacy.v4.R$drawable: int notification_bg
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_TARGET_ROTATION
androidx.fragment.app.ListFragment: android.widget.ListAdapter requireListAdapter()
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setDefaultResolution(android.util.Size)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context)
androidx.core.app.RemoteInput
androidx.appcompat.view.menu.MenuView$ItemView: void setChecked(boolean)
okhttp3.internal.cache.DiskLruCache$Snapshot: okhttp3.internal.cache.DiskLruCache$Editor edit()
androidx.camera.core.R$dimen: int notification_right_side_padding_top
androidx.annotation.ArrayRes
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.lifecycle.GeneratedAdapter: void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger)
androidx.vectordrawable.animated.R$id: int dialog_button
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
androidx.documentfile.provider.DocumentFile: boolean delete()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
androidx.customview.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.R$id: int line1
androidx.recyclerview.widget.SortedList$BatchedCallback: void onChanged(int,int)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)
androidx.camera.core.ImageCapture$CaptureMode: androidx.camera.core.ImageCapture$CaptureMode valueOf(java.lang.String)
org.pytorch.R$attr: int textColorSearchUrl
androidx.asynclayoutinflater.R$drawable: int notification_bg_low
androidx.appcompat.R$style: int TextAppearance_AppCompat_Display3
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: ThemedSpinnerAdapter$Helper(android.content.Context)
androidx.lifecycle.LifecycleRegistryOwner: androidx.lifecycle.LifecycleRegistry getLifecycle()
androidx.fragment.R$id: int accessibility_custom_action_29
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setTargetResolution(android.util.Size)
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback: boolean canChildScrollUp(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.view.View)
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_V21_AppCompat_Light
androidx.camera.core.Observable$Observer: void onNewData(java.lang.Object)
androidx.recyclerview.widget.ItemTouchHelper: void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.R$id: int notification_background
okhttp3.internal.connection.StreamAllocation: void cancel()
io.github.prabhuomkar.pytorchandroid.R$attr: int cardViewStyle
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder setType(okhttp3.MediaType)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
androidx.core.view.ViewCompat: int MEASURED_HEIGHT_STATE_SHIFT
androidx.recyclerview.widget.SimpleItemAnimator
androidx.core.content.ContextCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setWrapWidth(int)
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_popup_menu_header_item_layout
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintBaseline_creator
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.legacy.v4.R$style: int Widget_Compat_NotificationActionContainer
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType NONE
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
androidx.camera.core.R$styleable: int FontFamily_fontProviderPackage
androidx.core.net.TrafficStatsCompat: void incrementOperationCount(int)
okio.BufferedSink: okio.BufferedSink write(okio.Source,long)
androidx.appcompat.R$style: int Theme_AppCompat_Light_DarkActionBar
androidx.activity.R$layout: int notification_template_custom_big
androidx.appcompat.R$dimen: int abc_action_button_min_width_material
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
androidx.appcompat.R$attr: int firstBaselineToTopHeight
com.downloader.Status: com.downloader.Status FAILED
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: ConstraintLayout$LayoutParams(androidx.constraintlayout.widget.ConstraintLayout$LayoutParams)
androidx.activity.R$drawable: int notification_bg
androidx.appcompat.R$style: int ThemeOverlay_AppCompat_DayNight
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.recyclerview.widget.ListAdapter: void onCurrentListChanged(java.util.List,java.util.List)
androidx.asynclayoutinflater.R$id: int action_text
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CameraX$LensFacing getLensFacing()
androidx.appcompat.R$styleable: int AnimatedStateListDrawableItem_android_id
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_android_fontVariationSettings
org.pytorch.torchvision.R$id: int progress_circular
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: void setInputConfiguration(androidx.camera.camera2.impl.compat.params.InputConfigurationCompat)
androidx.fragment.R$id: int tag_accessibility_pane_title
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.appcompat.R$drawable: int abc_list_longpressed_holo
androidx.camera.core.AppConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
org.pytorch.R$style: int Base_V26_Theme_AppCompat_Light
org.pytorch.R$id: int edit_query
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPopupWindowStyle
androidx.annotation.IntDef
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_part_time
androidx.core.os.ConfigurationCompat
androidx.customview.R$id: int tag_transition_group
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintWidth_percent
androidx.core.R$id: int accessibility_custom_action_25
androidx.camera.core.SessionConfig$SessionError: androidx.camera.core.SessionConfig$SessionError valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_android_inputType
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getOrientation()
androidx.constraintlayout.widget.ConstraintSet: void createBarrier(int,int,int[])
androidx.recyclerview.R$id: int accessibility_action_clickable_span
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeStyle
androidx.appcompat.R$attr: int multiChoiceItemLayout
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setUri(java.lang.String)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
androidx.core.view.ActionProvider: void subUiVisibilityChanged(boolean)
org.pytorch.torchvision.R$styleable: int Spinner_popupTheme
androidx.constraintlayout.solver.widgets.Optimizer: int OPTIMIZATION_DIRECT
androidx.constraintlayout.widget.ConstraintSet: int MATCH_CONSTRAINT_WRAP
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dialogTheme
org.pytorch.IValue: org.pytorch.IValue listFrom(double[])
androidx.camera.core.CameraDeviceConfig: androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
okhttp3.CacheControl
androidx.core.text.TextDirectionHeuristicsCompat: androidx.core.text.TextDirectionHeuristicCompat ANYRTL_LTR
androidx.recyclerview.R$attr: int fontWeight
okhttp3.internal.tls.BasicTrustRootIndex: BasicTrustRootIndex(java.security.cert.X509Certificate[])
org.pytorch.R$drawable: int abc_action_bar_item_background_material
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message)
androidx.recyclerview.widget.LinearSnapHelper: LinearSnapHelper()
androidx.appcompat.R$dimen: int notification_right_icon_size
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
androidx.vectordrawable.R$layout: int custom_dialog
androidx.appcompat.R$styleable: int[] GradientColorItem
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification_Info_Media
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.camera.core.SurfaceConfig$ConfigSize: androidx.camera.core.SurfaceConfig$ConfigSize[] values()
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int,java.lang.Object)
androidx.appcompat.R$id: int scrollIndicatorDown
androidx.vectordrawable.animated.R$id: int accessibility_custom_action_11
androidx.recyclerview.widget.RecyclerView: void invalidateItemDecorations()
androidx.core.content.res.TypedArrayUtils: int getResourceId(android.content.res.TypedArray,int,int,int)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: ResolutionAnchor(androidx.constraintlayout.solver.widgets.ConstraintAnchor)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.vectordrawable.R$attr: int ttcIndex
org.pytorch.R$styleable: int[] GradientColorItem
androidx.camera.camera2.R$id: int accessibility_custom_action_9
androidx.loader.content.Loader: android.content.Context getContext()
android.support.v4.media.MediaMetadataCompat$TextKey
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
org.pytorch.torchvision.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
org.pytorch.torchvision.R$styleable: int GradientColorItem_android_color
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.core.app.AppLaunchChecker: void onActivityCreate(android.app.Activity)
io.github.prabhuomkar.pytorchandroid.R$styleable: int LinearLayoutCompat_android_baselineAligned
io.github.prabhuomkar.pytorchandroid.R$id: int image_classifier_result_3
androidx.core.util.AtomicFile: java.io.FileInputStream openRead()
androidx.legacy.coreui.R$style
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.R$attr: int switchMinWidth
androidx.camera.camera2.impl.Camera2CameraFactory
org.pytorch.R$styleable: int Spinner_android_popupBackground
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError MUXER_ERROR
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
com.downloader.httpclient.HttpClient: java.io.InputStream getErrorStream()
androidx.appcompat.widget.DecorToolbar: boolean hasEmbeddedTabs()
androidx.appcompat.R$id: int action_menu_divider
io.github.prabhuomkar.pytorchandroid.R$id: int disableHome
org.pytorch.torchvision.R$string: int abc_prepend_shortcut_label
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarSize
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintHorizontal_chainStyle
org.pytorch.torchvision.R$drawable: int notification_bg_normal
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState FIRED
com.squareup.picasso.RequestHandler: RequestHandler()
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withOnItemActivatedListener(androidx.recyclerview.selection.OnItemActivatedListener)
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View)
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarTabTextStyle
androidx.appcompat.R$id: int title_template
androidx.recyclerview.R$attr: int font
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
androidx.constraintlayout.solver.LinearSystem: void reset()
okhttp3.internal.connection.StreamAllocation: void streamFailed(java.io.IOException)
okhttp3.internal.connection.StreamAllocation: okhttp3.Call call
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_spinner
androidx.coordinatorlayout.R$styleable: int FontFamilyFont_android_fontStyle
com.downloader.database.AppDbHelper: com.downloader.database.DownloadModel find(int)
androidx.appcompat.app.ActionBar: void setElevation(float)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(int)
com.facebook.soloader.nativeloader.NativeLoader: void init(com.facebook.soloader.nativeloader.NativeLoaderDelegate)
androidx.core.text.HtmlCompat: int TO_HTML_PARAGRAPH_LINES_CONSECUTIVE
okhttp3.internal.connection.ConnectionSpecSelector: ConnectionSpecSelector(java.util.List)
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat
androidx.camera.core.ImageCaptureConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.constraintlayout.solver.ArrayLinkedVariables: void put(androidx.constraintlayout.solver.SolverVariable,float)
com.downloader.database.DbHelper: void update(com.downloader.database.DownloadModel)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat yBy(float)
androidx.swiperefreshlayout.R$layout: int notification_template_part_time
androidx.activity.R$id: int accessibility_custom_action_22
androidx.core.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)
androidx.annotation.RequiresPermission$Read: androidx.annotation.RequiresPermission value()
okhttp3.Request$Builder: okhttp3.Request$Builder patch(okhttp3.RequestBody)
androidx.camera.core.ImageOutputConfig: int getTargetRotation(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_ACCESSIBILITY_FOCUS
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetClass(java.lang.Class)
androidx.camera.core.SurfaceConfig$ConfigType: androidx.camera.core.SurfaceConfig$ConfigType RAW
org.pytorch.R$drawable: int abc_scrubber_primary_mtrl_alpha
org.pytorch.torchvision.R$styleable: int FontFamilyFont_android_fontStyle
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
org.pytorch.R$style: int Base_V7_Theme_AppCompat_Dialog
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.WidgetContainer getRootWidgetContainer()
androidx.fragment.app.Fragment: void onResume()
androidx.drawerlayout.R$attr: int fontStyle
androidx.slidingpanelayout.R$layout: int notification_template_part_time
androidx.customview.R$dimen: int notification_media_narrow_margin
androidx.media.R$styleable: int FontFamilyFont_fontVariationSettings
org.pytorch.R$styleable: int AppCompatTheme_toolbarStyle
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
androidx.core.app.NotificationCompat$InboxStyle: NotificationCompat$InboxStyle(androidx.core.app.NotificationCompat$Builder)
androidx.recyclerview.widget.RecyclerView$SmoothScroller: boolean isRunning()
androidx.appcompat.R$style: int Widget_AppCompat_Light_ActivityChooserView
org.pytorch.R$layout: int abc_screen_simple_overlay_action_mode
okhttp3.ResponseBody
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
okio.ForwardingSource
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
org.pytorch.torchvision.R$attr: int actionBarDivider
androidx.core.internal.view.SupportMenu: int CATEGORY_SHIFT
androidx.versionedparcelable.VersionedParcel: void writeIntArray(int[])
androidx.camera.camera2.R$layout: int custom_dialog
androidx.appcompat.R$attr: int buttonTint
androidx.slidingpanelayout.R$style: int Widget_Compat_NotificationActionText
android.support.v4.media.session.MediaSessionCompat: void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback)
androidx.recyclerview.widget.SortedList$BatchedCallback: SortedList$BatchedCallback(androidx.recyclerview.widget.SortedList$Callback)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_ARGUMENT_URI
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$styleable: int TextAppearance_android_textColor
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_keylines
androidx.core.text.BidiFormatter: boolean isRtl(java.lang.CharSequence)
androidx.core.view.PointerIconCompat: int TYPE_TEXT
androidx.camera.core.Preview$UseCaseError: androidx.camera.core.Preview$UseCaseError[] values()
androidx.legacy.coreui.R$drawable: int notification_bg_normal
androidx.appcompat.R$drawable: int abc_ic_star_half_black_16dp
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onQueueChanged(java.util.List)
androidx.vectordrawable.animated.R$drawable: int notify_panel_notification_icon_bg
org.pytorch.torchvision.R$styleable: int AppCompatTheme_checkboxStyle
androidx.camera.core.impl.LiveDataObservable: void removeObserver(androidx.camera.core.Observable$Observer)
androidx.loader.content.CursorLoader: void setSortOrder(java.lang.String)
org.pytorch.torchvision.R$styleable: int[] RecycleListView
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
com.downloader.database.NoOpsDbHelper: java.util.List getUnwantedModels(int)
androidx.appcompat.widget.DecorContentParent: void setIcon(int)
org.pytorch.R$styleable: int[] AnimatedStateListDrawableItem
org.pytorch.R$id: int icon_group
io.github.prabhuomkar.pytorchandroid.R$color: int tooltip_background_light
androidx.appcompat.R$dimen: int notification_large_icon_height
okhttp3.internal.http.StatusLine: java.lang.String message
androidx.constraintlayout.widget.ConstraintHelper: void validateParams()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_subtitle
androidx.constraintlayout.widget.ConstraintSet: void setGuidelineEnd(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View,int)
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle)
androidx.camera.core.CameraX: java.lang.String getCameraWithLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.media.R$dimen
okhttp3.internal.Internal: void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection)
androidx.recyclerview.R$style: int TextAppearance_Compat_Notification_Time
androidx.recyclerview.widget.RecyclerView$State: RecyclerView$State()
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
androidx.recyclerview.widget.AsyncListDiffer
org.pytorch.torchvision.R$attr: int layout_anchor
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.slidingpanelayout.R$drawable: int notification_bg_low_normal
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setDefaultCaptureConfig(androidx.camera.core.CaptureConfig)
androidx.drawerlayout.R$id: int notification_main_column
androidx.customview.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)
org.pytorch.torchvision.R$styleable: int[] ColorStateListItem
io.github.prabhuomkar.pytorchandroid.R$color: int background_material_light
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String BUTTON_STATE_DONE
androidx.appcompat.view.menu.MenuWrapperICS: void close()
androidx.recyclerview.widget.LinearLayoutManager: void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.core.R$drawable: int notify_panel_notification_icon_bg
androidx.lifecycle.ViewModelProvider$NewInstanceFactory
androidx.appcompat.view.menu.MenuWrapperICS: int size()
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
okio.ByteString: int indexOf(okio.ByteString,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_NEXT_HTML_ELEMENT
org.pytorch.torchvision.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.appcompat.app.WindowDecorActionBar: android.view.View getCustomView()
androidx.camera.core.ImageProxy$PlaneProxy: int getPixelStride()
org.pytorch.torchvision.R$styleable: int[] AnimatedStateListDrawableTransition
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_layout_marginRight
androidx.recyclerview.widget.RecyclerView$ItemAnimator: void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$style: int AlertDialog_AppCompat_Light
androidx.constraintlayout.solver.widgets.Guideline: void setGuideBegin(int)
androidx.camera.camera2.R$style: int TextAppearance_Compat_Notification_Info
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
androidx.appcompat.app.ActionBar: int NAVIGATION_MODE_STANDARD
org.pytorch.torchvision.R$attr: int voiceIcon
org.pytorch.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.squareup.picasso.Request$Builder
org.pytorch.R$layout: int abc_screen_simple
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment)
androidx.core.content.MimeTypeFilter
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_ThemeOverlay_AppCompat_Dark
org.pytorch.IValue: boolean isLongList()
androidx.recyclerview.selection.DefaultSelectionTracker: void extendProvisionalRange(int)
androidx.legacy.coreutils.R$dimen: int compat_button_inset_vertical_material
okhttp3.Cookie: boolean httpOnly()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_constraint_referenced_ids
androidx.recyclerview.widget.SortedList$BatchedCallback: void onInserted(int,int)
androidx.camera.camera2.R$drawable: int notification_bg_low_normal
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
okhttp3.internal.connection.RealConnection: int successCount
androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.camera.camera2.R$dimen: int compat_button_padding_horizontal_material
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ORIENTATION
androidx.appcompat.resources.R$id: int icon_group
android.support.v4.media.MediaMetadataCompat: android.os.Bundle getBundle()
androidx.recyclerview.widget.RecyclerView$LayoutParams
androidx.appcompat.R$string: int abc_toolbar_collapse_description
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
org.pytorch.torchvision.R$attr: int spinnerDropDownItemStyle
org.pytorch.R$dimen: int compat_notification_large_icon_max_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_SELECTION
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
androidx.core.view.ViewCompat: boolean canScrollVertically(android.view.View,int)
androidx.annotation.InspectableProperty: androidx.annotation.InspectableProperty$EnumEntry[] enumMapping()
androidx.fragment.app.FragmentController: void doLoaderStart()
org.pytorch.torchvision.R$attr: int switchTextAppearance
androidx.constraintlayout.solver.widgets.ConstraintAnchor: void setMargin(int)
androidx.collection.SparseArrayCompat: boolean remove(int,java.lang.Object)
androidx.recyclerview.widget.ListAdapter: void submitList(java.util.List)
androidx.core.graphics.ColorUtils: double distanceEuclidean(double[],double[])
androidx.activity.R$id: int title
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.constraintlayout.widget.ConstraintSet: void setApplyElevation(int,boolean)
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
androidx.appcompat.widget.SearchView$OnQueryTextListener: boolean onQueryTextChange(java.lang.String)
androidx.appcompat.R$attr: int showDividers
androidx.camera.core.PreviewConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
org.pytorch.R$drawable: int abc_spinner_textfield_background_material
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_launcher_foreground
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
androidx.core.app.NotificationCompat$WearableExtender: boolean getHintContentIntentLaunchesActivity()
androidx.annotation.DimenRes
org.pytorch.R$styleable: int Toolbar_logoDescription
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionMenuTextAppearance
androidx.exifinterface.media.ExifInterface: java.lang.String LONGITUDE_EAST
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AfMode getAfMode()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
androidx.customview.widget.ExploreByTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
org.pytorch.R$styleable: int TextAppearance_android_shadowDy
org.pytorch.R$attr: int backgroundSplit
androidx.camera.camera2.R$style: int Widget_Compat_NotificationActionContainer
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
androidx.coordinatorlayout.R$id: int chronometer
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPES_ALL_MASK
androidx.legacy.coreutils.R$dimen: int notification_large_icon_width
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.downloader.database.DownloadModel: long getDownloadedBytes()
org.pytorch.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
androidx.camera.core.SurfaceSizeDefinition: android.util.Size getAnalysisSize()
androidx.media.R$styleable: int GradientColor_android_startX
androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)
org.pytorch.R$dimen: int highlight_alpha_material_colored
org.pytorch.torchvision.R$anim: int abc_grow_fade_in_from_bottom
android.support.v4.media.session.MediaSessionCompat: java.lang.String ACTION_FLAG_AS_INAPPROPRIATE
androidx.appcompat.app.ActionBar: void addTab(androidx.appcompat.app.ActionBar$Tab)
org.pytorch.torchvision.R$attr: int submitBackground
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean constrainedHeight
androidx.vectordrawable.R$styleable: int FontFamilyFont_android_fontWeight
com.downloader.request.RequestBuilder
io.github.prabhuomkar.pytorchandroid.R$styleable: int StateListDrawable_android_dither
androidx.recyclerview.R$drawable: int notification_bg_normal
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintTop_toTopOf
androidx.activity.R$color: int notification_icon_bg_color
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
androidx.core.view.ViewCompat: int OVER_SCROLL_NEVER
org.pytorch.torchvision.R$id: int home
androidx.vectordrawable.R$attr: int fontProviderPackage
androidx.appcompat.R$styleable: int MenuItem_android_visible
androidx.camera.camera2.R$dimen: int notification_large_icon_height
androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasureChild(android.view.View,int,int,int,int)
org.pytorch.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
org.pytorch.R$style: int Base_V21_Theme_AppCompat_Dialog
org.pytorch.torchvision.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
androidx.core.util.AtomicFile: void failWrite(java.io.FileOutputStream)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.camera.camera2.impl.CameraEventCallbacks: CameraEventCallbacks(androidx.camera.camera2.impl.CameraEventCallback[])
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
androidx.appcompat.R$attr: int measureWithLargestChild
androidx.appcompat.R$attr: int imageButtonStyle
org.pytorch.torchvision.R$dimen: int highlight_alpha_material_dark
androidx.fragment.R$dimen: int notification_content_margin_start
androidx.camera.core.CameraX$ErrorListener
com.squareup.picasso.Target
androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List,java.lang.Runnable)
androidx.appcompat.widget.DecorToolbar: int getNavigationMode()
org.pytorch.R$styleable: int MenuGroup_android_id
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.recyclerview.widget.SortedList$Callback: int compare(java.lang.Object,java.lang.Object)
org.pytorch.torchvision.R$attr: int maxButtonHeight
org.pytorch.torchvision.R$id: int bottom
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mOffsetY
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker build()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_list_selector_background_transition_holo_light
androidx.constraintlayout.solver.widgets.Guideline: void cyclePosition()
androidx.fragment.app.FragmentController: void dispatchPause()
androidx.customview.R$integer: int status_bar_notification_info_maxnum
androidx.core.R$layout: int notification_template_custom_big
androidx.constraintlayout.solver.Metrics: long resolutions
androidx.appcompat.R$style: int Theme_AppCompat_NoActionBar
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.app.NotificationCompat: java.lang.String EXTRA_PROGRESS
org.pytorch.R$drawable: int abc_ic_star_half_black_48dp
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
androidx.recyclerview.R$dimen: int notification_top_pad_large_text
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
androidx.core.widget.NestedScrollView: void addView(android.view.View)
androidx.core.R$dimen: int notification_right_side_padding_top
androidx.recyclerview.widget.GridLayoutManager
androidx.swiperefreshlayout.R$drawable
io.github.prabhuomkar.pytorchandroid.R$attr: int divider
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_RSA_WITH_RC4_128_SHA
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Body2
androidx.activity.R$id: int action_text
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_queryBackground
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabeledBy(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getSelectionMode()
androidx.asynclayoutinflater.R$attr: int fontProviderPackage
androidx.constraintlayout.solver.widgets.Analyzer: void determineGroups(androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer)
androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.camera.core.ImageCapture: void setTargetAspectRatioCustom(android.util.Rational)
androidx.coordinatorlayout.R$styleable: int CoordinatorLayout_Layout_layout_behavior
org.pytorch.R$layout: int notification_template_part_chronometer
io.github.prabhuomkar.pytorchandroid.R$styleable: int CardView_cardCornerRadius
org.pytorch.torchvision.R$styleable: int PopupWindow_overlapAnchor
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionButton
org.pytorch.IValue: org.pytorch.IValue from(java.lang.String)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)
org.pytorch.R$style: int Widget_AppCompat_Light_ListPopupWindow
okio.Buffer: byte[] readByteArray(long)
androidx.core.app.NotificationCompat: java.lang.String CATEGORY_PROMO
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()
androidx.core.R$id: int accessibility_custom_action_24
androidx.constraintlayout.solver.widgets.ConstraintWidget: int mDimensionRatioSide
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
okhttp3.Interceptor$Chain: okhttp3.Response proceed(okhttp3.Request)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_8
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowWithAngle(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,float)
androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)
org.pytorch.R$style
androidx.exifinterface.media.ExifInterface: short EXPOSURE_PROGRAM_CREATIVE
androidx.camera.camera2.R$id: int forever
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: java.util.concurrent.Executor getExecutor()
io.github.prabhuomkar.pytorchandroid.R$attr: int imageButtonStyle
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState INACTIVE
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newStarRating(int,float)
androidx.recyclerview.selection.DefaultSelectionTracker: boolean isSelected(java.lang.Object)
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_APP_ERROR
androidx.appcompat.R$attr: int actionOverflowButtonStyle
androidx.fragment.R$dimen: int compat_control_corner_material
androidx.coordinatorlayout.R$integer
androidx.core.R$styleable: int FontFamily_fontProviderPackage
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setOngoing(boolean)
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
androidx.core.R$color
androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonBarButtonStyle
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
org.pytorch.R$styleable: int AppCompatTheme_controlBackground
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark
androidx.annotation.Dimension: int unit()
androidx.camera.core.R$layout: int notification_action_tombstone
com.facebook.fbjni.BuildConfig: java.lang.String APPLICATION_ID
androidx.asynclayoutinflater.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
org.pytorch.torchvision.R$color: int abc_tint_spinner
androidx.appcompat.R$attr: int singleChoiceItemLayout
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
okhttp3.internal.Util: int indexOfControlOrNonAscii(java.lang.String)
androidx.camera.core.ImageReaderProxy: int getMaxImages()
androidx.camera.core.ImageAnalysisConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
org.pytorch.torchvision.R$attr: int barLength
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
androidx.core.text.BidiFormatter: java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean)
com.squareup.picasso.Picasso$RequestTransformer: com.squareup.picasso.Picasso$RequestTransformer IDENTITY
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.recyclerview.widget.AsyncListUtil$DataCallback: void recycleData(java.lang.Object[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int)
org.pytorch.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.fragment.app.ListFragment: long getSelectedItemId()
androidx.appcompat.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_SECURITY_VIOLATION
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
androidx.constraintlayout.solver.widgets.ConstraintAnchor$ConnectionType
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
okio.Buffer: okio.ByteString readByteString(long)
androidx.appcompat.R$layout: int abc_screen_simple
androidx.camera.camera2.impl.compat.params.SessionConfigurationCompat: int SESSION_HIGH_SPEED
androidx.slidingpanelayout.R$styleable: int GradientColorItem_android_color
androidx.slidingpanelayout.R$style
androidx.legacy.v4.R$id: int async
androidx.drawerlayout.widget.DrawerLayout: int LOCK_MODE_UNLOCKED
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_half_black_16dp
io.github.prabhuomkar.pytorchandroid.R$styleable: int ViewBackgroundHelper_android_background
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
org.pytorch.R$color: int highlighted_text_material_light
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.asynclayoutinflater.R$id: int blocking
io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity: ImageClassificationActivity()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_dialogPreferredPadding
androidx.recyclerview.widget.ItemTouchHelper$Callback: int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long)
androidx.core.app.CoreComponentFactory
androidx.appcompat.widget.DecorContentParent: boolean isOverflowMenuShowing()
androidx.legacy.coreui.R$color: int secondary_text_default_material_light
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderFetchStrategy
org.pytorch.R$attr: int contentInsetStartWithNavigation
androidx.appcompat.widget.DecorToolbar: android.view.View getCustomView()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
android.support.v4.app.INotificationSideChannel$Stub: INotificationSideChannel$Stub()
org.pytorch.R$attr: int progressBarStyle
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView$RecycledViewPool: int getRecycledViewCount(int)
androidx.customview.widget.ViewDragHelper: int EDGE_BOTTOM
androidx.core.graphics.ColorUtils: double calculateContrast(int,int)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: boolean hasBaseline()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()
androidx.core.app.NotificationCompat$WearableExtender: java.lang.String getBridgeTag()
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.media.R$dimen: int notification_main_column_padding_top
org.pytorch.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V21_Theme_AppCompat_Dialog
android.support.v4.media.session.MediaSessionCompat$Callback: void onSetRating(android.support.v4.media.RatingCompat)
org.pytorch.torchvision.R$style: int Base_Theme_AppCompat
androidx.constraintlayout.widget.Constraints$LayoutParams: float translationZ
androidx.fragment.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
com.downloader.internal.DownloadRunnable: int sequence
okio.Buffer: okio.BufferedSink write(byte[],int,int)
okhttp3.MediaType: java.lang.String type()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_RW2_SENSOR_BOTTOM_BORDER
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startY
androidx.appcompat.R$id: int action_bar_root
androidx.viewpager.widget.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAttachedToWindow()
org.pytorch.torchvision.R$attr: int paddingEnd
androidx.core.app.RemoteActionCompat: boolean mEnabled
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ratingbar_small_material
androidx.fragment.app.Fragment
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableTintMode
androidx.appcompat.app.ActionBar: void show()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
androidx.appcompat.widget.TintTypedArray: android.content.res.Resources getResources()
org.pytorch.torchvision.R$styleable: int SearchView_searchHintIcon
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_tooltipText
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.coordinatorlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
com.squareup.picasso.RequestHandler$Result
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasIcon()
androidx.fragment.app.DialogFragment: int STYLE_NO_FRAME
androidx.collection.ArrayMap: java.util.Set keySet()
org.pytorch.torchvision.R$styleable: int[] CoordinatorLayout_Layout
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_slide_in_bottom
io.github.prabhuomkar.pytorchandroid.datasets.imagenet.Runner: Runner()
androidx.camera.core.impl.utils.futures.FutureChain: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.appcompat.R$style: int Widget_AppCompat_ActionButton
androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)
org.pytorch.R$color: int material_grey_100
androidx.constraintlayout.solver.widgets.ConstraintWidgetGroup
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: void onItemRangeChanged(int,int)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
androidx.annotation.LongDef: long[] value()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)
okhttp3.Request: okhttp3.HttpUrl url()
org.pytorch.torchvision.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void setRtl(boolean)
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
org.pytorch.torchvision.R$id: int topPanel
com.downloader.Priority: com.downloader.Priority valueOf(java.lang.String)
androidx.appcompat.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
androidx.appcompat.resources.R$id: int title
androidx.legacy.coreui.R$attr: int layout_dodgeInsetEdges
org.pytorch.torchvision.R$styleable: int AppCompatTheme_selectableItemBackground
androidx.camera.core.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.R$styleable: int GradientColor_android_endX
okio.Sink
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat
androidx.swiperefreshlayout.R$id: int actions
io.github.prabhuomkar.pytorchandroid.R$id: int buttonPanel
okhttp3.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory()
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_ListView_DropDown
androidx.camera.camera2.R$styleable: int ColorStateListItem_android_color
org.pytorch.R$layout: int abc_screen_content_include
androidx.camera.core.CameraCaptureMetaData$AfState: androidx.camera.core.CameraCaptureMetaData$AfState[] values()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout$ContentAlignment RIGHT
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.Constraints$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.coordinatorlayout.R$styleable: <clinit>()
androidx.appcompat.R$color: int abc_search_url_text_pressed
io.github.prabhuomkar.pytorchandroid.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
androidx.appcompat.R$attr: int titleMarginTop
androidx.appcompat.R$id: int blocking
org.pytorch.R$styleable: int AppCompatTheme_spinnerStyle
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_SPEED
androidx.appcompat.R$attr: int actionModeCutDrawable
androidx.constraintlayout.widget.R$attr: int layout_constraintLeft_creator
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setKey(java.lang.String)
androidx.appcompat.R$style: int TextAppearance_AppCompat_Headline
org.pytorch.torchvision.R$drawable: int abc_cab_background_internal_bg
androidx.recyclerview.widget.SortedList: int indexOf(java.lang.Object)
org.pytorch.torchvision.R$style: int Platform_AppCompat_Light
androidx.fragment.app.FragmentManager: void popBackStack(java.lang.String,int)
androidx.vectordrawable.animated.R$dimen: int notification_large_icon_width
androidx.appcompat.R$color: int abc_tint_default
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
org.pytorch.torchvision.R$drawable: int abc_popup_background_mtrl_mult
androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.ActionBar$Tab getSelectedTab()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTabHost
okhttp3.internal.connection.StreamAllocation: okhttp3.internal.connection.RealConnection connection()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_PopupMenu
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ListView
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
androidx.recyclerview.widget.AsyncListDiffer: void submitList(java.util.List)
android.support.v4.media.MediaBrowserCompat$SearchCallback: void onSearchResult(java.lang.String,android.os.Bundle,java.util.List)
androidx.asynclayoutinflater.R$id: int line3
okhttp3.Response$Builder: Response$Builder()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
androidx.camera.core.R$dimen: int notification_large_icon_width
androidx.recyclerview.R$id: int notification_background
com.facebook.soloader.nativeloader.NativeLoader: boolean isInitialized()
androidx.coordinatorlayout.R$attr: int fontProviderFetchTimeout
androidx.fragment.R$styleable: int GradientColor_android_centerColor
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_barrierAllowsGoneWidgets
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.appcompat.R$drawable: int abc_list_selector_holo_light
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_action_button_min_width_overflow_material
androidx.appcompat.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
androidx.camera.core.R$id: int right_icon
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_numericShortcut
androidx.core.graphics.drawable.IconCompat: int getResId()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connectedTo(androidx.constraintlayout.solver.widgets.ConstraintWidget)
org.pytorch.torchvision.R$attr: int logoDescription
com.squareup.picasso.Picasso$Priority
androidx.drawerlayout.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.annotation.InspectableProperty$ValueType: androidx.annotation.InspectableProperty$ValueType RESOURCE_ID
androidx.media.VolumeProviderCompat: int VOLUME_CONTROL_FIXED
android.support.v4.media.MediaBrowserCompat$MediaItem: int describeContents()
org.pytorch.torchvision.R$styleable: int ActivityChooserView_initialActivityCount
androidx.appcompat.widget.ActionBarOverlayLayout: void saveToolbarHierarchyState(android.util.SparseArray)
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)
com.downloader.PRDownloaderConfig: void setConnectTimeout(int)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.recyclerview.R$styleable: int RecyclerView_fastScrollVerticalTrackDrawable
org.pytorch.torchvision.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void setNumCols(int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int)
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
androidx.core.text.HtmlCompat: int FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH
androidx.customview.widget.ExploreByTouchHelper: ExploreByTouchHelper(android.view.View)
androidx.lifecycle.livedata.core.R
androidx.appcompat.R$attr: int voiceIcon
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.core.R$id: int line3
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
androidx.appcompat.R$style: int Animation_AppCompat_Dialog
okhttp3.MultipartBody: okhttp3.MultipartBody$Part part(int)
okhttp3.RequestBody
androidx.appcompat.widget.DropDownListView: boolean isFocused()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment BOTTOM
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Title
androidx.customview.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: boolean isVerticalGrowth()
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
androidx.exifinterface.media.ExifInterface: int PHOTOMETRIC_INTERPRETATION_RGB
androidx.appcompat.R$styleable: int MenuView_android_headerBackground
androidx.appcompat.R$styleable: int ActionMode_background
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_22
okio.ByteString: boolean endsWith(byte[])
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_ttcIndex
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
org.pytorch.R$style: int Base_Widget_AppCompat_Button
org.pytorch.R$styleable: int View_android_focusable
androidx.core.app.DialogCompat
androidx.core.view.MotionEventCompat: int AXIS_HAT_Y
androidx.fragment.app.Fragment: boolean isHidden()
androidx.camera.core.CameraX: androidx.camera.core.UseCaseConfig getDefaultUseCaseConfig(java.lang.Class,androidx.camera.core.CameraX$LensFacing)
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: float guidePercent
androidx.appcompat.R$style: int Widget_AppCompat_ProgressBar_Horizontal
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
androidx.drawerlayout.R$dimen: int notification_media_narrow_margin
androidx.core.view.PointerIconCompat: int TYPE_HORIZONTAL_DOUBLE_ARROW
androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)
androidx.appcompat.R$dimen: int abc_floating_window_z
org.pytorch.R$anim: int abc_tooltip_exit
androidx.fragment.R$styleable: int GradientColor_android_startColor
android.support.v4.app.INotificationSideChannel: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
androidx.camera.core.CameraX: androidx.camera.core.CameraInfo getCameraInfo(androidx.camera.core.CameraX$LensFacing)
androidx.loader.R$styleable: int FontFamily_fontProviderFetchTimeout
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.downloader.httpclient.HttpClient: long getContentLength()
androidx.appcompat.widget.SwitchCompat: android.content.res.ColorStateList getThumbTintList()
org.pytorch.torchvision.R$dimen: int abc_action_bar_overflow_padding_start_material
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder onlyIfCached()
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
androidx.fragment.app.FragmentTabHost: void onAttachedToWindow()
androidx.camera.core.AppConfig
androidx.collection.LongSparseArray: boolean containsKey(long)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constrainedWidth
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
androidx.annotation.InspectableProperty: java.lang.String name()
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetStart
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_USER_RATING
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
org.pytorch.R$dimen: int abc_action_bar_overflow_padding_start_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)
androidx.camera.core.Exif: void flipVertically()
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
androidx.viewpager.widget.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.camera.core.VideoCapture$Metadata: VideoCapture$Metadata()
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet)
okio.Buffer: okio.Buffer writeShortLe(int)
okhttp3.Handshake: java.security.Principal localPrincipal()
androidx.appcompat.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.camera.core.CameraDeviceConfig
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_REI
io.github.prabhuomkar.pytorchandroid.R$id: int action_app_info
androidx.camera.core.CaptureConfig: java.util.List getCameraCaptureCallbacks()
androidx.camera.camera2.impl.VideoCaptureConfigProvider: androidx.camera.core.VideoCaptureConfig getConfig(androidx.camera.core.CameraX$LensFacing)
org.pytorch.torchvision.R$attr: int dividerPadding
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.core.view.NestedScrollingChild: void setNestedScrollingEnabled(boolean)
android.support.v4.media.RatingCompat: android.support.v4.media.RatingCompat newPercentageRating(float)
androidx.legacy.coreui.R$styleable: int GradientColor_android_startColor
androidx.coordinatorlayout.R$attr: int fontProviderFetchStrategy
androidx.recyclerview.widget.RecyclerView$LayoutManager: void endAnimation(android.view.View)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AnimatedStateListDrawableItem_android_drawable
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.drawerlayout.widget.DrawerLayout: DrawerLayout(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
org.pytorch.R$attr: int fontProviderFetchTimeout
org.pytorch.R$attr: int divider
com.downloader.database.NoOpsDbHelper: void remove(int)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ButtonBar
org.pytorch.torchvision.R$styleable: int ActionMode_closeItemLayout
androidx.collection.CircularArray: int size()
org.pytorch.torchvision.R$integer
androidx.collection.SparseArrayCompat: java.lang.Object putIfAbsent(int,java.lang.Object)
org.pytorch.R$style: int Widget_AppCompat_ActionMode
androidx.fragment.app.FragmentController: void dispatchReallyStop()
androidx.appcompat.widget.SwitchCompat: SwitchCompat(android.content.Context)
org.pytorch.R$id: int action_mode_bar
androidx.constraintlayout.solver.Metrics: long iterations
androidx.legacy.coreui.R$style: int Widget_Support_CoordinatorLayout
androidx.recyclerview.widget.SimpleItemAnimator: void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ConstraintLayout_Layout
androidx.appcompat.R$color: int abc_hint_foreground_material_dark
okhttp3.Cache: void close()
org.pytorch.IValue: org.pytorch.IValue listFrom(org.pytorch.IValue[])
androidx.versionedparcelable.VersionedParcel: char[] readCharArray(char[],int)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void setDither(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ConstraintLayout_placeholder
okhttp3.internal.http.HttpDate: java.util.Date parse(java.lang.String)
androidx.appcompat.resources.R$dimen: int notification_top_pad
androidx.recyclerview.R$dimen: int notification_main_column_padding_top
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
androidx.fragment.R$styleable: int FontFamily_fontProviderQuery
com.facebook.soloader.nativeloader.NativeLoader: boolean loadLibrary(java.lang.String)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()
androidx.camera.core.CameraX$ErrorCode: androidx.camera.core.CameraX$ErrorCode valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_action_icon_size
androidx.core.view.ViewCompat: int getLayerType(android.view.View)
androidx.cursoradapter.widget.SimpleCursorAdapter: int getStringConversionColumn()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeStyle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_android_orientation
android.support.v4.media.session.PlaybackStateCompat: int SHUFFLE_MODE_ALL
androidx.legacy.coreutils.R$id: int tag_unhandled_key_listeners
androidx.arch.core.R
androidx.camera.core.TargetConfig: androidx.camera.core.Config$Option OPTION_TARGET_CLASS
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureBundle getCaptureBundle(androidx.camera.core.CaptureBundle)
androidx.legacy.coreui.R$id: int info
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] Toolbar
androidx.coordinatorlayout.R$styleable: int[] FontFamilyFont
android.support.v4.media.MediaDescriptionCompat: android.net.Uri getMediaUri()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button_Borderless_Colored
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$layout: int abc_alert_dialog_button_bar_material
org.pytorch.R$color: int dim_foreground_material_light
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_EditText
android.support.v4.media.MediaBrowserCompat$MediaItem: boolean isBrowsable()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$color: int primary_dark_material_dark
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
org.pytorch.R$color: int abc_background_cache_hint_selector_material_dark
androidx.constraintlayout.widget.R$styleable: <clinit>()
androidx.appcompat.app.ActionBar: void removeTab(androidx.appcompat.app.ActionBar$Tab)
okhttp3.internal.ws.RealWebSocket: void connect(okhttp3.OkHttpClient)
okio.Buffer: void readFully(okio.Buffer,long)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
com.downloader.database.DatabaseOpenHelper
org.pytorch.R$layout: int abc_search_view
org.pytorch.torchvision.R$styleable: int FontFamilyFont_android_fontVariationSettings
org.pytorch.R$styleable: int SearchView_layout
androidx.appcompat.R$attr: int itemPadding
org.pytorch.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.recyclerview.selection.MutableSelection: void clear()
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintGuide_begin
com.downloader.Progress: long currentBytes
androidx.recyclerview.widget.AsyncListUtil: void refresh()
androidx.lifecycle.ComputableLiveData: ComputableLiveData(java.util.concurrent.Executor)
android.support.v4.media.session.MediaControllerCompat$TransportControls
androidx.vectordrawable.R$id: int action_text
android.support.v4.media.session.MediaSessionCompat: void setQueueTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$styleable: int[] Spinner
androidx.swiperefreshlayout.R$dimen: int notification_top_pad_large_text
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] View
org.pytorch.R$drawable: int notification_icon_background
androidx.appcompat.R$attr: int drawableLeftCompat
org.pytorch.torchvision.R$styleable: int LinearLayoutCompat_android_gravity
androidx.constraintlayout.solver.ArrayRow: void initFromRow(androidx.constraintlayout.solver.LinearSystem$Row)
androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.constraintlayout.widget.R$attr: int layout_constraintEnd_toStartOf
androidx.core.view.ActionProvider: android.view.View onCreateActionView()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo: int changeFlags
androidx.swiperefreshlayout.R$styleable: int[] FontFamilyFont
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintStart_toStartOf
androidx.core.view.WindowCompat: int FEATURE_ACTION_BAR
androidx.appcompat.R$attr: int subtitleTextAppearance
androidx.camera.core.ImageProxyBundle: java.util.List getCaptureIds()
androidx.constraintlayout.solver.widgets.ConstraintWidget: void immediateConnect(androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,androidx.constraintlayout.solver.widgets.ConstraintWidget,androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type,int,int)
androidx.recyclerview.widget.RecyclerView: void clearOnScrollListeners()
androidx.core.provider.SelfDestructiveThread: int getGeneration()
androidx.recyclerview.widget.GridLayoutManager: void setUsingSpansToEstimateScrollbarDimensions(boolean)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ActivityChooserView
androidx.core.R$layout: int notification_template_part_time
org.pytorch.torchvision.R$attr: int homeAsUpIndicator
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
androidx.customview.R$id: int right_side
androidx.vectordrawable.R$dimen: int notification_media_narrow_margin
androidx.appcompat.resources.R$dimen: int compat_button_padding_vertical_material
androidx.cardview.R$dimen: int cardview_default_radius
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
androidx.appcompat.widget.SwitchCompat: void onMeasure(int,int)
androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void resolve()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.appcompat.R$color: int switch_thumb_material_dark
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int FLAG_INVALIDATED
androidx.loader.R$attr: int fontProviderFetchStrategy
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
org.pytorch.DType: org.pytorch.DType valueOf(java.lang.String)
org.pytorch.R$styleable: int MenuItem_android_orderInCategory
androidx.versionedparcelable.ParcelUtils: void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List)
androidx.core.view.ViewCompat: ViewCompat()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
androidx.camera.core.VideoCapture$VideoCaptureError: androidx.camera.core.VideoCapture$VideoCaptureError valueOf(java.lang.String)
org.pytorch.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getY()
androidx.camera.camera2.Camera2Config$Builder: androidx.camera.camera2.Camera2Config$Builder setCaptureRequestOption(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)
androidx.appcompat.R$dimen: int notification_big_circle_margin
org.pytorch.torchvision.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.drawerlayout.R$styleable: int GradientColorItem_android_offset
androidx.camera.core.SingleImageProxyBundle: java.util.List getCaptureIds()
androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_editor_absoluteX
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.appcompat.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.fragment.R$id: int accessibility_custom_action_1
androidx.appcompat.R$style: int Widget_AppCompat_PopupMenu
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
org.pytorch.torchvision.R$styleable: int Toolbar_logo
okhttp3.Cache: java.lang.String key(okhttp3.HttpUrl)
androidx.appcompat.widget.SwitchCompat: int getCompoundPaddingRight()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionDropDownStyle
androidx.core.os.LocaleListCompat: java.util.Locale get(int)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Button_Colored
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender setColor(int)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getCurrentVolume(java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.camera.core.PreviewConfig: int getTargetRotation(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintBottom_creator
okhttp3.internal.http.RealResponseBody: RealResponseBody(java.lang.String,long,okio.BufferedSource)
androidx.camera.core.VideoCaptureConfig: boolean containsOption(androidx.camera.core.Config$Option)
okio.Buffer: long indexOfElement(okio.ByteString,long)
android.support.v4.media.MediaBrowserCompat$CustomActionCallback
androidx.core.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)
io.github.prabhuomkar.pytorchandroid.R$dimen: int subtitle_outline_width
org.pytorch.R$dimen: int compat_button_inset_vertical_material
androidx.core.view.ViewCompat: int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_popupWindowStyle
org.pytorch.R$color: int abc_search_url_text
androidx.media.MediaBrowserServiceCompat: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()
androidx.camera.core.TargetConfig$Builder: java.lang.Object setTargetName(java.lang.String)
okhttp3.internal.Internal: okhttp3.internal.Internal instance
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
org.pytorch.torchvision.R$attr: int actionModeFindDrawable
androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)
android.support.v4.media.session.PlaybackStateCompat$ShuffleMode
androidx.core.R$id: int blocking
androidx.core.os.HandlerCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
androidx.core.graphics.PathParser
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
org.pytorch.torchvision.R$attr: int backgroundStacked
androidx.constraintlayout.widget.ConstraintSet: void centerVertically(int,int)
androidx.concurrent.futures.AbstractResolvableFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper: void getPermissions(androidx.appcompat.app.AppCompatActivity)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_fade_in
androidx.camera.core.VideoCapture$VideoCaptureError
io.github.prabhuomkar.pytorchandroid.playground.ImageClassificationActivity
com.facebook.jni.DestructorThread$Destructor: DestructorThread$Destructor(java.lang.Object)
androidx.fragment.R$styleable: int FontFamilyFont_android_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_barrierDirection
androidx.camera.camera2.R$id: int accessibility_custom_action_22
androidx.core.app.NotificationCompat$Action: int SEMANTIC_ACTION_MUTE
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_popupTheme
androidx.core.app.NotificationCompat$MessagingStyle$Message
org.pytorch.R$attr: int initialActivityCount
androidx.core.provider.FontsContractCompat$FontRequestCallback: int FAIL_REASON_FONT_NOT_FOUND
okhttp3.internal.ws.RealWebSocket: boolean send(okio.ByteString)
androidx.appcompat.resources.R$id: int italic
org.pytorch.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
org.pytorch.R$styleable: int MenuItem_android_numericShortcut
androidx.core.graphics.drawable.WrappedDrawable: void setWrappedDrawable(android.graphics.drawable.Drawable)
io.github.prabhuomkar.pytorchandroid.R$layout: int support_simple_spinner_dropdown_item
androidx.collection.LongSparseArray: java.lang.Object clone()
org.pytorch.R$drawable: int abc_popup_background_mtrl_mult
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
org.pytorch.torchvision.R$attr: int gapBetweenBars
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_switch_padding
org.pytorch.torchvision.R$styleable: int AppCompatTheme_ratingBarStyleSmall
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
androidx.recyclerview.R$id: int accessibility_custom_action_2
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
androidx.collection.ArraySet: boolean removeAll(androidx.collection.ArraySet)
org.pytorch.IValue: org.pytorch.IValue listFrom(boolean[])
io.github.prabhuomkar.pytorchandroid.ui.adapters.RecyclerViewClickListener
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setBackgroundExecutor(java.util.concurrent.Executor)
androidx.camera.core.UseCaseConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig()
androidx.constraintlayout.widget.ConstraintSet: void setGuidelinePercent(int,float)
androidx.fragment.app.FragmentManager: void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
org.pytorch.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: int SURFACE_GROUP_ID_NONE
androidx.versionedparcelable.VersionedParcelable
androidx.camera.camera2.R$id: int italic
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.recyclerview.widget.LinearLayoutManager: int findLastCompletelyVisibleItemPosition()
org.pytorch.torchvision.R$id: int up
androidx.vectordrawable.R$styleable: int GradientColor_android_endX
android.support.v4.media.MediaDescriptionCompat: java.lang.Object getMediaDescription()
android.support.v4.media.MediaMetadataCompat: long getLong(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
org.pytorch.torchvision.R$color: int tooltip_background_dark
org.pytorch.torchvision.R$styleable: int MenuItem_showAsAction
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowActionBarOverlay
androidx.constraintlayout.solver.LinearSystem: void addCentering(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,float,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.constraintlayout.solver.widgets.Guideline: int RELATIVE_BEGIN
io.github.prabhuomkar.pytorchandroid.R$string: int app_name
androidx.appcompat.R$attr: int listDividerAlertDialog
io.github.prabhuomkar.pytorchandroid.R$id: int checkbox
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setVerticalDimension(int,int)
androidx.camera.core.MutableConfig
androidx.legacy.v4.R$dimen: int notification_action_text_size
org.pytorch.R$style: int Base_Widget_AppCompat_ImageButton
org.pytorch.torchvision.R$attr: int colorPrimaryDark
androidx.core.view.NestedScrollingParent3
androidx.camera.camera2.impl.compat.CameraManagerCompat: androidx.camera.camera2.impl.compat.CameraManagerCompat from(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$id: int useLogo
androidx.camera.camera2.R$string: int status_bar_notification_info_overflow
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
org.pytorch.R$dimen: int abc_dialog_padding_material
androidx.appcompat.R$attr: int checkedTextViewStyle
androidx.appcompat.R$attr: int selectableItemBackground
androidx.versionedparcelable.VersionedParcel: void writeByte(byte,int)
androidx.appcompat.R$id: int unchecked
io.github.prabhuomkar.pytorchandroid.R$attr: int actionBarStyle
androidx.core.R$id: int accessibility_custom_action_1
org.pytorch.torchvision.R$attr: int dialogPreferredPadding
androidx.camera.core.SurfaceCombination: boolean isSupported(java.util.List)
androidx.vectordrawable.R$id: int accessibility_custom_action_12
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] ViewBackgroundHelper
androidx.vectordrawable.R$styleable: int GradientColorItem_android_offset
androidx.recyclerview.widget.AsyncListDiffer$ListListener
org.pytorch.R$style: int Base_Theme_AppCompat
androidx.constraintlayout.solver.Metrics: long errors
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removePathSegment(int)
org.pytorch.R$dimen: int notification_action_icon_size
android.support.v4.media.session.IMediaControllerCallback$Stub
androidx.recyclerview.widget.RecyclerView$Adapter: int getItemViewType(int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWrapWidth()
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
com.downloader.PRDownloader: com.downloader.request.DownloadRequestBuilder download(java.lang.String,java.lang.String,java.lang.String)
okhttp3.internal.Util: java.lang.String hostHeader(okhttp3.HttpUrl,boolean)
androidx.appcompat.R$dimen: int tooltip_corner_radius
androidx.appcompat.widget.DecorContentParent: void setWindowCallback(android.view.Window$Callback)
okhttp3.internal.io.FileSystem: okio.Sink appendingSink(java.io.File)
androidx.drawerlayout.R$styleable: int[] GradientColor
androidx.legacy.v4.R$dimen: int compat_button_padding_vertical_material
okio.Timeout: boolean hasDeadline()
androidx.slidingpanelayout.widget.SlidingPaneLayout: void onLayout(boolean,int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_android_maxWidth
org.pytorch.R$drawable: int abc_tab_indicator_mtrl_alpha
androidx.constraintlayout.widget.Constraints
androidx.recyclerview.R$dimen: int compat_notification_large_icon_max_height
androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.slidingpanelayout.R$drawable: int notification_bg
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
org.pytorch.torchvision.R$id: int action_mode_bar
androidx.camera.core.ImageCapture$ImageCaptureError: androidx.camera.core.ImageCapture$ImageCaptureError[] values()
androidx.constraintlayout.solver.widgets.ConstraintHorizontalLayout: ConstraintHorizontalLayout()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
androidx.core.widget.ScrollerCompat: androidx.core.widget.ScrollerCompat create(android.content.Context)
androidx.fragment.R$styleable: int[] ColorStateListItem
com.downloader.Error: boolean isConnectionError()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)
androidx.appcompat.R$color: int primary_text_disabled_material_dark
okhttp3.internal.http.RealInterceptorChain: okhttp3.Call call()
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.lifecycle.ComputableLiveData: androidx.lifecycle.LiveData getLiveData()
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
androidx.core.view.KeyEventDispatcher
org.pytorch.torchvision.R$styleable: int AppCompatTheme_windowFixedWidthMajor
org.pytorch.R$dimen: int abc_text_size_menu_header_material
org.pytorch.R$styleable: int ActionBar_subtitleTextStyle
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.AspectRatio getTargetAspectRatio()
androidx.appcompat.widget.DecorToolbar: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
io.github.prabhuomkar.pytorchandroid.R$attr: int chainUseRtl
androidx.camera.core.UseCaseGroup: boolean addUseCase(androidx.camera.core.UseCase)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar
androidx.appcompat.R$color: int secondary_text_default_material_light
org.pytorch.torchvision.R$style: int Widget_AppCompat_Spinner
androidx.activity.R$id: int right_side
androidx.swiperefreshlayout.R$attr: int fontStyle
androidx.camera.camera2.Camera2Config$Extender: androidx.camera.camera2.Camera2Config$Extender setCaptureRequestTemplate(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.AsyncListDiffer$ListListener: void onCurrentListChanged(java.util.List,java.util.List)
androidx.appcompat.R$dimen: int abc_text_size_menu_material
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
com.squareup.picasso.Request: android.graphics.Bitmap$Config config
androidx.swiperefreshlayout.R$styleable: int[] ColorStateListItem
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat)
androidx.appcompat.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withOperationMonitor(androidx.recyclerview.selection.OperationMonitor)
org.pytorch.R$style: int TextAppearance_AppCompat_Subhead
okhttp3.CipherSuite: okhttp3.CipherSuite forJavaName(java.lang.String)
org.pytorch.torchvision.R$styleable: int MenuItem_iconTint
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA
io.github.prabhuomkar.pytorchandroid.R$dimen: int disabled_alpha_material_light
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int)
androidx.collection.SparseArrayCompat: void remove(int)
io.github.prabhuomkar.pytorchandroid.R$anim: int abc_grow_fade_in_from_bottom
androidx.media.VolumeProviderCompat: void onSetVolumeTo(int)
androidx.core.view.NestedScrollingParent2: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.core.R$dimen: int compat_button_inset_vertical_material
androidx.documentfile.provider.DocumentFile: long lastModified()
androidx.media.R$layout: int notification_template_part_chronometer
androidx.legacy.coreui.R$drawable: int notification_template_icon_low_bg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
androidx.legacy.coreui.R$id: int right_side
androidx.appcompat.R$styleable: int MenuItem_android_checked
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.legacy.v4.R$dimen: int subtitle_corner_radius
androidx.appcompat.app.AppCompatDelegate: void invalidateOptionsMenu()
androidx.appcompat.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()
androidx.customview.widget.ViewDragHelper: int EDGE_TOP
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.recyclerview.selection.FocusDelegate: void focusItem(androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails)
org.pytorch.R$style: int TextAppearance_AppCompat_Medium_Inverse
androidx.annotation.CheckResult: java.lang.String suggest()
androidx.viewpager.R$id: int text
androidx.recyclerview.widget.OrientationHelper: int getModeInOther()
com.downloader.internal.DownloadRequestQueue: void cancel(int)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_toolbar_collapse_description
androidx.fragment.R$layout: int notification_action
androidx.legacy.v4.R$attr: int statusBarBackground
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
org.pytorch.R$style: int Base_TextAppearance_AppCompat_SearchResult
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_DISPLAY_ICON_URI
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
androidx.core.view.NestedScrollingChild: void stopNestedScroll()
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setDefaultResolution(android.util.Size)
androidx.cardview.R$dimen
org.pytorch.R$drawable: int abc_ic_star_black_48dp
androidx.core.widget.AutoSizeableTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean equals(java.lang.Object)
androidx.drawerlayout.widget.DrawerLayout: boolean isDrawerOpen(int)
androidx.exifinterface.media.ExifInterface: short SENSITIVITY_TYPE_SOS_AND_REI
okio.ByteString: okio.ByteString of(byte[],int,int)
com.squareup.picasso.Picasso: void cancelRequest(com.squareup.picasso.Target)
androidx.constraintlayout.widget.ConstraintLayout: void fillMetrics(androidx.constraintlayout.solver.Metrics)
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonStyleSmall
androidx.camera.core.PreviewConfig$Builder: java.lang.Object setUseCaseEventListener(androidx.camera.core.UseCase$EventListener)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getPriorityLevel()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
org.pytorch.torchvision.R$attr: int borderlessButtonStyle
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: int ARROW_DIRECTION_START
androidx.core.util.Pair: java.lang.Object second
okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
androidx.constraintlayout.widget.ConstraintSet: void constrainMinHeight(int,int)
android.support.v4.media.session.PlaybackStateCompat$Builder: PlaybackStateCompat$Builder()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.appcompat.app.ActionBarDrawerToggle: android.view.View$OnClickListener getToolbarNavigationClickListener()
android.support.v4.media.session.PlaybackStateCompat$Builder: android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long)
androidx.appcompat.R$style: int Base_V28_Theme_AppCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setOffset(int,int)
androidx.camera.core.TargetConfig$Builder
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat
androidx.media.R$styleable: int[] ColorStateListItem
org.pytorch.R$styleable: int GradientColor_android_centerY
io.github.prabhuomkar.pytorchandroid.R$integer: int status_bar_notification_info_maxnum
androidx.customview.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)
androidx.appcompat.R$style: int Widget_AppCompat_Light_ListPopupWindow
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type ERROR
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
androidx.recyclerview.widget.DefaultItemAnimator: void endAnimations()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
okhttp3.HttpUrl
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
androidx.appcompat.R$color: int accent_material_dark
android.support.v4.media.session.MediaSessionCompat$Token: void writeToParcel(android.os.Parcel,int)
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
org.pytorch.torchvision.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
org.pytorch.R$styleable: int SearchView_searchIcon
androidx.legacy.coreui.R$color: int notification_action_color_filter
androidx.legacy.coreutils.R$id: int action_divider
io.github.prabhuomkar.pytorchandroid.R$string: int menu_contact_us
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemRangeChanged(int,int)
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
io.github.prabhuomkar.pytorchandroid.models.Model
io.github.prabhuomkar.pytorchandroid.R$id: int customPanel
okhttp3.CacheControl: boolean noStore()
org.pytorch.R$styleable: int AppCompatTheme_windowActionBar
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Large
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator
androidx.annotation.IntRange: long to()
androidx.fragment.app.ListFragment: void setSelection(int)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.MutableConfig getMutableConfig()
androidx.customview.widget.ExploreByTouchHelper: int INVALID_ID
org.pytorch.R$styleable: int ActivityChooserView_initialActivityCount
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setLensFacing(androidx.camera.core.CameraX$LensFacing)
org.pytorch.torchvision.R$attr: int buttonTintMode
androidx.legacy.coreui.R$id: int none
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.camera.core.CaptureConfig$Builder: void addImplementationOptions(androidx.camera.core.Config)
androidx.camera.core.UseCaseGroupRepository$2
androidx.constraintlayout.solver.Metrics: long optimize
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.legacy.coreui.R$styleable: <clinit>()
androidx.appcompat.widget.AbsActionBarView: boolean canShowOverflowMenu()
androidx.exifinterface.media.ExifInterface: int ORIENTATION_UNDEFINED
com.downloader.Priority: com.downloader.Priority IMMEDIATE
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Toolbar
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
android.support.v4.media.session.MediaControllerCompat: void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler)
org.pytorch.torchvision.R$color: int material_blue_grey_900
androidx.camera.core.Config
androidx.swiperefreshlayout.R$style: int TextAppearance_Compat_Notification
androidx.activity.R$dimen: int notification_top_pad_large_text
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_placeholder_emptyVisibility
androidx.constraintlayout.solver.ArrayRow: androidx.constraintlayout.solver.ArrayRow createRowGreaterThan(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,int)
androidx.core.widget.ScrollerCompat: void startScroll(int,int,int,int)
androidx.appcompat.R$style: int Base_Widget_AppCompat_RatingBar_Small
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_8
androidx.fragment.app.FragmentStatePagerAdapter
androidx.appcompat.R$attr: int fontProviderQuery
androidx.camera.core.VideoCaptureConfig: java.util.List getSupportedResolutions(java.util.List)
androidx.coordinatorlayout.R$styleable: int[] CoordinatorLayout
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: void finalize()
android.support.v4.media.MediaMetadataCompat: java.lang.Object getMediaMetadata()
okio.Buffer: java.lang.Object clone()
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureBufferLost(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.view.Surface,long)
androidx.viewpager.R$styleable: int ColorStateListItem_alpha
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
androidx.loader.content.CursorLoader: void setSelection(java.lang.String)
androidx.fragment.app.Fragment: java.lang.String getString(int)
androidx.core.app.NotificationCompatExtras: java.lang.String EXTRA_REMOTE_INPUTS
android.support.v4.media.RatingCompat: int RATING_THUMB_UP_DOWN
androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.appcompat.R$dimen: int abc_action_bar_subtitle_top_margin_material
androidx.activity.R$dimen: int notification_content_margin_start
androidx.appcompat.R$styleable: int ActionBar_icon
io.github.prabhuomkar.pytorchandroid.R$id: int META
org.pytorch.torchvision.R$dimen: int abc_progress_bar_height_material
androidx.camera.camera2.R$styleable: int GradientColor_android_centerX
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Large_Inverse
org.pytorch.R$attr: int listItemLayout
android.support.v4.media.MediaBrowserCompat: java.lang.String CUSTOM_ACTION_DOWNLOAD
io.github.prabhuomkar.pytorchandroid.R$attr
androidx.recyclerview.widget.ItemTouchHelper$Callback: float getSwipeVelocityThreshold(float)
androidx.appcompat.widget.ActivityChooserView: void onAttachedToWindow()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int MOVEMENT_GRANULARITY_PARAGRAPH
androidx.legacy.coreui.R$attr: int layout_anchor
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
android.support.v4.media.session.IMediaControllerCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.vectordrawable.R$id: int accessibility_custom_action_7
androidx.recyclerview.widget.RecyclerView$State: boolean isMeasuring()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.collection.CircularIntArray: void addLast(int)
org.pytorch.R$styleable: int ActionBar_contentInsetRight
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_DIRECTION_TRUE
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter
org.pytorch.torchvision.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator fit()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$id: int fill_horizontal
okio.ForwardingTimeout: long timeoutNanos()
androidx.constraintlayout.solver.widgets.Optimizer: Optimizer()
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_barLength
androidx.drawerlayout.widget.DrawerLayout$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TIMESTAMP
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setActionView(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.media.R$id: int right_side
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void enableContentAnimations(boolean)
org.pytorch.R$styleable: int AppCompatTextView_lineHeight
androidx.appcompat.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)
androidx.customview.R$id: int notification_main_column_container
androidx.exifinterface.media.ExifInterface: short LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
org.pytorch.torchvision.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
org.pytorch.R$styleable: int StateListDrawable_android_exitFadeDuration
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void recycle()
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
androidx.legacy.coreui.R$id: int blocking
androidx.recyclerview.selection.MutableSelection: boolean add(java.lang.Object)
androidx.appcompat.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_MEDIA_URI
androidx.camera.camera2.Camera2Config: java.lang.Object retrieveOption(androidx.camera.core.Config$Option,java.lang.Object)
org.pytorch.torchvision.R$attr: int contentInsetEnd
androidx.core.view.ViewPropertyAnimatorCompat: long getStartDelay()
org.pytorch.torchvision.TensorImageUtils: float[] TORCHVISION_NORM_MEAN_RGB
androidx.core.view.ViewCompat: int getOverScrollMode(android.view.View)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
androidx.camera.core.R$id: int accessibility_custom_action_27
androidx.constraintlayout.solver.widgets.Guideline: androidx.constraintlayout.solver.widgets.ConstraintAnchor getAnchor()
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
okhttp3.FormBody$Builder: FormBody$Builder(java.nio.charset.Charset)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.core.view.NestedScrollingParent: int getNestedScrollAxes()
androidx.loader.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.R$attr: int theme
org.pytorch.R$string: int abc_menu_function_shortcut_label
androidx.camera.core.UseCaseConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.legacy.coreutils.R$integer: int status_bar_notification_info_maxnum
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_toRightOf
org.pytorch.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.camera.core.ImageReaderProxys
androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_COLUMN_INT
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat_Light
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
androidx.constraintlayout.widget.Constraints$LayoutParams: float transformPivotX
org.pytorch.R$styleable: int AppCompatTextView_fontFamily
androidx.loader.R$styleable: int GradientColor_android_endColor
okhttp3.WebSocket: okhttp3.Request request()
org.pytorch.torchvision.R$drawable: int abc_list_focused_holo
org.pytorch.R$attr: int subMenuArrow
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
androidx.swiperefreshlayout.widget.CircularProgressDrawable$ProgressDrawableSize
androidx.drawerlayout.widget.DrawerLayout: void setScrimColor(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.view.accessibility.AccessibilityEventCompat: int TYPE_VIEW_CONTEXT_CLICKED
androidx.camera.camera2.impl.Camera2Initializer: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintEnd_toEndOf
androidx.appcompat.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
androidx.camera.core.R$id: int tag_unhandled_key_event_manager
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_goneMarginBottom
androidx.core.R$id: int notification_main_column_container
androidx.core.R$attr: int fontProviderPackage
org.pytorch.R$color: int abc_tint_switch_track
org.pytorch.R$drawable: int abc_list_divider_mtrl_alpha
androidx.swiperefreshlayout.widget.CircularProgressDrawable: float getProgressRotation()
androidx.viewpager.widget.PagerAdapter: int getCount()
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
org.pytorch.R$attr: int titleTextAppearance
androidx.appcompat.R$drawable: int abc_btn_switch_to_on_mtrl_00012
androidx.core.widget.AutoScrollHelper: int EDGE_TYPE_INSIDE
androidx.loader.R$attr: int fontProviderQuery
okhttp3.internal.cache.InternalCache
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_part_chronometer
androidx.legacy.v4.R$attr: int layout_dodgeInsetEdges
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
okhttp3.internal.http1.Http1Codec: void writeRequest(okhttp3.Headers,java.lang.String)
com.downloader.request.DownloadRequest: void setTag(java.lang.Object)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
androidx.recyclerview.widget.ItemTouchHelper: int ACTION_STATE_IDLE
androidx.appcompat.R$styleable: int GradientColor_android_endColor
androidx.core.graphics.BitmapCompat: void setHasMipMap(android.graphics.Bitmap,boolean)
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemPaddingStart
android.support.v4.media.session.MediaSessionCompatApi24$Callback: void onPrepare()
androidx.fragment.app.Fragment: boolean isStateSaved()
androidx.annotation.RequiresFeature: java.lang.String name()
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper: android.view.LayoutInflater getDropDownViewInflater()
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
org.pytorch.R$drawable: int abc_list_pressed_holo_dark
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)
androidx.appcompat.R$styleable: int MenuItem_android_enabled
okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)
androidx.appcompat.R$styleable: int AppCompatTheme_buttonBarButtonStyle
androidx.loader.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
org.pytorch.torchvision.R$attr: int colorPrimary
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder centerCrop(int)
androidx.vectordrawable.R$styleable: int FontFamily_fontProviderQuery
androidx.appcompat.R$drawable: int abc_scrubber_track_mtrl_alpha
androidx.vectordrawable.animated.R$styleable: int FontFamilyFont_android_font
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator onlyScaleDown()
androidx.loader.content.Loader$ForceLoadContentObserver: Loader$ForceLoadContentObserver(androidx.loader.content.Loader)
androidx.viewpager.R$id: int blocking
org.pytorch.R$attr: int activityChooserViewStyle
org.pytorch.torchvision.R$styleable: int ActionBar_elevation
androidx.appcompat.R$styleable: int AppCompatTheme_actionBarPopupTheme
io.github.prabhuomkar.pytorchandroid.R$color: int dim_foreground_material_light
org.pytorch.torchvision.R$style: int Widget_AppCompat_ActionButton_Overflow
okhttp3.HttpUrl: java.lang.String queryParameterName(int)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
android.support.v4.media.session.MediaSessionCompat: void setMetadata(android.support.v4.media.MediaMetadataCompat)
androidx.camera.core.ImageAnalysisConfig: java.util.concurrent.Executor getBackgroundExecutor()
androidx.interpolator.view.animation.LinearOutSlowInInterpolator
androidx.constraintlayout.widget.R$attr: int layout_constraintStart_toEndOf
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener: void onRefresh()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_star_black_16dp
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_spinner_textfield_background_material
androidx.core.graphics.drawable.DrawableCompat
androidx.core.app.NotificationCompat: java.lang.String EXTRA_IS_GROUP_CONVERSATION
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.slidingpanelayout.widget.SlidingPaneLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.PagerSnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
org.pytorch.torchvision.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.recyclerview.widget.RecyclerView$Recycler: void clear()
io.github.prabhuomkar.pytorchandroid.R$layout: int abc_alert_dialog_material
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorControlHighlight
androidx.recyclerview.R$id: int accessibility_custom_action_11
androidx.core.view.accessibility.AccessibilityEventCompat: int CONTENT_CHANGE_TYPE_PANE_DISAPPEARED
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int PARENT_ID
org.pytorch.torchvision.R$drawable: int abc_list_selector_background_transition_holo_light
android.support.v4.media.session.MediaSessionCompat: int MEDIA_ATTRIBUTE_PLAYLIST
androidx.constraintlayout.widget.R$id: int invisible
androidx.core.net.ConnectivityManagerCompat: int RESTRICT_BACKGROUND_STATUS_WHITELISTED
org.pytorch.torchvision.R$attr: int dropDownListViewStyle
okhttp3.internal.ws.RealWebSocket: RealWebSocket(okhttp3.Request,okhttp3.WebSocketListener,java.util.Random,long)
androidx.loader.R$dimen: int notification_action_text_size
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
androidx.camera.camera2.impl.ImageAnalysisConfigProvider: androidx.camera.core.ImageAnalysisConfig getConfig(androidx.camera.core.CameraX$LensFacing)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.UseCase$EventListener getUseCaseEventListener()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int)
androidx.appcompat.view.menu.MenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.downloader.OnStartOrResumeListener
androidx.appcompat.app.WindowDecorActionBar: void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams)
org.pytorch.torchvision.R$style: int Widget_AppCompat_ImageButton
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
androidx.camera.core.CaptureStage$DefaultCaptureStage
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
org.pytorch.R$id: int action_bar_root
androidx.legacy.v4.R$dimen: int compat_button_inset_horizontal_material
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_startY
androidx.appcompat.widget.Toolbar: void setTitleMargin(int,int,int,int)
androidx.camera.core.VideoCapture
androidx.media.AudioAttributesCompat$Builder: AudioAttributesCompat$Builder()
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder followRedirects(boolean)
org.pytorch.torchvision.R$string: int abc_menu_shift_shortcut_label
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.util.Consumer: void accept(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
org.pytorch.torchvision.R$styleable: int Toolbar_titleTextColor
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
androidx.appcompat.R$styleable: int ColorStateListItem_android_alpha
androidx.slidingpanelayout.R$attr: int fontProviderCerts
androidx.appcompat.R$styleable: int FontFamilyFont_fontVariationSettings
okhttp3.internal.http2.Http2Connection: void writeData(int,boolean,okio.Buffer,long)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
io.github.prabhuomkar.pytorchandroid.R$id: int cancel_action
androidx.asynclayoutinflater.R$layout: int notification_action
io.github.prabhuomkar.pytorchandroid.R$id: int normal
io.github.prabhuomkar.pytorchandroid.R
androidx.core.R$drawable: int notification_action_background
androidx.viewpager.R$dimen: int compat_button_inset_vertical_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int)
androidx.media.R$attr: int fontVariationSettings
org.pytorch.torchvision.R$styleable: int TextAppearance_android_shadowDy
androidx.core.view.accessibility.AccessibilityViewCommand
androidx.asynclayoutinflater.R$dimen
org.pytorch.torchvision.R$id: int screen
androidx.core.view.NestedScrollingParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)
org.pytorch.torchvision.R$attr: int tickMarkTintMode
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.appcompat.R$attr: int allowStacking
androidx.appcompat.view.StandaloneActionMode: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.constraintlayout.widget.Placeholder
androidx.camera.core.R$id: int accessibility_custom_action_26
androidx.core.R$dimen
androidx.versionedparcelable.ParcelUtils
androidx.swiperefreshlayout.R$string: int status_bar_notification_info_overflow
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DEST_BEARING_REF
androidx.legacy.v4.R$id: int action_text
org.pytorch.torchvision.R$style: int Base_DialogWindowTitle_AppCompat
androidx.legacy.coreutils.R$color
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Spinner_Underlined
androidx.core.net.TrafficStatsCompat
com.downloader.Response: com.downloader.Error getError()
androidx.recyclerview.widget.SnapHelper: androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager)
io.github.prabhuomkar.pytorchandroid.R$id: int action_container
androidx.fragment.app.FragmentController: void dispatchDestroy()
io.github.prabhuomkar.pytorchandroid.R$attr: int contentDescription
okhttp3.Response$Builder: okhttp3.Response$Builder header(java.lang.String,java.lang.String)
androidx.appcompat.widget.DecorToolbar: void setDisplayOptions(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
io.github.prabhuomkar.pytorchandroid.ui.fragments.AppInfoFragment
androidx.appcompat.R$color: int material_grey_600
androidx.core.util.Preconditions: void checkArgument(boolean)
androidx.slidingpanelayout.R$id: int async
androidx.slidingpanelayout.R$styleable: int GradientColor_android_endColor
androidx.viewpager.R$styleable: int FontFamily_fontProviderPackage
com.downloader.Response: boolean isSuccessful()
okhttp3.internal.connection.RouteSelector: boolean hasNext()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
org.pytorch.R$attr: int collapseIcon
androidx.loader.R$id: int forever
androidx.camera.camera2.R$integer
okhttp3.MultipartBody$Builder: MultipartBody$Builder(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_Support_CoordinatorLayout
android.support.v4.media.session.MediaControllerCompat: boolean isSessionReady()
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
androidx.slidingpanelayout.R$attr: int fontProviderAuthority
androidx.legacy.v4.R$dimen: int compat_notification_large_icon_max_height
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.lifecycle.livedata.R
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
androidx.vectordrawable.animated.R$styleable: int GradientColor_android_startColor
androidx.camera.core.Preview$Defaults
androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)
androidx.core.app.NotificationCompat$MessagingStyle: androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person)
androidx.recyclerview.widget.GridLayoutManager: void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int)
org.pytorch.torchvision.R$attr: int height
androidx.camera.core.CaptureConfig: androidx.camera.core.CaptureConfig defaultEmptyCaptureConfig()
androidx.constraintlayout.widget.R$attr: int barrierAllowsGoneWidgets
okhttp3.internal.http1.Http1Codec: okio.Sink newChunkedSink()
org.pytorch.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.appcompat.widget.SwitchCompat: void setChecked(boolean)
android.support.v4.media.session.MediaSessionCompat$QueueItem
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.appcompat.R$styleable: int Toolbar_subtitle
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_creator
androidx.camera.core.R$id: int accessibility_custom_action_25
androidx.swiperefreshlayout.R$dimen: int compat_button_inset_horizontal_material
androidx.coordinatorlayout.R$styleable: int GradientColor_android_gradientRadius
okhttp3.Dispatcher: Dispatcher()
androidx.legacy.v4.R$layout: int notification_template_icon_group
com.squareup.picasso.BuildConfig: java.lang.String FLAVOR
androidx.viewpager.R$dimen: int compat_control_corner_material
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Toolbar
androidx.core.os.ParcelCompat: void writeBoolean(android.os.Parcel,boolean)
androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
androidx.appcompat.R$style: int Platform_V25_AppCompat_Light
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int endToEnd
io.github.prabhuomkar.pytorchandroid.R$attr: int fontStyle
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.camera.camera2.impl.Camera2CameraCaptureResultConverter
androidx.core.view.PointerIconCompat: java.lang.Object getPointerIcon()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
okhttp3.OkHttpClient: boolean followSslRedirects()
androidx.coordinatorlayout.R$styleable
androidx.camera.core.Preview: void clear()
androidx.camera.core.VideoCaptureConfig: int getAudioMinBufferSize()
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode INTERNAL_ERROR
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.legacy.app.ActionBarDrawerToggle$Delegate: void setActionBarUpIndicator(android.graphics.drawable.Drawable,int)
org.pytorch.R$layout: int support_simple_spinner_dropdown_item
androidx.vectordrawable.animated.R$styleable: int ColorStateListItem_android_alpha
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.resources.R$attr: int fontWeight
androidx.recyclerview.widget.StaggeredGridLayoutManager: void scrollToPositionWithOffset(int,int)
androidx.customview.R$color: int notification_icon_bg_color
androidx.lifecycle.Observer
androidx.concurrent.futures.AbstractResolvableFuture: boolean isDone()
androidx.camera.camera2.R$string
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Handler)
androidx.camera.core.ExtendableUseCaseConfigFactory: ExtendableUseCaseConfigFactory()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int lookForSelectablePosition(int,boolean)
androidx.cardview.R$styleable
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.versionedparcelable.VersionedParcel: android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
org.pytorch.torchvision.R$dimen: int abc_text_size_title_material
androidx.core.view.MotionEventCompat: int AXIS_RELATIVE_X
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_disabled_material_dark
androidx.appcompat.R$bool
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_font
org.pytorch.torchvision.BuildConfig: java.lang.String APPLICATION_ID
org.pytorch.R$color: int abc_hint_foreground_material_light
com.downloader.handler.ProgressHandler: void handleMessage(android.os.Message)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_editTextStyle
androidx.core.view.DragStartHelper: boolean onLongClick(android.view.View)
androidx.loader.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord: java.lang.String toString()
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
okhttp3.Cache: void evictAll()
androidx.camera.camera2.R$styleable: int FontFamily_fontProviderPackage
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
androidx.media.R$style: int TextAppearance_Compat_Notification_Info
androidx.customview.widget.ViewDragHelper: androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback)
androidx.appcompat.R$styleable: int ActionBar_contentInsetLeft
androidx.appcompat.resources.R$id: int async
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
androidx.asynclayoutinflater.R$styleable: int GradientColor_android_endX
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_START
android.support.v4.media.session.PlaybackStateCompat: int STATE_FAST_FORWARDING
org.pytorch.R$style: int Base_Widget_AppCompat_RatingBar
org.pytorch.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
androidx.appcompat.widget.ListPopupWindow: android.view.View getSelectedView()
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int topToBottom
org.pytorch.R$color: int abc_primary_text_disable_only_material_light
org.pytorch.R$styleable: int[] Toolbar
androidx.fragment.app.FragmentTransaction: void commitNowAllowingStateLoss()
androidx.core.app.NotificationCompat$Action: int icon
androidx.camera.core.UseCaseGroup
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_buttonGravity
androidx.swiperefreshlayout.R$styleable: int GradientColor_android_type
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
androidx.fragment.app.ListFragment: int getSelectedItemPosition()
okhttp3.ConnectionSpec: java.util.List cipherSuites()
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener: ScrollingTabContainerView$VisibilityAnimListener(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.fragment.app.FragmentTransitionImpl: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
org.pytorch.R$style: int Widget_AppCompat_RatingBar
okhttp3.Cookie: long expiresAt()
androidx.core.app.AppOpsManagerCompat
org.pytorch.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_goneMarginBottom
androidx.concurrent.futures.AbstractResolvableFuture: boolean isCancelled()
androidx.camera.core.CameraFactory: androidx.camera.core.BaseCamera getCamera(java.lang.String)
androidx.constraintlayout.solver.widgets.Guideline: int mRelativeBegin
androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)
androidx.appcompat.R$attr: int listPreferredItemPaddingStart
androidx.recyclerview.widget.GridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
okhttp3.internal.http2.Header: okio.ByteString TARGET_AUTHORITY
androidx.core.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.downloader.database.AppDbHelper: java.util.List getUnwantedModels(int)
androidx.coordinatorlayout.R$id: int action_text
androidx.recyclerview.selection.StorageStrategy: androidx.recyclerview.selection.StorageStrategy createLongStorage()
androidx.asynclayoutinflater.R$id: int action_divider
okio.Buffer: okio.ByteString readByteString()
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionModeFindDrawable
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.legacy.coreutils.R$id: int notification_main_column
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.asynclayoutinflater.R$style: int Widget_Compat_NotificationActionContainer
androidx.asynclayoutinflater.R$styleable
androidx.lifecycle.ViewModelStore
androidx.appcompat.R$attr: int homeAsUpIndicator
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Subhead
androidx.camera.core.AspectRatio: androidx.camera.core.AspectRatio valueOf(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar
okhttp3.internal.cache.DiskLruCache$Editor: void abortUnlessCommitted()
org.pytorch.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.recyclerview.widget.GridLayoutManager: int DEFAULT_SPAN_COUNT
androidx.core.R$id: int tag_accessibility_pane_title
androidx.appcompat.R$style: int Widget_AppCompat_TextView
androidx.camera.core.DeferrableSurfaces: java.util.Set surfaceSet(java.util.Collection)
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintHorizontal_chainStyle
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
androidx.core.app.NotificationCompat: int FLAG_SHOW_LIGHTS
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dividerVertical
io.github.prabhuomkar.pytorchandroid.R$attr: int collapseIcon
androidx.legacy.coreutils.R$dimen: int notification_top_pad
androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.vectordrawable.R$id: int accessibility_custom_action_9
okhttp3.Connection: okhttp3.Protocol protocol()
androidx.camera.core.ImageCaptureConfig: int getSurfaceOccupancyPriority()
org.pytorch.torchvision.R$styleable: int ActionMode_backgroundSplit
io.github.prabhuomkar.pytorchandroid.R$styleable: int[] SearchView
org.pytorch.torchvision.R$styleable: int AlertDialog_android_layout
org.pytorch.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
androidx.loader.content.Loader: void onStartLoading()
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener: ViewPager$SimpleOnPageChangeListener()
androidx.camera.core.CameraX$LensFacing: androidx.camera.core.CameraX$LensFacing valueOf(java.lang.String)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.camera.camera2.R$attr: int font
org.pytorch.R$dimen: int abc_disabled_alpha_material_light
androidx.camera.core.ImageCapture$ImageCaptureError: androidx.camera.core.ImageCapture$ImageCaptureError UNKNOWN_ERROR
androidx.core.view.ViewCompat: int SCROLL_INDICATOR_TOP
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_V21_AppCompat
androidx.constraintlayout.solver.widgets.ConstraintWidget: float getHorizontalBiasPercent()
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams: SlidingPaneLayout$LayoutParams()
androidx.appcompat.widget.Toolbar$LayoutParams
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getVerticalChainStyle()
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
androidx.activity.R$styleable: int GradientColor_android_startX
androidx.legacy.coreutils.R$layout: int notification_action_tombstone
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
androidx.activity.R$attr: int fontProviderFetchStrategy
androidx.camera.core.LensFacingCameraIdFilter
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int)
io.github.prabhuomkar.pytorchandroid.R$attr: int windowMinWidthMajor
androidx.camera.core.PreviewConfig: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.recyclerview.selection.StableIdKeyProvider: java.lang.Object getKey(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.squareup.picasso.StatsSnapshot: java.lang.String toString()
androidx.vectordrawable.R$id: int accessibility_custom_action_30
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
androidx.camera.core.CameraRepository: void onGroupActive(androidx.camera.core.UseCaseGroup)
com.downloader.core.DownloadFutureTask: int compareTo(java.lang.Object)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_RESOLUTION_UNIT
androidx.camera.core.UseCase: void onCameraControlReady(java.lang.String)
androidx.appcompat.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
org.pytorch.R$attr: int buttonStyle
androidx.swiperefreshlayout.R$layout
androidx.viewpager.widget.ViewPager$PageTransformer
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setDefaultResolution(android.util.Size)
androidx.coordinatorlayout.widget.CoordinatorLayout: boolean isPointInChildBounds(android.view.View,int,int)
org.pytorch.torchvision.R$dimen: int abc_action_bar_default_padding_end_material
org.pytorch.torchvision.R$styleable: int CompoundButton_android_button
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
okhttp3.internal.http1.Http1Codec: Http1Codec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink)
com.downloader.httpclient.DefaultHttpClient: DefaultHttpClient()
okhttp3.internal.http2.Http2Connection: boolean isShutdown()
androidx.camera.core.MultiValueSet: MultiValueSet()
io.github.prabhuomkar.pytorchandroid.R$id: int standard
org.pytorch.torchvision.R$attr: int iconTint
org.pytorch.R$dimen: int abc_text_size_caption_material
androidx.constraintlayout.solver.widgets.Rectangle: void setBounds(int,int,int,int)
androidx.camera.core.CameraCaptureMetaData$AwbState: androidx.camera.core.CameraCaptureMetaData$AwbState LOCKED
androidx.camera.core.VideoCaptureConfig: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
org.pytorch.R$dimen: int abc_action_bar_stacked_tab_max_width
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
androidx.viewpager.widget.PagerTitleStrip: int getMinHeight()
androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.swiperefreshlayout.widget.CircularProgressDrawable: android.graphics.Paint$Cap getStrokeCap()
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_clear_material
io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter: io.github.prabhuomkar.pytorchandroid.ui.adapters.TaskListAdapter$TaskView onCreateViewHolder(android.view.ViewGroup,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_divider
io.github.prabhuomkar.pytorchandroid.R$attr: int drawableTint
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintLeft_creator
androidx.activity.R$styleable: int GradientColor_android_startColor
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
okhttp3.Handshake: java.util.List localCertificates()
androidx.activity.ComponentActivity: ComponentActivity()
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
org.pytorch.R$style: int Theme_AppCompat_Dialog_Alert
androidx.vectordrawable.animated.R$attr
android.support.v4.media.session.PlaybackStateCompat: long getCurrentPosition(java.lang.Long)
androidx.camera.core.ImageAnalysisConfig: int getTargetRotation(int)
androidx.appcompat.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.recyclerview.R$styleable: int FontFamily_fontProviderAuthority
org.pytorch.torchvision.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
org.pytorch.torchvision.R$dimen: int abc_text_size_headline_material
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
androidx.camera.core.ImageCaptureConfig$Builder: androidx.camera.core.ImageCaptureConfig$Builder setCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
org.pytorch.torchvision.R$dimen: int abc_dialog_list_padding_top_no_title
androidx.constraintlayout.widget.ConstraintSet: void constrainHeight(int,int)
org.pytorch.torchvision.R$style: int Widget_AppCompat_Light_ActionBar_Solid
androidx.appcompat.R$attr: int tooltipForegroundColor
androidx.fragment.R$id: int blocking
org.pytorch.R$style: int Base_V23_Theme_AppCompat_Light
androidx.recyclerview.widget.LinearLayoutManager: int findFirstVisibleItemPosition()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.WindowDecorActionBar$TabImpl: androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence)
androidx.appcompat.R$string: int abc_searchview_description_query
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_body_1_material
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.vectordrawable.animated.R$styleable: int FontFamily_fontProviderQuery
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
okhttp3.EventListener: void requestBodyStart(okhttp3.Call)
androidx.camera.core.R$dimen: int notification_subtext_size
androidx.coordinatorlayout.R$id: int title
androidx.appcompat.R$style: int Base_V23_Theme_AppCompat
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_subhead_material
androidx.legacy.coreutils.R$attr: int alpha
androidx.collection.SparseArrayCompat: void delete(int)
androidx.appcompat.resources.R$id: int notification_main_column
androidx.recyclerview.widget.SortedList: void endBatchedUpdates()
androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
org.pytorch.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_keyline
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
androidx.core.view.NestedScrollingChild: boolean dispatchNestedFling(float,float,boolean)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.media.AudioAttributesCompat: int USAGE_NOTIFICATION_COMMUNICATION_INSTANT
io.github.prabhuomkar.pytorchandroid.R$attr: int actionModeSelectAllDrawable
androidx.camera.core.impl.utils.futures.Futures: com.google.common.util.concurrent.ListenableFuture transformAsync(com.google.common.util.concurrent.ListenableFuture,androidx.camera.core.impl.utils.futures.AsyncFunction,java.util.concurrent.Executor)
io.github.prabhuomkar.pytorchandroid.R$attr: int cardBackgroundColor
okio.Buffer: okio.Buffer writeLongLe(long)
androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.fragment.app.FragmentTransitionImpl: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionButtonStyle
androidx.legacy.v4.R$styleable
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
okhttp3.internal.platform.Platform: okhttp3.internal.platform.Platform get()
okhttp3.Cookie$Builder: okhttp3.Cookie$Builder httpOnly()
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getWidth()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_PopupMenu
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintTop_creator
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int ACTION_SET_TEXT
io.github.prabhuomkar.pytorchandroid.R$attr: int editTextColor
org.pytorch.torchvision.R$dimen: int compat_button_padding_horizontal_material
org.pytorch.R$styleable: int TextAppearance_android_textFontWeight
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.activity.R$id: int action_divider
org.pytorch.torchvision.R$layout: int abc_dialog_title_material
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
org.pytorch.torchvision.R$dimen: int abc_dialog_min_width_major
okhttp3.HttpUrl: java.lang.String toString()
io.github.prabhuomkar.pytorchandroid.R$id: int unchecked
org.pytorch.R$style: int TextAppearance_AppCompat_Body1
androidx.core.graphics.ColorUtils: int LABToColor(double,double,double)
org.pytorch.torchvision.R$color: int abc_tint_edittext
okhttp3.internal.cache.DiskLruCache$Editor
androidx.core.internal.view.SupportMenuItem: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
com.squareup.picasso.RequestCreator: void into(android.widget.RemoteViews,int,int,android.app.Notification,java.lang.String)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
org.pytorch.R$style: int Theme_AppCompat_Light_Dialog
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonBarPositiveButtonStyle
androidx.appcompat.R$style: int Widget_AppCompat_Button_Small
okio.Buffer$UnsafeCursor: long resizeBuffer(long)
androidx.appcompat.R$style: int TextAppearance_Compat_Notification_Time
androidx.camera.core.UseCaseConfig: int getSurfaceOccupancyPriority()
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
androidx.constraintlayout.solver.LinearSystem: void addEquality(androidx.constraintlayout.solver.SolverVariable,int,int)
androidx.appcompat.R$styleable: int ActionBar_divider
androidx.drawerlayout.R$id
androidx.documentfile.provider.DocumentFile: java.lang.String getType()
com.downloader.httpclient.DefaultHttpClient: java.io.InputStream getErrorStream()
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_Switch
androidx.core.view.ViewCompat: void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])
androidx.activity.R$id: int accessibility_custom_action_10
androidx.appcompat.R$integer: int config_tooltipAnimTime
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()
androidx.media.R$id: int italic
io.github.prabhuomkar.pytorchandroid.R$style: int ThemeOverlay_AppCompat
io.github.prabhuomkar.pytorchandroid.BuildConfig: boolean DEBUG
okhttp3.CacheControl: boolean isPublic()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_transformPivotX
com.squareup.picasso.StatsSnapshot: int transformedBitmapCount
okio.Buffer: java.lang.String toString()
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_COMPOSER
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_alpha
androidx.fragment.app.FragmentTransaction: boolean isAddToBackStackAllowed()
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureProcessor getCaptureProcessor()
androidx.appcompat.R$styleable: int AppCompatTheme_dialogTheme
io.github.prabhuomkar.pytorchandroid.R$attr: int buttonBarNeutralButtonStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintDimensionRatio
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_imageButtonStyle
okhttp3.internal.tls.BasicTrustRootIndex: boolean equals(java.lang.Object)
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity
androidx.core.app.ShareCompat$IntentReader: java.lang.String getHtmlText()
androidx.appcompat.R$dimen: int abc_alert_dialog_button_dimen
androidx.lifecycle.LiveData$LifecycleBoundObserver
android.support.v4.media.session.MediaControllerCompat$Callback: void onRepeatModeChanged(int)
androidx.appcompat.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
org.pytorch.torchvision.R$styleable: int MenuGroup_android_id
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_popupTheme
androidx.appcompat.app.ActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
org.pytorch.torchvision.R$styleable: int ColorStateListItem_alpha
androidx.camera.camera2.R$id: int accessibility_custom_action_21
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)
androidx.camera.core.ImageOutputConfig$Builder: java.lang.Object setMaxResolution(android.util.Size)
androidx.recyclerview.selection.Selection: boolean contains(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.constraintlayout.widget.ConstraintLayout: void setDesignInformation(int,java.lang.Object,java.lang.Object)
androidx.core.view.GestureDetectorCompat: GestureDetectorCompat(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)
androidx.appcompat.R$id: int decor_content_parent
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.constraintlayout.widget.ConstraintSet: void constrainMinWidth(int,int)
androidx.recyclerview.widget.ThreadUtil$MainThreadCallback
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.SessionConfig getDefaultSessionConfig()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintLeft_creator
androidx.loader.content.ModernAsyncTask$Status
androidx.fragment.app.FragmentManager: void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean)
androidx.appcompat.R$drawable: int abc_btn_radio_to_on_mtrl_015
androidx.camera.core.ImageReaderProxy: androidx.camera.core.ImageProxy acquireLatestImage()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.camera.core.PreviewConfig: java.util.concurrent.Executor getBackgroundExecutor(java.util.concurrent.Executor)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_titleMargins
androidx.camera.camera2.R$id: int accessibility_custom_action_5
androidx.legacy.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
androidx.constraintlayout.solver.widgets.ConstraintWidget: java.lang.Object getCompanionWidget()
androidx.appcompat.widget.DecorToolbar: void setCollapsible(boolean)
org.pytorch.torchvision.R$attr: int fontProviderPackage
androidx.appcompat.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
androidx.camera.core.CaptureBundle: java.util.List getCaptureStages()
androidx.camera.core.ImageSaver$SaveError: androidx.camera.core.ImageSaver$SaveError UNKNOWN
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
okhttp3.Dns: java.util.List lookup(java.lang.String)
androidx.camera.core.ImageCapture: void clear()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
org.pytorch.R$styleable: int[] PopupWindow
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_goneMarginLeft
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Tooltip
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
org.pytorch.R$dimen: int abc_action_button_min_width_overflow_material
org.pytorch.torchvision.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
androidx.core.app.NotificationCompat$Action$SemanticAction
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_MILES_PER_HOUR
androidx.loader.content.Loader: void commitContentChanged()
okhttp3.HttpUrl$Builder: java.lang.String toString()
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
org.pytorch.R$integer
android.support.v4.media.session.MediaSessionCompat: void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
org.pytorch.R$style: int Platform_ThemeOverlay_AppCompat
androidx.collection.LongSparseArray: LongSparseArray()
org.pytorch.R$style: int Theme_AppCompat_DayNight_DarkActionBar
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action: int getDy()
androidx.loader.R$color: int ripple_material_light
androidx.fragment.R$id: int accessibility_custom_action_28
org.pytorch.IValue: java.util.Map toDictStringKey()
androidx.core.app.NotificationCompat$CarExtender: NotificationCompat$CarExtender()
androidx.legacy.coreui.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.appcompat.R$color: int notification_action_color_filter
androidx.camera.core.Preview: Preview(androidx.camera.core.PreviewConfig)
androidx.core.view.ViewCompat: int MEASURED_STATE_TOO_SMALL
androidx.core.text.BidiFormatter$Builder: androidx.core.text.BidiFormatter build()
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
androidx.appcompat.R$styleable: int GradientColor_android_startColor
androidx.appcompat.resources.R$dimen
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
androidx.constraintlayout.widget.ConstraintSet: void setRotationY(int,float)
androidx.recyclerview.selection.AutoScroller: AutoScroller()
androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
okio.BufferedSource: java.io.InputStream inputStream()
androidx.core.R$drawable: int notification_icon_background
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DIFFERENTIAL
androidx.appcompat.R$style: int Base_Theme_AppCompat_Light
android.support.v4.media.MediaMetadataCompat: java.lang.String METADATA_KEY_ALBUM_ART_URI
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()
io.github.prabhuomkar.pytorchandroid.R$color: int error_color_material_dark
androidx.camera.core.CameraCaptureResult$EmptyCameraCaptureResult: androidx.camera.core.CameraCaptureMetaData$AeState getAeState()
android.support.v4.media.session.PlaybackStateCompat: long ACTION_PAUSE
androidx.print.PrintHelper$OnPrintFinishCallback: void onFinish()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_display_3_material
androidx.core.widget.TextViewCompat: int getMaxLines(android.widget.TextView)
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request$Builder clearCenterInside()
androidx.constraintlayout.widget.ConstraintSet: int HORIZONTAL
androidx.camera.core.impl.utils.futures.FutureChain: androidx.camera.core.impl.utils.futures.FutureChain transform(androidx.arch.core.util.Function,java.util.concurrent.Executor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.core.content.res.ComplexColorCompat: int getColor()
androidx.constraintlayout.solver.widgets.ConstraintWidget: float mDimensionRatio
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
androidx.legacy.coreui.R$dimen: int notification_large_icon_height
androidx.annotation.FloatRange: boolean fromInclusive()
androidx.camera.core.ImageFormatConstants: int INTERNAL_DEFINED_IMAGE_FORMAT_PRIVATE
org.pytorch.torchvision.R$dimen: int abc_button_padding_horizontal_material
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.resources.R$id: int tag_accessibility_clickable_spans
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int FEEDBACK_BRAILLE
androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)
androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)
androidx.legacy.coreui.R$drawable: int notification_icon_background
io.github.prabhuomkar.pytorchandroid.R$id: int action_context_bar
androidx.drawerlayout.R$styleable: int[] GradientColorItem
androidx.core.os.BuildCompat: boolean isAtLeastN()
androidx.appcompat.app.ActionBarDrawerToggle$Delegate: boolean isNavigationVisible()
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.camera.core.VideoCaptureConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
okhttp3.internal.tls.OkHostnameVerifier: okhttp3.internal.tls.OkHostnameVerifier INSTANCE
androidx.legacy.v4.R$layout: int notification_template_part_time
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ListView_DropDown
org.pytorch.torchvision.R$color: int secondary_text_default_material_dark
androidx.vectordrawable.R$id: int tag_accessibility_heading
androidx.recyclerview.widget.RecyclerView$Adapter: void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List)
androidx.legacy.coreutils.R$id: int action_image
io.github.prabhuomkar.pytorchandroid.R$color: int abc_hint_foreground_material_light
androidx.core.widget.ContentLoadingProgressBar: void show()
android.support.v4.media.MediaDescriptionCompat: java.lang.String getMediaId()
androidx.constraintlayout.widget.Barrier: int BOTTOM
androidx.activity.R$string: int status_bar_notification_info_overflow
org.pytorch.torchvision.R$styleable: int ActionBar_divider
com.downloader.internal.SynchronousCall
org.pytorch.R$style: int Theme_AppCompat_Light_NoActionBar
androidx.cardview.R$styleable: int CardView_cardMaxElevation
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
androidx.recyclerview.widget.AsyncListDiffer: void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener)
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.cardview.widget.CardView: CardView(android.content.Context)
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.coordinatorlayout.R$id: int end
androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)
androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.slidingpanelayout.R$attr: int fontStyle
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls: void setRating(java.lang.Object,java.lang.Object)
androidx.legacy.coreutils.R$attr: int fontProviderAuthority
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintHeight_max
androidx.appcompat.resources.R$id: int right_icon
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_THREE_CHIP
org.pytorch.torchvision.R$dimen: int abc_text_size_button_material
io.github.prabhuomkar.pytorchandroid.R$color: int primary_text_disabled_material_light
androidx.exifinterface.media.ExifInterface: void rotate(int)
okhttp3.internal.tls.BasicCertificateChainCleaner: BasicCertificateChainCleaner(okhttp3.internal.tls.TrustRootIndex)
androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Button_Colored
androidx.slidingpanelayout.R$id: int action_divider
org.pytorch.torchvision.R$style: int Base_DialogWindowTitleBackground_AppCompat
org.pytorch.R$styleable: int SearchView_goIcon
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_creator
androidx.core.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.R$style: int Widget_AppCompat_Button_Borderless
org.pytorch.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
androidx.loader.R$styleable: int[] GradientColor
androidx.legacy.coreui.R$drawable: int notification_action_background
androidx.annotation.RequiresPermission$Write: androidx.annotation.RequiresPermission value()
com.downloader.Error: void setConnectionError(boolean)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.squareup.picasso.Callback: void onSuccess()
androidx.recyclerview.widget.RecyclerView$OnFlingListener: RecyclerView$OnFlingListener()
org.pytorch.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
androidx.media.app.NotificationCompat
androidx.appcompat.R$attr: int windowMinWidthMinor
androidx.core.app.FrameMetricsAggregator: int ANIMATION_INDEX
androidx.activity.R$dimen: int compat_button_inset_vertical_material
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.core.app.ShareCompat: java.lang.String EXTRA_CALLING_PACKAGE_INTEROP
androidx.camera.camera2.Camera2Config$Builder: androidx.camera.camera2.Camera2Config build()
androidx.core.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)
androidx.appcompat.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
org.pytorch.R$id: int left
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setMaxHeight(int)
okhttp3.Response: okhttp3.Headers headers()
androidx.vectordrawable.animated.R$id: int line1
okhttp3.CacheControl: okhttp3.CacheControl parse(okhttp3.Headers)
androidx.legacy.v4.R$color: int ripple_material_light
androidx.core.widget.AutoSizeableTextView: int[] getAutoSizeTextAvailableSizes()
io.github.prabhuomkar.pytorchandroid.helpers.UIHelper: void setCustomActionBar(androidx.appcompat.app.AppCompatActivity)
org.pytorch.R$styleable: int DrawerArrowToggle_barLength
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.Object getCustomAction()
androidx.recyclerview.widget.SortedList: void updateItemAt(int,java.lang.Object)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
io.github.prabhuomkar.pytorchandroid.R$attr: int tooltipForegroundColor
androidx.appcompat.R$dimen: int abc_action_button_min_width_overflow_material
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)
android.support.v4.media.RatingCompat: boolean isRated()
com.squareup.picasso.RequestCreator
org.pytorch.R$style: int Widget_Compat_NotificationActionContainer
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_actionBarSplitStyle
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
androidx.recyclerview.widget.AsyncListUtil$ViewCallback: AsyncListUtil$ViewCallback()
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_SPEED_KNOTS
androidx.collection.CircularIntArray: void removeFromStart(int)
androidx.appcompat.R$styleable: int SearchView_searchIcon
com.squareup.picasso.OkHttp3Downloader: OkHttp3Downloader(okhttp3.Call$Factory)
org.pytorch.torchvision.R$styleable: int AppCompatImageView_tintMode
org.pytorch.R$id: int action_text
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setContentAction(int)
androidx.media.AudioAttributesImplBaseParcelizer
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
okhttp3.internal.Util: void checkOffsetAndCount(long,long,long)
androidx.appcompat.R$drawable: int abc_btn_check_to_on_mtrl_015
androidx.swiperefreshlayout.R$styleable
okhttp3.HttpUrl: java.lang.String scheme()
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.appcompat.R$styleable: int StateListDrawable_android_dither
androidx.camera.core.BaseCamera$State: androidx.camera.core.BaseCamera$State OPENING
androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
org.pytorch.torchvision.R$attr: int progressBarPadding
androidx.vectordrawable.R$id: int accessibility_custom_action_10
androidx.camera.core.UseCase: android.util.Size getAttachedSurfaceResolution(java.lang.String)
androidx.activity.R$drawable: int notification_bg_normal
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
org.pytorch.torchvision.R$drawable: int abc_btn_check_to_on_mtrl_000
androidx.legacy.coreui.R$styleable: int[] FontFamilyFont
okio.BufferedSource: java.lang.String readUtf8LineStrict()
org.pytorch.torchvision.R$id: int action_bar_container
io.github.prabhuomkar.pytorchandroid.R$drawable: int ic_file
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_onClick
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.concurrent.futures.AbstractResolvableFuture: boolean setFuture(com.google.common.util.concurrent.ListenableFuture)
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator centerCrop()
androidx.camera.core.PreviewConfig: androidx.camera.core.AspectRatio getTargetAspectRatio()
androidx.core.widget.TextViewCompat: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.appcompat.R$styleable: int Spinner_android_entries
androidx.loader.R$id: int line3
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.camera.core.VideoCaptureConfig: int getSurfaceOccupancyPriority()
okhttp3.MultipartBody$Builder: okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
okio.GzipSink: void flush()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.camera.core.UseCaseGroup: void clear()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)
org.pytorch.torchvision.R$styleable: int ActionBar_progressBarStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_Widget_Button
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActivityChooserView
androidx.loader.R$dimen: int notification_right_side_padding_top
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_TRACK_REF
androidx.constraintlayout.solver.widgets.Helper: androidx.constraintlayout.solver.widgets.ConstraintWidget[] mWidgets
androidx.recyclerview.widget.GridLayoutManager: int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
okio.BufferedSink: okio.BufferedSink writeShortLe(int)
androidx.slidingpanelayout.R$id: int icon_group
org.pytorch.R$id: int titleDividerNoCustom
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: Camera2DeviceSurfaceManager(android.content.Context)
android.support.v4.media.session.MediaControllerCompat$TransportControls: void rewind()
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
androidx.camera.core.CameraX: void bindToLifecycle(androidx.lifecycle.LifecycleOwner,androidx.camera.core.UseCase[])
org.pytorch.torchvision.R$style: int Base_V7_Widget_AppCompat_Toolbar
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_LATITUDE
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_19
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
okhttp3.EventListener: EventListener()
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
androidx.loader.content.CursorLoader: void onStartLoading()
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.CaptureBundle getCaptureBundle()
androidx.slidingpanelayout.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor)
androidx.constraintlayout.widget.ConstraintLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.core.view.DisplayCutoutCompat: int hashCode()
androidx.media.MediaBrowserServiceCompat: void onCreate()
androidx.appcompat.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
io.github.prabhuomkar.pytorchandroid.R$attr: int splitTrack
androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()
okio.GzipSink: void close()
androidx.core.widget.ScrollerCompat: float getCurrVelocity()
androidx.appcompat.R$id: int select_dialog_listview
org.pytorch.torchvision.R$attr: int textAppearanceLargePopupMenu
androidx.constraintlayout.solver.widgets.ConstraintAnchor: java.lang.String toString()
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
androidx.camera.core.ImageCapture$ImageCaptureError: androidx.camera.core.ImageCapture$ImageCaptureError FILE_IO_ERROR
androidx.camera.core.R$style: int Widget_Compat_NotificationActionContainer
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_check_material_anim
androidx.vectordrawable.R$layout: int notification_template_icon_group
androidx.exifinterface.media.ExifInterface: int ORIENTATION_TRANSPOSE
org.pytorch.R$layout: int notification_template_custom_big
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()
androidx.asynclayoutinflater.R$dimen: int notification_content_margin_start
org.pytorch.torchvision.R$styleable: int AppCompatTheme_dividerHorizontal
io.github.prabhuomkar.pytorchandroid.R$id: int tag_unhandled_key_event_manager
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)
androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)
org.pytorch.torchvision.R$attr: int alertDialogStyle
androidx.camera.core.CameraCaptureFailure$Reason: androidx.camera.core.CameraCaptureFailure$Reason valueOf(java.lang.String)
okhttp3.EventListener: void connectionReleased(okhttp3.Call,okhttp3.Connection)
okhttp3.internal.http2.Http2Stream: void close(okhttp3.internal.http2.ErrorCode)
androidx.camera.core.CameraCaptureMetaData$FlashState: androidx.camera.core.CameraCaptureMetaData$FlashState READY
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
androidx.appcompat.R$attr: int dialogCornerRadius
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintBottom_creator
androidx.fragment.R$drawable: int notification_template_icon_low_bg
okio.Okio: okio.Sink sink(java.io.OutputStream)
androidx.cursoradapter.widget.SimpleCursorAdapter: SimpleCursorAdapter(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_drawableTopCompat
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
okhttp3.internal.connection.RealConnection: void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener)
org.pytorch.R$dimen: int abc_text_size_medium_material
org.pytorch.torchvision.R$attr: int initialActivityCount
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
io.github.prabhuomkar.pytorchandroid.R$color: int abc_tint_default
io.github.prabhuomkar.pytorchandroid.R$color: int bright_foreground_material_light
androidx.collection.CircularIntArray: CircularIntArray(int)
androidx.collection.ArraySet: java.lang.Object[] toArray()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_android_minWidth
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_arrow_drop_right_black_24dp
org.pytorch.R$attr: int homeLayout
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_iconTint
androidx.camera.core.R$attr: int fontProviderFetchTimeout
androidx.viewpager.R$id: int async
androidx.core.R$dimen: int notification_content_margin_start
androidx.recyclerview.widget.StaggeredGridLayoutManager: void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry)
org.pytorch.R$attr: int autoSizePresetSizes
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
org.pytorch.torchvision.R$drawable: int abc_spinner_textfield_background_material
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int INVALID_SPAN_ID
org.pytorch.torchvision.R$attr: int customNavigationLayout
org.pytorch.torchvision.R$id: int default_activity_button
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresOverflow()
androidx.exifinterface.media.ExifInterface: java.lang.String GPS_MEASUREMENT_2D
org.pytorch.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
androidx.customview.R$styleable: <clinit>()
com.downloader.database.DownloadModel: void setFileName(java.lang.String)
io.github.prabhuomkar.pytorchandroid.R$attr: int actionDropDownStyle
androidx.core.content.pm.ShortcutManagerCompat: int getMaxShortcutCountPerActivity(android.content.Context)
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat: int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
androidx.constraintlayout.solver.widgets.ConstraintWidget: int getBaselineDistance()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_fontVariationSettings
androidx.core.view.NestedScrollingParent: void onNestedScroll(android.view.View,int,int,int,int)
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory: RecyclerView$EdgeEffectFactory()
androidx.appcompat.R$dimen: int hint_alpha_material_dark
androidx.appcompat.R$dimen: int notification_action_text_size
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_logoDescription
okhttp3.internal.http2.Http2Stream: boolean isLocallyInitiated()
androidx.core.view.LayoutInflaterFactory
androidx.annotation.AnyRes
org.pytorch.torchvision.R$drawable: int abc_btn_check_material
androidx.appcompat.app.WindowDecorActionBar$TabImpl: android.graphics.drawable.Drawable getIcon()
org.pytorch.R$styleable: int MenuItem_contentDescription
com.squareup.picasso.StatsSnapshot: long averageTransformedBitmapSize
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_Medium
android.support.v4.media.session.IMediaSession: void pause()
org.pytorch.R$styleable: int AppCompatSeekBar_tickMark
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setNumber(int)
org.pytorch.R$string: int abc_searchview_description_voice
androidx.camera.core.CameraCaptureFailure: androidx.camera.core.CameraCaptureFailure$Reason getReason()
androidx.camera.core.OptionsBundle: java.lang.Object retrieveOption(androidx.camera.core.Config$Option)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.camera.core.R$styleable: int[] GradientColorItem
okhttp3.Response$Builder: okhttp3.Response$Builder handshake(okhttp3.Handshake)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V28_Theme_AppCompat
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_begin
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$dimen: int notification_media_narrow_margin
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.StandaloneActionMode
androidx.constraintlayout.widget.R$attr: int layout_goneMarginStart
org.pytorch.R$style: int Widget_AppCompat_ListMenuView
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
io.github.prabhuomkar.pytorchandroid.R$color: int abc_color_highlight_material
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout
android.support.v4.media.session.IMediaSession: void prepareFromUri(android.net.Uri,android.os.Bundle)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.recyclerview.widget.ItemTouchHelper$Callback: boolean isItemViewSwipeEnabled()
io.github.prabhuomkar.pytorchandroid.R$styleable: int RecyclerView_fastScrollHorizontalThumbDrawable
androidx.fragment.R$id: int italic
org.pytorch.R$style: int TextAppearance_Compat_Notification_Title
com.squareup.picasso.RequestCreator: com.squareup.picasso.RequestCreator noPlaceholder()
androidx.appcompat.R$styleable: int AppCompatTheme_switchStyle
org.pytorch.torchvision.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_12
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int TYPE_SPLIT_SCREEN_DIVIDER
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.ConstraintLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_ic_menu_overflow_material
org.pytorch.torchvision.R$attr: int buttonBarNeutralButtonStyle
androidx.appcompat.resources.R$id: int accessibility_custom_action_31
org.pytorch.torchvision.R$style: int Widget_AppCompat_ButtonBar
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanSize(int)
org.pytorch.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig$Builder setTargetAspectRatio(androidx.camera.core.AspectRatio)
io.github.prabhuomkar.pytorchandroid.Constants: java.lang.String CONTACT_EMAIL
androidx.core.content.PermissionChecker: int PERMISSION_DENIED
androidx.camera.core.CaptureConfig: java.lang.Object getTag()
androidx.constraintlayout.solver.widgets.ConstraintTableLayout: void computeGuidelinesPercentPositions()
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_visibility
androidx.camera.core.ImageOutputConfig: androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.R$style: int Base_V7_Widget_AppCompat_EditText
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Title
okhttp3.WebSocketListener: WebSocketListener()
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_display_4_material
io.github.prabhuomkar.pytorchandroid.R$layout: int notification_template_big_media_narrow_custom
androidx.vectordrawable.animated.R$color: int notification_icon_bg_color
android.support.v4.media.MediaDescriptionCompat$Builder
androidx.versionedparcelable.VersionedParcelize: boolean ignoreParcelables()
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent getIntent()
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
org.pytorch.R$color: int error_color_material_light
com.squareup.picasso.Picasso: void pauseTag(java.lang.Object)
org.pytorch.R$style: int Theme_AppCompat_Light_Dialog_Alert
androidx.coordinatorlayout.widget.DirectedAcyclicGraph
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
androidx.legacy.coreutils.R$styleable: int ColorStateListItem_android_alpha
androidx.core.view.ViewCompat: void setRotationX(android.view.View,float)
androidx.appcompat.view.menu.MenuPopupHelper: void show()
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.fragment.R$color: int ripple_material_light
androidx.core.R$id: int time
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.appcompat.R$color: int bright_foreground_material_light
androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)
androidx.recyclerview.widget.ItemTouchHelper$Callback: void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean)
androidx.core.text.PrecomputedTextCompat: int length()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
org.pytorch.Tensor: byte[] getDataAsByteArray()
androidx.camera.camera2.impl.Camera2DeviceSurfaceManager: android.util.Rational getCorrectedAspectRatio(androidx.camera.core.UseCaseConfig)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Theme_AppCompat_CompactMenu
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.graphics.drawable.DrawerArrowDrawable: void draw(android.graphics.Canvas)
androidx.loader.R$styleable: int FontFamilyFont_android_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_controlBackground
androidx.camera.core.ImageAnalysisConfig$Builder: androidx.camera.core.ImageAnalysisConfig$Builder setTargetResolution(android.util.Size)
androidx.core.app.Person: java.lang.String getKey()
androidx.fragment.R$id: int action_text
org.pytorch.torchvision.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
androidx.core.app.AppComponentFactory: android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String)
org.pytorch.R$color: int dim_foreground_disabled_material_dark
org.pytorch.R$attr: int colorControlHighlight
androidx.camera.core.Preview
org.pytorch.R$attr: int titleTextColor
io.github.prabhuomkar.pytorchandroid.R$style: int Platform_Widget_AppCompat_Spinner
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_text_size_title_material_toolbar
androidx.appcompat.widget.PopupMenu$OnDismissListener
androidx.core.app.FrameMetricsAggregator: android.util.SparseIntArray[] remove(android.app.Activity)
androidx.camera.core.ImageInfo: java.lang.Object getTag()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)
org.pytorch.R$styleable: int[] AppCompatTextHelper
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
androidx.core.R$styleable: int FontFamilyFont_font
androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)
androidx.camera.core.R$drawable: int notification_tile_bg
androidx.constraintlayout.solver.ArrayRow
androidx.appcompat.R$attr: int popupWindowStyle
androidx.activity.R$dimen: int notification_media_narrow_margin
org.pytorch.torchvision.R$drawable: int abc_action_bar_item_background_material
android.support.v4.media.session.PlaybackStateCompat: long ACTION_FAST_FORWARD
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: int getRowIndex()
org.pytorch.torchvision.R$color: int bright_foreground_inverse_material_light
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamilyFont_android_fontStyle
androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)
androidx.core.os.CancellationSignal$OnCancelListener: void onCancel()
androidx.customview.R$dimen: int notification_action_icon_size
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
android.support.v4.media.session.MediaSessionCompatApi24$Callback
androidx.versionedparcelable.VersionedParcel: void writeList(java.util.List,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
okhttp3.OkHttpClient
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
androidx.appcompat.widget.VectorEnabledTintResources: void setCompatVectorFromResourcesEnabled(boolean)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
androidx.legacy.v4.R$style: int TextAppearance_Compat_Notification
androidx.appcompat.resources.R$id: int accessibility_custom_action_30
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
okhttp3.internal.Internal: okhttp3.Call newWebSocketCall(okhttp3.OkHttpClient,okhttp3.Request)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
androidx.activity.R$color: int notification_action_color_filter
androidx.recyclerview.widget.PagerSnapHelper: int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View)
androidx.appcompat.resources.R$id: int action_image
io.github.prabhuomkar.pytorchandroid.R$id: int screen
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo: boolean equals(java.lang.Object)
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_ListMenuView
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_Button_Small
androidx.drawerlayout.widget.DrawerLayout: void requestLayout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getLiveRegion()
androidx.vectordrawable.R$drawable
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setAutoMeasureEnabled(boolean)
io.github.prabhuomkar.pytorchandroid.R$dimen: int abc_list_item_height_material
org.pytorch.torchvision.R$attr: int paddingBottomNoButtons
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
io.github.prabhuomkar.pytorchandroid.R$id: int titleDividerNoCustom
androidx.drawerlayout.R$styleable: int[] ColorStateListItem
org.pytorch.R$id: int home
com.squareup.picasso.Picasso
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
com.squareup.picasso.RequestCreator: android.graphics.Bitmap get()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintCircle
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_PopupMenu
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
androidx.recyclerview.R$styleable: int FontFamily_fontProviderPackage
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Light_ActionBar_TabView
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
androidx.legacy.coreui.R$attr: int coordinatorLayoutStyle
io.github.prabhuomkar.pytorchandroid.R$styleable: int FontFamily_fontProviderQuery
androidx.camera.core.R$id: int text
io.github.prabhuomkar.pytorchandroid.R$drawable: int selection_band_overlay
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain()
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.camera.core.ImageAnalysisConfig: java.lang.Class getTargetClass()
androidx.appcompat.resources.R$id: int accessibility_custom_action_13
androidx.camera.core.ImageCaptureConfig: java.lang.Class getTargetClass()
okhttp3.Response: java.lang.String header(java.lang.String)
androidx.appcompat.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_seekBarStyle
androidx.appcompat.R$id: int right_side
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
okio.BufferedSource: java.lang.String readUtf8(long)
androidx.coordinatorlayout.R$dimen: int compat_button_inset_vertical_material
androidx.camera.camera2.impl.PreviewConfigProvider: PreviewConfigProvider(androidx.camera.core.CameraFactory,android.content.Context)
androidx.core.view.MotionEventCompat: int AXIS_TOUCH_MINOR
androidx.recyclerview.widget.DefaultItemAnimator: boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetStartWithNavigation
androidx.core.os.CancellationSignal: CancellationSignal()
androidx.appcompat.R$color: int button_material_dark
io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter: void onBindViewHolder(io.github.prabhuomkar.pytorchandroid.ui.adapters.ModelListAdapter$ModelView,int)
androidx.viewpager.widget.PagerTabStrip: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_16
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderAuthority
androidx.core.text.PrecomputedTextCompat$Params$Builder
com.downloader.request.DownloadRequest: com.downloader.request.DownloadRequest setOnProgressListener(com.downloader.OnProgressListener)
org.pytorch.R$styleable: int AppCompatTextView_drawableTintMode
androidx.constraintlayout.solver.Metrics: long lastTableSize
androidx.arch.core.executor.TaskExecutor: void postToMainThread(java.lang.Runnable)
org.pytorch.R$attr: int windowFixedWidthMinor
androidx.lifecycle.ReportFragment: void onDestroy()
okio.ForwardingSink: java.lang.String toString()
androidx.appcompat.R$style: int Base_Widget_AppCompat_Light_ActionBar
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintVertical_chainStyle
androidx.drawerlayout.R$dimen: int compat_button_padding_horizontal_material
androidx.camera.core.R$id: int forever
com.downloader.request.DownloadRequest: java.lang.String getUserAgent()
androidx.core.graphics.PathSegment: android.graphics.PointF getEnd()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.camera.core.R$color
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_AREA_INFORMATION
org.pytorch.torchvision.R$dimen: int abc_action_bar_icon_vertical_padding_material
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLights(int,int,int)
androidx.camera.camera2.R$styleable: int[] ColorStateListItem
androidx.cardview.R$attr: int contentPaddingLeft
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder noStore()
androidx.activity.R$styleable: int GradientColor_android_centerColor
androidx.recyclerview.R$drawable: int notification_action_background
okhttp3.ConnectionSpec: boolean isTls()
io.github.prabhuomkar.pytorchandroid.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
okhttp3.Route: java.net.InetSocketAddress socketAddress()
androidx.loader.content.AsyncTaskLoader: java.lang.Object loadInBackground()
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
org.pytorch.torchvision.R$attr: int colorBackgroundFloating
okhttp3.internal.io.FileSystem: void rename(java.io.File,java.io.File)
androidx.recyclerview.widget.SortedList: void replaceAll(java.lang.Object[])
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOn()
com.downloader.internal.ComponentHolder: com.downloader.internal.ComponentHolder getInstance()
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setSurfaceOccupancyPriority(int)
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int getSnapPriorityLevel()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
androidx.vectordrawable.R$dimen: int notification_subtext_size
androidx.appcompat.R$attr: int actionViewClass
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_content_margin_start
androidx.appcompat.resources.R$id: int line3
com.downloader.OnDownloadListener
androidx.core.view.ViewCompat: int IMPORTANT_FOR_ACCESSIBILITY_YES
androidx.constraintlayout.widget.ConstraintSet: void createHorizontalChainRtl(int,int,int,int,int[],float[],int)
androidx.appcompat.app.AppCompatDelegate: boolean isCompatVectorFromResourcesEnabled()
androidx.camera.core.CaptureStage$DefaultCaptureStage: int getId()
androidx.appcompat.R$attr: int tintMode
androidx.legacy.app.ActionBarDrawerToggle$DelegateProvider: androidx.legacy.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
androidx.core.graphics.drawable.RoundedBitmapDrawable: int getIntrinsicHeight()
io.github.prabhuomkar.pytorchandroid.R$attr: int textAppearanceSmallPopupMenu
androidx.camera.core.MutableConfig: java.lang.Object removeOption(androidx.camera.core.Config$Option)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.core.util.Pools$SimplePool
org.pytorch.R$id: int src_atop
org.pytorch.R$style: int Base_Widget_AppCompat_ListView_DropDown
androidx.appcompat.R$id: int accessibility_custom_action_24
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CaptureConfig$OptionUnpacker getCaptureOptionUnpacker(androidx.camera.core.CaptureConfig$OptionUnpacker)
org.pytorch.torchvision.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: boolean helped
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
androidx.asynclayoutinflater.R$id: int info
androidx.core.graphics.PathUtils
io.github.prabhuomkar.pytorchandroid.R$attr: int alertDialogStyle
android.support.v4.media.session.MediaSessionCompat$Callback: void onAddQueueItem(android.support.v4.media.MediaDescriptionCompat)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget()
androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback: void onAuthenticationHelp(int,java.lang.CharSequence)
org.pytorch.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.core.app.RemoteInput$Source
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject: javax.crypto.Mac getMac()
androidx.core.util.AtomicFile
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int)
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
com.squareup.picasso.BuildConfig
androidx.camera.camera2.impl.CameraEventCallbacks: java.lang.Object clone()
com.squareup.picasso.LruCache: void set(java.lang.String,android.graphics.Bitmap)
io.github.prabhuomkar.pytorchandroid.R$attr: int thickness
io.github.prabhuomkar.pytorchandroid.R$style: int TextAppearance_AppCompat_Body1
org.pytorch.torchvision.R$dimen: int abc_dialog_title_divider_material
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintHeight_default
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_BRIGHTNESS_VALUE
androidx.constraintlayout.widget.ConstraintLayout$LayoutParams: int goneEndMargin
androidx.media.R$id: int forever
androidx.fragment.app.Fragment: android.os.Bundle requireArguments()
androidx.appcompat.R$styleable: int FontFamily_fontProviderCerts
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_SeekBar_Discrete
androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)
androidx.camera.core.MultiValueSet
io.github.prabhuomkar.pytorchandroid.R$color: int notification_material_background_media_default_color
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_editor_absoluteX
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.vectordrawable.R$drawable: int notification_template_icon_bg
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer(int,int,int,int)
android.support.v4.media.MediaBrowserCompat$SearchCallback: void onError(java.lang.String,android.os.Bundle)
android.support.v4.app.INotificationSideChannel$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.internal.view.SupportMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.session.IMediaSession: void setShuffleMode(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int SELECTION_MODE_SINGLE
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
androidx.camera.core.R$id: int accessibility_custom_action_10
androidx.drawerlayout.R$drawable
androidx.appcompat.R$color
androidx.recyclerview.selection.SelectionTracker$SelectionObserver: void onSelectionChanged()
io.github.prabhuomkar.pytorchandroid.R$id: int right
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_ADD_QUEUE_ITEM_AT
org.pytorch.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
androidx.core.app.SharedElementCallback
android.support.v4.media.MediaBrowserCompat: void subscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)
androidx.appcompat.resources.R$styleable: int StateListDrawable_android_enterFadeDuration
androidx.constraintlayout.solver.widgets.ConstraintWidget: void connect(androidx.constraintlayout.solver.widgets.ConstraintAnchor,androidx.constraintlayout.solver.widgets.ConstraintAnchor,int,int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_displayOptions
androidx.swiperefreshlayout.widget.CircularProgressDrawable: void setStartEndTrim(float,float)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Display4
android.support.v4.media.MediaBrowserCompat: java.lang.String EXTRA_PAGE
androidx.appcompat.R$id: int search_plate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
androidx.activity.R$id: int accessibility_custom_action_9
androidx.core.graphics.ColorUtils: void RGBToHSL(int,int,int,float[])
io.github.prabhuomkar.pytorchandroid.R$attr: int ratingBarStyle
androidx.appcompat.widget.TintTypedArray: float getFraction(int,int,int,float)
android.support.v4.media.session.MediaSessionCompat: void release()
androidx.appcompat.app.WindowDecorActionBar: void setIcon(int)
androidx.vectordrawable.graphics.drawable.Animatable2Compat: boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
androidx.fragment.app.Fragment: androidx.loader.app.LoaderManager getLoaderManager()
android.support.v4.media.MediaBrowserCompat: void unsubscribe(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
org.pytorch.R$styleable: int CoordinatorLayout_Layout_layout_behavior
androidx.appcompat.resources.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setLabelFor(android.view.View)
androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener: void onChildViewAttachedToWindow(android.view.View)
androidx.media.MediaBrowserServiceCompat$BrowserRoot: java.lang.String EXTRA_SUGGESTED
androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat wrap(android.os.LocaleList)
androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy: void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper)
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_anchor
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
android.support.v4.media.session.MediaControllerCompatApi21$Callback: void onAudioInfoChanged(int,int,int,int,int)
org.pytorch.R$anim: int abc_tooltip_enter
androidx.core.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setIcon(int)
androidx.constraintlayout.solver.widgets.WidgetContainer: void add(androidx.constraintlayout.solver.widgets.ConstraintWidget)
okhttp3.CipherSuite: okhttp3.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)
androidx.fragment.R$drawable: int notification_bg
okhttp3.internal.platform.Platform: void logCloseableLeak(java.lang.String,java.lang.Object)
org.pytorch.torchvision.R$styleable: int TextAppearance_android_textStyle
androidx.camera.camera2.impl.CameraBurstCaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)
androidx.camera.core.Config: void findOptions(java.lang.String,androidx.camera.core.Config$OptionMatcher)
androidx.documentfile.provider.DocumentFile: boolean isFile()
androidx.fragment.R$id: int tag_accessibility_clickable_spans
androidx.camera.camera2.R$id: int accessibility_custom_action_17
androidx.drawerlayout.R$styleable: int ColorStateListItem_android_color
androidx.appcompat.R$layout: int abc_screen_toolbar
androidx.camera.core.Observable$Observer
androidx.recyclerview.widget.SortedList$BatchedCallback: void onRemoved(int,int)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
androidx.camera.core.R$attr: int fontProviderQuery
androidx.constraintlayout.solver.widgets.Barrier: boolean allowsGoneWidget()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int,float)
androidx.camera.core.ImageAnalysisConfig: int getSurfaceOccupancyPriority(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
androidx.core.app.NotificationCompat$MessagingStyle$Message: android.net.Uri getDataUri()
androidx.recyclerview.widget.RecyclerView$State
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean)
androidx.core.app.Person$Builder: androidx.core.app.Person$Builder setName(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTheme_editTextStyle
androidx.exifinterface.media.ExifInterface: short SENSOR_TYPE_TWO_CHIP
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_EditText
androidx.fragment.R$id: int accessibility_custom_action_8
androidx.appcompat.R$style: int Widget_AppCompat_ListView_DropDown
androidx.arch.core.util.Function
androidx.camera.camera2.Camera2Config: java.util.Set getCaptureRequestOptions()
androidx.drawerlayout.widget.DrawerLayout: int getDrawerLockMode(android.view.View)
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemHeight
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ResolutionAnchor: int BARRIER_CONNECTION
androidx.customview.widget.ExploreByTouchHelper: int getFocusedVirtualView()
android.support.v4.media.session.MediaSessionCompat: void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener)
org.pytorch.torchvision.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Button_Borderless
androidx.constraintlayout.widget.Constraints$LayoutParams: Constraints$LayoutParams(androidx.constraintlayout.widget.Constraints$LayoutParams)
com.facebook.jni.IteratorHelper: IteratorHelper(java.util.Iterator)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_toTopOf
org.pytorch.R$attr: int submitBackground
androidx.recyclerview.widget.DiffUtil$Callback: java.lang.Object getChangePayload(int,int)
androidx.viewpager.R$id: int chronometer
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(java.nio.IntBuffer,long[])
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_arrowHeadLength
okhttp3.OkHttpClient$Builder: OkHttpClient$Builder()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.squareup.picasso.Picasso$LoadedFrom
androidx.appcompat.R$styleable: int AppCompatTheme_radioButtonStyle
androidx.camera.core.CaptureConfig$Builder: void removeSurface(androidx.camera.core.DeferrableSurface)
androidx.slidingpanelayout.R$id: int blocking
androidx.core.util.Pools$Pool: java.lang.Object acquire()
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_orderInCategory
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.app.AlertDialog: void setView(android.view.View,int,int,int,int)
androidx.camera.camera2.impl.ImageCaptureConfigProvider
io.github.prabhuomkar.pytorchandroid.R$style: int Theme_AppCompat_Dialog_MinWidth
org.pytorch.torchvision.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.squareup.picasso.Request$Builder: com.squareup.picasso.Request build()
androidx.core.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)
androidx.media.MediaBrowserProtocol: int SERVICE_MSG_ON_LOAD_CHILDREN
androidx.core.view.MenuItemCompat$OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
androidx.appcompat.R$dimen: int abc_dialog_fixed_height_minor
org.pytorch.R$attr: int tickMarkTint
androidx.appcompat.R$styleable: int FontFamilyFont_android_ttcIndex
org.pytorch.torchvision.R$attr: int arrowHeadLength
androidx.camera.core.ImageAnalysis: void removeAnalyzer()
androidx.camera.camera2.R$id: int accessibility_custom_action_0
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.vectordrawable.animated.R$id: int line3
com.downloader.database.DownloadModel: java.lang.String getETag()
androidx.media.AudioAttributesCompat: void setForceLegacyBehavior(boolean)
org.pytorch.Tensor: org.pytorch.Tensor fromBlob(int[],long[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFocus()
androidx.camera.core.ImageCaptureConfig$Builder: java.lang.Object setCameraIdFilter(androidx.camera.core.CameraIdFilter)
androidx.appcompat.resources.R$id: int accessibility_custom_action_3
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.RecyclerView$ItemAnimator: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
androidx.slidingpanelayout.R$styleable: int[] ColorStateListItem
androidx.recyclerview.widget.AsyncListDiffer: void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
androidx.recyclerview.R$id: int action_image
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: void optimizeReset()
androidx.legacy.coreui.R$dimen: int compat_notification_large_icon_max_width
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)
io.github.prabhuomkar.pytorchandroid.R$dimen: int notification_small_icon_background_padding
org.pytorch.R$dimen: int abc_edit_text_inset_bottom_material
androidx.constraintlayout.widget.ConstraintSet: void setScaleX(int,float)
org.pytorch.R$styleable: int[] CoordinatorLayout
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
android.support.v4.media.session.IMediaControllerCallback$Stub: IMediaControllerCallback$Stub()
okhttp3.internal.http2.Http2Stream: java.util.List getRequestHeaders()
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_CONTENT_ALREADY_PLAYING
androidx.viewpager.R$drawable: int notification_tile_bg
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
org.pytorch.torchvision.R$attr: int windowFixedHeightMinor
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.CameraX$LensFacing getLensFacing(androidx.camera.core.CameraX$LensFacing)
androidx.cardview.widget.CardView
org.pytorch.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
android.support.v4.media.MediaMetadataCompat$Builder: MediaMetadataCompat$Builder()
org.pytorch.R$attr: int tooltipForegroundColor
androidx.fragment.app.FragmentStatePagerAdapter: androidx.fragment.app.Fragment getItem(int)
io.github.prabhuomkar.pytorchandroid.R$styleable: int MenuItem_android_title
org.pytorch.R$attr: int panelMenuListTheme
org.pytorch.torchvision.R$styleable: int DrawerArrowToggle_gapBetweenBars
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
io.github.prabhuomkar.pytorchandroid.R$attr: int backgroundStacked
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
androidx.appcompat.app.ActionBar$Tab: void select()
androidx.core.R$layout
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.SessionConfig$OptionUnpacker getSessionOptionUnpacker()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
io.github.prabhuomkar.pytorchandroid.R$id: int showHome
io.github.prabhuomkar.pytorchandroid.R$attr: int listPreferredItemPaddingEnd
org.pytorch.R$style: int Theme_AppCompat_DialogWhenLarge
org.pytorch.torchvision.R$color: int primary_dark_material_dark
okhttp3.internal.Util: okhttp3.ResponseBody EMPTY_RESPONSE
okio.Buffer: okio.Timeout timeout()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_ROWS_PER_STRIP
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)
org.pytorch.torchvision.R$layout: int abc_popup_menu_item_layout
androidx.constraintlayout.widget.Barrier: Barrier(android.content.Context,android.util.AttributeSet)
org.pytorch.torchvision.R$styleable: int[] ActionBarLayout
org.pytorch.torchvision.R$attr: int layout_behavior
androidx.drawerlayout.R$id: int icon_group
androidx.core.app.NotificationCompat: int DEFAULT_VIBRATE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
androidx.constraintlayout.widget.R$styleable: int ConstraintLayout_Layout_layout_editor_absoluteY
org.pytorch.R$attr: int listPreferredItemPaddingLeft
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength STRONG
androidx.versionedparcelable.ParcelUtils: androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable)
org.pytorch.torchvision.R$bool
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyItemChanged(int,java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment: androidx.constraintlayout.solver.widgets.ConstraintWidget$ContentAlignment MIDDLE
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.ActionBar getSupportActionBar()
org.pytorch.torchvision.R$style: int Base_Widget_AppCompat_SearchView
androidx.core.R$styleable: int GradientColor_android_endX
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
androidx.appcompat.resources.R$styleable: int ColorStateListItem_android_color
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Strength WEAK
org.pytorch.torchvision.R$styleable: int AppCompatTheme_colorControlNormal
androidx.lifecycle.LiveData: boolean hasActiveObservers()
org.pytorch.R$styleable: int AppCompatTheme_searchViewStyle
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable()
io.github.prabhuomkar.pytorchandroid.R$id: int accessibility_custom_action_27
androidx.core.content.pm.PermissionInfoCompat$Protection
androidx.recyclerview.widget.RecyclerView$Adapter: void notifyDataSetChanged()
androidx.appcompat.R$string: int abc_capital_on
androidx.core.view.GravityCompat: int RELATIVE_LAYOUT_DIRECTION
androidx.camera.core.CameraCaptureFailure$Reason
androidx.appcompat.R$styleable: int[] ActionMenuItemView
androidx.core.view.InputDeviceCompat: int SOURCE_TRACKBALL
org.pytorch.R$style: int Base_V7_Widget_AppCompat_EditText
io.github.prabhuomkar.pytorchandroid.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
androidx.activity.R$style: int Widget_Compat_NotificationActionText
okhttp3.internal.http2.Http2Connection: void start()
org.pytorch.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
androidx.camera.core.ImageAnalysisConfig$Builder: java.lang.Object setTargetClass(java.lang.Class)
androidx.drawerlayout.R$styleable: int FontFamilyFont_android_fontStyle
org.pytorch.torchvision.R$attr: int actionBarTabStyle
org.pytorch.R$attr: int paddingEnd
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)
androidx.constraintlayout.solver.widgets.ConstraintWidget: androidx.constraintlayout.solver.widgets.ConstraintWidget getVerticalChainControlWidget()
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
androidx.core.os.UserManagerCompat
androidx.recyclerview.widget.ItemTouchHelper: int END
androidx.asynclayoutinflater.R$dimen: int notification_big_circle_margin
android.support.v4.media.MediaBrowserCompat: android.support.v4.media.session.MediaSessionCompat$Token getSessionToken()
org.pytorch.torchvision.R$layout: int abc_expanded_menu_layout
okhttp3.OkHttpClient: java.util.List networkInterceptors()
androidx.legacy.coreutils.R$style: int TextAppearance_Compat_Notification_Title
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
com.downloader.Error: void setHeaderFields(java.util.Map)
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.downloader.internal.ComponentHolder: void init(android.content.Context,com.downloader.PRDownloaderConfig)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionMode_subtitleTextStyle
androidx.media.AudioAttributesCompat: int getContentType()
okhttp3.MediaType: java.nio.charset.Charset charset()
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_title
io.github.prabhuomkar.pytorchandroid.R$attr: int panelBackground
androidx.appcompat.R$drawable: int notification_bg_low_pressed
androidx.fragment.app.FragmentTransaction: int TRANSIT_FRAGMENT_FADE
androidx.constraintlayout.widget.Constraints$LayoutParams: float elevation
io.github.prabhuomkar.pytorchandroid.R$color: int abc_secondary_text_material_dark
android.support.v4.media.session.ParcelableVolumeInfo: int volumeType
io.github.prabhuomkar.pytorchandroid.R$styleable: int SwitchCompat_track
androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)
androidx.loader.R$id: int info
androidx.appcompat.R$id: int accessibility_custom_action_6
androidx.fragment.R$color: int notification_icon_bg_color
androidx.recyclerview.R$id: int tag_accessibility_clickable_spans
androidx.constraintlayout.widget.R$attr: int layout_constraintHorizontal_chainStyle
androidx.appcompat.R$color: int switch_thumb_normal_material_light
androidx.core.database.CursorWindowCompat
org.pytorch.torchvision.R$dimen: int notification_top_pad
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_FOCAL_PLANE_Y_RESOLUTION
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.view.MotionEventCompat
androidx.fragment.app.Fragment$SavedState: void writeToParcel(android.os.Parcel,int)
org.pytorch.R$color: int abc_btn_colored_borderless_text_material
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.RoundedBitmapDrawable: void onBoundsChange(android.graphics.Rect)
androidx.legacy.coreui.R$attr
androidx.media.R$id: int notification_background
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour MATCH_PARENT
okhttp3.ConnectionSpec: boolean equals(java.lang.Object)
androidx.customview.R$dimen: int notification_small_icon_size_as_large
org.pytorch.torchvision.R$styleable: int CoordinatorLayout_Layout_layout_dodgeInsetEdges
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetRotation(int)
io.github.prabhuomkar.pytorchandroid.R$string: int abc_action_bar_up_description
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
org.pytorch.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
androidx.core.view.accessibility.AccessibilityEventCompat: void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat)
okhttp3.TlsVersion: okhttp3.TlsVersion TLS_1_0
androidx.recyclerview.widget.SimpleItemAnimator: void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.graphics.PathParser: boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_ThemeOverlay_AppCompat_Dark
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback
com.squareup.picasso.RequestCreator: void fetch()
org.pytorch.torchvision.R$styleable: int[] ActionBar
io.github.prabhuomkar.pytorchandroid.R$styleable: int CoordinatorLayout_Layout_layout_insetEdge
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
androidx.recyclerview.R$attr: int fontProviderFetchStrategy
org.pytorch.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.AspectRatio getTargetAspectRatio()
okhttp3.Cache: long size()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
androidx.core.view.InputDeviceCompat: int SOURCE_CLASS_BUTTON
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
android.support.v4.media.session.PlaybackStateCompat: int STATE_BUFFERING
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS
androidx.drawerlayout.widget.DrawerLayout: void closeDrawer(android.view.View)
androidx.recyclerview.selection.SelectionTracker: SelectionTracker()
org.pytorch.R$style: int Widget_AppCompat_ActionButton
androidx.appcompat.widget.SwitchCompat: java.lang.CharSequence getTextOff()
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()
androidx.core.os.LocaleListCompat: java.lang.Object unwrap()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme)
org.pytorch.torchvision.R$drawable: int abc_list_selector_background_transition_holo_dark
androidx.constraintlayout.solver.widgets.ConstraintWidget: void updateResolutionNodes()
androidx.swiperefreshlayout.R$id: int line3
okhttp3.ResponseBody: java.lang.String string()
androidx.customview.R$integer
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.collection.ArrayMap: void putAll(java.util.Map)
androidx.customview.R$layout: int notification_action_tombstone
androidx.appcompat.R$attr: int actionModeCloseButtonStyle
androidx.camera.core.CameraRepository: void onGroupInactive(androidx.camera.core.UseCaseGroup)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int getMaxVolume()
androidx.appcompat.R$style: int Base_ThemeOverlay_AppCompat
androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.core.content.SharedPreferencesCompat
androidx.constraintlayout.solver.Metrics: java.util.ArrayList problematicLayouts
org.pytorch.torchvision.R$styleable: int ActionBar_contentInsetRight
okhttp3.internal.http2.Http2Connection
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.github.prabhuomkar.pytorchandroid.R$id: int list_task_item_details
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationEnd(android.view.View)
androidx.recyclerview.selection.ItemDetailsLookup$ItemDetails: int getPosition()
io.github.prabhuomkar.pytorchandroid.R$attr: int windowFixedWidthMajor
androidx.appcompat.R$attr: int backgroundSplit
androidx.exifinterface.media.ExifInterface: short FILE_SOURCE_DSC
androidx.appcompat.R$attr: int actionBarWidgetTheme
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
androidx.exifinterface.media.ExifInterface: int DATA_JPEG
org.pytorch.R$style: int Base_Theme_AppCompat_DialogWhenLarge
io.github.prabhuomkar.pytorchandroid.R$style: int Base_TextAppearance_AppCompat_SearchResult
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_btn_colored_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int)
org.pytorch.R$style: int TextAppearance_AppCompat_Tooltip
okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)
androidx.recyclerview.selection.SelectionTracker$Builder: androidx.recyclerview.selection.SelectionTracker$Builder withPointerTooltypes(int[])
org.pytorch.torchvision.R$attr: int listPreferredItemHeight
androidx.appcompat.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_SENSITIVITY_TYPE
androidx.slidingpanelayout.R$attr: int ttcIndex
okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
androidx.loader.R$dimen: int notification_top_pad_large_text
okhttp3.internal.ws.RealWebSocket: void failWebSocket(java.lang.Exception,okhttp3.Response)
androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_layout_constraintBaseline_creator
androidx.coordinatorlayout.R$style: int Widget_Compat_NotificationActionContainer
androidx.camera.core.DeferrableSurface: void close()
androidx.appcompat.resources.R$styleable: int GradientColor_android_centerColor
androidx.appcompat.R$id: int search_button
okhttp3.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)
io.github.prabhuomkar.pytorchandroid.R$drawable: int abc_text_select_handle_right_mtrl_light
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
org.pytorch.torchvision.R$drawable: int abc_ab_share_pack_mtrl_alpha
androidx.appcompat.R$style: int Base_Widget_AppCompat_Spinner
androidx.print.PrintHelper: int ORIENTATION_PORTRAIT
okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder immutable()
com.downloader.database.DownloadModel: java.lang.String getDirPath()
androidx.media.R$dimen: int notification_action_icon_size
androidx.appcompat.R$id: int activity_chooser_view_content
android.support.v4.media.MediaBrowserCompat
androidx.loader.content.AsyncTaskLoader: boolean onCancelLoad()
com.downloader.internal.ComponentHolder: com.downloader.database.DbHelper getDbHelper()
androidx.appcompat.R$attr: int preserveIconSpacing
io.github.prabhuomkar.pytorchandroid.R$styleable: int DrawerArrowToggle_drawableSize
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.ActionBar: void selectTab(androidx.appcompat.app.ActionBar$Tab)
androidx.media.R$attr: int ttcIndex
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
androidx.camera.core.CameraInfoInternal
com.downloader.BuildConfig: java.lang.String BUILD_TYPE
okio.Buffer: long readLongLe()
io.github.prabhuomkar.pytorchandroid.R$id: int action_help
org.pytorch.R$drawable: int abc_item_background_holo_light
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.downloader.core.Core: com.downloader.core.ExecutorSupplier getExecutorSupplier()
androidx.camera.core.PreviewConfig$Builder: androidx.camera.core.PreviewConfig build()
okio.Okio: okio.Sink blackhole()
androidx.camera.core.VideoCaptureConfig$Builder: java.lang.Object setSessionOptionUnpacker(androidx.camera.core.SessionConfig$OptionUnpacker)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
org.pytorch.torchvision.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
org.pytorch.R$color: int material_grey_800
com.downloader.Error: int getResponseCode()
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
androidx.customview.widget.ViewDragHelper: int INVALID_POINTER
androidx.fragment.app.FragmentTransaction: int commit()
org.pytorch.R$style: int Base_TextAppearance_AppCompat_Body1
androidx.versionedparcelable.VersionedParcel: void writeDouble(double,int)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: boolean mGroupsWrapOptimized
androidx.constraintlayout.solver.widgets.ConstraintAnchor: boolean isConnected()
com.squareup.picasso.LruCache: LruCache(android.content.Context)
okio.BufferedSource: okio.Buffer buffer()
androidx.appcompat.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
android.support.v4.media.MediaDescriptionCompat: long BT_FOLDER_TYPE_MIXED
org.pytorch.R$style: int Widget_AppCompat_Light_ActionBar_TabView
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintWidth_default
org.pytorch.R$attr: int buttonTint
androidx.core.content.ContentResolverCompat: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal)
okhttp3.Response: okhttp3.Protocol protocol()
org.pytorch.torchvision.R$attr: int arrowShaftLength
androidx.camera.core.UseCaseConfig: androidx.camera.core.CaptureConfig getDefaultCaptureConfig()
com.squareup.picasso.BuildConfig: BuildConfig()
androidx.arch.core.executor.TaskExecutor: boolean isMainThread()
okio.AsyncTimeout: okio.Source source(okio.Source)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.camera.core.R$dimen: int notification_small_icon_size_as_large
androidx.constraintlayout.widget.ConstraintSet: boolean getApplyElevation(int)
androidx.camera.core.PreviewConfig: java.util.List getSupportedResolutions(java.util.List)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_android_fontStyle
org.pytorch.R$color: int primary_text_disabled_material_dark
org.pytorch.torchvision.R$attr: int windowNoTitle
androidx.appcompat.R$attr: int queryBackground
androidx.recyclerview.R$layout: int notification_template_part_chronometer
org.pytorch.torchvision.R$dimen: int abc_action_bar_elevation_material
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
android.support.v4.media.session.MediaControllerCompat: android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
androidx.vectordrawable.animated.R$layout
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.R$dimen: int abc_button_inset_horizontal_material
org.pytorch.torchvision.R$attr: int ttcIndex
androidx.appcompat.app.ActionBar: boolean isShowing()
androidx.appcompat.R$layout: int abc_action_mode_bar
androidx.media.MediaBrowserProtocol: java.lang.String DATA_CALLING_UID
okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
androidx.camera.core.ImageCaptureConfig: androidx.camera.core.FlashMode getFlashMode()
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
org.pytorch.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat: androidx.camera.camera2.impl.compat.params.OutputConfigurationCompat wrap(java.lang.Object)
android.support.v4.media.session.IMediaSession: java.util.List getQueue()
androidx.swiperefreshlayout.R$styleable: int FontFamily_fontProviderFetchStrategy
com.downloader.core.MainThreadExecutor: MainThreadExecutor()
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_fontFamily
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
androidx.camera.core.Preview: androidx.camera.core.Preview$OnPreviewOutputUpdateListener getOnPreviewOutputUpdateListener()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog show()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[])
io.github.prabhuomkar.pytorchandroid.R$attr: int measureWithLargestChild
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextView_android_textAppearance
org.pytorch.torchvision.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_DEFAULT_CROP_SIZE
androidx.appcompat.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.WindowDecorActionBar: boolean isTitleTruncated()
androidx.camera.core.ImageOutputConfig: androidx.camera.core.Config$Option OPTION_TARGET_ASPECT_RATIO
com.downloader.httpclient.DefaultHttpClient: void close()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.squareup.picasso.Picasso$Builder: com.squareup.picasso.Picasso build()
androidx.legacy.coreutils.R$styleable: int FontFamilyFont_ttcIndex
androidx.legacy.coreutils.R$styleable: int FontFamily_fontProviderAuthority
android.support.v4.media.session.PlaybackStateCompat: int ERROR_CODE_CONCURRENT_STREAM_LIMIT
androidx.versionedparcelable.VersionedParcel: boolean[] readBooleanArray(boolean[],int)
androidx.exifinterface.media.ExifInterface: java.lang.String TAG_GPS_DOP
org.pytorch.torchvision.R$attr: int drawableSize
okhttp3.internal.http.HttpCodec: void flushRequest()
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
androidx.core.view.DragStartHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.drawerlayout.R$style: int TextAppearance_Compat_Notification_Info
androidx.documentfile.provider.DocumentFile: android.net.Uri getUri()
androidx.recyclerview.widget.SortedList: int size()
io.github.prabhuomkar.pytorchandroid.R$color: int abc_search_url_text_selected
androidx.camera.core.ImageFormatConstants
androidx.coordinatorlayout.R$id: int time
androidx.appcompat.app.ActionBar$TabListener: void onTabReselected(androidx.appcompat.app.ActionBar$Tab,androidx.fragment.app.FragmentTransaction)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
androidx.appcompat.R$attr: int homeLayout
androidx.recyclerview.widget.SortedList: void beginBatchedUpdates()
androidx.core.os.CancellationSignal: boolean isCanceled()
io.github.prabhuomkar.pytorchandroid.ui.activities.MainActivity: MainActivity()
androidx.coordinatorlayout.widget.CoordinatorLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.constraintlayout.solver.widgets.ConstraintWidget: void reset()
androidx.asynclayoutinflater.R$drawable: int notification_template_icon_low_bg
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
androidx.camera.core.VideoCaptureConfig$Builder: androidx.camera.core.VideoCaptureConfig$Builder setTargetAspectRatioCustom(android.util.Rational)
androidx.coordinatorlayout.R$layout: int notification_template_custom_big
io.github.prabhuomkar.pytorchandroid.helpers.PermissionsHelper
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
org.pytorch.torchvision.R$dimen
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.viewpager.R$id: int time
androidx.camera.core.UseCase
org.pytorch.torchvision.R$dimen: int abc_action_bar_default_height_material
androidx.swiperefreshlayout.R$style: int Widget_Compat_NotificationActionText
okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)
androidx.activity.OnBackPressedDispatcher: boolean hasEnabledCallbacks()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
org.pytorch.R$style: int Widget_Compat_NotificationActionText
androidx.customview.R$styleable: int FontFamily_fontProviderQuery
android.support.v4.media.session.MediaControllerCompat: java.lang.String COMMAND_REMOVE_QUEUE_ITEM_AT
org.pytorch.torchvision.R$string: int abc_shareactionprovider_share_with
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okio.BufferedSource: int readIntLe()
androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)
android.support.v4.media.session.IMediaSession: long getFlags()
androidx.appcompat.R$styleable: int SwitchCompat_switchTextAppearance
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.camera.core.CameraControlInternal: void setFlashMode(androidx.camera.core.FlashMode)
androidx.constraintlayout.solver.widgets.Barrier: void addToSolver(androidx.constraintlayout.solver.LinearSystem)
androidx.constraintlayout.widget.Constraints$LayoutParams: float scaleY
androidx.camera.camera2.R$attr: int alpha
androidx.camera.camera2.R$dimen: int notification_top_pad_large_text
androidx.camera.camera2.Camera2Config$Extender
androidx.recyclerview.R$id: int action_divider
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
org.pytorch.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[])
androidx.legacy.v4.R$drawable: int notification_bg_low
org.pytorch.R$styleable: int RecycleListView_paddingTopNoTitle
androidx.appcompat.widget.DecorToolbar: boolean hasLogo()
org.pytorch.R$styleable: int AppCompatTheme_buttonBarStyle
org.pytorch.R$attr: int actionBarItemBackground
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.versionedparcelable.VersionedParcel: double[] readDoubleArray()
androidx.constraintlayout.solver.LinearSystem: void addLowerBarrier(androidx.constraintlayout.solver.SolverVariable,androidx.constraintlayout.solver.SolverVariable,boolean)
org.pytorch.R$style: int TextAppearance_Compat_Notification_Time
com.downloader.httpclient.HttpClient: void close()
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
androidx.media.MediaBrowserServiceCompat: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
org.pytorch.torchvision.R$styleable: int SearchView_suggestionRowLayout
androidx.appcompat.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.fragment.R$id: int accessibility_custom_action_12
androidx.fragment.app.FragmentManager$OnBackStackChangedListener: void onBackStackChanged()
androidx.slidingpanelayout.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionReady()
androidx.constraintlayout.solver.widgets.ConstraintAnchor: int AUTO_CONSTRAINT_CREATOR
androidx.appcompat.R$styleable: int AppCompatTheme_actionModeBackground
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
io.github.prabhuomkar.pytorchandroid.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.constraintlayout.widget.R$attr: int layout_constraintDimensionRatio
androidx.core.view.ViewCompat: float getX(android.view.View)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
androidx.appcompat.resources.R$style
androidx.constraintlayout.solver.widgets.Barrier: Barrier()
androidx.drawerlayout.widget.DrawerLayout: boolean drawChild(android.graphics.Canvas,android.view.View,long)
android.support.v4.media.session.MediaSessionCompat: void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat)
androidx.appcompat.R$styleable: int ActionBar_homeLayout
androidx.constraintlayout.solver.widgets.ResolutionAnchor: void setType(int)
androidx.appcompat.app.AppCompatDelegate: int MODE_NIGHT_FOLLOW_SYSTEM
okhttp3.Challenge
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
androidx.appcompat.R$bool: int abc_allow_stacked_button_bar
org.pytorch.R$attr: int keylines
androidx.legacy.coreui.R$styleable: int FontFamilyFont_android_font
androidx.appcompat.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
androidx.constraintlayout.solver.widgets.ConstraintWidget: void setLength(int,int)
androidx.core.R$integer: int status_bar_notification_info_maxnum
io.github.prabhuomkar.pytorchandroid.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.camera.core.impl.utils.Optional: int hashCode()
androidx.recyclerview.widget.RecyclerView$State: boolean didStructureChange()
androidx.annotation.Keep
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
androidx.customview.R$dimen: int notification_main_column_padding_top
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
androidx.recyclerview.R$layout: int notification_template_icon_group
androidx.swiperefreshlayout.R$color: int notification_action_color_filter
androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()
okhttp3.internal.connection.RouteException: void addConnectException(java.io.IOException)
androidx.constraintlayout.widget.R$id: int start
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence)
org.pytorch.R$styleable: int ActionBar_itemPadding
androidx.appcompat.R$id: int textSpacerNoButtons
org.pytorch.R$style: int Widget_AppCompat_Light_SearchView
androidx.versionedparcelable.VersionedParcel: void writeLongArray(long[])
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ActionBar_contentInsetRight
androidx.viewpager.R$attr: int fontWeight
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
org.pytorch.R$styleable: int FontFamilyFont_ttcIndex
org.pytorch.torchvision.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
androidx.appcompat.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
org.pytorch.torchvision.R$dimen: int notification_large_icon_width
io.github.prabhuomkar.pytorchandroid.R$attr: int hideOnContentScroll
androidx.appcompat.view.menu.MenuAdapter
androidx.swiperefreshlayout.R$id: int action_image
androidx.core.graphics.drawable.RoundedBitmapDrawable: float getCornerRadius()
androidx.camera.core.R$style: int Widget_Compat_NotificationActionText
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintBottom_creator
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintSet_android_transformPivotX
androidx.legacy.v4.R$styleable: int FontFamilyFont_android_fontStyle
androidx.collection.CircularIntArray: int getLast()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)
androidx.core.content.pm.ShortcutInfoCompat$Builder: androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived()
androidx.core.app.ShareCompat$IntentBuilder: androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[])
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.view.MenuItemCompat: int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
org.pytorch.torchvision.R$dimen: int abc_dropdownitem_text_padding_left
okhttp3.internal.cache.CacheRequest: okio.Sink body()
androidx.camera.core.R$drawable: int notify_panel_notification_icon_bg
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
androidx.constraintlayout.widget.R$styleable: int ConstraintSet_layout_constraintGuide_percent
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowCustomEnabled(boolean)
androidx.camera.core.Preview: void zoom(android.graphics.Rect)
androidx.core.graphics.drawable.IconCompat: void checkResource(android.content.Context)
androidx.appcompat.widget.DecorContentParent: void setUiOptions(int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)
androidx.appcompat.resources.R$drawable: int notification_icon_background
androidx.appcompat.R$dimen: int abc_action_bar_overflow_padding_start_material
okhttp3.Interceptor$Chain: okhttp3.Call call()
okhttp3.MediaType: java.lang.String toString()
androidx.camera.core.MeteringPoint: MeteringPoint(float,float,float,float,android.util.Rational)
androidx.camera.core.PreviewConfig: androidx.camera.core.AspectRatio getTargetAspectRatio(androidx.camera.core.AspectRatio)
androidx.constraintlayout.widget.R$attr: int layout_constraintVertical_chainStyle
androidx.core.app.AppOpsManagerCompat: int MODE_IGNORED
androidx.exifinterface.media.ExifInterface: int COLOR_SPACE_S_RGB
org.pytorch.R$dimen: int notification_subtext_size
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setVisibility(int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
android.support.v4.media.session.MediaSessionCompat: void sendSessionEvent(java.lang.String,android.os.Bundle)
io.github.prabhuomkar.pytorchandroid.R$style: int Base_Widget_AppCompat_ActionBar_TabView
androidx.core.view.PointerIconCompat: int TYPE_NULL
androidx.recyclerview.widget.StaggeredGridLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.appcompat.R$drawable: int abc_ic_search_api_material
androidx.appcompat.R$color: int primary_text_default_material_light
io.github.prabhuomkar.pytorchandroid.R$styleable: int SearchView_layout
okhttp3.internal.tls.CertificateChainCleaner: okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager)
androidx.camera.core.ImageAnalysis$ImageReaderMode: androidx.camera.core.ImageAnalysis$ImageReaderMode valueOf(java.lang.String)
androidx.swiperefreshlayout.R$styleable: int FontFamilyFont_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$attr: int layout_constraintVertical_weight
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
com.facebook.jni.DestructorThread$Destructor: void destruct()
androidx.camera.core.UseCaseConfigFactory: androidx.camera.core.UseCaseConfig getConfig(java.lang.Class,androidx.camera.core.CameraX$LensFacing)
io.github.prabhuomkar.pytorchandroid.helpers.FileHelper: java.lang.String getAssetFileNameForModel(java.lang.String)
androidx.core.view.MotionEventCompat: int AXIS_TILT
androidx.camera.core.MeteringPointFactory: float DEFAULT_AREASIZE
org.pytorch.R$styleable: int StateListDrawable_android_variablePadding
okhttp3.Headers: long byteCount()
androidx.coordinatorlayout.R$styleable: int GradientColor_android_centerY
androidx.camera.camera2.R$style: int TextAppearance_Compat_Notification_Title
androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
io.github.prabhuomkar.pytorchandroid.R$attr: int selectableItemBackground
androidx.core.content.pm.ShortcutManagerCompat: java.lang.String EXTRA_SHORTCUT_ID
org.pytorch.torchvision.R$string
androidx.appcompat.app.ActionBar$Tab: androidx.appcompat.app.ActionBar$Tab setText(int)
androidx.camera.camera2.R$styleable: int FontFamilyFont_ttcIndex
io.github.prabhuomkar.pytorchandroid.R$styleable: int ConstraintLayout_Layout_layout_constraintRight_creator
androidx.camera.camera2.impl.Camera2CameraControl: void setCropRegion(android.graphics.Rect)
androidx.appcompat.app.ActionBar: void setCustomView(int)
android.support.v4.media.session.IMediaSession: int getShuffleMode()
org.pytorch.torchvision.TensorImageUtils: org.pytorch.Tensor bitmapToFloat32Tensor(android.graphics.Bitmap,float[],float[])
org.pytorch.R$attr: int actionBarTabStyle
io.github.prabhuomkar.pytorchandroid.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.collection.SimpleArrayMap: java.lang.String toString()
org.pytorch.torchvision.R$attr: int homeLayout
io.github.prabhuomkar.pytorchandroid.R$id: int center_vertical
okio.BufferedSource: long indexOf(byte,long,long)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.fragment.R$dimen: int notification_action_icon_size
androidx.core.view.MotionEventCompat: int AXIS_GENERIC_4
androidx.cardview.widget.CardView: float getCardElevation()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat: int RANGE_TYPE_INT
androidx.camera.core.ImageAnalysisConfig: androidx.camera.core.ImageAnalysis$ImageReaderMode getImageReaderMode(androidx.camera.core.ImageAnalysis$ImageReaderMode)
io.github.prabhuomkar.pytorchandroid.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.appcompat.widget.PopupMenu: PopupMenu(android.content.Context,android.view.View)
